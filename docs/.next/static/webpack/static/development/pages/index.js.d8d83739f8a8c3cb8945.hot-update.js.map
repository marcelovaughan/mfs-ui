{"version":3,"file":"static/webpack/static/development/pages/index.js.d8d83739f8a8c3cb8945.hot-update.js","sources":["webpack:///./src/modules/components/AppFrame.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport { withStyles, useTheme } from '@material-ui/core/styles';\nimport NProgress from 'nprogress';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiLink from '@material-ui/core/Link';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport LanguageIcon from '@material-ui/icons/Translate';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport ColorsIcon from '@material-ui/icons/InvertColors';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport NProgressBar from '@material-ui/docs/NProgressBar';\nimport FormatTextdirectionLToR from '@material-ui/icons/FormatTextdirectionLToR';\nimport FormatTextdirectionRToL from '@material-ui/icons/FormatTextdirectionRToL';\nimport Link from 'docs/src/modules/components/Link';\nimport AppDrawer from 'docs/src/modules/components/AppDrawer';\nimport Notifications from 'docs/src/modules/components/Notifications';\nimport MarkdownLinks from 'docs/src/modules/components/MarkdownLinks';\nimport { LANGUAGES_LABEL } from 'docs/src/modules/constants';\nimport { pathnameToLanguage } from 'docs/src/modules/utils/helpers';\nimport { useChangeTheme } from 'docs/src/modules/components/ThemeContext';\nimport PageContext from 'docs/src/modules/components/PageContext';\n\nconst LOCALES = { zh: 'zh-CN', pt: 'pt-BR', es: 'es-ES' };\nconst CROWDIN_ROOT_URL = 'https://translate.material-ui.com/project/material-ui-docs/';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nconst AppSearch = React.lazy(() => import('docs/src/modules/components/AppSearch'));\nfunction DeferredAppSearch() {\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <link\n        rel=\"preload\"\n        href=\"https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.css\"\n        as=\"style\"\n      />\n      {/* Suspense isn't supported for SSR yet */}\n      {mounted ? (\n        <React.Suspense fallback={null}>\n          <AppSearch />\n        </React.Suspense>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nconst styles = (theme) => ({\n  '@global': {\n    '#main-content': {\n      outline: 0,\n    },\n  },\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.background.level1,\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  skipNav: {\n    position: 'fixed',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper,\n    transition: theme.transitions.create('top', {\n      easing: theme.transitions.easing.easeIn,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    left: theme.spacing(2),\n    top: theme.spacing(-10),\n    zIndex: theme.zIndex.tooltip + 1,\n    '&:focus': {\n      top: theme.spacing(2),\n      transition: theme.transitions.create('top', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    '@media print': {\n      display: 'none',\n    },\n  },\n  appBar: {\n    color: theme.palette.type === 'light' ? null : '#fff',\n    backgroundColor: theme.palette.type === 'light' ? null : theme.palette.background.level2,\n    transition: theme.transitions.create('width'),\n  },\n  language: {\n    margin: theme.spacing(0, 0.5, 0, 1),\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'block',\n    },\n  },\n  appBarHome: {\n    boxShadow: 'none',\n  },\n  appBarShift: {\n    [theme.breakpoints.up('lg')]: {\n      width: 'calc(100% - 240px)',\n    },\n  },\n  drawer: {\n    [theme.breakpoints.up('lg')]: {\n      flexShrink: 0,\n      width: 240,\n    },\n  },\n  navIconHide: {\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n});\n\nfunction AppFrame(props) {\n  const { children, classes, disableDrawer = false } = props;\n  const theme = useTheme();\n  const t = useSelector((state) => state.options.t);\n  const userLanguage = useSelector((state) => state.options.userLanguage);\n\n  const crowdInLocale = LOCALES[userLanguage] || userLanguage;\n\n  const [languageMenu, setLanguageMenu] = React.useState(null);\n  const handleLanguageIconClick = (event) => {\n    setLanguageMenu(event.currentTarget);\n  };\n  const handleLanguageMenuClose = (event) => {\n    if (event.currentTarget.nodeName === 'A') {\n      document.cookie = `userLanguage=noDefault;path=/;max-age=31536000`;\n    }\n    setLanguageMenu(null);\n  };\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setMobileOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setMobileOpen(false);\n  };\n\n  const changeTheme = useChangeTheme();\n  const handleTogglePaletteType = () => {\n    const paletteType = theme.palette.type === 'light' ? 'dark' : 'light';\n\n    changeTheme({ paletteType });\n  };\n  const handleToggleDirection = () => {\n    changeTheme({ direction: theme.direction === 'ltr' ? 'rtl' : 'ltr' });\n  };\n\n  const router = useRouter();\n  const { canonical } = pathnameToLanguage(rewriteUrlForNextExport(router.asPath));\n  const { activePage } = React.useContext(PageContext);\n\n  let disablePermanent = false;\n  let navIconClassName = '';\n  let appBarClassName = classes.appBar;\n\n  if (activePage?.disableDrawer === true || disableDrawer === true) {\n    disablePermanent = true;\n    appBarClassName += ` ${classes.appBarHome}`;\n  } else {\n    navIconClassName = classes.navIconHide;\n    appBarClassName += ` ${classes.appBarShift}`;\n  }\n\n  return (\n    <div className={classes.root}>\n      <NProgressBar />\n      <CssBaseline />\n      <MuiLink color=\"secondary\" className={classes.skipNav} href=\"#main-content\">\n        {t('skipToContent')}\n      </MuiLink>\n      <MarkdownLinks />\n      <AppBar className={appBarClassName}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label={t('openDrawer')}\n            onClick={handleDrawerOpen}\n            className={navIconClassName}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div className={classes.grow} />\n          <DeferredAppSearch />\n          {/* <Tooltip title={t('changeLanguage')} enterDelay={300}>\n            <Button\n              color=\"inherit\"\n              aria-owns={languageMenu ? 'language-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-label={t('changeLanguage')}\n              onClick={handleLanguageIconClick}\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"language\"\n            >\n              <LanguageIcon />\n              <span className={classes.language}>\n                {userLanguage === 'aa'\n                  ? 'Translating'\n                  : LANGUAGES_LABEL.filter((language) => language.code === userLanguage)[0].text}\n              </span>\n              <ExpandMoreIcon fontSize=\"small\" />\n            </Button>\n          </Tooltip>\n          <NoSsr defer>\n            <Menu\n              id=\"language-menu\"\n              anchorEl={languageMenu}\n              open={Boolean(languageMenu)}\n              onClose={handleLanguageMenuClose}\n            >\n              {LANGUAGES_LABEL.map((language) => (\n                <MenuItem\n                  component=\"a\"\n                  data-no-link=\"true\"\n                  href={language.code === 'en' ? canonical : `/${language.code}${canonical}`}\n                  key={language.code}\n                  selected={userLanguage === language.code}\n                  onClick={handleLanguageMenuClose}\n                  lang={language.code}\n                  hrefLang={language.code}\n                >\n                  {language.text}\n                </MenuItem>\n              ))}\n              <Box my={1}>\n                <Divider />\n              </Box>\n              <MenuItem\n                component=\"a\"\n                data-no-link=\"true\"\n                href={\n                  userLanguage === 'en' || userLanguage === 'aa'\n                    ? `${CROWDIN_ROOT_URL}`\n                    : `${CROWDIN_ROOT_URL}${crowdInLocale}#/staging`\n                }\n                rel=\"noopener nofollow\"\n                target=\"_blank\"\n                key={userLanguage}\n                lang={userLanguage}\n                hrefLang=\"en\"\n                onClick={handleLanguageMenuClose}\n              >\n                {`${t('helpToTranslate')}`}\n              </MenuItem>\n            </Menu>\n          </NoSsr> \n          <Notifications />*/}\n          <Tooltip title={t('editWebsiteColors')} enterDelay={300}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={t('editWebsiteColors')}\n              component={Link}\n              naked\n              href=\"/customization/color/#playground\"\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"colors\"\n            >\n              <ColorsIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={t('github')} enterDelay={300}>\n            <IconButton\n              component=\"a\"\n              color=\"inherit\"\n              href=\"https://github.com/mui-org/material-ui\"\n              aria-label={t('github')}\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"github\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={t('toggleTheme')} enterDelay={300}>\n            <IconButton\n              color=\"inherit\"\n              onClick={handleTogglePaletteType}\n              aria-label={t('toggleTheme')}\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"dark\"\n            >\n              {theme.palette.type === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={t('toggleRTL')} key={theme.direction} enterDelay={300}>\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              onClick={handleToggleDirection}\n              aria-label={t('toggleRTL')}\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"rtl\"\n            >\n              {theme.direction === 'rtl' ? (\n                <FormatTextdirectionLToR />\n              ) : (\n                <FormatTextdirectionRToL />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <AppDrawer\n        className={disablePermanent ? '' : classes.drawer}\n        disablePermanent={disablePermanent}\n        onClose={handleDrawerClose}\n        onOpen={handleDrawerOpen}\n        mobileOpen={mobileOpen}\n      />\n      {children}\n    </div>\n  );\n}\n\nAppFrame.propTypes = {\n  children: PropTypes.node.isRequired,\n  classes: PropTypes.object.isRequired,\n  disableDrawer: PropTypes.node,\n};\n\nexport default withStyles(styles)(AppFrame);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AAEA;AADA;AAIA;AAEA;AACA;AAFA;AAKA;AAEA;AADA;AA9DA;AAAA;AACA;AAmEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAPA;AAAA;AAAA;AACA;AAQA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAJA;AACA;AAbA;AAAA;AAAA;AACA;AAmBA;AACA;AADA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAHA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AACA;AAGA;AACA;AAtCA;AAAA;AACA;AADA;AAAA;AACA;AAwgEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}