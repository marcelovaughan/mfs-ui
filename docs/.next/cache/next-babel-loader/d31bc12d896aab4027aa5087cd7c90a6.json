{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Icon/Icon.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n});\nIcon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n};\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Icon/Icon.js"],"names":["React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","userSelect","fontSize","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","color","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","Icon","forwardRef","props","ref","classes","className","component","Component","other","propTypes","children","node","object","isRequired","string","oneOf","elementType","muiName","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    userSelect: 'none',\n    fontSize: theme.typography.pxToRem(24),\n    width: '1em',\n    height: '1em',\n    // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n    // To remove at some point.\n    overflow: 'hidden',\n    flexShrink: 0,\n  },\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main,\n  },\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main,\n  },\n  /* Styles applied to the root element if `color=\"action\"`. */\n  colorAction: {\n    color: theme.palette.action.active,\n  },\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    color: theme.palette.error.main,\n  },\n  /* Styles applied to the root element if `color=\"disabled\"`. */\n  colorDisabled: {\n    color: theme.palette.action.disabled,\n  },\n  /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n  fontSizeInherit: {\n    fontSize: 'inherit',\n  },\n  /* Styles applied to the root element if `fontSize=\"small\"`. */\n  fontSizeSmall: {\n    fontSize: theme.typography.pxToRem(20),\n  },\n  /* Styles applied to the root element if `fontSize=\"large\"`. */\n  fontSizeLarge: {\n    fontSize: theme.typography.pxToRem(36),\n  },\n});\n\nconst Icon = React.forwardRef(function Icon(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'inherit',\n    component: Component = 'span',\n    fontSize = 'default',\n    ...other\n  } = props;\n\n  return (\n    <Component\n      className={clsx(\n        'material-icons',\n        classes.root,\n        {\n          [classes[`color${capitalize(color)}`]]: color !== 'inherit',\n          [classes[`fontSize${capitalize(fontSize)}`]]: fontSize !== 'default',\n        },\n        className,\n      )}\n      aria-hidden\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nIcon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large']),\n};\n\nIcon.muiName = 'Icon';\n\nexport default withStyles(styles, { name: 'MuiIcon' })(Icon);\n"]},"metadata":{},"sourceType":"module"}