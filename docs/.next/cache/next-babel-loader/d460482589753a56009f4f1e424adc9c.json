{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Button/Button.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport { fade } from \"../styles/colorManipulator\";\nimport ButtonBase from \"../ButtonBase\";\nimport capitalize from \"../utils/capitalize\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _objectSpread(_objectSpread({}, theme.typography.button), {}, {\n    boxSizing: 'border-box',\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    padding: '6px 8px'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n  textPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n  textSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    padding: '5px 15px',\n    border: `1px solid ${theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n  outlinedPrimary: {\n    color: theme.palette.primary.main,\n    border: `1px solid ${fade(theme.palette.primary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.primary.main}`,\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n  outlinedSecondary: {\n    color: theme.palette.secondary.main,\n    border: `1px solid ${fade(theme.palette.secondary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.secondary.main}`,\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabled}`\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"`. */\n  contained: {\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    boxShadow: theme.shadows[2],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      boxShadow: theme.shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: theme.shadows[2],\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[8]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n  containedPrimary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n  containedSecondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `disableElevation={true}`. */\n  disableElevation: {\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none'\n    },\n    '&$disabled': {\n      boxShadow: 'none'\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n  textSizeSmall: {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n  textSizeLarge: {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n  outlinedSizeSmall: {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n  outlinedSizeLarge: {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n  containedSizeSmall: {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n  containedSizeLarge: {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {},\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {},\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  },\n\n  /* Styles applied to the startIcon element if supplied. */\n  startIcon: {\n    display: 'inherit',\n    marginRight: 8,\n    marginLeft: -4,\n    '&$iconSizeSmall': {\n      marginLeft: -2\n    }\n  },\n\n  /* Styles applied to the endIcon element if supplied. */\n  endIcon: {\n    display: 'inherit',\n    marginRight: -4,\n    marginLeft: 8,\n    '&$iconSizeSmall': {\n      marginRight: -2\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n  iconSizeSmall: {\n    '& > *:first-child': {\n      fontSize: 18\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n  iconSizeMedium: {\n    '& > *:first-child': {\n      fontSize: 20\n    }\n  },\n\n  /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n  iconSizeLarge: {\n    '& > *:first-child': {\n      fontSize: 22\n    }\n  }\n});\nconst Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type = 'button',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  const startIcon = startIconProp && __jsx(\"span\", {\n    className: clsx(classes.startIcon, classes[`iconSize${capitalize(size)}`]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }, startIconProp);\n\n  const endIcon = endIconProp && __jsx(\"span\", {\n    className: clsx(classes.endIcon, classes[`iconSize${capitalize(size)}`]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, endIconProp);\n\n  return __jsx(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[`${variant}${capitalize(color)}`], size !== 'medium' && [classes[`${variant}Size${capitalize(size)}`], classes[`size${capitalize(size)}`]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, startIcon, children, endIcon));\n});\nButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n};\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Button/Button.js"],"names":["React","PropTypes","clsx","withStyles","fade","ButtonBase","capitalize","styles","theme","root","typography","button","boxSizing","minWidth","padding","borderRadius","shape","color","palette","text","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","action","hoverOpacity","disabled","label","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","type","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","disableElevation","focusVisible","colorInherit","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","fullWidth","startIcon","marginRight","marginLeft","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge","Button","forwardRef","props","ref","children","classes","className","component","disableFocusRipple","endIconProp","focusVisibleClassName","size","startIconProp","variant","other","propTypes","node","object","string","oneOf","elementType","bool","disableRipple","href","oneOfType","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    ...theme.typography.button,\n    boxSizing: 'border-box',\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n      },\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n    },\n  },\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%', // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    padding: '6px 8px',\n  },\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n  textPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n  textSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    padding: '5px 15px',\n    border: `1px solid ${\n      theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'\n    }`,\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n  outlinedPrimary: {\n    color: theme.palette.primary.main,\n    border: `1px solid ${fade(theme.palette.primary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.primary.main}`,\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n  outlinedSecondary: {\n    color: theme.palette.secondary.main,\n    border: `1px solid ${fade(theme.palette.secondary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.secondary.main}`,\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabled}`,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"`. */\n  contained: {\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    boxShadow: theme.shadows[2],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      boxShadow: theme.shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: theme.shadows[2],\n        backgroundColor: theme.palette.grey[300],\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground,\n      },\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[8],\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n  containedPrimary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n  containedSecondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main,\n      },\n    },\n  },\n  /* Styles applied to the root element if `disableElevation={true}`. */\n  disableElevation: {\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none',\n    },\n    '&$focusVisible': {\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n    },\n    '&$disabled': {\n      boxShadow: 'none',\n    },\n  },\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit',\n    borderColor: 'currentColor',\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n  textSizeSmall: {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n  textSizeLarge: {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n  outlinedSizeSmall: {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n  outlinedSizeLarge: {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n  containedSizeSmall: {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n  containedSizeLarge: {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {},\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {},\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%',\n  },\n  /* Styles applied to the startIcon element if supplied. */\n  startIcon: {\n    display: 'inherit',\n    marginRight: 8,\n    marginLeft: -4,\n    '&$iconSizeSmall': {\n      marginLeft: -2,\n    },\n  },\n  /* Styles applied to the endIcon element if supplied. */\n  endIcon: {\n    display: 'inherit',\n    marginRight: -4,\n    marginLeft: 8,\n    '&$iconSizeSmall': {\n      marginRight: -2,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n  iconSizeSmall: {\n    '& > *:first-child': {\n      fontSize: 18,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n  iconSizeMedium: {\n    '& > *:first-child': {\n      fontSize: 20,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n  iconSizeLarge: {\n    '& > *:first-child': {\n      fontSize: 22,\n    },\n  },\n});\n\nconst Button = React.forwardRef(function Button(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type = 'button',\n    variant = 'text',\n    ...other\n  } = props;\n\n  const startIcon = startIconProp && (\n    <span className={clsx(classes.startIcon, classes[`iconSize${capitalize(size)}`])}>\n      {startIconProp}\n    </span>\n  );\n\n  const endIcon = endIconProp && (\n    <span className={clsx(classes.endIcon, classes[`iconSize${capitalize(size)}`])}>\n      {endIconProp}\n    </span>\n  );\n\n  return (\n    <ButtonBase\n      className={clsx(\n        classes.root,\n        classes[variant],\n        {\n          [classes[`${variant}${capitalize(color)}`]]: color !== 'default' && color !== 'inherit',\n          [classes[`${variant}Size${capitalize(size)}`]]: size !== 'medium',\n          [classes[`size${capitalize(size)}`]]: size !== 'medium',\n          [classes.disableElevation]: disableElevation,\n          [classes.disabled]: disabled,\n          [classes.fullWidth]: fullWidth,\n          [classes.colorInherit]: color === 'inherit',\n        },\n        className,\n      )}\n      component={component}\n      disabled={disabled}\n      focusRipple={!disableFocusRipple}\n      focusVisibleClassName={clsx(classes.focusVisible, focusVisibleClassName)}\n      ref={ref}\n      type={type}\n      {...other}\n    >\n      {/*\n       * The inner <span> is required to vertically align the children.\n       * Browsers don't support `display: flex` on a <button> element.\n       * https://github.com/philipwalton/flexbugs/blob/master/README.md#flexbug-9\n       * TODO v5: evaluate if still required for the supported browsers.\n       */}\n      <span className={classes.label}>\n        {startIcon}\n        {children}\n        {endIcon}\n      </span>\n    </ButtonBase>\n  );\n});\n\nButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\n};\n\nexport default withStyles(styles, { name: 'MuiButton' })(Button);\n"]},"metadata":{},"sourceType":"module"}