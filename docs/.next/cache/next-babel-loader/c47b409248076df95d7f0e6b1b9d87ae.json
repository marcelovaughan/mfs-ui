{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/SnackbarContent/SnackbarContent.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport Paper from \"../Paper\";\nimport { emphasize } from \"../styles/colorManipulator\";\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background[\"default\"], emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _objectSpread(_objectSpread({}, theme.typography.body2), {}, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return __jsx(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: classes.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, message), action ? __jsx(\"div\", {\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, action) : null);\n});\nSnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n};\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/SnackbarContent/SnackbarContent.js"],"names":["React","PropTypes","clsx","withStyles","Paper","emphasize","styles","theme","emphasis","palette","type","backgroundColor","background","root","typography","body2","color","getContrastText","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","message","action","marginLeft","paddingLeft","marginRight","SnackbarContent","forwardRef","props","ref","classes","className","role","other","propTypes","node","object","string","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\n\nexport const styles = (theme) => {\n  const emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      ...theme.typography.body2,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1,\n      [theme.breakpoints.up('sm')]: {\n        flexGrow: 'initial',\n        minWidth: 288,\n      },\n    },\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n    },\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8,\n    },\n  };\n};\n\nconst SnackbarContent = React.forwardRef(function SnackbarContent(props, ref) {\n  const { action, classes, className, message, role = 'alert', ...other } = props;\n\n  return (\n    <Paper\n      role={role}\n      square\n      elevation={6}\n      className={clsx(classes.root, className)}\n      ref={ref}\n      {...other}\n    >\n      <div className={classes.message}>{message}</div>\n      {action ? <div className={classes.action}>{action}</div> : null}\n    </Paper>\n  );\n});\n\nSnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n};\n\nexport default withStyles(styles, { name: 'MuiSnackbarContent' })(SnackbarContent);\n"]},"metadata":{},"sourceType":"module"}