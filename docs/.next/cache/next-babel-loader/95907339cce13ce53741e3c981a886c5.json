{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/List/List.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport ListContext from \"./ListContext\";\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nconst List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'ul',\n    dense = false,\n    disablePadding = false,\n    subheader\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  return __jsx(ListContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), subheader, children));\n});\nList.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n};\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/List/List.js"],"names":["React","PropTypes","clsx","withStyles","ListContext","styles","root","listStyle","margin","padding","position","paddingTop","paddingBottom","dense","subheader","List","forwardRef","props","ref","children","classes","className","component","Component","disablePadding","other","context","useMemo","propTypes","node","object","isRequired","string","elementType","bool","name"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,MADP;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAFc;;AAQpB;AACAD,EAAAA,OAAO,EAAE;AACPE,IAAAA,UAAU,EAAE,CADL;AAEPC,IAAAA,aAAa,EAAE;AAFR,GATW;;AAapB;AACAC,EAAAA,KAAK,EAAE,EAda;;AAepB;AACAC,EAAAA,SAAS,EAAE;AACTH,IAAAA,UAAU,EAAE;AADH;AAhBS,CAAf;AAqBP,MAAMI,IAAI,gBAAGf,KAAK,CAACgB,UAAN,CAAiB,SAASD,IAAT,CAAcE,KAAd,EAAqBC,GAArB,EAA0B;AACtD,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,SAAS,EAAEC,SAAS,GAAG,IAJnB;AAKJV,IAAAA,KAAK,GAAG,KALJ;AAMJW,IAAAA,cAAc,GAAG,KANb;AAOJV,IAAAA;AAPI,MASFG,KATJ;AAAA,QAQKQ,KARL,4BASIR,KATJ;;AAWA,QAAMS,OAAO,GAAG1B,KAAK,CAAC2B,OAAN,CAAc,OAAO;AAAEd,IAAAA;AAAF,GAAP,CAAd,EAAiC,CAACA,KAAD,CAAjC,CAAhB;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAExB,IAAI,CACbkB,OAAO,CAACd,IADK,EAObe,SAPa,EAGMR,KAHN,IAGVO,OAAO,CAACP,KAHE,EAIQ,CAACW,cAJT,IAIVJ,OAAO,CAACX,OAJE,EAKUK,SALV,IAKVM,OAAO,CAACN,SALE,CADjB;AAUE,IAAA,GAAG,EAAEI;AAVP,KAWMO,KAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaGX,SAbH,EAcGK,QAdH,CADF,CADF;AAoBD,CAlCY,CAAb;AAoCAJ,IAAI,CAACa,SAAL,GAAiB;AACf;;;AAGAT,EAAAA,QAAQ,EAAElB,SAAS,CAAC4B,IAJL;;AAKf;;;;AAIAT,EAAAA,OAAO,EAAEnB,SAAS,CAAC6B,MAAV,CAAiBC,UATX;;AAUf;;;AAGAV,EAAAA,SAAS,EAAEpB,SAAS,CAAC+B,MAbN;;AAcf;;;;AAIAV,EAAAA,SAAS,EAAErB;AAAU;AAAD,GAAuCgC,WAlB5C;;AAmBf;;;;;AAKApB,EAAAA,KAAK,EAAEZ,SAAS,CAACiC,IAxBF;;AAyBf;;;AAGAV,EAAAA,cAAc,EAAEvB,SAAS,CAACiC,IA5BX;;AA6Bf;;;AAGApB,EAAAA,SAAS,EAAEb,SAAS,CAAC4B;AAhCN,CAAjB;AAmCA,eAAe1B,UAAU,CAACE,MAAD,EAAS;AAAE8B,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAAwCpB,IAAxC,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative',\n  },\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  /* Styles applied to the root element if dense. */\n  dense: {},\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0,\n  },\n};\n\nconst List = React.forwardRef(function List(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'ul',\n    dense = false,\n    disablePadding = false,\n    subheader,\n    ...other\n  } = props;\n\n  const context = React.useMemo(() => ({ dense }), [dense]);\n\n  return (\n    <ListContext.Provider value={context}>\n      <Component\n        className={clsx(\n          classes.root,\n          {\n            [classes.dense]: dense,\n            [classes.padding]: !disablePadding,\n            [classes.subheader]: subheader,\n          },\n          className,\n        )}\n        ref={ref}\n        {...other}\n      >\n        {subheader}\n        {children}\n      </Component>\n    </ListContext.Provider>\n  );\n});\n\nList.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node,\n};\n\nexport default withStyles(styles, { name: 'MuiList' })(List);\n"]},"metadata":{},"sourceType":"module"}