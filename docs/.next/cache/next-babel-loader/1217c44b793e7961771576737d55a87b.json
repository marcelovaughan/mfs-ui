{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport HighlightedCode from \"../../../modules/components/HighlightedCode\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport FormLabel from \"../../../../../packages/material-ui/src/FormLabel\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport RadioGroup from \"../../../../../packages/material-ui/src/RadioGroup\";\nimport Radio from \"../../../../../packages/material-ui/src/Radio\";\nimport Avatar from \"../../../../../packages/material-ui/src/Avatar\";\nimport Chip from \"../../../../../packages/material-ui/src/Chip\";\nimport FaceIcon from \"../../../../../packages/material-ui-icons/src/Face\";\nimport DoneIcon from \"../../../../../packages/material-ui-icons/src/Done\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    chipWrapper: {\n      height: theme.spacing(10)\n    }\n  };\n};\n\nvar _ref = __jsx(FaceIcon, null);\n\nvar _ref2 = __jsx(Avatar, {\n  src: \"/static/images/avatar/1.jpg\"\n});\n\nvar _ref3 = __jsx(Avatar, null, \"F\");\n\nvar _ref4 = __jsx(DoneIcon, null);\n\nvar _ref5 = __jsx(FormLabel, null, \"variant\");\n\nvar _ref6 = __jsx(FormControlLabel, {\n  value: \"default\",\n  control: __jsx(Radio, null),\n  label: \"default\"\n});\n\nvar _ref7 = __jsx(FormControlLabel, {\n  value: \"outlined\",\n  control: __jsx(Radio, null),\n  label: \"outlined\"\n});\n\nvar _ref8 = __jsx(FormLabel, null, \"color\");\n\nvar _ref9 = __jsx(FormControlLabel, {\n  value: \"default\",\n  control: __jsx(Radio, null),\n  label: \"default\"\n});\n\nvar _ref10 = __jsx(FormControlLabel, {\n  value: \"primary\",\n  control: __jsx(Radio, null),\n  label: \"primary\"\n});\n\nvar _ref11 = __jsx(FormControlLabel, {\n  value: \"secondary\",\n  control: __jsx(Radio, null),\n  label: \"secondary\"\n});\n\nvar _ref12 = __jsx(FormLabel, null, \"size\");\n\nvar _ref13 = __jsx(FormControlLabel, {\n  value: \"medium\",\n  control: __jsx(Radio, null),\n  label: \"medium\"\n});\n\nvar _ref14 = __jsx(FormControlLabel, {\n  value: \"small\",\n  control: __jsx(Radio, null),\n  label: \"small\"\n});\n\nvar _ref15 = __jsx(FormLabel, null, \"icon\");\n\nvar _ref16 = __jsx(FormControlLabel, {\n  value: \"none\",\n  control: __jsx(Radio, null),\n  label: \"none\"\n});\n\nvar _ref17 = __jsx(FormControlLabel, {\n  value: \"icon\",\n  control: __jsx(Radio, null),\n  label: \"icon\"\n});\n\nvar _ref18 = __jsx(FormLabel, null, \"avatar\");\n\nvar _ref19 = __jsx(FormControlLabel, {\n  value: \"none\",\n  control: __jsx(Radio, null),\n  label: \"none\"\n});\n\nvar _ref20 = __jsx(FormControlLabel, {\n  value: \"letter\",\n  control: __jsx(Radio, null),\n  label: \"letter\"\n});\n\nvar _ref21 = __jsx(FormControlLabel, {\n  value: \"img\",\n  control: __jsx(Radio, null),\n  label: \"img\"\n});\n\nvar _ref22 = __jsx(FormLabel, null, \"onDelete\");\n\nvar _ref23 = __jsx(FormControlLabel, {\n  value: \"none\",\n  control: __jsx(Radio, null),\n  label: \"none\"\n});\n\nvar _ref24 = __jsx(FormControlLabel, {\n  value: \"default\",\n  control: __jsx(Radio, null),\n  label: \"default\"\n});\n\nvar _ref25 = __jsx(FormControlLabel, {\n  value: \"custom\",\n  control: __jsx(Radio, null),\n  label: \"custom\"\n});\n\nfunction ChipsPlayground(props) {\n  var classes = props.classes;\n\n  var _React$useState = React.useState({\n    color: 'default',\n    onDelete: 'none',\n    avatar: 'none',\n    icon: 'none',\n    variant: 'default',\n    size: 'medium'\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var color = state.color,\n      onDelete = state.onDelete,\n      avatar = state.avatar,\n      icon = state.icon,\n      variant = state.variant,\n      size = state.size;\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleDeleteExample = function handleDeleteExample() {\n    console.info('You clicked the delete icon.');\n  };\n\n  var colorToCode = color !== 'default' ? \"color=\\\"\".concat(color, \"\\\" \") : '';\n  var sizeToCode = size === 'small' ? \"size=\\\"small\\\" \" : '';\n  var variantToCode = variant !== 'default' ? \"variant=\\\"\".concat(variant, \"\\\" \") : '';\n  var onDeleteToCode;\n\n  switch (onDelete) {\n    case 'none':\n      onDeleteToCode = '';\n      break;\n\n    case 'custom':\n      onDeleteToCode = 'deleteIcon={<DoneIcon />} onDelete={handleDelete} ';\n      break;\n\n    default:\n      onDeleteToCode = 'onDelete={handleDelete} ';\n      break;\n  }\n\n  var iconToCode;\n  var iconToPlayground;\n\n  switch (icon) {\n    case 'none':\n      iconToCode = '';\n      break;\n\n    default:\n      iconToCode = 'icon={<FaceIcon />} ';\n      iconToPlayground = _ref;\n      break;\n  }\n\n  var avatarToCode;\n  var avatarToPlayground;\n\n  switch (avatar) {\n    case 'none':\n      avatarToCode = '';\n      break;\n\n    case 'img':\n      avatarToCode = 'avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />} ';\n      avatarToPlayground = _ref2;\n      break;\n\n    case 'letter':\n      avatarToCode = 'avatar={<Avatar>F</Avatar>} ';\n      avatarToPlayground = _ref3;\n      break;\n\n    default:\n      break;\n  }\n\n  if (avatar !== 'none') {\n    iconToCode = '';\n    iconToPlayground = null;\n  }\n\n  var jsx = \"\\n<Chip \".concat(variantToCode).concat(colorToCode).concat(sizeToCode).concat(onDeleteToCode).concat(avatarToCode).concat(iconToCode, \"/>\\n\");\n  return __jsx(Grid, {\n    container: true,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.chipWrapper\n  }, __jsx(Chip, {\n    label: \"Chip Component\",\n    color: color,\n    deleteIcon: onDelete === 'custom' ? _ref4 : undefined,\n    onDelete: onDelete !== 'none' ? handleDeleteExample : undefined,\n    avatar: avatarToPlayground,\n    icon: iconToPlayground,\n    variant: variant,\n    size: size\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref5, __jsx(RadioGroup, {\n    row: true,\n    name: \"variant\",\n    \"aria-label\": \"variant\",\n    value: variant,\n    onChange: handleChange\n  }, _ref6, _ref7))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref8, __jsx(RadioGroup, {\n    row: true,\n    name: \"color\",\n    \"aria-label\": \"color\",\n    value: color,\n    onChange: handleChange\n  }, _ref9, _ref10, _ref11))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref12, __jsx(RadioGroup, {\n    row: true,\n    name: \"size\",\n    \"aria-label\": \"size\",\n    value: size,\n    onChange: handleChange\n  }, _ref13, _ref14))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref15, __jsx(RadioGroup, {\n    row: true,\n    name: \"icon\",\n    \"aria-label\": \"icon\",\n    value: icon,\n    onChange: handleChange\n  }, _ref16, _ref17))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref18, __jsx(RadioGroup, {\n    row: true,\n    name: \"avatar\",\n    \"aria-label\": \"avatar\",\n    value: avatar,\n    onChange: handleChange\n  }, _ref19, _ref20, _ref21))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref22, __jsx(RadioGroup, {\n    row: true,\n    name: \"onDelete\",\n    \"aria-label\": \"on delete\",\n    value: onDelete,\n    onChange: handleChange\n  }, _ref23, _ref24, _ref25))))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(HighlightedCode, {\n    code: jsx,\n    language: \"jsx\"\n  })));\n}\n\nexport default withStyles(styles)(ChipsPlayground);","map":null,"metadata":{},"sourceType":"module"}