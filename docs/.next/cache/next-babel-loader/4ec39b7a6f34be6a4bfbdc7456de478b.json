{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ThemeProvider, useTheme, createMuiTheme } from \"../../../../../packages/material-ui/src/styles\";\nimport useMediaQuery from \"../../../../../packages/material-ui/src/useMediaQuery\";\n/**\n * Be careful using this hook. It only works because the number of\n * breakpoints in theme is static. It will break once you change the number of\n * breakpoints. See https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n */\n\nfunction useWidth() {\n  var theme = useTheme();\n\n  var keys = _toConsumableArray(theme.breakpoints.keys).reverse();\n\n  return keys.reduce(function (output, key) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var matches = useMediaQuery(theme.breakpoints.up(key));\n    return !output && matches ? key : output;\n  }, null) || 'xs';\n}\n\nfunction MyComponent() {\n  var width = useWidth();\n  return __jsx(\"span\", null, \"width: \".concat(width));\n}\n\nvar theme = createMuiTheme();\n\nvar _ref = __jsx(ThemeProvider, {\n  theme: theme\n}, __jsx(MyComponent, null));\n\nexport default function UseWidth() {\n  return _ref;\n}","map":null,"metadata":{},"sourceType":"module"}