{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport PropTypes from 'prop-types';\nimport merge from \"./merge\"; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (true) {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (_Array$isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return _Object$keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_objectSpread({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = true ? _objectSpread(_objectSpread({}, styleFunction.propTypes), {}, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-system/src/breakpoints.js"],"names":["PropTypes","merge","values","xs","sm","md","lg","xl","defaultBreakpoints","keys","up","key","handleBreakpoints","props","propValue","styleFromPropValue","theme","console","error","themeBreakpoints","breakpoints","reduce","acc","item","index","breakpoint","output","styleFunction","newStyleFunction","base","extended","propTypes","object","filterProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport merge from './merge';\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nconst values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: (key) => `@media (min-width:${values[key]}px)`,\n};\n\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      acc[themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = (props) => {\n    const base = styleFunction(props);\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction({ theme: props.theme, ...props[key] });\n      }\n      return acc;\n    }, null);\n\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes =\n    process.env.NODE_ENV !== 'production'\n      ? {\n          ...styleFunction.propTypes,\n          xs: PropTypes.object,\n          sm: PropTypes.object,\n          md: PropTypes.object,\n          lg: PropTypes.object,\n          xl: PropTypes.object,\n        }\n      : {};\n\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n\n  return newStyleFunction;\n}\n\nexport default breakpoints;\n"]},"metadata":{},"sourceType":"module"}