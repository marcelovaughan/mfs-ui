{"ast":null,"code":"export const azAZ = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Yolu göstər'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Birinci səhifəyə keç';\n        }\n\n        if (type === 'last') {\n          return 'Sonuncu səhifəyə keç';\n        }\n\n        if (type === 'next') {\n          return 'Növbəti səhifəyə keç';\n        } // if (type === 'previous') {\n\n\n        return 'Əvvəlki səhifəyə keç';\n      },\n      labelRowsPerPage: 'Səhifəyə düşən sətrlər:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} dən ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        let pluralForm = 'Ulduz';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Ulduzlar';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Boş'\n    },\n    MuiAutocomplete: {\n      clearText: 'Silmək',\n      closeText: 'Bağlamaq',\n      loadingText: 'Yüklənir…',\n      noOptionsText: 'Seçimlər mövcud deyil',\n      openText: 'Открыть'\n    },\n    MuiAlert: {\n      closeText: 'Bağlamaq'\n    },\n    MuiPagination: {\n      'aria-label': 'Səhifənin naviqasiyası',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n        }\n\n        if (type === 'first') {\n          return 'Birinci səhifəyə keç';\n        }\n\n        if (type === 'last') {\n          return 'Sonuncu səhifəyə keç';\n        }\n\n        if (type === 'next') {\n          return 'Növbəti səhifəyə keç';\n        } // if (type === 'previous') {\n\n\n        return 'Əvvəlki səhifəyə keç';\n      }\n    }\n  }\n};\nexport const bgBG = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показване на пътя'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Отиди на първата страница';\n        }\n\n        if (type === 'last') {\n          return 'Отиди на последната страница';\n        }\n\n        if (type === 'next') {\n          return 'Отиди на следващата страница';\n        } // if (type === 'previous') {\n\n\n        return 'Отиди на предишната страница';\n      },\n      labelRowsPerPage: 'Редове на страница:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} от ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n      emptyLabelText: 'Изчисти'\n    },\n    MuiAutocomplete: {\n      clearText: 'Изчисти',\n      closeText: 'Затвори',\n      loadingText: 'Зареждане…',\n      noOptionsText: 'Няма налични опции',\n      openText: 'Отвори'\n    },\n    MuiAlert: {\n      closeText: 'Затвори'\n    },\n    MuiPagination: {\n      'aria-label': 'Пагинация',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Към '}страница ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Отиди на първата страница';\n        }\n\n        if (type === 'last') {\n          return 'Отиди на последната страница';\n        }\n\n        if (type === 'next') {\n          return 'Отиди на следващата страница';\n        } // if (type === 'previous') {\n\n\n        return 'Отиди на предишната страница';\n      }\n    }\n  }\n};\nexport const caES = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Files per pàgina:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n      emptyLabelText: 'Buit'\n    },\n    MuiAutocomplete: {\n      clearText: 'Netejar',\n      closeText: 'Tancar',\n      loadingText: 'Carregant…',\n      noOptionsText: 'Sense opcions',\n      openText: 'Obert'\n    },\n    MuiAlert: {\n      closeText: 'Tancat'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Ukázat cestu'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Jít na první stránku';\n        }\n\n        if (type === 'last') {\n          return 'Jít na poslední stránku';\n        }\n\n        if (type === 'next') {\n          return 'Jít na další stránku';\n        } // if (type === 'previous') {\n\n\n        return 'Jít na předchozí stránku';\n      },\n      labelRowsPerPage: 'Řádků na stránce:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        if (value === 1) {\n          return `${value} hvězdička`;\n        }\n\n        if (value >= 2 && value <= 4) {\n          return `${value} hvězdičky`;\n        }\n\n        return `${value} hvězdiček`;\n      },\n      emptyLabelText: 'Prázdné'\n    },\n    MuiAutocomplete: {\n      clearText: 'Vymazat',\n      closeText: 'Zavřít',\n      loadingText: 'Načítání…',\n      noOptionsText: 'Žádné možnosti',\n      openText: 'Otevřít'\n    },\n    MuiAlert: {\n      closeText: 'Zavřít'\n    },\n    MuiPagination: {\n      'aria-label': 'Navigace stránkováním',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Jít na '}${page} stránku`;\n        }\n\n        if (type === 'first') {\n          return 'Jít na první stránku';\n        }\n\n        if (type === 'last') {\n          return 'Jít na poslední stránku';\n        }\n\n        if (type === 'next') {\n          return 'Jít na další stránku';\n        } // if (type === 'previous') {\n\n\n        return 'Jít na předchozí stránku';\n      }\n    }\n  }\n};\nexport const deDE = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Pfad anzeigen'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Zur ersten Seite';\n        }\n\n        if (type === 'last') {\n          return 'Zur letzten Seite';\n        }\n\n        if (type === 'next') {\n          return 'Zur nächsten Seite';\n        } // if (type === 'previous') {\n\n\n        return 'Zur vorherigen Seite';\n      },\n      labelRowsPerPage: 'Zeilen pro Seite:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} von ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n      emptyLabelText: 'Keine Wertung'\n    },\n    MuiAutocomplete: {\n      clearText: 'Leeren',\n      closeText: 'Schließen',\n      loadingText: 'Wird geladen…',\n      noOptionsText: 'Keine Optionen',\n      openText: 'Öffnen'\n    },\n    MuiAlert: {\n      closeText: 'Schließen'\n    },\n    MuiPagination: {\n      'aria-label': 'Navigation via Seitennummerierung',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Zur ersten Seite';\n        }\n\n        if (type === 'last') {\n          return 'Zur letzten Seite';\n        }\n\n        if (type === 'next') {\n          return 'Zur nächsten Seite';\n        } // if (type === 'previous') {\n\n\n        return 'Zur vorherigen Seite';\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Show path',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    },\n    MuiAlert: {\n      closeText: 'Close',\n    },\n    MuiPagination: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    },\n  },\n  */\n};\nexport const esES = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar ruta'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Ir a la primera página';\n        }\n\n        if (type === 'last') {\n          return 'Ir a la última página';\n        }\n\n        if (type === 'next') {\n          return 'Ir a la página siguiente';\n        } // if (type === 'previous') {\n\n\n        return 'Ir a la página anterior';\n      },\n      labelRowsPerPage: 'Filas por página:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vacío'\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpiar',\n      closeText: 'Cerrar',\n      loadingText: 'Cargando…',\n      noOptionsText: 'Sin opciones',\n      openText: 'Abierto'\n    },\n    MuiAlert: {\n      closeText: 'Cerrar'\n    },\n    MuiPagination: {\n      'aria-label': 'Paginador',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir a la '}página ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Ir a la primera página';\n        }\n\n        if (type === 'last') {\n          return 'Ir a la última página';\n        }\n\n        if (type === 'next') {\n          return 'Ir a la página siguiente';\n        } // if (type === 'previous') {\n\n\n        return 'Ir a la página anterior';\n      }\n    }\n  }\n};\nexport const etEE = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Näita teed'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Vali esimene lehekülg';\n        }\n\n        if (type === 'last') {\n          return 'Vali viimane lehekülg';\n        }\n\n        if (type === 'next') {\n          return 'Vali järgmine lehekülg';\n        } // if (type === 'previous') {\n\n\n        return 'Vali eelmine lehekülg';\n      },\n      labelRowsPerPage: 'Ridu leheküljel:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n      emptyLabelText: 'Tühi'\n    },\n    MuiAutocomplete: {\n      clearText: 'Tühjenda',\n      closeText: 'Sulge',\n      loadingText: 'Laen…',\n      noOptionsText: 'Valikuid ei ole',\n      openText: 'Ava'\n    },\n    MuiAlert: {\n      closeText: 'Sulge'\n    },\n    MuiPagination: {\n      'aria-label': 'Lehekülgede valik',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Vali esimene lehekülg';\n        }\n\n        if (type === 'last') {\n          return 'Vali viimane lehekülg';\n        }\n\n        if (type === 'next') {\n          return 'Vali järgmine lehekülg';\n        } // if (type === 'previous') {\n\n\n        return 'Vali eelmine lehekülg';\n      }\n    }\n  }\n};\nexport const faIR = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiBreadcrumbs: {\n      expandText: 'نمایش مسیر'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'رفتن به اولین صفحه';\n        }\n\n        if (type === 'last') {\n          return 'رفتن به آخرین صفحه';\n        }\n\n        if (type === 'next') {\n          return 'رفتن به صفحه‌ی بعدی';\n        } // if (type === 'previous') {\n\n\n        return 'رفتن به صفحه‌ی قبلی';\n      },\n      labelRowsPerPage: 'تعداد سطرهای هر صفحه:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} از ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ستاره`,\n      emptyLabelText: 'خالی'\n    },\n    MuiAutocomplete: {\n      clearText: 'پاک‌کردن',\n      closeText: 'بستن',\n      loadingText: 'در حال بارگذاری…',\n      noOptionsText: 'بی‌نتیجه',\n      openText: 'بازکردن'\n    },\n    MuiAlert: {\n      closeText: 'بستن'\n    },\n    MuiPagination: {\n      'aria-label': 'ناوبری صفحه',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'رفتن به اولین صفحه';\n        }\n\n        if (type === 'last') {\n          return 'رفتن به آخرین صفحه';\n        }\n\n        if (type === 'next') {\n          return 'رفتن به صفحه‌ی بعدی';\n        } // if (type === 'previous') {\n\n\n        return 'رفتن به صفحه‌ی قبلی';\n      }\n    }\n  }\n};\nexport const fiFI = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Näytä reitti'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Mene ensimmäiselle sivulle';\n        }\n\n        if (type === 'last') {\n          return 'Mene viimeiselle sivulle';\n        }\n\n        if (type === 'next') {\n          return 'Mene seuraavalle sivulle';\n        } // if (type === 'previous') {\n\n\n        return 'Mene edelliselle sivulle';\n      },\n      labelRowsPerPage: 'Rivejä per sivu:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n      emptyLabelText: 'Tyhjä'\n    },\n    MuiAutocomplete: {\n      clearText: 'Tyhjennä',\n      closeText: 'Sulje',\n      loadingText: 'Ladataan…',\n      noOptionsText: 'Ei valintoja',\n      openText: 'Avaa'\n    },\n    MuiAlert: {\n      closeText: 'Sulje'\n    },\n    MuiPagination: {\n      'aria-label': 'Sivutus navigaatio',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Mene ensimmäiselle sivulle';\n        }\n\n        if (type === 'last') {\n          return 'Mene viimeiselle sivulle';\n        }\n\n        if (type === 'next') {\n          return 'Mene seuraavalle sivulle';\n        } // if (type === 'previous') {\n\n\n        return 'Mene edelliselle sivulle';\n      }\n    }\n  }\n};\nexport const frFR = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Montrer le chemin'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Aller à la première page';\n        }\n\n        if (type === 'last') {\n          return 'Aller à la dernière page';\n        }\n\n        if (type === 'next') {\n          return 'Aller à la page suivante';\n        } // if (type === 'previous') {\n\n\n        return 'Aller à la page précédente';\n      },\n      labelRowsPerPage: 'Lignes par page :',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vide'\n    },\n    MuiAutocomplete: {\n      clearText: 'Vider',\n      closeText: 'Fermer',\n      loadingText: 'Chargement…',\n      noOptionsText: 'Pas de résultats',\n      openText: 'Ouvrir'\n    },\n    MuiAlert: {\n      closeText: 'Fermer'\n    },\n    MuiPagination: {\n      'aria-label': 'navigation de pagination',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Aller à la '}page ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Aller à la première page';\n        }\n\n        if (type === 'last') {\n          return 'Aller à la dernière page';\n        }\n\n        if (type === 'next') {\n          return 'Aller à la page suivante';\n        } // if (type === 'previous') {\n\n\n        return 'Aller à la page précédente';\n      }\n    }\n  }\n};\nexport const heIL = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'שורות בעמוד:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} מתוך ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n      emptyLabelText: 'ריק'\n    },\n    MuiAutocomplete: {\n      clearText: 'נקה',\n      closeText: 'סגור',\n      loadingText: 'טוען…',\n      noOptionsText: 'אין אופציות',\n      openText: 'פתח'\n    },\n    MuiAlert: {\n      closeText: 'סגור'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const hiIN = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'रास्ता दिखायें'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'पहले पृष्ठ पर जाएँ';\n        }\n\n        if (type === 'last') {\n          return 'अंतिम पृष्ठ पर जाएँ';\n        }\n\n        if (type === 'next') {\n          return 'अगले पृष्ठ पर जाएँ';\n        } // if (type === 'previous') {\n\n\n        return 'पिछले पृष्ठ पर जाएँ';\n      },\n      labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n      emptyLabelText: 'रिक्त'\n    },\n    MuiAutocomplete: {\n      clearText: 'हटायें',\n      closeText: 'बंद करें',\n      loadingText: 'लोड हो रहा है…',\n      noOptionsText: 'कोई विकल्प नहीं',\n      openText: 'खोलें'\n    },\n    MuiAlert: {\n      closeText: 'बंद करें'\n    },\n    MuiPagination: {\n      'aria-label': 'पृस्ठानुसार संचालन',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n        }\n\n        if (type === 'first') {\n          return 'पहले पृष्ठ पर जाएँ';\n        }\n\n        if (type === 'last') {\n          return 'अंतिम पृष्ठ पर जाएँ';\n        }\n\n        if (type === 'next') {\n          return 'अगले पृष्ठ पर जाएँ';\n        } // if (type === 'previous') {\n\n\n        return 'पिछले पृष्ठ पर जाएँ';\n      }\n    }\n  }\n};\nexport const huHU = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Útvonal'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Első oldalra';\n        }\n\n        if (type === 'last') {\n          return 'Utolsó oldalra';\n        }\n\n        if (type === 'next') {\n          return 'Következő oldalra';\n        } // if (type === 'previous') {\n\n\n        return 'Előző oldalra';\n      },\n      labelRowsPerPage: 'Sorok száma:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Csillag`,\n      emptyLabelText: 'Üres'\n    },\n    MuiAutocomplete: {\n      clearText: 'Törlés',\n      closeText: 'Bezárás',\n      loadingText: 'Töltés…',\n      noOptionsText: 'Nincs találat',\n      openText: 'Megnyitás'\n    },\n    MuiAlert: {\n      closeText: 'Bezárás'\n    },\n    MuiPagination: {\n      'aria-label': 'Lapozás',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page}. oldal${selected ? '' : 'ra'}`;\n        }\n\n        if (type === 'first') {\n          return 'Első oldalra';\n        }\n\n        if (type === 'last') {\n          return 'Utolsó oldalra';\n        }\n\n        if (type === 'next') {\n          return 'Következő oldalra';\n        } // if (type === 'previous') {\n\n\n        return 'Előző oldalra';\n      }\n    }\n  }\n};\nexport const hyAM = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Տողեր մեկ էջում`',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Աստղ`,\n      emptyLabelText: 'Դատարկ'\n    },\n    MuiAutocomplete: {\n      clearText: 'Մաքրել',\n      closeText: 'Փակել',\n      loadingText: 'Բեռնում…',\n      noOptionsText: 'Տարբերակներ չկան',\n      openText: 'Բացել'\n    },\n    MuiAlert: {\n      closeText: 'Փակել'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Baris per halaman:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} dari ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: 'Hapus',\n      closeText: 'Tutup',\n      loadingText: 'Memuat…',\n      noOptionsText: 'Tidak ada opsi',\n      openText: 'Buka'\n    },\n    MuiAlert: {\n      closeText: 'Tutup'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Raðir á síðu:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} af ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n      emptyLabelText: 'Tómt'\n    },\n    MuiAutocomplete: {\n      clearText: 'Hreinsa',\n      closeText: 'Loka',\n      loadingText: 'Hlaða…',\n      noOptionsText: 'Engar niðurstöður',\n      openText: 'Opna'\n    },\n    MuiAlert: {\n      closeText: 'Loka'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Visualizza percorso'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Vai alla prima pagina';\n        }\n\n        if (type === 'last') {\n          return \"Vai all'ultima pagina\";\n        }\n\n        if (type === 'next') {\n          return 'Vai alla pagina successiva';\n        } // if (type === 'previous') {\n\n\n        return 'Vai alla pagina precedente';\n      },\n      labelRowsPerPage: 'Righe per pagina:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} di ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n      emptyLabelText: 'Vuoto'\n    },\n    MuiAutocomplete: {\n      clearText: 'Svuota',\n      closeText: 'Chiudi',\n      loadingText: 'Caricamento in corso…',\n      noOptionsText: 'Nessuna opzione',\n      openText: 'Apri'\n    },\n    MuiAlert: {\n      closeText: 'Chiudi'\n    },\n    MuiPagination: {\n      'aria-label': 'Navigazione impaginata',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Vai alla prima pagina';\n        }\n\n        if (type === 'last') {\n          return \"Vai all'ultima pagina\";\n        }\n\n        if (type === 'next') {\n          return 'Vai alla pagina successiva';\n        } // if (type === 'previous') {\n\n\n        return 'Vai alla pagina precedente';\n      }\n    }\n  }\n};\nexport const jaJP = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'ページごとの行:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ${value !== 1 ? '出演者' : '星'}` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: 'クリア',\n      closeText: '閉じる',\n      loadingText: '積み込み…',\n      noOptionsText: '結果がありません',\n      openText: '開いた'\n    },\n    MuiAlert: {\n      closeText: '閉じる'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const koKR = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: '페이지 당 행:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} 점` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: '지우기',\n      closeText: '닫기',\n      loadingText: '불러오는 중…',\n      noOptionsText: '옵션 없음',\n      openText: '열기'\n    } // MuiAlert: {\n    //   closeText: 'Close',\n    // },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const nlNL = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Regels per pagina :',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} van ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: 'Wissen',\n      closeText: 'Sluiten',\n      loadingText: 'Laden…',\n      noOptionsText: 'Geen opties',\n      openText: 'Openen'\n    },\n    MuiAlert: {\n      closeText: 'Sluiten'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const plPL = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Pokaż ścieżkę'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Przejdź do pierwszej strony';\n        }\n\n        if (type === 'last') {\n          return 'Przejdź do ostatniej strony';\n        }\n\n        if (type === 'next') {\n          return 'Przejdź do następnej strony';\n        } // if (type === 'previous') {\n\n\n        return 'Przejdź do poprzedniej strony';\n      },\n      labelRowsPerPage: 'Wierszy na stronę:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        let pluralForm = 'gwiazdek';\n        const lastDigit = value % 10;\n\n        if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'gwiazdki';\n        } else if (value === 1) {\n          pluralForm = 'gwiazdka';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Brak gwiazdek'\n    },\n    MuiAutocomplete: {\n      clearText: 'Wyczyść',\n      closeText: 'Zamknij',\n      loadingText: 'Ładowanie…',\n      noOptionsText: 'Brak opcji',\n      openText: 'Otwórz'\n    },\n    MuiAlert: {\n      closeText: 'Zamknij'\n    },\n    MuiPagination: {\n      'aria-label': 'Nawigacja podziału na strony',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n        }\n\n        if (type === 'first') {\n          return 'Przejdź do pierwszej strony';\n        }\n\n        if (type === 'last') {\n          return 'Przejdź do ostatniej strony';\n        }\n\n        if (type === 'next') {\n          return 'Przejdź do następnej strony';\n        } // if (type === 'previous') {\n\n\n        return 'Przejdź do poprzedniej strony';\n      }\n    }\n  }\n};\nexport const ptBR = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar caminho'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Ir para a primeira página';\n        }\n\n        if (type === 'last') {\n          return 'Ir para a última página';\n        }\n\n        if (type === 'next') {\n          return 'Ir para a próxima página';\n        } // if (type === 'previous') {\n\n\n        return 'Ir para a página anterior';\n      },\n      labelRowsPerPage: 'Linhas por página:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vazio'\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpar',\n      closeText: 'Fechar',\n      loadingText: 'Carregando…',\n      noOptionsText: 'Sem opções',\n      openText: 'Abrir'\n    },\n    MuiAlert: {\n      closeText: 'Fechar'\n    },\n    MuiPagination: {\n      'aria-label': 'Navegar pela paginação',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir para a '}página ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Ir para a primeira página';\n        }\n\n        if (type === 'last') {\n          return 'Ir para a última página';\n        }\n\n        if (type === 'next') {\n          return 'Ir para a próxima página';\n        } // if (type === 'previous') {\n\n\n        return 'Ir para a página anterior';\n      }\n    }\n  }\n};\nexport const ptPT = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar caminho'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Primeira página';\n        }\n\n        if (type === 'last') {\n          return 'Última página';\n        }\n\n        if (type === 'next') {\n          return 'Próxima página';\n        } // if (type === 'previous') {\n\n\n        return 'Página anterior';\n      },\n      labelRowsPerPage: 'Linhas por página:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vazio'\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpar',\n      closeText: 'Fechar',\n      loadingText: 'A carregar…',\n      noOptionsText: 'Sem opções',\n      openText: 'Abrir'\n    },\n    MuiAlert: {\n      closeText: 'Fechar'\n    },\n    MuiPagination: {\n      'aria-label': 'Navegar por páginas',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir para a '}página ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Primeira página';\n        }\n\n        if (type === 'last') {\n          return 'Última página';\n        }\n\n        if (type === 'next') {\n          return 'Próxima página';\n        } // if (type === 'previous') {\n\n\n        return 'Página anterior';\n      }\n    }\n  }\n};\nexport const roRO = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Arată calea'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Mergi la prima pagină';\n        }\n\n        if (type === 'last') {\n          return 'Mergi la ultima pagină';\n        }\n\n        if (type === 'next') {\n          return 'Mergi la pagina următoare';\n        } // if (type === 'previous') {\n\n\n        return 'Mergi la pagina precedentă';\n      },\n      labelRowsPerPage: 'Rânduri pe pagină:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} din ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n      emptyLabelText: 'Gol'\n    },\n    MuiAutocomplete: {\n      clearText: 'Șterge',\n      closeText: 'Închide',\n      loadingText: 'Se încarcă…',\n      noOptionsText: 'Nicio opțiune',\n      openText: 'Deschide'\n    },\n    MuiAlert: {\n      closeText: 'Închide'\n    },\n    MuiPagination: {\n      'aria-label': 'Navigare prin paginare',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Mergi la prima pagină';\n        }\n\n        if (type === 'last') {\n          return 'Mergi la ultima pagină';\n        }\n\n        if (type === 'next') {\n          return 'Mergi la pagina următoare';\n        } // if (type === 'previous') {\n\n\n        return 'Mergi la pagina precedentă';\n      }\n    }\n  }\n};\nexport const ruRU = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показать полный путь'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Перейти на первую страницу';\n        }\n\n        if (type === 'last') {\n          return 'Перейти на последнюю страницу';\n        }\n\n        if (type === 'next') {\n          return 'Перейти на следующую страницу';\n        } // if (type === 'previous') {\n\n\n        return 'Перейти на предыдущую страницу';\n      },\n      labelRowsPerPage: 'Строк на странице:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} из ${count !== -1 ? count : `более чем ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        let pluralForm = 'Звёзд';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Звезды';\n        } else if (lastDigit === 1) {\n          pluralForm = 'Звезда';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Рейтинг отсутствует'\n    },\n    MuiAutocomplete: {\n      clearText: 'Очистить',\n      closeText: 'Закрыть',\n      loadingText: 'Загрузка…',\n      noOptionsText: 'Нет доступных вариантов',\n      openText: 'Открыть'\n    },\n    MuiAlert: {\n      closeText: 'Закрыть'\n    },\n    MuiPagination: {\n      'aria-label': 'Навигация по страницам',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          if (selected) return `${page} страница`;\n          return `Перейти на ${page} страницу`;\n        }\n\n        if (type === 'first') {\n          return 'Перейти на первую страницу';\n        }\n\n        if (type === 'last') {\n          return 'Перейти на последнюю страницу';\n        }\n\n        if (type === 'next') {\n          return 'Перейти на следующую страницу';\n        } // if (type === 'previous') {\n\n\n        return 'Перейти на предыдущую страницу';\n      }\n    }\n  }\n};\nexport const skSK = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Riadkov na stránke:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        if (value === 1) {\n          return `${value} hviezdička`;\n        }\n\n        if (value >= 2 && value <= 4) {\n          return `${value} hviezdičky`;\n        }\n\n        return `${value} hviezdičiek`;\n      } // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: 'Vymazať',\n      closeText: 'Zavrieť',\n      loadingText: 'Načítanie…',\n      noOptionsText: 'Žiadne možnosti',\n      openText: 'Otvoriť'\n    },\n    MuiAlert: {\n      closeText: 'Zavrieť'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const svSE = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Rader per sida:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} av ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: 'Rensa',\n      closeText: 'Stäng',\n      loadingText: 'Laddar…',\n      noOptionsText: 'Inga alternativ',\n      openText: 'Öppen'\n    },\n    MuiAlert: {\n      closeText: 'Stäng'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const trTR = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Yolu göster'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'İlk sayfaya git';\n        }\n\n        if (type === 'last') {\n          return 'Son sayfaya git';\n        }\n\n        if (type === 'next') {\n          return 'Sonraki sayfaya git';\n        } // if (type === 'previous') {\n\n\n        return 'Önceki sayfaya git';\n      },\n      labelRowsPerPage: 'Sayfa başına satır:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Yıldız`,\n      emptyLabelText: 'Boş'\n    },\n    MuiAutocomplete: {\n      clearText: 'Temizle',\n      closeText: 'Kapat',\n      loadingText: 'Yükleniyor…',\n      noOptionsText: 'Seçenek yok',\n      openText: 'Aç'\n    },\n    MuiAlert: {\n      closeText: 'Kapat'\n    },\n    MuiPagination: {\n      'aria-label': 'Sayfa navigasyonu',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n        }\n\n        if (type === 'first') {\n          return 'İlk sayfaya git';\n        }\n\n        if (type === 'last') {\n          return 'Son sayfaya git';\n        }\n\n        if (type === 'next') {\n          return 'Sonraki sayfaya git';\n        } // if (type === 'previous') {\n\n\n        return 'Önceki sayfaya git';\n      }\n    }\n  }\n};\nexport const ukUA = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показати шлях сторінок'\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: type => {\n        if (type === 'first') {\n          return 'Перейти на першу сторінку';\n        }\n\n        if (type === 'last') {\n          return 'Перейти на останню сторінку';\n        }\n\n        if (type === 'next') {\n          return 'Перейти на наступну сторінку';\n        } // if (type === 'previous') {\n\n\n        return 'Перейти на попередню сторінку';\n      },\n      labelRowsPerPage: 'Рядків на сторінці:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} з ${count !== -1 ? count : `понад ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => {\n        let pluralForm = 'Зірок';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Зірки';\n        } else if (lastDigit === 1) {\n          pluralForm = 'Зірка';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Рейтинг відсутній'\n    },\n    MuiAutocomplete: {\n      clearText: 'Очистити',\n      closeText: 'Згорнути',\n      loadingText: 'Завантаження…',\n      noOptionsText: 'Немає варіантів',\n      openText: 'Розгорнути'\n    },\n    MuiAlert: {\n      closeText: 'Згорнути'\n    },\n    MuiPagination: {\n      'aria-label': 'Навігація сторінками',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n        }\n\n        if (type === 'first') {\n          return 'Перейти на першу сторінку';\n        }\n\n        if (type === 'last') {\n          return 'Перейти на останню сторінку';\n        }\n\n        if (type === 'next') {\n          return 'Перейти на наступну сторінку';\n        } // if (type === 'previous') {\n\n\n        return 'Перейти на попередню сторінку';\n      }\n    }\n  }\n};\nexport const viVN = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Số hàng mỗi trang:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} sao`,\n      emptyLabelText: 'Trống'\n    },\n    MuiAutocomplete: {\n      clearText: 'Xóa',\n      closeText: 'Đóng',\n      loadingText: 'Đang tải…',\n      noOptionsText: 'Không có lựa chọn',\n      openText: 'Mở'\n    },\n    MuiAlert: {\n      closeText: 'Đóng'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};\nexport const zhCN = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: '每页行数:',\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} 的 ${count !== -1 ? count : `超过 ${to}`}`\n    },\n    MuiRating: {\n      getLabelText: value => `${value} 星${value !== 1 ? '星' : ''}` // emptyLabelText: 'Empty',\n\n    },\n    MuiAutocomplete: {\n      clearText: '明确',\n      closeText: '关',\n      loadingText: '载入中…',\n      noOptionsText: '没有选择',\n      openText: '打开'\n    },\n    MuiAlert: {\n      closeText: '关'\n    } // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n\n  }\n};","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/locale/index.ts"],"names":["azAZ","props","MuiBreadcrumbs","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","pluralForm","lastDigit","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","bgBG","caES","csCZ","deDE","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","huHU","hyAM","idID","isIS","itIT","jaJP","koKR","nlNL","plPL","ptBR","ptPT","roRO","ruRU","skSK","svSE","trTR","ukUA","viVN","zhCN"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { ComponentsPropsList } from '../styles/props';\n\nexport interface Localization {\n  props?: {\n    MuiBreadcrumbs?: Pick<ComponentsPropsList['MuiBreadcrumbs'], 'expandText'>;\n    MuiTablePagination?: Pick<\n      ComponentsPropsList['MuiTablePagination'],\n      'labelRowsPerPage' | 'labelDisplayedRows' | 'getItemAriaLabel'\n    >;\n    // The core package has no dependencies on the @material-ui/lab components.\n    // We can't use ComponentsPropsList, we have to duplicate and inline the definitions.\n    MuiRating?: {\n      emptyLabelText?: string;\n      getLabelText?: (value: number) => string;\n    };\n    MuiAutocomplete?: {\n      clearText?: string;\n      closeText?: string;\n      loadingText?: React.ReactNode;\n      noOptionsText?: React.ReactNode;\n      openText?: string;\n    };\n    MuiAlert?: {\n      closeText?: string;\n    };\n    MuiPagination?: {\n      'aria-label'?: string;\n      getItemAriaLabel?: (type: string, page: number, selected: boolean) => string;\n    };\n  };\n}\n\nexport const azAZ: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Yolu göstər',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Birinci səhifəyə keç';\n        }\n        if (type === 'last') {\n          return 'Sonuncu səhifəyə keç';\n        }\n        if (type === 'next') {\n          return 'Növbəti səhifəyə keç';\n        }\n        // if (type === 'previous') {\n        return 'Əvvəlki səhifəyə keç';\n      },\n      labelRowsPerPage: 'Səhifəyə düşən sətrlər:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        let pluralForm = 'Ulduz';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Ulduzlar';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Boş',\n    },\n    MuiAutocomplete: {\n      clearText: 'Silmək',\n      closeText: 'Bağlamaq',\n      loadingText: 'Yüklənir…',\n      noOptionsText: 'Seçimlər mövcud deyil',\n      openText: 'Открыть',\n    },\n    MuiAlert: {\n      closeText: 'Bağlamaq',\n    },\n    MuiPagination: {\n      'aria-label': 'Səhifənin naviqasiyası',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n        }\n        if (type === 'first') {\n          return 'Birinci səhifəyə keç';\n        }\n        if (type === 'last') {\n          return 'Sonuncu səhifəyə keç';\n        }\n        if (type === 'next') {\n          return 'Növbəti səhifəyə keç';\n        }\n        // if (type === 'previous') {\n        return 'Əvvəlki səhifəyə keç';\n      },\n    },\n  },\n};\n\nexport const bgBG: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показване на пътя',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Отиди на първата страница';\n        }\n        if (type === 'last') {\n          return 'Отиди на последната страница';\n        }\n        if (type === 'next') {\n          return 'Отиди на следващата страница';\n        }\n        // if (type === 'previous') {\n        return 'Отиди на предишната страница';\n      },\n      labelRowsPerPage: 'Редове на страница:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} от ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n      emptyLabelText: 'Изчисти',\n    },\n    MuiAutocomplete: {\n      clearText: 'Изчисти',\n      closeText: 'Затвори',\n      loadingText: 'Зареждане…',\n      noOptionsText: 'Няма налични опции',\n      openText: 'Отвори',\n    },\n    MuiAlert: {\n      closeText: 'Затвори',\n    },\n    MuiPagination: {\n      'aria-label': 'Пагинация',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Към '}страница ${page}`;\n        }\n        if (type === 'first') {\n          return 'Отиди на първата страница';\n        }\n        if (type === 'last') {\n          return 'Отиди на последната страница';\n        }\n        if (type === 'next') {\n          return 'Отиди на следващата страница';\n        }\n        // if (type === 'previous') {\n        return 'Отиди на предишната страница';\n      },\n    },\n  },\n};\n\nexport const caES: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Files per pàgina:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n      emptyLabelText: 'Buit',\n    },\n    MuiAutocomplete: {\n      clearText: 'Netejar',\n      closeText: 'Tancar',\n      loadingText: 'Carregant…',\n      noOptionsText: 'Sense opcions',\n      openText: 'Obert',\n    },\n    MuiAlert: {\n      closeText: 'Tancat',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const csCZ: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Ukázat cestu',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Jít na první stránku';\n        }\n        if (type === 'last') {\n          return 'Jít na poslední stránku';\n        }\n        if (type === 'next') {\n          return 'Jít na další stránku';\n        }\n        // if (type === 'previous') {\n        return 'Jít na předchozí stránku';\n      },\n      labelRowsPerPage: 'Řádků na stránce:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        if (value === 1) {\n          return `${value} hvězdička`;\n        }\n        if (value >= 2 && value <= 4) {\n          return `${value} hvězdičky`;\n        }\n        return `${value} hvězdiček`;\n      },\n      emptyLabelText: 'Prázdné',\n    },\n    MuiAutocomplete: {\n      clearText: 'Vymazat',\n      closeText: 'Zavřít',\n      loadingText: 'Načítání…',\n      noOptionsText: 'Žádné možnosti',\n      openText: 'Otevřít',\n    },\n    MuiAlert: {\n      closeText: 'Zavřít',\n    },\n    MuiPagination: {\n      'aria-label': 'Navigace stránkováním',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Jít na '}${page} stránku`;\n        }\n        if (type === 'first') {\n          return 'Jít na první stránku';\n        }\n        if (type === 'last') {\n          return 'Jít na poslední stránku';\n        }\n        if (type === 'next') {\n          return 'Jít na další stránku';\n        }\n        // if (type === 'previous') {\n        return 'Jít na předchozí stránku';\n      },\n    },\n  },\n};\n\nexport const deDE: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Pfad anzeigen',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Zur ersten Seite';\n        }\n        if (type === 'last') {\n          return 'Zur letzten Seite';\n        }\n        if (type === 'next') {\n          return 'Zur nächsten Seite';\n        }\n        // if (type === 'previous') {\n        return 'Zur vorherigen Seite';\n      },\n      labelRowsPerPage: 'Zeilen pro Seite:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} von ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n      emptyLabelText: 'Keine Wertung',\n    },\n    MuiAutocomplete: {\n      clearText: 'Leeren',\n      closeText: 'Schließen',\n      loadingText: 'Wird geladen…',\n      noOptionsText: 'Keine Optionen',\n      openText: 'Öffnen',\n    },\n    MuiAlert: {\n      closeText: 'Schließen',\n    },\n    MuiPagination: {\n      'aria-label': 'Navigation via Seitennummerierung',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n        }\n        if (type === 'first') {\n          return 'Zur ersten Seite';\n        }\n        if (type === 'last') {\n          return 'Zur letzten Seite';\n        }\n        if (type === 'next') {\n          return 'Zur nächsten Seite';\n        }\n        // if (type === 'previous') {\n        return 'Zur vorherigen Seite';\n      },\n    },\n  },\n};\n\n// default\nexport const enUS: Localization = {\n  /*\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Show path',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    },\n    MuiAlert: {\n      closeText: 'Close',\n    },\n    MuiPagination: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    },\n  },\n*/\n};\n\nexport const esES: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar ruta',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Ir a la primera página';\n        }\n        if (type === 'last') {\n          return 'Ir a la última página';\n        }\n        if (type === 'next') {\n          return 'Ir a la página siguiente';\n        }\n        // if (type === 'previous') {\n        return 'Ir a la página anterior';\n      },\n      labelRowsPerPage: 'Filas por página:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Estrella${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vacío',\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpiar',\n      closeText: 'Cerrar',\n      loadingText: 'Cargando…',\n      noOptionsText: 'Sin opciones',\n      openText: 'Abierto',\n    },\n    MuiAlert: {\n      closeText: 'Cerrar',\n    },\n    MuiPagination: {\n      'aria-label': 'Paginador',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir a la '}página ${page}`;\n        }\n        if (type === 'first') {\n          return 'Ir a la primera página';\n        }\n        if (type === 'last') {\n          return 'Ir a la última página';\n        }\n        if (type === 'next') {\n          return 'Ir a la página siguiente';\n        }\n        // if (type === 'previous') {\n        return 'Ir a la página anterior';\n      },\n    },\n  },\n};\n\nexport const etEE: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Näita teed',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Vali esimene lehekülg';\n        }\n        if (type === 'last') {\n          return 'Vali viimane lehekülg';\n        }\n        if (type === 'next') {\n          return 'Vali järgmine lehekülg';\n        }\n        // if (type === 'previous') {\n        return 'Vali eelmine lehekülg';\n      },\n      labelRowsPerPage: 'Ridu leheküljel:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n      emptyLabelText: 'Tühi',\n    },\n    MuiAutocomplete: {\n      clearText: 'Tühjenda',\n      closeText: 'Sulge',\n      loadingText: 'Laen…',\n      noOptionsText: 'Valikuid ei ole',\n      openText: 'Ava',\n    },\n    MuiAlert: {\n      closeText: 'Sulge',\n    },\n    MuiPagination: {\n      'aria-label': 'Lehekülgede valik',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n        }\n        if (type === 'first') {\n          return 'Vali esimene lehekülg';\n        }\n        if (type === 'last') {\n          return 'Vali viimane lehekülg';\n        }\n        if (type === 'next') {\n          return 'Vali järgmine lehekülg';\n        }\n        // if (type === 'previous') {\n        return 'Vali eelmine lehekülg';\n      },\n    },\n  },\n};\n\nexport const faIR: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiBreadcrumbs: {\n      expandText: 'نمایش مسیر',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'رفتن به اولین صفحه';\n        }\n        if (type === 'last') {\n          return 'رفتن به آخرین صفحه';\n        }\n        if (type === 'next') {\n          return 'رفتن به صفحه‌ی بعدی';\n        }\n        // if (type === 'previous') {\n        return 'رفتن به صفحه‌ی قبلی';\n      },\n      labelRowsPerPage: 'تعداد سطرهای هر صفحه:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} از ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ستاره`,\n      emptyLabelText: 'خالی',\n    },\n    MuiAutocomplete: {\n      clearText: 'پاک‌کردن',\n      closeText: 'بستن',\n      loadingText: 'در حال بارگذاری…',\n      noOptionsText: 'بی‌نتیجه',\n      openText: 'بازکردن',\n    },\n    MuiAlert: {\n      closeText: 'بستن',\n    },\n    MuiPagination: {\n      'aria-label': 'ناوبری صفحه',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n        }\n        if (type === 'first') {\n          return 'رفتن به اولین صفحه';\n        }\n        if (type === 'last') {\n          return 'رفتن به آخرین صفحه';\n        }\n        if (type === 'next') {\n          return 'رفتن به صفحه‌ی بعدی';\n        }\n        // if (type === 'previous') {\n        return 'رفتن به صفحه‌ی قبلی';\n      },\n    },\n  },\n};\n\nexport const fiFI: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Näytä reitti',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Mene ensimmäiselle sivulle';\n        }\n        if (type === 'last') {\n          return 'Mene viimeiselle sivulle';\n        }\n        if (type === 'next') {\n          return 'Mene seuraavalle sivulle';\n        }\n        // if (type === 'previous') {\n        return 'Mene edelliselle sivulle';\n      },\n      labelRowsPerPage: 'Rivejä per sivu:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n      emptyLabelText: 'Tyhjä',\n    },\n    MuiAutocomplete: {\n      clearText: 'Tyhjennä',\n      closeText: 'Sulje',\n      loadingText: 'Ladataan…',\n      noOptionsText: 'Ei valintoja',\n      openText: 'Avaa',\n    },\n    MuiAlert: {\n      closeText: 'Sulje',\n    },\n    MuiPagination: {\n      'aria-label': 'Sivutus navigaatio',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n        }\n        if (type === 'first') {\n          return 'Mene ensimmäiselle sivulle';\n        }\n        if (type === 'last') {\n          return 'Mene viimeiselle sivulle';\n        }\n        if (type === 'next') {\n          return 'Mene seuraavalle sivulle';\n        }\n        // if (type === 'previous') {\n        return 'Mene edelliselle sivulle';\n      },\n    },\n  },\n};\n\nexport const frFR: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Montrer le chemin',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Aller à la première page';\n        }\n        if (type === 'last') {\n          return 'Aller à la dernière page';\n        }\n        if (type === 'next') {\n          return 'Aller à la page suivante';\n        }\n        // if (type === 'previous') {\n        return 'Aller à la page précédente';\n      },\n      labelRowsPerPage: 'Lignes par page :',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} sur ${count !== -1 ? count : `plus que ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Etoile${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vide',\n    },\n    MuiAutocomplete: {\n      clearText: 'Vider',\n      closeText: 'Fermer',\n      loadingText: 'Chargement…',\n      noOptionsText: 'Pas de résultats',\n      openText: 'Ouvrir',\n    },\n    MuiAlert: {\n      closeText: 'Fermer',\n    },\n    MuiPagination: {\n      'aria-label': 'navigation de pagination',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Aller à la '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Aller à la première page';\n        }\n        if (type === 'last') {\n          return 'Aller à la dernière page';\n        }\n        if (type === 'next') {\n          return 'Aller à la page suivante';\n        }\n        // if (type === 'previous') {\n        return 'Aller à la page précédente';\n      },\n    },\n  },\n};\n\nexport const heIL: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'שורות בעמוד:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} מתוך ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n      emptyLabelText: 'ריק',\n    },\n    MuiAutocomplete: {\n      clearText: 'נקה',\n      closeText: 'סגור',\n      loadingText: 'טוען…',\n      noOptionsText: 'אין אופציות',\n      openText: 'פתח',\n    },\n    MuiAlert: {\n      closeText: 'סגור',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const hiIN: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'रास्ता दिखायें',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'पहले पृष्ठ पर जाएँ';\n        }\n        if (type === 'last') {\n          return 'अंतिम पृष्ठ पर जाएँ';\n        }\n        if (type === 'next') {\n          return 'अगले पृष्ठ पर जाएँ';\n        }\n        // if (type === 'previous') {\n        return 'पिछले पृष्ठ पर जाएँ';\n      },\n      labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to === -1 ? count : to} कुल ${count} में`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n      emptyLabelText: 'रिक्त',\n    },\n    MuiAutocomplete: {\n      clearText: 'हटायें',\n      closeText: 'बंद करें',\n      loadingText: 'लोड हो रहा है…',\n      noOptionsText: 'कोई विकल्प नहीं',\n      openText: 'खोलें',\n    },\n    MuiAlert: {\n      closeText: 'बंद करें',\n    },\n    MuiPagination: {\n      'aria-label': 'पृस्ठानुसार संचालन',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n        }\n        if (type === 'first') {\n          return 'पहले पृष्ठ पर जाएँ';\n        }\n        if (type === 'last') {\n          return 'अंतिम पृष्ठ पर जाएँ';\n        }\n        if (type === 'next') {\n          return 'अगले पृष्ठ पर जाएँ';\n        }\n        // if (type === 'previous') {\n        return 'पिछले पृष्ठ पर जाएँ';\n      },\n    },\n  },\n};\n\nexport const huHU: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Útvonal',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Első oldalra';\n        }\n        if (type === 'last') {\n          return 'Utolsó oldalra';\n        }\n        if (type === 'next') {\n          return 'Következő oldalra';\n        }\n        // if (type === 'previous') {\n        return 'Előző oldalra';\n      },\n      labelRowsPerPage: 'Sorok száma:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Csillag`,\n      emptyLabelText: 'Üres',\n    },\n    MuiAutocomplete: {\n      clearText: 'Törlés',\n      closeText: 'Bezárás',\n      loadingText: 'Töltés…',\n      noOptionsText: 'Nincs találat',\n      openText: 'Megnyitás',\n    },\n    MuiAlert: {\n      closeText: 'Bezárás',\n    },\n    MuiPagination: {\n      'aria-label': 'Lapozás',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page}. oldal${selected ? '' : 'ra'}`;\n        }\n        if (type === 'first') {\n          return 'Első oldalra';\n        }\n        if (type === 'last') {\n          return 'Utolsó oldalra';\n        }\n        if (type === 'next') {\n          return 'Következő oldalra';\n        }\n        // if (type === 'previous') {\n        return 'Előző oldalra';\n      },\n    },\n  },\n};\n\nexport const hyAM: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Տողեր մեկ էջում`',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Աստղ`,\n      emptyLabelText: 'Դատարկ',\n    },\n    MuiAutocomplete: {\n      clearText: 'Մաքրել',\n      closeText: 'Փակել',\n      loadingText: 'Բեռնում…',\n      noOptionsText: 'Տարբերակներ չկան',\n      openText: 'Բացել',\n    },\n    MuiAlert: {\n      closeText: 'Փակել',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const idID: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Baris per halaman:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Bintang`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Hapus',\n      closeText: 'Tutup',\n      loadingText: 'Memuat…',\n      noOptionsText: 'Tidak ada opsi',\n      openText: 'Buka',\n    },\n    MuiAlert: {\n      closeText: 'Tutup',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const isIS: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Raðir á síðu:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} af ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n      emptyLabelText: 'Tómt',\n    },\n    MuiAutocomplete: {\n      clearText: 'Hreinsa',\n      closeText: 'Loka',\n      loadingText: 'Hlaða…',\n      noOptionsText: 'Engar niðurstöður',\n      openText: 'Opna',\n    },\n    MuiAlert: {\n      closeText: 'Loka',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const itIT: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Visualizza percorso',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Vai alla prima pagina';\n        }\n        if (type === 'last') {\n          return \"Vai all'ultima pagina\";\n        }\n        if (type === 'next') {\n          return 'Vai alla pagina successiva';\n        }\n        // if (type === 'previous') {\n        return 'Vai alla pagina precedente';\n      },\n      labelRowsPerPage: 'Righe per pagina:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} di ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n      emptyLabelText: 'Vuoto',\n    },\n    MuiAutocomplete: {\n      clearText: 'Svuota',\n      closeText: 'Chiudi',\n      loadingText: 'Caricamento in corso…',\n      noOptionsText: 'Nessuna opzione',\n      openText: 'Apri',\n    },\n    MuiAlert: {\n      closeText: 'Chiudi',\n    },\n    MuiPagination: {\n      'aria-label': 'Navigazione impaginata',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n        }\n        if (type === 'first') {\n          return 'Vai alla prima pagina';\n        }\n        if (type === 'last') {\n          return \"Vai all'ultima pagina\";\n        }\n        if (type === 'next') {\n          return 'Vai alla pagina successiva';\n        }\n        // if (type === 'previous') {\n        return 'Vai alla pagina precedente';\n      },\n    },\n  },\n};\n\nexport const jaJP: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'ページごとの行:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ${value !== 1 ? '出演者' : '星'}`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'クリア',\n      closeText: '閉じる',\n      loadingText: '積み込み…',\n      noOptionsText: '結果がありません',\n      openText: '開いた',\n    },\n    MuiAlert: {\n      closeText: '閉じる',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const koKR: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: '페이지 당 행:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} / ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} 점`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: '지우기',\n      closeText: '닫기',\n      loadingText: '불러오는 중…',\n      noOptionsText: '옵션 없음',\n      openText: '열기',\n    },\n    // MuiAlert: {\n    //   closeText: 'Close',\n    // },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const nlNL: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Regels per pagina :',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} van ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Wissen',\n      closeText: 'Sluiten',\n      loadingText: 'Laden…',\n      noOptionsText: 'Geen opties',\n      openText: 'Openen',\n    },\n    MuiAlert: {\n      closeText: 'Sluiten',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const plPL: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Pokaż ścieżkę',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Przejdź do pierwszej strony';\n        }\n        if (type === 'last') {\n          return 'Przejdź do ostatniej strony';\n        }\n        if (type === 'next') {\n          return 'Przejdź do następnej strony';\n        }\n        // if (type === 'previous') {\n        return 'Przejdź do poprzedniej strony';\n      },\n      labelRowsPerPage: 'Wierszy na stronę:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        let pluralForm = 'gwiazdek';\n        const lastDigit = value % 10;\n\n        if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'gwiazdki';\n        } else if (value === 1) {\n          pluralForm = 'gwiazdka';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Brak gwiazdek',\n    },\n    MuiAutocomplete: {\n      clearText: 'Wyczyść',\n      closeText: 'Zamknij',\n      loadingText: 'Ładowanie…',\n      noOptionsText: 'Brak opcji',\n      openText: 'Otwórz',\n    },\n    MuiAlert: {\n      closeText: 'Zamknij',\n    },\n    MuiPagination: {\n      'aria-label': 'Nawigacja podziału na strony',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n        }\n        if (type === 'first') {\n          return 'Przejdź do pierwszej strony';\n        }\n        if (type === 'last') {\n          return 'Przejdź do ostatniej strony';\n        }\n        if (type === 'next') {\n          return 'Przejdź do następnej strony';\n        }\n        // if (type === 'previous') {\n        return 'Przejdź do poprzedniej strony';\n      },\n    },\n  },\n};\n\nexport const ptBR: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar caminho',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Ir para a primeira página';\n        }\n        if (type === 'last') {\n          return 'Ir para a última página';\n        }\n        if (type === 'next') {\n          return 'Ir para a próxima página';\n        }\n        // if (type === 'previous') {\n        return 'Ir para a página anterior';\n      },\n      labelRowsPerPage: 'Linhas por página:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Estrela${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vazio',\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpar',\n      closeText: 'Fechar',\n      loadingText: 'Carregando…',\n      noOptionsText: 'Sem opções',\n      openText: 'Abrir',\n    },\n    MuiAlert: {\n      closeText: 'Fechar',\n    },\n    MuiPagination: {\n      'aria-label': 'Navegar pela paginação',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir para a '}página ${page}`;\n        }\n        if (type === 'first') {\n          return 'Ir para a primeira página';\n        }\n        if (type === 'last') {\n          return 'Ir para a última página';\n        }\n        if (type === 'next') {\n          return 'Ir para a próxima página';\n        }\n        // if (type === 'previous') {\n        return 'Ir para a página anterior';\n      },\n    },\n  },\n};\n\nexport const ptPT: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Mostrar caminho',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Primeira página';\n        }\n        if (type === 'last') {\n          return 'Última página';\n        }\n        if (type === 'next') {\n          return 'Próxima página';\n        }\n        // if (type === 'previous') {\n        return 'Página anterior';\n      },\n      labelRowsPerPage: 'Linhas por página:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} de ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Estrela${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Vazio',\n    },\n    MuiAutocomplete: {\n      clearText: 'Limpar',\n      closeText: 'Fechar',\n      loadingText: 'A carregar…',\n      noOptionsText: 'Sem opções',\n      openText: 'Abrir',\n    },\n    MuiAlert: {\n      closeText: 'Fechar',\n    },\n    MuiPagination: {\n      'aria-label': 'Navegar por páginas',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Ir para a '}página ${page}`;\n        }\n        if (type === 'first') {\n          return 'Primeira página';\n        }\n        if (type === 'last') {\n          return 'Última página';\n        }\n        if (type === 'next') {\n          return 'Próxima página';\n        }\n        // if (type === 'previous') {\n        return 'Página anterior';\n      },\n    },\n  },\n};\n\nexport const roRO: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Arată calea',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Mergi la prima pagină';\n        }\n        if (type === 'last') {\n          return 'Mergi la ultima pagină';\n        }\n        if (type === 'next') {\n          return 'Mergi la pagina următoare';\n        }\n        // if (type === 'previous') {\n        return 'Mergi la pagina precedentă';\n      },\n      labelRowsPerPage: 'Rânduri pe pagină:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} din ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n      emptyLabelText: 'Gol',\n    },\n    MuiAutocomplete: {\n      clearText: 'Șterge',\n      closeText: 'Închide',\n      loadingText: 'Se încarcă…',\n      noOptionsText: 'Nicio opțiune',\n      openText: 'Deschide',\n    },\n    MuiAlert: {\n      closeText: 'Închide',\n    },\n    MuiPagination: {\n      'aria-label': 'Navigare prin paginare',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n        }\n        if (type === 'first') {\n          return 'Mergi la prima pagină';\n        }\n        if (type === 'last') {\n          return 'Mergi la ultima pagină';\n        }\n        if (type === 'next') {\n          return 'Mergi la pagina următoare';\n        }\n        // if (type === 'previous') {\n        return 'Mergi la pagina precedentă';\n      },\n    },\n  },\n};\n\nexport const ruRU: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показать полный путь',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Перейти на первую страницу';\n        }\n        if (type === 'last') {\n          return 'Перейти на последнюю страницу';\n        }\n        if (type === 'next') {\n          return 'Перейти на следующую страницу';\n        }\n        // if (type === 'previous') {\n        return 'Перейти на предыдущую страницу';\n      },\n      labelRowsPerPage: 'Строк на странице:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} из ${count !== -1 ? count : `более чем ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        let pluralForm = 'Звёзд';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Звезды';\n        } else if (lastDigit === 1) {\n          pluralForm = 'Звезда';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Рейтинг отсутствует',\n    },\n    MuiAutocomplete: {\n      clearText: 'Очистить',\n      closeText: 'Закрыть',\n      loadingText: 'Загрузка…',\n      noOptionsText: 'Нет доступных вариантов',\n      openText: 'Открыть',\n    },\n    MuiAlert: {\n      closeText: 'Закрыть',\n    },\n    MuiPagination: {\n      'aria-label': 'Навигация по страницам',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          if (selected) return `${page} страница`;\n          return `Перейти на ${page} страницу`;\n        }\n        if (type === 'first') {\n          return 'Перейти на первую страницу';\n        }\n        if (type === 'last') {\n          return 'Перейти на последнюю страницу';\n        }\n        if (type === 'next') {\n          return 'Перейти на следующую страницу';\n        }\n        // if (type === 'previous') {\n        return 'Перейти на предыдущую страницу';\n      },\n    },\n  },\n};\n\nexport const skSK: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Riadkov na stránke:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} z ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        if (value === 1) {\n          return `${value} hviezdička`;\n        }\n        if (value >= 2 && value <= 4) {\n          return `${value} hviezdičky`;\n        }\n        return `${value} hviezdičiek`;\n      },\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Vymazať',\n      closeText: 'Zavrieť',\n      loadingText: 'Načítanie…',\n      noOptionsText: 'Žiadne možnosti',\n      openText: 'Otvoriť',\n    },\n    MuiAlert: {\n      closeText: 'Zavrieť',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const svSE: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Rader per sida:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} av ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: 'Rensa',\n      closeText: 'Stäng',\n      loadingText: 'Laddar…',\n      noOptionsText: 'Inga alternativ',\n      openText: 'Öppen',\n    },\n    MuiAlert: {\n      closeText: 'Stäng',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const trTR: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Yolu göster',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'İlk sayfaya git';\n        }\n        if (type === 'last') {\n          return 'Son sayfaya git';\n        }\n        if (type === 'next') {\n          return 'Sonraki sayfaya git';\n        }\n        // if (type === 'previous') {\n        return 'Önceki sayfaya git';\n      },\n      labelRowsPerPage: 'Sayfa başına satır:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} Yıldız`,\n      emptyLabelText: 'Boş',\n    },\n    MuiAutocomplete: {\n      clearText: 'Temizle',\n      closeText: 'Kapat',\n      loadingText: 'Yükleniyor…',\n      noOptionsText: 'Seçenek yok',\n      openText: 'Aç',\n    },\n    MuiAlert: {\n      closeText: 'Kapat',\n    },\n    MuiPagination: {\n      'aria-label': 'Sayfa navigasyonu',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n        }\n        if (type === 'first') {\n          return 'İlk sayfaya git';\n        }\n        if (type === 'last') {\n          return 'Son sayfaya git';\n        }\n        if (type === 'next') {\n          return 'Sonraki sayfaya git';\n        }\n        // if (type === 'previous') {\n        return 'Önceki sayfaya git';\n      },\n    },\n  },\n};\n\nexport const ukUA: Localization = {\n  props: {\n    MuiBreadcrumbs: {\n      expandText: 'Показати шлях сторінок',\n    },\n    MuiTablePagination: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Перейти на першу сторінку';\n        }\n        if (type === 'last') {\n          return 'Перейти на останню сторінку';\n        }\n        if (type === 'next') {\n          return 'Перейти на наступну сторінку';\n        }\n        // if (type === 'previous') {\n        return 'Перейти на попередню сторінку';\n      },\n      labelRowsPerPage: 'Рядків на сторінці:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} з ${count !== -1 ? count : `понад ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => {\n        let pluralForm = 'Зірок';\n        const lastDigit = value % 10;\n\n        if (lastDigit > 1 && lastDigit < 5) {\n          pluralForm = 'Зірки';\n        } else if (lastDigit === 1) {\n          pluralForm = 'Зірка';\n        }\n\n        return `${value} ${pluralForm}`;\n      },\n      emptyLabelText: 'Рейтинг відсутній',\n    },\n    MuiAutocomplete: {\n      clearText: 'Очистити',\n      closeText: 'Згорнути',\n      loadingText: 'Завантаження…',\n      noOptionsText: 'Немає варіантів',\n      openText: 'Розгорнути',\n    },\n    MuiAlert: {\n      closeText: 'Згорнути',\n    },\n    MuiPagination: {\n      'aria-label': 'Навігація сторінками',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n        }\n        if (type === 'first') {\n          return 'Перейти на першу сторінку';\n        }\n        if (type === 'last') {\n          return 'Перейти на останню сторінку';\n        }\n        if (type === 'next') {\n          return 'Перейти на наступну сторінку';\n        }\n        // if (type === 'previous') {\n        return 'Перейти на попередню сторінку';\n      },\n    },\n  },\n};\n\nexport const viVN: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: 'Số hàng mỗi trang:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} sao`,\n      emptyLabelText: 'Trống',\n    },\n    MuiAutocomplete: {\n      clearText: 'Xóa',\n      closeText: 'Đóng',\n      loadingText: 'Đang tải…',\n      noOptionsText: 'Không có lựa chọn',\n      openText: 'Mở',\n    },\n    MuiAlert: {\n      closeText: 'Đóng',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n\nexport const zhCN: Localization = {\n  props: {\n    // MuiBreadcrumbs: {\n    //   expandText: 'Show path',\n    // },\n    MuiTablePagination: {\n      // getItemAriaLabel: (type) => {\n      //   if (type === 'first') {\n      //     return 'Go to first page';\n      //   }\n      //   if (type === 'last') {\n      //     return 'Go to last page';\n      //   }\n      //   if (type === 'next') {\n      //     return 'Go to next page';\n      //   }\n      //   // if (type === 'previous') {\n      //   return 'Go to previous page';\n      // },\n      labelRowsPerPage: '每页行数:',\n      labelDisplayedRows: ({ from, to, count }) =>\n        `${from}-${to} 的 ${count !== -1 ? count : `超过 ${to}`}`,\n    },\n    MuiRating: {\n      getLabelText: (value) => `${value} 星${value !== 1 ? '星' : ''}`,\n      // emptyLabelText: 'Empty',\n    },\n    MuiAutocomplete: {\n      clearText: '明确',\n      closeText: '关',\n      loadingText: '载入中…',\n      noOptionsText: '没有选择',\n      openText: '打开',\n    },\n    MuiAlert: {\n      closeText: '关',\n    },\n    // MuiPagination: {\n    //   'aria-label': 'Pagination navigation',\n    //   getItemAriaLabel: (type, page, selected) => {\n    //     if (type === 'page') {\n    //       return `${selected ? '' : 'Go to '}page ${page}`;\n    //     }\n    //     if (type === 'first') {\n    //       return 'Go to first page';\n    //     }\n    //     if (type === 'last') {\n    //       return 'Go to last page';\n    //     }\n    //     if (type === 'next') {\n    //       return 'Go to next page';\n    //     }\n    //     // if (type === 'previous') {\n    //     return 'Go to previous page';\n    //   },\n    // },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}