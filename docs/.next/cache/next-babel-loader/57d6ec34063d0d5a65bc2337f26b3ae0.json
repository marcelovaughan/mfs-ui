{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport List from \"../../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../../packages/material-ui/src/ListItem\";\nimport ListItemIcon from \"../../../../../packages/material-ui/src/ListItemIcon\";\nimport ListItemSecondaryAction from \"../../../../../packages/material-ui/src/ListItemSecondaryAction\";\nimport ListItemText from \"../../../../../packages/material-ui/src/ListItemText\";\nimport Checkbox from \"../../../../../packages/material-ui/src/Checkbox\";\nimport IconButton from \"../../../../../packages/material-ui/src/IconButton\";\nimport CommentIcon from \"../../../../../packages/material-ui-icons/src/Comment\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  });\n});\n\nvar _ref = __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n  edge: \"end\",\n  \"aria-label\": \"comments\"\n}, __jsx(CommentIcon, null)));\n\nexport default function CheckboxList() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState([0]),\n      checked = _React$useState[0],\n      setChecked = _React$useState[1];\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  return __jsx(List, {\n    className: classes.root\n  }, [0, 1, 2, 3].map(function (value) {\n    var labelId = \"checkbox-list-label-\".concat(value);\n    return __jsx(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value)\n    }, __jsx(ListItemIcon, null, __jsx(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      }\n    })), __jsx(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(value + 1)\n    }), _ref);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}