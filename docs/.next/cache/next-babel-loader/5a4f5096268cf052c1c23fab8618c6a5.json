{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport loadScript from \"../utils/loadScript\";\nimport adStyles from \"./ad.styles\";\nconst useStyles = makeStyles(theme => {\n  const styles = adStyles(theme);\n  return {\n    '@global': {\n      '#carbonads': _objectSpread(_objectSpread({}, styles.root), {}, {\n        '& .carbon-img': styles.imgWrapper,\n        '& img': styles.img,\n        '& a, & a:hover': styles.a,\n        '& .carbon-text': styles.description,\n        '& .carbon-poweredby': styles.poweredby\n      })\n    }\n  };\n});\nexport default function AdCarbon() {\n  useStyles();\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    const script = loadScript('https://cdn.carbonads.com/carbon.js?serve=CKYIL27L&placement=material-uicom', ref.current);\n    script.id = '_carbonads_js';\n  }, []);\n  return __jsx(\"span\", {\n    ref: ref\n  });\n}","map":null,"metadata":{},"sourceType":"module"}