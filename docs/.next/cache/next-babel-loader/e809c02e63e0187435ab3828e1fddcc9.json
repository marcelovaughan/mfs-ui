{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport marked from 'marked/lib/marked';\nimport { LANGUAGES_IN_PROGRESS } from \"../constants\";\nimport kebabCase from 'lodash/kebabCase';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport textToHash from \"./textToHash\";\nimport prism from \"./prism\";\nconst headerRegExp = /---[\\r\\n]([\\s\\S]*)[\\r\\n]---/;\nconst titleRegExp = /# (.*)[\\r\\n]/;\nconst descriptionRegExp = /<p class=\"description\">(.*)<\\/p>[\\r\\n]/;\nconst headerKeyValueRegExp = /(.*): (.*)/g;\nconst emptyRegExp = /^\\s*$/;\nconst notEnglishMarkdownRegExp = /-([a-z]{2})\\.md$/;\n/**\n * Extract information from the top of the markdown.\n * For instance, the following input:\n *\n * ---\n * title: Backdrop React Component\n * components: Backdrop\n * ---\n *\n * # Backdrop\n *\n * should output:\n * { title: 'Backdrop React Component', components: ['Backdrop'] }\n */\n\nexport function getHeaders(markdown) {\n  let header = markdown.match(headerRegExp);\n\n  if (!header) {\n    return {\n      components: []\n    };\n  }\n\n  header = header[1];\n  let regexMatches;\n  const headers = {}; // eslint-disable-next-line no-cond-assign\n\n  while ((regexMatches = headerKeyValueRegExp.exec(header)) !== null) {\n    headers[regexMatches[1]] = regexMatches[2];\n  }\n\n  if (headers.components) {\n    headers.components = headers.components.split(',').map(x => x.trim()).sort();\n  } else {\n    headers.components = [];\n  }\n\n  return headers;\n}\nexport const demoRegexp = /^\"demo\": \"(.*)\"/;\nexport function getContents(markdown) {\n  return markdown.replace(headerRegExp, '') // Remove header information\n  .split(/^{{(\"demo\":[^}]*)}}$/gm) // Split markdown into an array, separating demos\n  .filter(content => !emptyRegExp.test(content)); // Remove empty lines\n}\nexport function getTitle(markdown) {\n  const matches = markdown.match(titleRegExp);\n\n  if (!matches || !matches[1]) {\n    throw new Error('Missing title in the page');\n  }\n\n  return matches[1];\n}\nexport function getDescription(markdown) {\n  const matches = markdown.match(descriptionRegExp);\n  return matches === null || matches === void 0 ? void 0 : matches[1];\n}\n/**\n * Render markdown used in the Material-UI docs\n *\n * @param {string} markdown\n * @param {object} [options]\n * @param {function} [options.highlight] - https://marked.js.org/#/USING_ADVANCED.md#highlight\n * @param {object} [options.rest] - properties from https://marked.js.org/#/USING_PRO.md#renderer\n */\n\nexport function render(markdown, options = {}) {\n  const {\n    highlight\n  } = options,\n        rendererOptions = _objectWithoutProperties(options, [\"highlight\"]);\n\n  const renderer = _extends(new marked.Renderer(), rendererOptions);\n\n  const markedOptions = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    highlight,\n    renderer\n  };\n  return marked(markdown, markedOptions);\n}\nconst externs = ['https://material.io/', 'https://getbootstrap.com/', 'https://www.amazon.com/', 'https://materialdesignicons.com/', 'https://www.w3.org/', 'https://devexpress.github.io/', 'https://ui-kit.co/'];\n/**\n *\n * @param {object} config\n * @param {() => string} config.requireRaw - returnvalue of require.context\n * @param {string} config.pageFilename - filename relative to nextjs pages directory\n */\n\nexport function prepareMarkdown(config) {\n  const {\n    pageFilename,\n    requireRaw\n  } = config;\n  const demos = {};\n  const docs = {};\n  const headingHashes = {}; // Process the English markdown before the other locales.\n\n  let filenames = [];\n  requireRaw.keys().forEach(filename => {\n    if (filename.match(notEnglishMarkdownRegExp)) {\n      filenames.push(filename);\n    } else {\n      filenames = [filename].concat(filenames);\n    }\n  });\n  filenames.forEach(filename => {\n    if (filename.indexOf('.md') !== -1) {\n      const matchNotEnglishMarkdown = filename.match(notEnglishMarkdownRegExp);\n      const userLanguage = matchNotEnglishMarkdown && LANGUAGES_IN_PROGRESS.indexOf(matchNotEnglishMarkdown[1]) !== -1 ? matchNotEnglishMarkdown[1] : 'en';\n      const markdown = requireRaw(filename);\n      const headers = getHeaders(markdown);\n      const title = headers.title || getTitle(markdown);\n      const description = headers.description || getDescription(markdown);\n      const contents = getContents(markdown);\n\n      if (headers.components.length > 0) {\n        contents.push(`\n## API\n\n${headers.components.map(component => `- [\\`<${component} />\\`](${rewriteUrlForNextExport(`/api/${kebabCase(component)}`)})`).join('\\n')}\n  `);\n      }\n\n      const toc = [];\n      const headingHashesFallbackTranslated = {};\n      let headingIndex = -1;\n      const rendered = contents.map(content => {\n        if (demos && demoRegexp.test(content)) {\n          try {\n            return JSON.parse(`{${content}}`);\n          } catch (err) {\n            console.error('JSON.parse fails with: ', `{${content}}`);\n            console.error(err);\n            return null;\n          }\n        }\n\n        return render(content, {\n          highlight: prism,\n          heading: (headingHtml, level) => {\n            // Small title. No need for an anchor.\n            // It's reducing the risk of duplicated id and it's fewer elements in the DOM.\n            if (level >= 4) {\n              return `<h${level}>${headingHtml}</h${level}>`;\n            }\n\n            const headingText = headingHtml.replace(/([\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])\\uFE0F?/g, '') // remove emojis\n            .replace(/<\\/?[^>]+(>|$)/g, '') // remove HTML\n            .trim(); // Standardizes the hash from the default location (en) to different locations\n            // Need english.md file parsed first\n\n            let hash;\n\n            if (userLanguage === 'en') {\n              hash = textToHash(headingText, headingHashes);\n            } else {\n              headingIndex += 1;\n              hash = Object.keys(headingHashes)[headingIndex];\n\n              if (!hash) {\n                hash = textToHash(headingText, headingHashesFallbackTranslated);\n              }\n            } // enable splitting of long words from function name + first arg name\n            // Closing parens are less interesting since this would only allow breaking one character earlier.\n            // Applying the same mechanism would also allow breaking of non-function signatures like \"Community help (free)\".\n            // To detect that we enabled breaking of open/closing parens we'd need a context-sensitive parser.\n\n\n            const displayText = headingText.replace(/([^\\s]\\()/g, '$1&#8203;'); // create a nested structure with 2 levels starting with level 2 e.g.\n            // [{...level2, children: [level3, level3, level3]}, level2]\n\n            if (level === 2) {\n              toc.push({\n                text: displayText,\n                level,\n                hash,\n                children: []\n              });\n            } else if (level === 3) {\n              if (!toc[toc.length - 1]) {\n                throw new Error(`Missing parent level for: ${headingText}`);\n              }\n\n              toc[toc.length - 1].children.push({\n                text: displayText,\n                level,\n                hash\n              });\n            }\n\n            return [`<h${level}>`, `<a class=\"anchor-link\" id=\"${hash}\"></a>`, headingHtml, `<a class=\"anchor-link-style\" aria-hidden=\"true\" aria-label=\"anchor\" href=\"#${hash}\">`, '<svg><use xlink:href=\"#anchor-link-icon\" /></svg>', '</a>', `</h${level}>`].join('');\n          },\n          link: (href, linkTitle, linkText) => {\n            let more = '';\n\n            if (externs.some(domain => href.indexOf(domain) !== -1)) {\n              more = ' target=\"_blank\" rel=\"noopener nofollow\"';\n            }\n\n            let finalHref = href;\n\n            if (userLanguage !== 'en' && finalHref.indexOf('/') === 0 && finalHref !== '/size-snapshot') {\n              finalHref = `/${userLanguage}${finalHref}`;\n            }\n\n            return `<a href=\"${finalHref}\"${more}>${linkText}</a>`;\n          }\n        });\n      }); // fragment link symbol\n\n      rendered.unshift(`<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n  <symbol id=\"anchor-link-icon\" viewBox=\"0 0 16 16\">\n    <path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" />\n  </symbol>\n</svg>`);\n      docs[userLanguage] = {\n        description,\n        location: headers.filename || `/docs/src/pages/${pageFilename}/${filename}`,\n        rendered,\n        toc,\n        title\n      };\n    } else if (filename.indexOf('.tsx') !== -1) {\n      const demoName = `pages/${pageFilename}/${filename.replace(/\\.\\//g, '').replace(/\\.tsx/g, '.js')}`;\n      demos[demoName] = _objectSpread(_objectSpread({}, demos[demoName]), {}, {\n        moduleTS: filename,\n        rawTS: requireRaw(filename)\n      });\n    } else {\n      const demoName = `pages/${pageFilename}/${filename.replace(/\\.\\//g, '')}`;\n      demos[demoName] = _objectSpread(_objectSpread({}, demos[demoName]), {}, {\n        module: filename,\n        raw: requireRaw(filename)\n      });\n    }\n  });\n  return {\n    demos,\n    docs\n  };\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/utils/parseMarkdown.js"],"names":["headerRegExp","titleRegExp","descriptionRegExp","headerKeyValueRegExp","emptyRegExp","notEnglishMarkdownRegExp","header","markdown","components","headers","regexMatches","x","demoRegexp","content","matches","options","highlight","rendererOptions","renderer","marked","markedOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","externs","requireRaw","demos","docs","headingHashes","filenames","filename","matchNotEnglishMarkdown","userLanguage","LANGUAGES_IN_PROGRESS","getHeaders","title","getTitle","description","getDescription","contents","getContents","component","rewriteUrlForNextExport","kebabCase","toc","headingHashesFallbackTranslated","headingIndex","rendered","JSON","console","render","heading","level","headingHtml","headingText","hash","textToHash","Object","displayText","text","children","link","more","domain","href","finalHref","linkText","location","pageFilename","demoName","moduleTS","rawTS","module","raw"],"mappings":"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","sourcesContent":["import marked from 'marked/lib/marked';\nimport { LANGUAGES_IN_PROGRESS } from 'docs/src/modules/constants';\nimport kebabCase from 'lodash/kebabCase';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport textToHash from 'docs/src/modules/utils/textToHash';\nimport prism from 'docs/src/modules/utils/prism';\n\nconst headerRegExp = /---[\\r\\n]([\\s\\S]*)[\\r\\n]---/;\nconst titleRegExp = /# (.*)[\\r\\n]/;\nconst descriptionRegExp = /<p class=\"description\">(.*)<\\/p>[\\r\\n]/;\nconst headerKeyValueRegExp = /(.*): (.*)/g;\nconst emptyRegExp = /^\\s*$/;\nconst notEnglishMarkdownRegExp = /-([a-z]{2})\\.md$/;\n\n/**\n * Extract information from the top of the markdown.\n * For instance, the following input:\n *\n * ---\n * title: Backdrop React Component\n * components: Backdrop\n * ---\n *\n * # Backdrop\n *\n * should output:\n * { title: 'Backdrop React Component', components: ['Backdrop'] }\n */\nexport function getHeaders(markdown) {\n  let header = markdown.match(headerRegExp);\n\n  if (!header) {\n    return {\n      components: [],\n    };\n  }\n\n  header = header[1];\n\n  let regexMatches;\n  const headers = {};\n\n  // eslint-disable-next-line no-cond-assign\n  while ((regexMatches = headerKeyValueRegExp.exec(header)) !== null) {\n    headers[regexMatches[1]] = regexMatches[2];\n  }\n\n  if (headers.components) {\n    headers.components = headers.components\n      .split(',')\n      .map((x) => x.trim())\n      .sort();\n  } else {\n    headers.components = [];\n  }\n\n  return headers;\n}\n\nexport const demoRegexp = /^\"demo\": \"(.*)\"/;\n\nexport function getContents(markdown) {\n  return markdown\n    .replace(headerRegExp, '') // Remove header information\n    .split(/^{{(\"demo\":[^}]*)}}$/gm) // Split markdown into an array, separating demos\n    .filter((content) => !emptyRegExp.test(content)); // Remove empty lines\n}\n\nexport function getTitle(markdown) {\n  const matches = markdown.match(titleRegExp);\n\n  if (!matches || !matches[1]) {\n    throw new Error('Missing title in the page');\n  }\n\n  return matches[1];\n}\n\nexport function getDescription(markdown) {\n  const matches = markdown.match(descriptionRegExp);\n\n  return matches?.[1];\n}\n\n/**\n * Render markdown used in the Material-UI docs\n *\n * @param {string} markdown\n * @param {object} [options]\n * @param {function} [options.highlight] - https://marked.js.org/#/USING_ADVANCED.md#highlight\n * @param {object} [options.rest] - properties from https://marked.js.org/#/USING_PRO.md#renderer\n */\nexport function render(markdown, options = {}) {\n  const { highlight, ...rendererOptions } = options;\n\n  const renderer = Object.assign(new marked.Renderer(), rendererOptions);\n\n  const markedOptions = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    highlight,\n    renderer,\n  };\n\n  return marked(markdown, markedOptions);\n}\n\nconst externs = [\n  'https://material.io/',\n  'https://getbootstrap.com/',\n  'https://www.amazon.com/',\n  'https://materialdesignicons.com/',\n  'https://www.w3.org/',\n  'https://devexpress.github.io/',\n  'https://ui-kit.co/',\n];\n\n/**\n *\n * @param {object} config\n * @param {() => string} config.requireRaw - returnvalue of require.context\n * @param {string} config.pageFilename - filename relative to nextjs pages directory\n */\nexport function prepareMarkdown(config) {\n  const { pageFilename, requireRaw } = config;\n\n  const demos = {};\n  const docs = {};\n  const headingHashes = {};\n\n  // Process the English markdown before the other locales.\n  let filenames = [];\n  requireRaw.keys().forEach((filename) => {\n    if (filename.match(notEnglishMarkdownRegExp)) {\n      filenames.push(filename);\n    } else {\n      filenames = [filename].concat(filenames);\n    }\n  });\n\n  filenames.forEach((filename) => {\n    if (filename.indexOf('.md') !== -1) {\n      const matchNotEnglishMarkdown = filename.match(notEnglishMarkdownRegExp);\n\n      const userLanguage =\n        matchNotEnglishMarkdown && LANGUAGES_IN_PROGRESS.indexOf(matchNotEnglishMarkdown[1]) !== -1\n          ? matchNotEnglishMarkdown[1]\n          : 'en';\n\n      const markdown = requireRaw(filename);\n      const headers = getHeaders(markdown);\n      const title = headers.title || getTitle(markdown);\n      const description = headers.description || getDescription(markdown);\n      const contents = getContents(markdown);\n\n      if (headers.components.length > 0) {\n        contents.push(`\n## API\n\n${headers.components\n  .map(\n    (component) =>\n      `- [\\`<${component} />\\`](${rewriteUrlForNextExport(`/api/${kebabCase(component)}`)})`,\n  )\n  .join('\\n')}\n  `);\n      }\n\n      const toc = [];\n      const headingHashesFallbackTranslated = {};\n      let headingIndex = -1;\n\n      const rendered = contents.map((content) => {\n        if (demos && demoRegexp.test(content)) {\n          try {\n            return JSON.parse(`{${content}}`);\n          } catch (err) {\n            console.error('JSON.parse fails with: ', `{${content}}`);\n            console.error(err);\n            return null;\n          }\n        }\n\n        return render(content, {\n          highlight: prism,\n          heading: (headingHtml, level) => {\n            // Small title. No need for an anchor.\n            // It's reducing the risk of duplicated id and it's fewer elements in the DOM.\n            if (level >= 4) {\n              return `<h${level}>${headingHtml}</h${level}>`;\n            }\n\n            const headingText = headingHtml\n              .replace(\n                /([\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])\\uFE0F?/g,\n                '',\n              ) // remove emojis\n              .replace(/<\\/?[^>]+(>|$)/g, '') // remove HTML\n              .trim();\n\n            // Standardizes the hash from the default location (en) to different locations\n            // Need english.md file parsed first\n            let hash;\n            if (userLanguage === 'en') {\n              hash = textToHash(headingText, headingHashes);\n            } else {\n              headingIndex += 1;\n              hash = Object.keys(headingHashes)[headingIndex];\n              if (!hash) {\n                hash = textToHash(headingText, headingHashesFallbackTranslated);\n              }\n            }\n\n            // enable splitting of long words from function name + first arg name\n            // Closing parens are less interesting since this would only allow breaking one character earlier.\n            // Applying the same mechanism would also allow breaking of non-function signatures like \"Community help (free)\".\n            // To detect that we enabled breaking of open/closing parens we'd need a context-sensitive parser.\n            const displayText = headingText.replace(/([^\\s]\\()/g, '$1&#8203;');\n\n            // create a nested structure with 2 levels starting with level 2 e.g.\n            // [{...level2, children: [level3, level3, level3]}, level2]\n            if (level === 2) {\n              toc.push({\n                text: displayText,\n                level,\n                hash,\n                children: [],\n              });\n            } else if (level === 3) {\n              if (!toc[toc.length - 1]) {\n                throw new Error(`Missing parent level for: ${headingText}`);\n              }\n\n              toc[toc.length - 1].children.push({\n                text: displayText,\n                level,\n                hash,\n              });\n            }\n\n            return [\n              `<h${level}>`,\n              `<a class=\"anchor-link\" id=\"${hash}\"></a>`,\n              headingHtml,\n              `<a class=\"anchor-link-style\" aria-hidden=\"true\" aria-label=\"anchor\" href=\"#${hash}\">`,\n              '<svg><use xlink:href=\"#anchor-link-icon\" /></svg>',\n              '</a>',\n              `</h${level}>`,\n            ].join('');\n          },\n          link: (href, linkTitle, linkText) => {\n            let more = '';\n\n            if (externs.some((domain) => href.indexOf(domain) !== -1)) {\n              more = ' target=\"_blank\" rel=\"noopener nofollow\"';\n            }\n\n            let finalHref = href;\n\n            if (\n              userLanguage !== 'en' &&\n              finalHref.indexOf('/') === 0 &&\n              finalHref !== '/size-snapshot'\n            ) {\n              finalHref = `/${userLanguage}${finalHref}`;\n            }\n\n            return `<a href=\"${finalHref}\"${more}>${linkText}</a>`;\n          },\n        });\n      });\n\n      // fragment link symbol\n      rendered.unshift(`<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n  <symbol id=\"anchor-link-icon\" viewBox=\"0 0 16 16\">\n    <path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" />\n  </symbol>\n</svg>`);\n\n      docs[userLanguage] = {\n        description,\n        location: headers.filename || `/docs/src/pages/${pageFilename}/${filename}`,\n        rendered,\n        toc,\n        title,\n      };\n    } else if (filename.indexOf('.tsx') !== -1) {\n      const demoName = `pages/${pageFilename}/${filename\n        .replace(/\\.\\//g, '')\n        .replace(/\\.tsx/g, '.js')}`;\n\n      demos[demoName] = {\n        ...demos[demoName],\n        moduleTS: filename,\n        rawTS: requireRaw(filename),\n      };\n    } else {\n      const demoName = `pages/${pageFilename}/${filename.replace(/\\.\\//g, '')}`;\n\n      demos[demoName] = {\n        ...demos[demoName],\n        module: filename,\n        raw: requireRaw(filename),\n      };\n    }\n  });\n\n  return { demos, docs };\n}\n"]},"metadata":{},"sourceType":"module"}