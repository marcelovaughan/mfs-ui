{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardActionArea/CardActionArea.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport ButtonBase from \"../ButtonBase\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    textAlign: 'inherit',\n    width: '100%',\n    '&:hover $focusHighlight': {\n      opacity: theme.palette.action.hoverOpacity\n    },\n    '&$focusVisible $focusHighlight': {\n      opacity: 0.12\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n  focusVisible: {},\n\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  focusHighlight: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit',\n    opacity: 0,\n    backgroundColor: 'currentcolor',\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.short\n    })\n  }\n});\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return __jsx(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), children, __jsx(\"span\", {\n    className: classes.focusHighlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n});\nCardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n};\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardActionArea/CardActionArea.js"],"names":["React","PropTypes","clsx","withStyles","ButtonBase","styles","theme","root","display","textAlign","width","opacity","palette","action","hoverOpacity","focusVisible","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardActionArea","forwardRef","props","ref","children","classes","className","focusVisibleClassName","other","propTypes","node","object","string","name"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,KAAY;AAChC;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,SAAS,EAAE,SAFP;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJ,+BAA2B;AACzBC,MAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC;AADL,KAJvB;AAOJ,sCAAkC;AAChCH,MAAAA,OAAO,EAAE;AADuB;AAP9B,GAF0B;;AAahC;AACAI,EAAAA,YAAY,EAAE,EAdkB;;AAehC;AACAC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,QADI;AAEdC,IAAAA,aAAa,EAAE,MAFD;AAGdC,IAAAA,QAAQ,EAAE,UAHI;AAIdC,IAAAA,GAAG,EAAE,CAJS;AAKdC,IAAAA,KAAK,EAAE,CALO;AAMdC,IAAAA,MAAM,EAAE,CANM;AAOdC,IAAAA,IAAI,EAAE,CAPQ;AAQdC,IAAAA,YAAY,EAAE,SARA;AASdb,IAAAA,OAAO,EAAE,CATK;AAUdc,IAAAA,eAAe,EAAE,cAVH;AAWdC,IAAAA,UAAU,EAAEpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB,EAAoC;AAC9CC,MAAAA,QAAQ,EAAEvB,KAAK,CAACqB,WAAN,CAAkBE,QAAlB,CAA2BC;AADS,KAApC;AAXE;AAhBgB,CAAZ,CAAf;AAiCP,MAAMC,cAAc,gBAAG/B,KAAK,CAACgC,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AAC1E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,MAAoEL,KAA1E;AAAA,QAAgEM,KAAhE,4BAA0EN,KAA1E;;AAEA,SACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAE/B,IAAI,CAACkC,OAAO,CAAC7B,IAAT,EAAe8B,SAAf,CADjB;AAEE,IAAA,qBAAqB,EAAEnC,IAAI,CAACoC,qBAAD,EAAwBF,OAAO,CAACrB,YAAhC,CAF7B;AAGE,IAAA,GAAG,EAAEmB;AAHP,KAIMK,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGJ,QANH,EAOE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACpB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAdsB,CAAvB;AAgBAe,cAAc,CAACS,SAAf,GAA2B;AACzB;AACA;AACA;AACA;;AACA;;;AAGAL,EAAAA,QAAQ,EAAElC,SAAS,CAACwC,IARK;;AASzB;;;;AAIAL,EAAAA,OAAO,EAAEnC,SAAS,CAACyC,MAbM;;AAczB;;;AAGAL,EAAAA,SAAS,EAAEpC,SAAS,CAAC0C,MAjBI;;AAkBzB;;;AAGAL,EAAAA,qBAAqB,EAAErC,SAAS,CAAC0C;AArBR,CAA3B;AAwBA,eAAexC,UAAU,CAACE,MAAD,EAAS;AAAEuC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAAkDb,cAAlD,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    textAlign: 'inherit',\n    width: '100%',\n    '&:hover $focusHighlight': {\n      opacity: theme.palette.action.hoverOpacity,\n    },\n    '&$focusVisible $focusHighlight': {\n      opacity: 0.12,\n    },\n  },\n  /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n  focusVisible: {},\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  focusHighlight: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit',\n    opacity: 0,\n    backgroundColor: 'currentcolor',\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.short,\n    }),\n  },\n});\n\nconst CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  const { children, classes, className, focusVisibleClassName, ...other } = props;\n\n  return (\n    <ButtonBase\n      className={clsx(classes.root, className)}\n      focusVisibleClassName={clsx(focusVisibleClassName, classes.focusVisible)}\n      ref={ref}\n      {...other}\n    >\n      {children}\n      <span className={classes.focusHighlight} />\n    </ButtonBase>\n  );\n});\n\nCardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n};\n\nexport default withStyles(styles, { name: 'MuiCardActionArea' })(CardActionArea);\n"]},"metadata":{},"sourceType":"module"}