{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport NotificationsIcon from \"../../../../packages/material-ui-icons/src/Notifications\";\nimport Tooltip from \"../../../../packages/material-ui/src/Tooltip\";\nimport CircularProgress from \"../../../../packages/material-ui/src/CircularProgress\";\nimport IconButton from \"../../../../packages/material-ui/src/IconButton\";\nimport Badge from \"../../../../packages/material-ui/src/Badge\";\nimport Typography from \"../../../../packages/material-ui/src/Typography\";\nimport Popper from \"../../../../packages/material-ui/src/Popper\";\nimport Grow from \"../../../../packages/material-ui/src/Grow\";\nimport Paper from \"../../../../packages/material-ui/src/Paper\";\nimport ClickAwayListener from \"../../../../packages/material-ui/src/ClickAwayListener\";\nimport List from \"../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../packages/material-ui/src/ListItem\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport sleep from \"../../../../modules/waterfall/sleep\";\nimport { getCookie } from \"../utils/helpers\";\nimport { ACTION_TYPES } from \"../constants\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      transformOrigin: 'top right'\n    },\n    list: {\n      width: theme.spacing(40),\n      maxHeight: theme.spacing(40),\n      overflow: 'auto'\n    },\n    listItem: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    loading: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(1, 0)\n    },\n    divider: {\n      margin: theme.spacing(1, 0)\n    }\n  };\n});\nexport default function Notifications() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var _React$useState2 = React.useState(false),\n      tooltipOpen = _React$useState2[0],\n      setTooltipOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var dispatch = useDispatch();\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n  var messages = useSelector(function (state) {\n    return state.notifications.messages;\n  });\n  var lastSeen = useSelector(function (state) {\n    return state.notifications.lastSeen;\n  });\n  var messageList = messages ? messages.filter(function (message) {\n    if (message.userLanguage && message.userLanguage !== userLanguage && message.userLanguage !== navigator.language.substring(0, 2)) {\n      return false;\n    }\n\n    return true;\n  }).reverse() : null;\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id\n        }\n      });\n      document.cookie = \"lastSeenNotification=\".concat(messageList[0].id, \";path=/;max-age=31536000\");\n    }\n  };\n\n  React.useEffect(function () {\n    var active = true; // Prevent search engines from indexing the notification.\n\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newMessages, result, seen, lastSeenNotification;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return sleep(1500);\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json');\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return result.json();\n\n            case 8:\n              newMessages = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 13:\n              if (active) {\n                seen = getCookie('lastSeenNotification');\n                lastSeenNotification = seen === '' ? 0 : _parseInt(seen, 10);\n                dispatch({\n                  type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n                  payload: {\n                    messages: newMessages || [],\n                    lastSeen: lastSeenNotification\n                  }\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, __jsx(Tooltip, {\n    open: tooltipOpen,\n    onOpen: function onOpen() {\n      setTooltipOpen(!open);\n    },\n    onClose: function onClose() {\n      setTooltipOpen(false);\n    },\n    title: t('toggleNotifications'),\n    enterDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    ref: anchorRef,\n    \"aria-controls\": open ? 'notifications-popup' : undefined,\n    \"aria-haspopup\": \"true\",\n    \"aria-label\": t('toggleNotifications'),\n    onClick: handleToggle,\n    \"data-ga-event-category\": \"AppBar\",\n    \"data-ga-event-action\": \"toggleNotifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Badge, {\n    color: \"secondary\",\n    badgeContent: messageList ? messageList.reduce(function (count, message) {\n      return message.id > lastSeen ? count + 1 : count;\n    }, 0) : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), __jsx(Popper, {\n    id: \"notifications-popup\",\n    anchorEl: anchorRef.current,\n    open: open,\n    placement: \"bottom-end\",\n    transition: true,\n    disablePortal: true,\n    role: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps;\n    return __jsx(ClickAwayListener, {\n      onClickAway: function onClickAway() {\n        setOpen(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, __jsx(Grow, _extends({\n      \"in\": open\n    }, TransitionProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), __jsx(Paper, {\n      className: classes.paper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, __jsx(List, {\n      className: classes.list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, messageList ? messageList.map(function (message, index) {\n      return __jsx(React.Fragment, {\n        key: message.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }\n      }, __jsx(ListItem, {\n        alignItems: \"flex-start\",\n        className: classes.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 27\n        }\n      }, message.title), __jsx(Typography, {\n        gutterBottom: true,\n        variant: \"body2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }\n      }, __jsx(\"span\", {\n        id: \"notification-message\",\n        dangerouslySetInnerHTML: {\n          __html: message.text\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      })), message.date && __jsx(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, new Date(message.date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }))), index < messageList.length - 1 ? __jsx(Divider, {\n        className: classes.divider,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }) : null);\n    }) : __jsx(\"div\", {\n      className: classes.loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, __jsx(CircularProgress, {\n      size: 32,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }))))));\n  }));\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js"],"names":["fetch","React","useSelector","useDispatch","makeStyles","NotificationsIcon","Tooltip","CircularProgress","IconButton","Badge","Typography","Popper","Grow","Paper","ClickAwayListener","List","ListItem","Divider","sleep","getCookie","ACTION_TYPES","useStyles","theme","paper","transformOrigin","list","width","spacing","maxHeight","overflow","listItem","display","flexDirection","loading","justifyContent","margin","divider","Notifications","classes","useState","open","setOpen","tooltipOpen","setTooltipOpen","anchorRef","useRef","t","state","options","dispatch","userLanguage","messages","notifications","lastSeen","messageList","filter","message","navigator","language","substring","reverse","handleToggle","prevOpen","length","type","NOTIFICATIONS_CHANGE","payload","id","document","cookie","useEffect","active","test","userAgent","undefined","result","json","newMessages","seen","lastSeenNotification","reduce","count","current","TransitionProps","map","index","title","__html","text","date","Date","toLocaleDateString","year","month","day"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Popper from '@material-ui/core/Popper';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport sleep from 'modules/waterfall/sleep';\nimport { getCookie } from 'docs/src/modules/utils/helpers';\nimport { ACTION_TYPES } from 'docs/src/modules/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    transformOrigin: 'top right',\n  },\n  list: {\n    width: theme.spacing(40),\n    maxHeight: theme.spacing(40),\n    overflow: 'auto',\n  },\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(1, 0),\n  },\n  divider: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nexport default function Notifications() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const t = useSelector((state) => state.options.t);\n  const dispatch = useDispatch();\n  const userLanguage = useSelector((state) => state.options.userLanguage);\n  const messages = useSelector((state) => state.notifications.messages);\n  const lastSeen = useSelector((state) => state.notifications.lastSeen);\n\n  const messageList = messages\n    ? messages\n        .filter((message) => {\n          if (\n            message.userLanguage &&\n            message.userLanguage !== userLanguage &&\n            message.userLanguage !== navigator.language.substring(0, 2)\n          ) {\n            return false;\n          }\n          return true;\n        })\n        .reverse()\n    : null;\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id,\n        },\n      });\n      document.cookie = `lastSeenNotification=${messageList[0].id};path=/;max-age=31536000`;\n    }\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    // Prevent search engines from indexing the notification.\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1500); // Soften the pressure on the main thread.\n      let newMessages;\n      try {\n        const result = await fetch(\n          'https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json',\n        );\n        newMessages = await result.json();\n      } catch (err) {\n        // Swallow the exceptions, e.g. rate limit\n      }\n\n      if (active) {\n        const seen = getCookie('lastSeenNotification');\n        const lastSeenNotification = seen === '' ? 0 : parseInt(seen, 10);\n\n        dispatch({\n          type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n          payload: {\n            messages: newMessages || [],\n            lastSeen: lastSeenNotification,\n          },\n        });\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        open={tooltipOpen}\n        onOpen={() => {\n          setTooltipOpen(!open);\n        }}\n        onClose={() => {\n          setTooltipOpen(false);\n        }}\n        title={t('toggleNotifications')}\n        enterDelay={300}\n      >\n        <IconButton\n          color=\"inherit\"\n          ref={anchorRef}\n          aria-controls={open ? 'notifications-popup' : undefined}\n          aria-haspopup=\"true\"\n          aria-label={t('toggleNotifications')}\n          onClick={handleToggle}\n          data-ga-event-category=\"AppBar\"\n          data-ga-event-action=\"toggleNotifications\"\n        >\n          <Badge\n            color=\"secondary\"\n            badgeContent={\n              messageList\n                ? messageList.reduce(\n                    (count, message) => (message.id > lastSeen ? count + 1 : count),\n                    0,\n                  )\n                : 0\n            }\n          >\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n      <Popper\n        id=\"notifications-popup\"\n        anchorEl={anchorRef.current}\n        open={open}\n        placement=\"bottom-end\"\n        transition\n        disablePortal\n        role={undefined}\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener\n            onClickAway={() => {\n              setOpen(false);\n            }}\n          >\n            <Grow in={open} {...TransitionProps}>\n              <Paper className={classes.paper}>\n                <List className={classes.list}>\n                  {messageList ? (\n                    messageList.map((message, index) => (\n                      <React.Fragment key={message.id}>\n                        <ListItem alignItems=\"flex-start\" className={classes.listItem}>\n                          <Typography gutterBottom>{message.title}</Typography>\n                          <Typography gutterBottom variant=\"body2\">\n                            <span\n                              id=\"notification-message\"\n                              dangerouslySetInnerHTML={{ __html: message.text }}\n                            />\n                          </Typography>\n                          {message.date && (\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                              {new Date(message.date).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </Typography>\n                          )}\n                        </ListItem>\n                        {index < messageList.length - 1 ? (\n                          <Divider className={classes.divider} />\n                        ) : null}\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <div className={classes.loading}>\n                      <CircularProgress size={32} />\n                    </div>\n                  )}\n                </List>\n              </Paper>\n            </Grow>\n          </ClickAwayListener>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}