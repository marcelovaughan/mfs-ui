{"ast":null,"code":"import getScrollbarSize from \"../utils/getScrollbarSize\";\nimport ownerDocument from \"../utils/ownerDocument\";\nimport ownerWindow from \"../utils/ownerWindow\"; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode, nodesToExclude = [], show) {\n  const blacklist = [mountNode, currentNode, ...nodesToExclude];\n  const blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, node => {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  let idx = -1;\n  containerInfo.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const restorePaddings = [];\n  const container = containerInfo.container;\n  let fixedNodes;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = `${getPaddingRight(container) + scrollbarSize}px`; // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, node => {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = `${getPaddingRight(node) + scrollbarSize}px`;\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    const parent = container.parentElement;\n    const scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  const restore = () => {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, (node, i) => {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(({\n      value,\n      el,\n      key\n    }) => {\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, node => {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nexport default class ModalManager {\n  constructor() {\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n\n    modalIndex = this.modals.length;\n    this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n\n    const hiddenSiblingNodes = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n    const containerIndex = findIndexOf(this.containers, item => item.container === container);\n\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblingNodes\n    });\n    return modalIndex;\n  }\n\n  mount(modal, props) {\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n\n  remove(modal) {\n    const modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n\n      if (modal.modalRef) {\n        // In case the modal wasn't in the DOM yet.\n        ariaHidden(modal.modalRef, true);\n      }\n\n      ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n      // aria-hidden because the dom element doesn't exist either\n      // when modal was unmounted before modalRef gets null\n\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n\n    return modalIndex;\n  }\n\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Modal/ModalManager.js"],"names":["getScrollbarSize","ownerDocument","ownerWindow","isOverflowing","container","doc","body","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","ariaHidden","node","show","setAttribute","removeAttribute","getPaddingRight","parseInt","window","getComputedStyle","ariaHiddenSiblings","mountNode","currentNode","nodesToExclude","blacklist","blacklistTagNames","forEach","call","children","nodeType","indexOf","tagName","findIndexOf","containerInfo","callback","idx","some","item","index","handleContainer","props","restoreStyle","restorePaddings","fixedNodes","disableScrollLock","scrollbarSize","push","value","style","paddingRight","key","el","querySelectorAll","parent","parentElement","scrollContainer","nodeName","overflow","restore","i","removeProperty","setProperty","getHiddenSiblings","hiddenSiblings","getAttribute","ModalManager","constructor","modals","containers","add","modal","modalIndex","length","modalRef","hiddenSiblingNodes","containerIndex","mount","remove","splice","nextTop","isTopModal"],"mappings":"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","sourcesContent":["import getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\n\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode, nodesToExclude = [], show) {\n  const blacklist = [mountNode, currentNode, ...nodesToExclude];\n  const blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n\n  [].forEach.call(container.children, (node) => {\n    if (\n      node.nodeType === 1 &&\n      blacklist.indexOf(node) === -1 &&\n      blacklistTagNames.indexOf(node.tagName) === -1\n    ) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  let idx = -1;\n  containerInfo.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const restorePaddings = [];\n  const container = containerInfo.container;\n  let fixedNodes;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize();\n\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container,\n      });\n      // Use computed style, here to get the real padding to add our scrollbar width.\n      container.style['padding-right'] = `${getPaddingRight(container) + scrollbarSize}px`;\n\n      // .mui-fixed is a global helper.\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, (node) => {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = `${getPaddingRight(node) + scrollbarSize}px`;\n      });\n    }\n\n    // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n    const parent = container.parentElement;\n    const scrollContainer =\n      parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll'\n        ? parent\n        : container;\n\n    // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer,\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  const restore = () => {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, (node, i) => {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(({ value, el, key }) => {\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, (node) => {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nexport default class ModalManager {\n  constructor() {\n    // this.modals[modalIndex] = modal\n    this.modals = [];\n    // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n    this.containers = [];\n  }\n\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n\n    modalIndex = this.modals.length;\n    this.modals.push(modal);\n\n    // If the modal we are adding is already in the DOM.\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n\n    const hiddenSiblingNodes = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n\n    const containerIndex = findIndexOf(this.containers, (item) => item.container === container);\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblingNodes,\n    });\n\n    return modalIndex;\n  }\n\n  mount(modal, props) {\n    const containerIndex = findIndexOf(\n      this.containers,\n      (item) => item.modals.indexOf(modal) !== -1,\n    );\n    const containerInfo = this.containers[containerIndex];\n\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n\n  remove(modal) {\n    const modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n\n    const containerIndex = findIndexOf(\n      this.containers,\n      (item) => item.modals.indexOf(modal) !== -1,\n    );\n    const containerInfo = this.containers[containerIndex];\n\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1);\n\n    // If that was the last modal in a container, clean up the container.\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n\n      if (modal.modalRef) {\n        // In case the modal wasn't in the DOM yet.\n        ariaHidden(modal.modalRef, true);\n      }\n\n      ariaHiddenSiblings(\n        containerInfo.container,\n        modal.mountNode,\n        modal.modalRef,\n        containerInfo.hiddenSiblingNodes,\n        false,\n      );\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1];\n      // as soon as a modal is adding its modalRef is undefined. it can't set\n      // aria-hidden because the dom element doesn't exist either\n      // when modal was unmounted before modalRef gets null\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n\n    return modalIndex;\n  }\n\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}