{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Drawer/Drawer.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from \"../Modal\";\nimport Backdrop from \"../Backdrop\";\nimport withStyles from \"../styles/withStyles\";\nimport Slide from \"../Slide\";\nimport Paper from \"../Paper\";\nimport capitalize from \"../utils/capitalize\";\nimport { duration } from \"../styles/transitions\";\nimport useTheme from \"../styles/useTheme\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nvar Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 16 : _props$elevation,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropPropsProp = _props$ModalProps.BackdropProps,\n      ModalProps = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SlideProps = props.SlideProps,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  var mounted = React.useRef(false);\n  React.useEffect(function () {\n    mounted.current = true;\n  }, []);\n  var anchor = getAnchor(theme, anchorProp);\n\n  var drawer = __jsx(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperAnchor\".concat(capitalize(anchor))], PaperProps.className, variant !== 'temporary' && classes[\"paperAnchorDocked\".concat(capitalize(anchor))]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }), children);\n\n  if (variant === 'permanent') {\n    return __jsx(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }), drawer);\n  }\n\n  var slidingDrawer = __jsx(TransitionComponent, _extends({\n    \"in\": open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }), drawer);\n\n  if (variant === 'persistent') {\n    return __jsx(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }), slidingDrawer);\n  } // variant === temporary\n\n\n  return __jsx(Modal, _extends({\n    BackdropProps: _objectSpread(_objectSpread(_objectSpread({}, BackdropProps), BackdropPropsProp), {}, {\n      transitionDuration: transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }), slidingDrawer);\n});\nDrawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n};\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Drawer/Drawer.js"],"names":["React","PropTypes","clsx","Modal","Backdrop","withStyles","Slide","Paper","capitalize","duration","useTheme","styles","theme","root","docked","flex","paper","overflowY","display","flexDirection","height","zIndex","drawer","WebkitOverflowScrolling","position","top","outline","paperAnchorLeft","left","right","paperAnchorRight","paperAnchorTop","bottom","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","borderRight","palette","divider","paperAnchorDockedTop","borderBottom","paperAnchorDockedRight","borderLeft","paperAnchorDockedBottom","borderTop","modal","oppositeDirection","isHorizontal","anchor","indexOf","getAnchor","direction","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Drawer","forwardRef","props","ref","anchorProp","BackdropProps","children","classes","className","elevation","ModalProps","BackdropPropsProp","onClose","open","PaperProps","SlideProps","TransitionComponent","transitionDuration","variant","other","mounted","useRef","useEffect","current","slidingDrawer","propTypes","oneOf","object","node","string","number","func","bool","oneOfType","shape","appear","name","flip"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AACA,SAASC,QAAT;AACA,OAAOC,QAAP;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAY;AAChC;AACAC,IAAAA,IAAI,EAAE,EAF0B;;AAGhC;AACAC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KAJwB;;AAOhC;AACAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,MADN;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,aAAa,EAAE,QAHV;AAILC,MAAAA,MAAM,EAAE,MAJH;AAKLL,MAAAA,IAAI,EAAE,UALD;AAMLM,MAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,CAAaC,MANhB;AAOLC,MAAAA,uBAAuB,EAAE,OAPpB;AAO6B;AAClC;AACAC,MAAAA,QAAQ,EAAE,OATL;AAULC,MAAAA,GAAG,EAAE,CAVA;AAWL;AACA;AACA;AACAC,MAAAA,OAAO,EAAE;AAdJ,KARyB;;AAwBhC;AACAC,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE,CADS;AAEfC,MAAAA,KAAK,EAAE;AAFQ,KAzBe;;AA6BhC;AACAC,IAAAA,gBAAgB,EAAE;AAChBF,MAAAA,IAAI,EAAE,MADU;AAEhBC,MAAAA,KAAK,EAAE;AAFS,KA9Bc;;AAkChC;AACAE,IAAAA,cAAc,EAAE;AACdN,MAAAA,GAAG,EAAE,CADS;AAEdG,MAAAA,IAAI,EAAE,CAFQ;AAGdI,MAAAA,MAAM,EAAE,MAHM;AAIdH,MAAAA,KAAK,EAAE,CAJO;AAKdT,MAAAA,MAAM,EAAE,MALM;AAMda,MAAAA,SAAS,EAAE;AANG,KAnCgB;;AA2ChC;AACAC,IAAAA,iBAAiB,EAAE;AACjBT,MAAAA,GAAG,EAAE,MADY;AAEjBG,MAAAA,IAAI,EAAE,CAFW;AAGjBI,MAAAA,MAAM,EAAE,CAHS;AAIjBH,MAAAA,KAAK,EAAE,CAJU;AAKjBT,MAAAA,MAAM,EAAE,MALS;AAMjBa,MAAAA,SAAS,EAAE;AANM,KA5Ca;;AAoDhC;AACAE,IAAAA,qBAAqB,EAAE;AACrBC,MAAAA,WAAW,sBAAexB,KAAK,CAACyB,OAAN,CAAcC,OAA7B;AADU,KArDS;;AAwDhC;AACAC,IAAAA,oBAAoB,EAAE;AACpBC,MAAAA,YAAY,sBAAe5B,KAAK,CAACyB,OAAN,CAAcC,OAA7B;AADQ,KAzDU;;AA4DhC;AACAG,IAAAA,sBAAsB,EAAE;AACtBC,MAAAA,UAAU,sBAAe9B,KAAK,CAACyB,OAAN,CAAcC,OAA7B;AADY,KA7DQ;;AAgEhC;AACAK,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,SAAS,sBAAehC,KAAK,CAACyB,OAAN,CAAcC,OAA7B;AADc,KAjEO;;AAoEhC;AACAO,IAAAA,KAAK,EAAE;AArEyB,GAAZ;AAAA,CAAf;AAwEP,IAAMC,iBAAiB,GAAG;AACxBlB,EAAAA,IAAI,EAAE,OADkB;AAExBC,EAAAA,KAAK,EAAE,MAFiB;AAGxBJ,EAAAA,GAAG,EAAE,MAHmB;AAIxBO,EAAAA,MAAM,EAAE;AAJgB,CAA1B;AAOA,OAAO,SAASe,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,SAAO,CAAC,MAAD,EAAS,OAAT,EAAkBC,OAAlB,CAA0BD,MAA1B,MAAsC,CAAC,CAA9C;AACD;AAED,OAAO,SAASE,SAAT,CAAmBtC,KAAnB,EAA0BoC,MAA1B,EAAkC;AACvC,SAAOpC,KAAK,CAACuC,SAAN,KAAoB,KAApB,IAA6BJ,YAAY,CAACC,MAAD,CAAzC,GAAoDF,iBAAiB,CAACE,MAAD,CAArE,GAAgFA,MAAvF;AACD;AAED,IAAMI,yBAAyB,GAAG;AAAEC,EAAAA,KAAK,EAAE5C,QAAQ,CAAC6C,cAAlB;AAAkCC,EAAAA,IAAI,EAAE9C,QAAQ,CAAC+C;AAAjD,CAAlC;AACA;;;;;AAIA,IAAMC,MAAM,gBAAGzD,KAAK,CAAC0D,UAAN,CAAiB,SAASD,MAAT,CAAgBE,KAAhB,EAAuBC,GAAvB,EAA4B;AAAA,sBAkBtDD,KAlBsD,CAExDX,MAFwD;AAAA,MAEhDa,UAFgD,8BAEnC,MAFmC;AAAA,MAGxDC,aAHwD,GAkBtDH,KAlBsD,CAGxDG,aAHwD;AAAA,MAIxDC,QAJwD,GAkBtDJ,KAlBsD,CAIxDI,QAJwD;AAAA,MAKxDC,OALwD,GAkBtDL,KAlBsD,CAKxDK,OALwD;AAAA,MAMxDC,SANwD,GAkBtDN,KAlBsD,CAMxDM,SANwD;AAAA,yBAkBtDN,KAlBsD,CAOxDO,SAPwD;AAAA,MAOxDA,SAPwD,iCAO5C,EAP4C;AAAA,0BAkBtDP,KAlBsD,CAQxDQ,UARwD;AAAA,qDAQU,EARV;;AAAA,MAQ3BC,iBAR2B,qBAQ1CN,aAR0C;AAAA,MAQLK,UARK;AAAA,MASxDE,OATwD,GAkBtDV,KAlBsD,CASxDU,OATwD;AAAA,oBAkBtDV,KAlBsD,CAUxDW,IAVwD;AAAA,MAUxDA,IAVwD,4BAUjD,KAViD;AAAA,0BAkBtDX,KAlBsD,CAWxDY,UAXwD;AAAA,MAWxDA,UAXwD,kCAW3C,EAX2C;AAAA,MAYxDC,UAZwD,GAkBtDb,KAlBsD,CAYxDa,UAZwD;AAAA,8BAkBtDb,KAlBsD,CAcxDc,mBAdwD;AAAA,MAcxDA,mBAdwD,sCAclCnE,KAdkC;AAAA,8BAkBtDqD,KAlBsD,CAexDe,kBAfwD;AAAA,MAexDA,kBAfwD,sCAenCtB,yBAfmC;AAAA,uBAkBtDO,KAlBsD,CAgBxDgB,OAhBwD;AAAA,MAgBxDA,OAhBwD,+BAgB9C,WAhB8C;AAAA,MAiBrDC,KAjBqD,4BAkBtDjB,KAlBsD;;AAmB1D,MAAM/C,KAAK,GAAGF,QAAQ,EAAtB,CAnB0D,CAqB1D;AACA;AACA;;AACA,MAAMmE,OAAO,GAAG7E,KAAK,CAAC8E,MAAN,CAAa,KAAb,CAAhB;AACA9E,EAAAA,KAAK,CAAC+E,SAAN,CAAgB,YAAM;AACpBF,IAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB;AACD,GAFD,EAEG,EAFH;AAIA,MAAMhC,MAAM,GAAGE,SAAS,CAACtC,KAAD,EAAQiD,UAAR,CAAxB;;AACA,MAAMvC,MAAM,GACV,MAAC,KAAD;AACE,IAAA,SAAS,EAAEqD,OAAO,KAAK,WAAZ,GAA0BT,SAA1B,GAAsC,CADnD;AAEE,IAAA,MAAM;AAFR,KAGMK,UAHN;AAIE,IAAA,SAAS,EAAErE,IAAI,CACb8D,OAAO,CAAChD,KADK,EAEbgD,OAAO,sBAAexD,UAAU,CAACwC,MAAD,CAAzB,EAFM,EAMbuB,UAAU,CAACN,SANE,EAI0CU,OAAO,KAAK,WAJtD,IAIVX,OAAO,4BAAqBxD,UAAU,CAACwC,MAAD,CAA/B,EAJG,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaGe,QAbH,CADF;;AAkBA,MAAIY,OAAO,KAAK,WAAhB,EAA6B;AAC3B,WACE;AAAK,MAAA,SAAS,EAAEzE,IAAI,CAAC8D,OAAO,CAACnD,IAAT,EAAemD,OAAO,CAAClD,MAAvB,EAA+BmD,SAA/B,CAApB;AAA+D,MAAA,GAAG,EAAEL;AAApE,OAA6EgB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGtD,MADH,CADF;AAKD;;AAED,MAAM2D,aAAa,GACjB,MAAC,mBAAD;AACE,UAAIX,IADN;AAEE,IAAA,SAAS,EAAExB,iBAAiB,CAACE,MAAD,CAF9B;AAGE,IAAA,OAAO,EAAE0B,kBAHX;AAIE,IAAA,MAAM,EAAEG,OAAO,CAACG;AAJlB,KAKMR,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGlD,MAPH,CADF;;AAYA,MAAIqD,OAAO,KAAK,YAAhB,EAA8B;AAC5B,WACE;AAAK,MAAA,SAAS,EAAEzE,IAAI,CAAC8D,OAAO,CAACnD,IAAT,EAAemD,OAAO,CAAClD,MAAvB,EAA+BmD,SAA/B,CAApB;AAA+D,MAAA,GAAG,EAAEL;AAApE,OAA6EgB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGK,aADH,CADF;AAKD,GA1EyD,CA4E1D;;;AACA,SACE,MAAC,KAAD;AACE,IAAA,aAAa,gDACRnB,aADQ,GAERM,iBAFQ;AAGXM,MAAAA,kBAAkB,EAAlBA;AAHW,MADf;AAME,IAAA,iBAAiB,EAAEtE,QANrB;AAOE,IAAA,SAAS,EAAEF,IAAI,CAAC8D,OAAO,CAACnD,IAAT,EAAemD,OAAO,CAACnB,KAAvB,EAA8BoB,SAA9B,CAPjB;AAQE,IAAA,IAAI,EAAEK,IARR;AASE,IAAA,OAAO,EAAED,OATX;AAUE,IAAA,GAAG,EAAET;AAVP,KAWMgB,KAXN,EAYMT,UAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcGc,aAdH,CADF;AAkBD,CA/Fc,CAAf;AAiGAxB,MAAM,CAACyB,SAAP,GAAmB;AACjB;AACA;AACA;AACA;;AACA;;;AAGAlC,EAAAA,MAAM,EAAE/C,SAAS,CAACkF,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,KAA5B,CAAhB,CARS;;AASjB;;;AAGArB,EAAAA,aAAa,EAAE7D,SAAS,CAACmF,MAZR;;AAajB;;;AAGArB,EAAAA,QAAQ,EAAE9D,SAAS,CAACoF,IAhBH;;AAiBjB;;;;AAIArB,EAAAA,OAAO,EAAE/D,SAAS,CAACmF,MArBF;;AAsBjB;;;AAGAnB,EAAAA,SAAS,EAAEhE,SAAS,CAACqF,MAzBJ;;AA0BjB;;;AAGApB,EAAAA,SAAS,EAAEjE,SAAS,CAACsF,MA7BJ;;AA8BjB;;;AAGApB,EAAAA,UAAU,EAAElE,SAAS,CAACmF,MAjCL;;AAkCjB;;;;;AAKAf,EAAAA,OAAO,EAAEpE,SAAS,CAACuF,IAvCF;;AAwCjB;;;AAGAlB,EAAAA,IAAI,EAAErE,SAAS,CAACwF,IA3CC;;AA4CjB;;;AAGAlB,EAAAA,UAAU,EAAEtE,SAAS,CAACmF,MA/CL;;AAgDjB;;;AAGAZ,EAAAA,UAAU,EAAEvE,SAAS,CAACmF,MAnDL;;AAoDjB;;;;AAIAV,EAAAA,kBAAkB,EAAEzE,SAAS,CAACyF,SAAV,CAAoB,CACtCzF,SAAS,CAACsF,MAD4B,EAEtCtF,SAAS,CAAC0F,KAAV,CAAgB;AACdC,IAAAA,MAAM,EAAE3F,SAAS,CAACsF,MADJ;AAEdlC,IAAAA,KAAK,EAAEpD,SAAS,CAACsF,MAFH;AAGdhC,IAAAA,IAAI,EAAEtD,SAAS,CAACsF;AAHF,GAAhB,CAFsC,CAApB,CAxDH;;AAgEjB;;;AAGAZ,EAAAA,OAAO,EAAE1E,SAAS,CAACkF,KAAV,CAAgB,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAhB;AAnEQ,CAAnB;AAsEA,eAAe9E,UAAU,CAACM,MAAD,EAAS;AAAEkF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAT,CAAV,CAAuDrC,MAAvD,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {},\n  /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n  docked: {\n    flex: '0 0 auto',\n  },\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    flex: '1 0 auto',\n    zIndex: theme.zIndex.drawer,\n    WebkitOverflowScrolling: 'touch', // Add iOS momentum scrolling.\n    // temporary style\n    position: 'fixed',\n    top: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    // At some point, it would be better to keep it for keyboard users.\n    // :focus-ring CSS pseudo-class will help.\n    outline: 0,\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n  paperAnchorLeft: {\n    left: 0,\n    right: 'auto',\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n  paperAnchorRight: {\n    left: 'auto',\n    right: 0,\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n  paperAnchorTop: {\n    top: 0,\n    left: 0,\n    bottom: 'auto',\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%',\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n  paperAnchorBottom: {\n    top: 'auto',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%',\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedLeft: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedTop: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedRight: {\n    borderLeft: `1px solid ${theme.palette.divider}`,\n  },\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n  paperAnchorDockedBottom: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n  },\n  /* Styles applied to the `Modal` component. */\n  modal: {},\n});\n\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up',\n};\n\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\n\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\n\nconst defaultTransitionDuration = { enter: duration.enteringScreen, exit: duration.leavingScreen };\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\nconst Drawer = React.forwardRef(function Drawer(props, ref) {\n  const {\n    anchor: anchorProp = 'left',\n    BackdropProps,\n    children,\n    classes,\n    className,\n    elevation = 16,\n    ModalProps: { BackdropProps: BackdropPropsProp, ...ModalProps } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide,\n    transitionDuration = defaultTransitionDuration,\n    variant = 'temporary',\n    ...other\n  } = props;\n  const theme = useTheme();\n\n  // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const anchor = getAnchor(theme, anchorProp);\n  const drawer = (\n    <Paper\n      elevation={variant === 'temporary' ? elevation : 0}\n      square\n      {...PaperProps}\n      className={clsx(\n        classes.paper,\n        classes[`paperAnchor${capitalize(anchor)}`],\n        {\n          [classes[`paperAnchorDocked${capitalize(anchor)}`]]: variant !== 'temporary',\n        },\n        PaperProps.className,\n      )}\n    >\n      {children}\n    </Paper>\n  );\n\n  if (variant === 'permanent') {\n    return (\n      <div className={clsx(classes.root, classes.docked, className)} ref={ref} {...other}>\n        {drawer}\n      </div>\n    );\n  }\n\n  const slidingDrawer = (\n    <TransitionComponent\n      in={open}\n      direction={oppositeDirection[anchor]}\n      timeout={transitionDuration}\n      appear={mounted.current}\n      {...SlideProps}\n    >\n      {drawer}\n    </TransitionComponent>\n  );\n\n  if (variant === 'persistent') {\n    return (\n      <div className={clsx(classes.root, classes.docked, className)} ref={ref} {...other}>\n        {slidingDrawer}\n      </div>\n    );\n  }\n\n  // variant === temporary\n  return (\n    <Modal\n      BackdropProps={{\n        ...BackdropProps,\n        ...BackdropPropsProp,\n        transitionDuration,\n      }}\n      BackdropComponent={Backdrop}\n      className={clsx(classes.root, classes.modal, className)}\n      open={open}\n      onClose={onClose}\n      ref={ref}\n      {...other}\n      {...ModalProps}\n    >\n      {slidingDrawer}\n    </Modal>\n  );\n});\n\nDrawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      appear: PropTypes.number,\n      enter: PropTypes.number,\n      exit: PropTypes.number,\n    }),\n  ]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary']),\n};\n\nexport default withStyles(styles, { name: 'MuiDrawer', flip: false })(Drawer);\n"]},"metadata":{},"sourceType":"module"}