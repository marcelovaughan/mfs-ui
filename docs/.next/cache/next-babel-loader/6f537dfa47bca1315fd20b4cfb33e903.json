{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport ButtonGroup from \"../../../../../packages/material-ui/src/ButtonGroup\";\nimport ArrowDropDownIcon from \"../../../../../packages/material-ui-icons/src/ArrowDropDown\";\nimport ClickAwayListener from \"../../../../../packages/material-ui/src/ClickAwayListener\";\nimport Grow from \"../../../../../packages/material-ui/src/Grow\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport Popper from \"../../../../../packages/material-ui/src/Popper\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport MenuList from \"../../../../../packages/material-ui/src/MenuList\";\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\n\nvar _ref = __jsx(ArrowDropDownIcon, null);\n\nexport default function SplitButton() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\"\n  }, __jsx(Button, {\n    onClick: handleClick\n  }, options[selectedIndex]), __jsx(Button, {\n    color: \"primary\",\n    size: \"small\",\n    \"aria-controls\": open ? 'split-button-menu' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle\n  }, _ref)), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    }\n  }), __jsx(Paper, null, __jsx(ClickAwayListener, {\n    onClickAway: handleClose\n  }, __jsx(MenuList, {\n    id: \"split-button-menu\"\n  }, options.map((option, index) => __jsx(MenuItem, {\n    key: option,\n    disabled: index === 2,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index)\n  }, option)))))))));\n}","map":null,"metadata":{},"sourceType":"module"}