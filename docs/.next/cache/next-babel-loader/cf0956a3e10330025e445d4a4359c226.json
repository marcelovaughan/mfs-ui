{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { makeStyles, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Popper from \"../../../../../packages/material-ui/src/Popper\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Fade from \"../../../../../packages/material-ui/src/Fade\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: 500\n  },\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\n\nvar _ref = __jsx(\"br\", null);\n\nvar _ref2 = __jsx(\"br\", null);\n\nexport default function PositionedPopper() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n  const classes = useStyles();\n\n  const handleClick = newPlacement => event => {\n    setAnchorEl(event.currentTarget);\n    setOpen(prev => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Popper, {\n    open: open,\n    anchorEl: anchorEl,\n    placement: placement,\n    transition: true\n  }, ({\n    TransitionProps\n  }) => __jsx(Fade, _extends({}, TransitionProps, {\n    timeout: 350\n  }), __jsx(Paper, null, __jsx(Typography, {\n    className: classes.typography\n  }, \"The content of the Popper.\")))), __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    onClick: handleClick('top-start')\n  }, \"top-start\"), __jsx(Button, {\n    onClick: handleClick('top')\n  }, \"top\"), __jsx(Button, {\n    onClick: handleClick('top-end')\n  }, \"top-end\"))), __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Button, {\n    onClick: handleClick('left-start')\n  }, \"left-start\"), _ref, __jsx(Button, {\n    onClick: handleClick('left')\n  }, \"left\"), _ref2, __jsx(Button, {\n    onClick: handleClick('left-end')\n  }, \"left-end\")), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 6,\n    alignItems: \"flex-end\",\n    direction: \"column\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    onClick: handleClick('right-start')\n  }, \"right-start\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    onClick: handleClick('right')\n  }, \"right\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    onClick: handleClick('right-end')\n  }, \"right-end\")))), __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    onClick: handleClick('bottom-start')\n  }, \"bottom-start\"), __jsx(Button, {\n    onClick: handleClick('bottom')\n  }, \"bottom\"), __jsx(Button, {\n    onClick: handleClick('bottom-end')\n  }, \"bottom-end\"))));\n}","map":null,"metadata":{},"sourceType":"module"}