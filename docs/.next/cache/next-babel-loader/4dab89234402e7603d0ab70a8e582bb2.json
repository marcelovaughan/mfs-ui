{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight\";\nimport useTheme from \"../styles/useTheme\";\nimport IconButton from \"../IconButton\";\nimport LastPageIcon from \"../internal/svg-icons/LastPage\";\nimport FirstPageIcon from \"../internal/svg-icons/FirstPage\";\n/**\n * @ignore - internal component.\n */\n\nvar _ref = __jsx(LastPageIcon, null);\n\nvar _ref2 = __jsx(FirstPageIcon, null);\n\nvar _ref3 = __jsx(KeyboardArrowRight, null);\n\nvar _ref4 = __jsx(KeyboardArrowLeft, null);\n\nvar _ref5 = __jsx(KeyboardArrowLeft, null);\n\nvar _ref6 = __jsx(KeyboardArrowRight, null);\n\nvar _ref7 = __jsx(FirstPageIcon, null);\n\nvar _ref8 = __jsx(LastPageIcon, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      getItemAriaLabel = props.getItemAriaLabel,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      showFirstButton = props.showFirstButton,\n      showLastButton = props.showLastButton,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"]);\n\n  var theme = useTheme();\n\n  var handleFirstPageButtonClick = function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  };\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  var handleLastPageButtonClick = function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return __jsx(\"div\", _extends({\n    ref: ref\n  }, other), showFirstButton && __jsx(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": getItemAriaLabel('first', page),\n    title: getItemAriaLabel('first', page)\n  }, theme.direction === 'rtl' ? _ref : _ref2), __jsx(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('previous', page),\n    title: getItemAriaLabel('previous', page)\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4), __jsx(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('next', page),\n    title: getItemAriaLabel('next', page)\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref5 : _ref6), showLastButton && __jsx(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": getItemAriaLabel('last', page),\n    title: getItemAriaLabel('last', page)\n  }, theme.direction === 'rtl' ? _ref7 : _ref8));\n});\nexport default TablePaginationActions;","map":null,"metadata":{},"sourceType":"module"}