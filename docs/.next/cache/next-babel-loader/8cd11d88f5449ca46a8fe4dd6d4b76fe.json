{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Dialog from \"../../../../../packages/material-ui/src/Dialog\";\nimport MuiDialogTitle from \"../../../../../packages/material-ui/src/DialogTitle\";\nimport MuiDialogContent from \"../../../../../packages/material-ui/src/DialogContent\";\nimport MuiDialogActions from \"../../../../../packages/material-ui/src/DialogActions\";\nimport IconButton from \"../../../../../packages/material-ui/src/IconButton\";\nimport CloseIcon from \"../../../../../packages/material-ui-icons/src/Close\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nvar _ref = __jsx(CloseIcon, null);\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other), __jsx(Typography, {\n    variant: \"h6\"\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose\n  }, _ref) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nvar _ref2 = __jsx(DialogContent, {\n  dividers: true\n}, __jsx(Typography, {\n  gutterBottom: true\n}, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), __jsx(Typography, {\n  gutterBottom: true\n}, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), __jsx(Typography, {\n  gutterBottom: true\n}, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"));\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen\n  }, \"Open dialog\"), __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open\n  }, __jsx(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose\n  }, \"Modal title\"), _ref2, __jsx(DialogActions, null, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Save changes\"))));\n}","map":null,"metadata":{},"sourceType":"module"}