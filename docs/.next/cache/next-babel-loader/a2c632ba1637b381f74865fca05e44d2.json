{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport List from \"../../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../../packages/material-ui/src/ListItem\";\nimport ListItemText from \"../../../../../packages/material-ui/src/ListItemText\";\nimport DialogTitle from \"../../../../../packages/material-ui/src/DialogTitle\";\nimport DialogContent from \"../../../../../packages/material-ui/src/DialogContent\";\nimport DialogActions from \"../../../../../packages/material-ui/src/DialogActions\";\nimport Dialog from \"../../../../../packages/material-ui/src/Dialog\";\nimport RadioGroup from \"../../../../../packages/material-ui/src/RadioGroup\";\nimport Radio from \"../../../../../packages/material-ui/src/Radio\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nvar _ref = __jsx(DialogTitle, {\n  id: \"confirmation-dialog-title\"\n}, \"Phone Ringtone\");\n\nvar _ref2 = __jsx(Radio, null);\n\nfunction ConfirmationDialogRaw(props) {\n  const {\n    onClose,\n    value: valueProp,\n    open\n  } = props,\n        other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return __jsx(Dialog, _extends({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other), _ref, __jsx(DialogContent, {\n    dividers: true\n  }, __jsx(RadioGroup, {\n    ref: radioGroupRef,\n    \"aria-label\": \"ringtone\",\n    name: \"ringtone\",\n    value: value,\n    onChange: handleChange\n  }, options.map(option => __jsx(FormControlLabel, {\n    value: option,\n    key: option,\n    control: _ref2,\n    label: option\n  })))), __jsx(DialogActions, null, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleCancel,\n    color: \"primary\"\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleOk,\n    color: \"primary\"\n  }, \"Ok\")));\n}\n\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  }\n}));\n\nvar _ref3 = __jsx(ListItem, {\n  button: true,\n  divider: true,\n  disabled: true,\n  role: \"listitem\"\n}, __jsx(ListItemText, {\n  primary: \"Interruptions\"\n}));\n\nvar _ref4 = __jsx(ListItem, {\n  button: true,\n  divider: true,\n  disabled: true,\n  role: \"listitem\"\n}, __jsx(ListItemText, {\n  primary: \"Default notification ringtone\",\n  secondary: \"Tethys\"\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(List, {\n    component: \"div\",\n    role: \"list\"\n  }, _ref3, __jsx(ListItem, {\n    button: true,\n    divider: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"ringtone-menu\",\n    \"aria-label\": \"phone ringtone\",\n    onClick: handleClickListItem,\n    role: \"listitem\"\n  }, __jsx(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: value\n  })), _ref4, __jsx(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}