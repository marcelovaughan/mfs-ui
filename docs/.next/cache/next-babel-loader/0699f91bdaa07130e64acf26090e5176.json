{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CircularProgress/CircularProgress.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from \"../../../material-ui-utils/src\";\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nconst SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block'\n  },\n\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform')\n  },\n\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block' // Keeps the progress centered\n\n  },\n\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset')\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      // Fix IE 11 wobbly\n      transformOrigin: '50% 50%'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px'\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px'\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px'\n    }\n  },\n\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none'\n  }\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _objectSpread(_objectSpread({\n      width: size,\n      height: size\n    }, rootStyle), style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }), __jsx(\"svg\", {\n    className: classes.svg,\n    viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })));\n});\nCircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n};\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CircularProgress/CircularProgress.js"],"names":["React","PropTypes","clsx","chainPropTypes","withStyles","capitalize","SIZE","getRelativeValue","value","min","max","Math","easeOut","t","easeIn","styles","theme","root","display","static","transition","transitions","create","indeterminate","animation","colorPrimary","color","palette","primary","main","colorSecondary","secondary","svg","circle","stroke","circleStatic","circleIndeterminate","strokeDasharray","strokeDashoffset","transformOrigin","transform","circleDisableShrink","CircularProgress","forwardRef","props","ref","classes","className","disableShrink","size","style","thickness","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","toFixed","round","width","height","propTypes","object","string","oneOf","bool","Error","oneOfType","number","name","flip"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\n\nconst SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1);\n  // https://gist.github.com/gre/1650294\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block',\n  },\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform'),\n  },\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite',\n  },\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main,\n  },\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main,\n  },\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block', // Keeps the progress centered\n  },\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor',\n    // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset'),\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px', // Add the unit to fix a Edge 16 and below bug.\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      // Fix IE 11 wobbly\n      transformOrigin: '50% 50%',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px',\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px',\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px',\n    },\n  },\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none',\n  },\n});\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${(((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(\n        3,\n      )}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes[`color${capitalize(color)}`]]: color !== 'inherit',\n          [classes.indeterminate]: variant === 'indeterminate',\n          [classes.static]: variant === 'static',\n        },\n        className,\n      )}\n      style={{ width: size, height: size, ...rootStyle, ...style }}\n      ref={ref}\n      role=\"progressbar\"\n      {...rootProps}\n      {...other}\n    >\n      <svg className={classes.svg} viewBox={`${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`}>\n        <circle\n          className={clsx(classes.circle, {\n            [classes.circleIndeterminate]: variant === 'indeterminate',\n            [classes.circleStatic]: variant === 'static',\n            [classes.circleDisableShrink]: disableShrink,\n          })}\n          style={circleStyle}\n          cx={SIZE}\n          cy={SIZE}\n          r={(SIZE - thickness) / 2}\n          fill=\"none\"\n          strokeWidth={thickness}\n        />\n      </svg>\n    </div>\n  );\n});\n\nCircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, (props) => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error(\n        'Material-UI: You have provided the `disableShrink` prop ' +\n          'with a variant other than `indeterminate`. This will have no effect.',\n      );\n    }\n\n    return null;\n  }),\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static']),\n};\n\nexport default withStyles(styles, { name: 'MuiCircularProgress', flip: false })(CircularProgress);\n"]},"metadata":{},"sourceType":"module"}