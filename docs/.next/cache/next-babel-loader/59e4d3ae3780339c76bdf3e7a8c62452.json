{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Box from \"../../../../../packages/material-ui/src/Box\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Skeleton from \"../../../../../packages/material-ui-lab/src/Skeleton\";\nvar data = [{\n  src: 'https://i.ytimg.com/vi/pLqipJNItIo/hqdefault.jpg?sqp=-oaymwEYCNIBEHZIVfKriqkDCwgBFQAAiEIYAXAB&rs=AOn4CLBkklsyaw9FxDmMKapyBYCn9tbPNQ',\n  title: 'Don Diablo @ Tomorrowland Main Stage 2019 | Officialâ€¦',\n  channel: 'Don Diablo',\n  views: '396 k views',\n  createdAt: 'a week ago'\n}, {\n  src: 'https://i.ytimg.com/vi/_Uu12zY01ts/hqdefault.jpg?sqp=-oaymwEZCPYBEIoBSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLCpX6Jan2rxrCAZxJYDXppTP4MoQA',\n  title: 'Queen - Greatest Hits',\n  channel: 'Queen Official',\n  views: '40 M views',\n  createdAt: '3 years ago'\n}, {\n  src: 'https://i.ytimg.com/vi/kkLk2XWMBf8/hqdefault.jpg?sqp=-oaymwEYCNIBEHZIVfKriqkDCwgBFQAAiEIYAXAB&rs=AOn4CLB4GZTFu1Ju2EPPPXnhMZtFVvYBaw',\n  title: 'Calvin Harris, Sam Smith - Promises (Official Video)',\n  channel: 'Calvin Harris',\n  views: '130 M views',\n  createdAt: '10 months ago'\n}];\n\nvar _ref = __jsx(Skeleton, {\n  variant: \"rect\",\n  width: 210,\n  height: 118\n});\n\nvar _ref2 = __jsx(Box, {\n  pt: 0.5\n}, __jsx(Skeleton, null), __jsx(Skeleton, {\n  width: \"60%\"\n}));\n\nfunction Media(props) {\n  var _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading;\n  return __jsx(Grid, {\n    container: true,\n    wrap: \"nowrap\"\n  }, (loading ? _Array$from(new Array(3)) : data).map(function (item, index) {\n    return __jsx(Box, {\n      key: index,\n      width: 210,\n      marginRight: 0.5,\n      my: 5\n    }, item ? __jsx(\"img\", {\n      style: {\n        width: 210,\n        height: 118\n      },\n      alt: item.title,\n      src: item.src\n    }) : _ref, item ? __jsx(Box, {\n      pr: 2\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      variant: \"body2\"\n    }, item.title), __jsx(Typography, {\n      display: \"block\",\n      variant: \"caption\",\n      color: \"textSecondary\"\n    }, item.channel), __jsx(Typography, {\n      variant: \"caption\",\n      color: \"textSecondary\"\n    }, \"\".concat(item.views, \" \\u2022 \").concat(item.createdAt))) : _ref2);\n  }));\n}\n\nvar _ref3 = __jsx(Box, {\n  overflow: \"hidden\"\n}, __jsx(Media, {\n  loading: true\n}), __jsx(Media, null));\n\nexport default function YouTube() {\n  return _ref3;\n}","map":null,"metadata":{},"sourceType":"module"}