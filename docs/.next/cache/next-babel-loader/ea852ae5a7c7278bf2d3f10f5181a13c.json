{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Chip from \"../../../../../packages/material-ui/src/Chip\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport TagFacesIcon from \"../../../../../packages/material-ui-icons/src/TagFaces\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      listStyle: 'none',\n      padding: theme.spacing(0.5),\n      margin: 0\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    }\n  };\n});\n\nvar _ref = __jsx(TagFacesIcon, null);\n\nexport default function ChipsArray() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState([{\n    key: 0,\n    label: 'Angular'\n  }, {\n    key: 1,\n    label: 'jQuery'\n  }, {\n    key: 2,\n    label: 'Polymer'\n  }, {\n    key: 3,\n    label: 'React'\n  }, {\n    key: 4,\n    label: 'Vue.js'\n  }]),\n      chipData = _React$useState[0],\n      setChipData = _React$useState[1];\n\n  var handleDelete = function handleDelete(chipToDelete) {\n    return function () {\n      setChipData(function (chips) {\n        return chips.filter(function (chip) {\n          return chip.key !== chipToDelete.key;\n        });\n      });\n    };\n  };\n\n  return __jsx(Paper, {\n    component: \"ul\",\n    className: classes.root\n  }, chipData.map(function (data) {\n    var icon;\n\n    if (data.label === 'React') {\n      icon = _ref;\n    }\n\n    return __jsx(\"li\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      label: data.label,\n      onDelete: data.label === 'React' ? undefined : handleDelete(data),\n      className: classes.chip\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}