{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Menu from \"../../../../../packages/material-ui/src/Menu\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nexport default function MenuPopupState() {\n  return __jsx(PopupState, {\n    variant: \"popover\",\n    popupId: \"demo-popup-menu\"\n  }, popupState => __jsx(React.Fragment, null, __jsx(Button, _extends({\n    variant: \"contained\",\n    color: \"primary\"\n  }, bindTrigger(popupState)), \"Open Menu\"), __jsx(Menu, bindMenu(popupState), __jsx(MenuItem, {\n    onClick: popupState.close\n  }, \"Cake\"), __jsx(MenuItem, {\n    onClick: popupState.close\n  }, \"Death\"))));\n}","map":null,"metadata":{},"sourceType":"module"}