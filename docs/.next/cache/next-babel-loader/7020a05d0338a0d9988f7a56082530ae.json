{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from \"../../../../../packages/material-ui/src/styles\";\nimport AppBar from \"../../../../../packages/material-ui/src/AppBar\";\nimport Tabs from \"../../../../../packages/material-ui/src/Tabs\";\nimport Tab from \"../../../../../packages/material-ui/src/Tab\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Zoom from \"../../../../../packages/material-ui/src/Zoom\";\nimport Fab from \"../../../../../packages/material-ui/src/Fab\";\nimport AddIcon from \"../../../../../packages/material-ui-icons/src/Add\";\nimport EditIcon from \"../../../../../packages/material-ui-icons/src/Edit\";\nimport UpIcon from \"../../../../../packages/material-ui-icons/src/KeyboardArrowUp\";\nimport { green } from \"../../../../../packages/material-ui/src/colors\";\nimport Box from \"../../../../../packages/material-ui/src/Box\";\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"action-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"action-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: \"action-tab-\".concat(index),\n    'aria-controls': \"action-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: 500,\n      position: 'relative',\n      minHeight: 200\n    },\n    fab: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    fabGreen: {\n      color: theme.palette.common.white,\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[600]\n      }\n    }\n  };\n});\n\nvar _ref = __jsx(AddIcon, null);\n\nvar _ref2 = __jsx(EditIcon, null);\n\nvar _ref3 = __jsx(UpIcon, null);\n\nexport default function FloatingActionButtonZoom() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(0),\n      value = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleChangeIndex = function handleChangeIndex(index) {\n    setValue(index);\n  };\n\n  var transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  var fabs = [{\n    color: 'primary',\n    className: classes.fab,\n    icon: _ref,\n    label: 'Add'\n  }, {\n    color: 'secondary',\n    className: classes.fab,\n    icon: _ref2,\n    label: 'Edit'\n  }, {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: _ref3,\n    label: 'Expand'\n  }];\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"action tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"Item One\"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"Item Two\"\n  }, a11yProps(1))), __jsx(Tab, _extends({\n    label: \"Item Three\"\n  }, a11yProps(2))))), __jsx(SwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: value,\n    onChangeIndex: handleChangeIndex\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    dir: theme.direction\n  }, \"Item One\"), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    dir: theme.direction\n  }, \"Item Two\"), __jsx(TabPanel, {\n    value: value,\n    index: 2,\n    dir: theme.direction\n  }, \"Item Three\")), fabs.map(function (fab, index) {\n    return __jsx(Zoom, {\n      key: fab.color,\n      \"in\": value === index,\n      timeout: transitionDuration,\n      style: {\n        transitionDelay: \"\".concat(value === index ? transitionDuration.exit : 0, \"ms\")\n      },\n      unmountOnExit: true\n    }, __jsx(Fab, {\n      \"aria-label\": fab.label,\n      className: fab.className,\n      color: fab.color\n    }, fab.icon));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}