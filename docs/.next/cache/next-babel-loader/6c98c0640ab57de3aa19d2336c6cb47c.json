{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport MuiPaper from \"../../../../../../../packages/material-ui/src/Paper\";\nimport { capitalize } from \"../../../../../../../packages/material-ui/src/utils\";\nimport { withStyles } from \"../../../../../../../packages/material-ui/src/styles\";\n\nconst styles = theme => ({\n  backgroundLight: {\n    backgroundColor: theme.palette.secondary.light\n  },\n  backgroundMain: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  backgroundDark: {\n    backgroundColor: theme.palette.secondary.dark\n  },\n  padding: {\n    padding: theme.spacing(1)\n  }\n});\n\nfunction Paper(props) {\n  const {\n    background = 'light',\n    classes,\n    className,\n    padding = false\n  } = props,\n        other = _objectWithoutProperties(props, [\"background\", \"classes\", \"className\", \"padding\"]);\n\n  return __jsx(MuiPaper, _extends({\n    elevation: 0,\n    square: true,\n    className: clsx(classes[`background${capitalize(background)}`], className, padding && classes.padding)\n  }, other));\n}\n\nexport default withStyles(styles)(Paper);","map":null,"metadata":{},"sourceType":"module"}