{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport FormLabel from \"../../../../../packages/material-ui/src/FormLabel\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport FormHelperText from \"../../../../../packages/material-ui/src/FormHelperText\";\nimport Checkbox from \"../../../../../packages/material-ui/src/Checkbox\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\n\nvar _ref = __jsx(FormLabel, {\n  component: \"legend\"\n}, \"Assign responsibility\");\n\nvar _ref2 = __jsx(FormHelperText, null, \"Be careful\");\n\nvar _ref3 = __jsx(FormLabel, {\n  component: \"legend\"\n}, \"Pick two\");\n\nvar _ref4 = __jsx(FormHelperText, null, \"You can display an error\");\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const {\n    gilad,\n    jason,\n    antoine\n  } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, _ref, __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange,\n      name: \"gilad\"\n    }),\n    label: \"Gilad Gray\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: jason,\n      onChange: handleChange,\n      name: \"jason\"\n    }),\n    label: \"Jason Killian\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleChange,\n      name: \"antoine\"\n    }),\n    label: \"Antoine Llorca\"\n  })), _ref2), __jsx(FormControl, {\n    required: true,\n    error: error,\n    component: \"fieldset\",\n    className: classes.formControl\n  }, _ref3, __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange,\n      name: \"gilad\"\n    }),\n    label: \"Gilad Gray\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: jason,\n      onChange: handleChange,\n      name: \"jason\"\n    }),\n    label: \"Jason Killian\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleChange,\n      name: \"antoine\"\n    }),\n    label: \"Antoine Llorca\"\n  })), _ref4));\n}","map":null,"metadata":{},"sourceType":"module"}