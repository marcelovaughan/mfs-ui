{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/pages/_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { ServerStyleSheets } from \"../../packages/material-ui-styles/src\";\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport { LANGUAGES_SSR } from \"../src/modules/constants\";\nimport { pathnameToLanguage } from \"../src/modules/utils/helpers\";\nimport { themeColor } from \"../src/modules/components/ThemeContext\"; // You can find a benchmark of the available CSS minifiers under\n// https://github.com/GoalSmashers/css-minification-benchmark\n// We have found that clean-css is faster than cssnano but the output is larger.\n// Waiting for https://github.com/cssinjs/jss/issues/279\n// 4% slower but 12% smaller output than doing it in a single step.\n//\n// It's using .browserslistrc\n\nlet prefixer;\nlet cleanCSS;\n\nif (false) {\n  /* eslint-disable global-require */\n  const postcss = require('postcss');\n\n  const autoprefixer = require('autoprefixer');\n\n  const CleanCSS = require('clean-css');\n  /* eslint-enable global-require */\n\n\n  prefixer = postcss([autoprefixer]);\n  cleanCSS = new CleanCSS();\n}\n\nconst GOOGLE_ID = false ? 'UA-106598593-2' : 'UA-106598593-3';\nexport default class MyDocument extends Document {\n  render() {\n    const {\n      canonical,\n      userLanguage\n    } = this.props;\n    return __jsx(Html, {\n      lang: userLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/static/manifest.json\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: themeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/static/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      sizes: \"180x180\",\n      href: \"/static/icons/180x180.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"canonical\",\n      href: `https://material-ui.com${rewriteUrlForNextExport(`${userLanguage === 'en' ? '' : `/${userLanguage}`}${canonical}`)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"alternate\",\n      href: `https://material-ui.com${rewriteUrlForNextExport(canonical)}`,\n      hrefLang: \"x-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), LANGUAGES_SSR.map(userLanguage2 => __jsx(\"link\", {\n      key: userLanguage2,\n      rel: \"alternate\",\n      href: `https://material-ui.com${rewriteUrlForNextExport(`${userLanguage2 === 'en' ? '' : `/${userLanguage2}`}${canonical}`)}`,\n      hrefLang: userLanguage2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), __jsx(\"link\", {\n      href: \"https://fonts.gstatic.com\",\n      rel: \"preconnect\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), __jsx(\"style\", {\n      id: \"material-icon-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), __jsx(\"style\", {\n      id: \"font-awesome-css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), __jsx(\"style\", {\n      id: \"app-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), __jsx(\"style\", {\n      id: \"prismjs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), __jsx(\"style\", {\n      id: \"insertion-point-jss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML: {\n        __html: `\n                window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\n                window.ga('create','${GOOGLE_ID}','auto');\n              `\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. page.getInitialProps\n  // 2. document.getInitialProps\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the server with error:\n  // 2. document.getInitialProps\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. page.getInitialProps\n  // 3. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 54\n      }\n    })))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  let css = sheets.toString(); // It might be undefined, e.g. after an error.\n\n  if (css && false) {\n    const result1 = await prefixer.process(css, {\n      from: undefined\n    });\n    css = result1.css;\n    css = cleanCSS.minify(css).styles;\n  }\n\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    canonical: pathnameToLanguage(ctx.req.url).canonical,\n    userLanguage: ctx.query.userLanguage || 'en',\n    styles: [...React.Children.toArray(initialProps.styles), __jsx(\"style\", {\n      id: \"jss-server-side\",\n      key: \"jss-server-side\" // eslint-disable-next-line react/no-danger\n      ,\n      dangerouslySetInnerHTML: {\n        __html: css\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/pages/_document.js"],"names":["React","ServerStyleSheets","Document","Html","Head","Main","NextScript","rewriteUrlForNextExport","LANGUAGES_SSR","pathnameToLanguage","themeColor","prefixer","cleanCSS","postcss","require","autoprefixer","CleanCSS","GOOGLE_ID","MyDocument","render","canonical","userLanguage","props","map","userLanguage2","__html","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","collect","initialProps","css","toString","result1","process","from","undefined","minify","styles","req","url","query","Children","toArray"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport { LANGUAGES_SSR } from 'docs/src/modules/constants';\nimport { pathnameToLanguage } from 'docs/src/modules/utils/helpers';\nimport { themeColor } from 'docs/src/modules/components/ThemeContext';\n\n// You can find a benchmark of the available CSS minifiers under\n// https://github.com/GoalSmashers/css-minification-benchmark\n// We have found that clean-css is faster than cssnano but the output is larger.\n// Waiting for https://github.com/cssinjs/jss/issues/279\n// 4% slower but 12% smaller output than doing it in a single step.\n//\n// It's using .browserslistrc\nlet prefixer;\nlet cleanCSS;\nif (process.env.NODE_ENV === 'production') {\n  /* eslint-disable global-require */\n  const postcss = require('postcss');\n  const autoprefixer = require('autoprefixer');\n  const CleanCSS = require('clean-css');\n  /* eslint-enable global-require */\n\n  prefixer = postcss([autoprefixer]);\n  cleanCSS = new CleanCSS();\n}\n\nconst GOOGLE_ID = process.env.NODE_ENV === 'production' ? 'UA-106598593-2' : 'UA-106598593-3';\n\nexport default class MyDocument extends Document {\n  render() {\n    const { canonical, userLanguage } = this.props;\n\n    return (\n      <Html lang={userLanguage}>\n        <Head>\n          {/*\n            manifest.json provides metadata used when your web app is added to the\n            homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/\n          */}\n          <link rel=\"manifest\" href=\"/static/manifest.json\" />\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={themeColor} />\n          <link rel=\"shortcut icon\" href=\"/static/favicon.ico\" />\n          {/* iOS Icon */}\n          <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/static/icons/180x180.png\" />\n          {/* SEO */}\n          <link\n            rel=\"canonical\"\n            href={`https://material-ui.com${rewriteUrlForNextExport(\n              `${userLanguage === 'en' ? '' : `/${userLanguage}`}${canonical}`,\n            )}`}\n          />\n          <link\n            rel=\"alternate\"\n            href={`https://material-ui.com${rewriteUrlForNextExport(canonical)}`}\n            hrefLang=\"x-default\"\n          />\n          {LANGUAGES_SSR.map((userLanguage2) => (\n            <link\n              key={userLanguage2}\n              rel=\"alternate\"\n              href={`https://material-ui.com${rewriteUrlForNextExport(\n                `${userLanguage2 === 'en' ? '' : `/${userLanguage2}`}${canonical}`,\n              )}`}\n              hrefLang={userLanguage2}\n            />\n          ))}\n          {/*\n            Preconnect allows the browser to setup early connections before an HTTP request\n            is actually sent to the server.\n            This includes DNS lookups, TLS negotiations, TCP handshakes.\n          */}\n          <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossOrigin=\"anonymous\" />\n          <style id=\"material-icon-font\" />\n          <style id=\"font-awesome-css\" />\n          <style id=\"app-search\" />\n          <style id=\"prismjs\" />\n          <style id=\"insertion-point-jss\" />\n        </Head>\n        <body>\n          <Main />\n          <script\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\n                window.ga('create','${GOOGLE_ID}','auto');\n              `,\n            }}\n          />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. page.getInitialProps\n  // 2. document.getInitialProps\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the server with error:\n  // 2. document.getInitialProps\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. page.getInitialProps\n  // 3. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  let css = sheets.toString();\n  // It might be undefined, e.g. after an error.\n  if (css && process.env.NODE_ENV === 'production') {\n    const result1 = await prefixer.process(css, { from: undefined });\n    css = result1.css;\n    css = cleanCSS.minify(css).styles;\n  }\n\n  return {\n    ...initialProps,\n    canonical: pathnameToLanguage(ctx.req.url).canonical,\n    userLanguage: ctx.query.userLanguage || 'en',\n    styles: [\n      ...React.Children.toArray(initialProps.styles),\n      <style\n        id=\"jss-server-side\"\n        key=\"jss-server-side\"\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: css }}\n      />,\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}