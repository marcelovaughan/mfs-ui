{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Typography from \"../../../../packages/material-ui/src/Typography\";\nimport Link from \"../../../../packages/material-ui/src/Link\";\nimport Button from \"../../../../packages/material-ui/src/Button\";\n\nvar _ref = __jsx(Typography, {\n  color: \"error\",\n  component: \"p\",\n  variant: \"h5\",\n  gutterBottom: true\n}, \"This demo had a runtime error!\");\n\nvar _ref2 = __jsx(Typography, null, \"We would appreciate it if you report this error directly to our\", ' ', __jsx(Link, {\n  href: \"https://github.com/mui-org/material-ui/issues/new?template=1.bug.md\",\n  target: \"_blank\"\n}, \"issue tracker\"), \".\");\n\nexport default class DemoErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      error: null\n    });\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  render() {\n    const {\n      children,\n      onResetDemoClick,\n      t\n    } = this.props;\n    const {\n      error\n    } = this.state;\n\n    if (error) {\n      /* eslint-disable material-ui/no-hardcoded-labels */\n      return __jsx(\"div\", null, _ref, _ref2, __jsx(\"pre\", null, error.toString()), __jsx(Button, {\n        color: \"secondary\",\n        onClick: onResetDemoClick,\n        variant: \"text\"\n      }, t('resetDemo')));\n      /* eslint-enable material-ui/no-hardcoded-labels */\n    }\n\n    return children;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}