{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport Container from \"../../../../packages/material-ui/src/Container\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 80 + 16,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  }\n}));\nexport default function AppContainer(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  return __jsx(Container, _extends({\n    component: \"main\",\n    id: \"main-content\",\n    maxWidth: \"md\",\n    tabIndex: -1,\n    className: clsx(classes.root, className)\n  }, other));\n}","map":null,"metadata":{},"sourceType":"module"}