{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TextField from \"../../../../../packages/material-ui/src/TextField\";\nimport Autocomplete from \"../../../../../packages/material-ui-lab/src/Autocomplete\";\nimport useMediaQuery from \"../../../../../packages/material-ui/src/useMediaQuery\";\nimport ListSubheader from \"../../../../../packages/material-ui/src/ListSubheader\";\nimport { useTheme, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport { VariableSizeList } from 'react-window';\nimport { Typography } from \"../../../../../packages/material-ui/src\";\nvar LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n  var data = props.data,\n      index = props.index,\n      style = props.style;\n  return /*#__PURE__*/React.cloneElement(data[index], {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      top: style.top + LISTBOX_PADDING\n    })\n  });\n}\n\nvar OuterElementContext = React.createContext({});\nvar OuterElementType = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var outerProps = React.useContext(OuterElementContext);\n  return __jsx(\"div\", _extends({\n    ref: ref\n  }, props, outerProps));\n});\n\nfunction useResetCache(data) {\n  var ref = React.useRef(null);\n  React.useEffect(function () {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n} // Adapter for react-window\n\n\nvar ListboxComponent = /*#__PURE__*/React.forwardRef(function ListboxComponent(props, ref) {\n  var children = props.children,\n      other = _objectWithoutProperties(props, [\"children\"]);\n\n  var itemData = React.Children.toArray(children);\n  var theme = useTheme();\n  var smUp = useMediaQuery(theme.breakpoints.up('sm'), {\n    noSsr: true\n  });\n  var itemCount = itemData.length;\n  var itemSize = smUp ? 36 : 48;\n\n  var getChildSize = function getChildSize(child) {\n    if ( /*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) && child.type === ListSubheader) {\n      return 48;\n    }\n\n    return itemSize;\n  };\n\n  var getHeight = function getHeight() {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n\n    return itemData.map(getChildSize).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  };\n\n  var gridRef = useResetCache(itemCount);\n  return __jsx(\"div\", {\n    ref: ref\n  }, __jsx(OuterElementContext.Provider, {\n    value: other\n  }, __jsx(VariableSizeList, {\n    itemData: itemData,\n    height: getHeight() + 2 * LISTBOX_PADDING,\n    width: \"100%\",\n    ref: gridRef,\n    outerElementType: OuterElementType,\n    innerElementType: \"ul\",\n    itemSize: function itemSize(index) {\n      return getChildSize(itemData[index]);\n    },\n    overscanCount: 5,\n    itemCount: itemCount\n  }, renderRow)));\n});\n\nfunction random(length) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i += 1) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n\n  return result;\n}\n\nvar useStyles = makeStyles({\n  listbox: {\n    boxSizing: 'border-box',\n    '& ul': {\n      padding: 0,\n      margin: 0\n    }\n  }\n});\n\nvar OPTIONS = _Array$from(new Array(10000)).map(function () {\n  return random(10 + Math.ceil(Math.random() * 20));\n}).sort(function (a, b) {\n  return a.toUpperCase().localeCompare(b.toUpperCase());\n});\n\nvar renderGroup = function renderGroup(params) {\n  return [__jsx(ListSubheader, {\n    key: params.key,\n    component: \"div\"\n  }, params.group), params.children];\n};\n\nexport default function Virtualize() {\n  var classes = useStyles();\n  return __jsx(Autocomplete, {\n    id: \"virtualize-demo\",\n    style: {\n      width: 300\n    },\n    disableListWrap: true,\n    classes: classes,\n    ListboxComponent: ListboxComponent,\n    renderGroup: renderGroup,\n    options: OPTIONS,\n    groupBy: function groupBy(option) {\n      return option[0].toUpperCase();\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"outlined\",\n        label: \"10,000 options\"\n      }));\n    },\n    renderOption: function renderOption(option) {\n      return __jsx(Typography, {\n        noWrap: true\n      }, option);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}