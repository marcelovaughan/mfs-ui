{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport withWidth, { isWidthDown } from \"../withWidth\";\n/**\n * Dialog will responsively be full screen *at or below* the given breakpoint\n * (defaults to 'sm' for mobile devices).\n * Notice that this Higher-order Component is incompatible with server-side rendering.\n */\n\nconst withMobileDialog = (options = {}) => Component => {\n  const {\n    breakpoint = 'sm'\n  } = options;\n\n  function WithMobileDialog(props) {\n    return __jsx(Component, _extends({\n      fullScreen: isWidthDown(breakpoint, props.width)\n    }, props));\n  }\n\n  return withWidth()(WithMobileDialog);\n};\n\nexport default withMobileDialog;","map":null,"metadata":{},"sourceType":"module"}