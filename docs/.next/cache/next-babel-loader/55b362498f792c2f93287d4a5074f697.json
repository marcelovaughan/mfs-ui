{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardContent/CardContent.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n});\nCardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n};\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardContent/CardContent.js"],"names":["React","PropTypes","clsx","withStyles","styles","root","padding","paddingBottom","CardContent","forwardRef","props","ref","classes","className","component","Component","other","propTypes","children","node","object","string","elementType","name"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AAEA,OAAO,IAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJ,oBAAgB;AACdC,MAAAA,aAAa,EAAE;AADD;AAFZ;AAFc,CAAf;AAUP,IAAMC,WAAW,gBAAGR,KAAK,CAACS,UAAN,CAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AAAA,MAC5DC,OAD4D,GACGF,KADH,CAC5DE,OAD4D;AAAA,MACnDC,SADmD,GACGH,KADH,CACnDG,SADmD;AAAA,yBACGH,KADH,CACxCI,SADwC;AAAA,MAC7BC,SAD6B,iCACjB,KADiB;AAAA,MACPC,KADO,4BACGN,KADH;;AAGpE,SAAO,MAAC,SAAD;AAAW,IAAA,SAAS,EAAER,IAAI,CAACU,OAAO,CAACP,IAAT,EAAeQ,SAAf,CAA1B;AAAqD,IAAA,GAAG,EAAEF;AAA1D,KAAmEK,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAJmB,CAApB;AAMAR,WAAW,CAACS,SAAZ,GAAwB;AACtB;AACA;AACA;AACA;;AACA;;;AAGAC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB,IARE;;AAStB;;;;AAIAP,EAAAA,OAAO,EAAEX,SAAS,CAACmB,MAbG;;AActB;;;AAGAP,EAAAA,SAAS,EAAEZ,SAAS,CAACoB,MAjBC;;AAkBtB;;;;AAIAP,EAAAA,SAAS,EAAEb;AAAU;AAAD,GAAuCqB;AAtBrC,CAAxB;AAyBA,eAAenB,UAAU,CAACC,MAAD,EAAS;AAAEmB,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAA+Cf,WAA/C,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24,\n    },\n  },\n};\n\nconst CardContent = React.forwardRef(function CardContent(props, ref) {\n  const { classes, className, component: Component = 'div', ...other } = props;\n\n  return <Component className={clsx(classes.root, className)} ref={ref} {...other} />;\n});\n\nCardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n};\n\nexport default withStyles(styles, { name: 'MuiCardContent' })(CardContent);\n"]},"metadata":{},"sourceType":"module"}