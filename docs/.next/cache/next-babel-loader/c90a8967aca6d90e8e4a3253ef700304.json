{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/withStyles/withStyles.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from \"../../../material-ui-utils/src\";\nimport makeStyles from \"../makeStyles\";\nimport getThemeProps from \"../getThemeProps\";\nimport useTheme from \"../useTheme\"; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nvar withStyles = function withStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (Component) {\n    var defaultTheme = options.defaultTheme,\n        _options$withTheme = options.withTheme,\n        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,\n        name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n    if (true) {\n      if (Component === undefined) {\n        throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n\n    var classNamePrefix = name;\n\n    if (true) {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var useStyles = makeStyles(stylesOrCreator, _objectSpread({\n      defaultTheme: defaultTheme,\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n      var classesProp = props.classes,\n          innerRef = props.innerRef,\n          other = _objectWithoutProperties(props, [\"classes\", \"innerRef\"]); // The wrapper receives only user supplied props, which could be a subset of\n      // the actual props Component might receive due to merging with defaultProps.\n      // So copying it here would give us the same result in the wrapper as well.\n\n\n      var classes = useStyles(_objectSpread(_objectSpread({}, Component.defaultProps), props));\n      var theme;\n      var more = other;\n\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n\n        if (name) {\n          more = getThemeProps({\n            theme: theme,\n            name: name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n\n      return __jsx(Component, _extends({\n        ref: innerRef || ref,\n        classes: classes\n      }, more, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }\n      }));\n    });\n    WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: PropTypes.object,\n\n      /**\n       * Use that prop to pass a ref to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), function (props) {\n        if (props.innerRef == null) {\n          return null;\n        }\n\n        return null; // return new Error(\n        //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n        //     'Refs are now automatically forwarded to the inner component.',\n        // );\n      })\n    };\n\n    if (true) {\n      WithStyles.displayName = \"WithStyles(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithStyles, Component);\n\n    if (true) {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n\n    return WithStyles;\n  };\n};\n\nexport default withStyles;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/withStyles/withStyles.js"],"names":["React","PropTypes","hoistNonReactStatics","chainPropTypes","getDisplayName","makeStyles","getThemeProps","useTheme","withStyles","stylesOrCreator","options","Component","defaultTheme","withTheme","name","stylesOptions","undefined","Error","join","classNamePrefix","displayName","useStyles","WithStyles","forwardRef","props","ref","classesProp","classes","innerRef","other","defaultProps","theme","more","propTypes","object","oneOfType","func","Naked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme';\n\n// Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\nconst withStyles = (stylesOrCreator, options = {}) => (Component) => {\n  const { defaultTheme, withTheme = false, name, ...stylesOptions } = options;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Component === undefined) {\n      throw new Error(\n        [\n          'You are calling withStyles(styles)(Component) with an undefined component.',\n          'You may have forgotten to import it.',\n        ].join('\\n'),\n      );\n    }\n  }\n\n  let classNamePrefix = name;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!name) {\n      // Provide a better DX outside production.\n      const displayName = getDisplayName(Component);\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n  }\n\n  const useStyles = makeStyles(stylesOrCreator, {\n    defaultTheme,\n    Component,\n    name: name || Component.displayName,\n    classNamePrefix,\n    ...stylesOptions,\n  });\n\n  const WithStyles = React.forwardRef(function WithStyles(props, ref) {\n    const { classes: classesProp, innerRef, ...other } = props;\n    // The wrapper receives only user supplied props, which could be a subset of\n    // the actual props Component might receive due to merging with defaultProps.\n    // So copying it here would give us the same result in the wrapper as well.\n    const classes = useStyles({ ...Component.defaultProps, ...props });\n\n    let theme;\n    let more = other;\n\n    if (typeof name === 'string' || withTheme) {\n      // name and withTheme are invariant in the outer scope\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      theme = useTheme() || defaultTheme;\n\n      if (name) {\n        more = getThemeProps({ theme, name, props: other });\n      }\n\n      // Provide the theme to the wrapped component.\n      // So we don't have to use the `withTheme()` Higher-order Component.\n      if (withTheme && !more.theme) {\n        more.theme = theme;\n      }\n    }\n\n    return <Component ref={innerRef || ref} classes={classes} {...more} />;\n  });\n\n  WithStyles.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.object,\n    /**\n     * Use that prop to pass a ref to the decorated component.\n     * @deprecated\n     */\n    innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), (props) => {\n      if (props.innerRef == null) {\n        return null;\n      }\n\n      return null;\n      // return new Error(\n      //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n      //     'Refs are now automatically forwarded to the inner component.',\n      // );\n    }),\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithStyles, Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Exposed for test purposes.\n    WithStyles.Naked = Component;\n    WithStyles.options = options;\n    WithStyles.useStyles = useStyles;\n  }\n\n  return WithStyles;\n};\n\nexport default withStyles;\n"]},"metadata":{},"sourceType":"module"}