{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../../../packages/material-ui/src/styles\";\nimport Grid from \"../../../../../../packages/material-ui/src/Grid\";\nimport Typography from \"../../../../../../packages/material-ui/src/Typography\";\nimport Divider from \"../../../../../../packages/material-ui/src/Divider\";\nimport Markdown from \"./Markdown\";\nconst useStyles = makeStyles(theme => ({\n  markdown: _objectSpread(_objectSpread({}, theme.typography.body2), {}, {\n    padding: theme.spacing(3, 0)\n  })\n}));\n\nvar _ref = __jsx(Divider, null);\n\nexport default function Main(props) {\n  const classes = useStyles();\n  const {\n    posts,\n    title\n  } = props;\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, title), _ref, posts.map(post => __jsx(Markdown, {\n    className: classes.markdown,\n    key: post.substring(0, 40)\n  }, post)));\n}","map":null,"metadata":{},"sourceType":"module"}