{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js\";\nvar __jsx = React.createElement;\n/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\n\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport NotificationsIcon from \"../../../../packages/material-ui-icons/src/Notifications\";\nimport Tooltip from \"../../../../packages/material-ui/src/Tooltip\";\nimport CircularProgress from \"../../../../packages/material-ui/src/CircularProgress\";\nimport IconButton from \"../../../../packages/material-ui/src/IconButton\";\nimport Badge from \"../../../../packages/material-ui/src/Badge\";\nimport Typography from \"../../../../packages/material-ui/src/Typography\";\nimport Popper from \"../../../../packages/material-ui/src/Popper\";\nimport Grow from \"../../../../packages/material-ui/src/Grow\";\nimport Paper from \"../../../../packages/material-ui/src/Paper\";\nimport ClickAwayListener from \"../../../../packages/material-ui/src/ClickAwayListener\";\nimport List from \"../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../packages/material-ui/src/ListItem\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport sleep from \"../../../../modules/waterfall/sleep\";\nimport { getCookie } from \"../utils/helpers\";\nimport { ACTION_TYPES } from \"../constants\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      transformOrigin: 'top right'\n    },\n    list: {\n      width: theme.spacing(40),\n      maxHeight: theme.spacing(40),\n      overflow: 'auto'\n    },\n    listItem: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    loading: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(1, 0)\n    },\n    divider: {\n      margin: theme.spacing(1, 0)\n    }\n  };\n});\nexport default function Notifications() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var _React$useState2 = React.useState(false),\n      tooltipOpen = _React$useState2[0],\n      setTooltipOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var dispatch = useDispatch();\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n  var messages = useSelector(function (state) {\n    return state.notifications.messages;\n  });\n  var lastSeen = useSelector(function (state) {\n    return state.notifications.lastSeen;\n  });\n  var messageList = messages ? messages.filter(function (message) {\n    if (message.userLanguage && message.userLanguage !== userLanguage && message.userLanguage !== navigator.language.substring(0, 2)) {\n      return false;\n    }\n\n    return true;\n  }).reverse() : null;\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id\n        }\n      });\n      document.cookie = \"lastSeenNotification=\".concat(messageList[0].id, \";path=/;max-age=31536000\");\n    }\n  };\n\n  React.useEffect(function () {\n    var active = true; // Prevent search engines from indexing the notification.\n\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newMessages, result, seen, lastSeenNotification;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return sleep(1500);\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json');\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return result.json();\n\n            case 8:\n              newMessages = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 13:\n              if (active) {\n                seen = getCookie('lastSeenNotification');\n                lastSeenNotification = seen === '' ? 0 : _parseInt(seen, 10);\n                dispatch({\n                  type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n                  payload: {\n                    messages: newMessages || [],\n                    lastSeen: lastSeenNotification\n                  }\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, __jsx(Tooltip, {\n    open: tooltipOpen,\n    onOpen: function onOpen() {\n      setTooltipOpen(!open);\n    },\n    onClose: function onClose() {\n      setTooltipOpen(false);\n    },\n    title: t('toggleNotifications'),\n    enterDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    ref: anchorRef,\n    \"aria-controls\": open ? 'notifications-popup' : undefined,\n    \"aria-haspopup\": \"true\",\n    \"aria-label\": t('toggleNotifications'),\n    onClick: handleToggle,\n    \"data-ga-event-category\": \"AppBar\",\n    \"data-ga-event-action\": \"toggleNotifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Badge, {\n    color: \"secondary\",\n    badgeContent: messageList ? messageList.reduce(function (count, message) {\n      return message.id > lastSeen ? count + 1 : count;\n    }, 0) : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), __jsx(Popper, {\n    id: \"notifications-popup\",\n    anchorEl: anchorRef.current,\n    open: open,\n    placement: \"bottom-end\",\n    transition: true,\n    disablePortal: true,\n    role: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps;\n    return __jsx(ClickAwayListener, {\n      onClickAway: function onClickAway() {\n        setOpen(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, __jsx(Grow, _extends({\n      \"in\": open\n    }, TransitionProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), __jsx(Paper, {\n      className: classes.paper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, __jsx(List, {\n      className: classes.list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, messageList ? messageList.map(function (message, index) {\n      return __jsx(React.Fragment, {\n        key: message.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }\n      }, __jsx(ListItem, {\n        alignItems: \"flex-start\",\n        className: classes.listItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 27\n        }\n      }, message.title), __jsx(Typography, {\n        gutterBottom: true,\n        variant: \"body2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }\n      }, __jsx(\"span\", {\n        id: \"notification-message\",\n        dangerouslySetInnerHTML: {\n          __html: message.text\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      })), message.date && __jsx(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, new Date(message.date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }))), index < messageList.length - 1 ? __jsx(Divider, {\n        className: classes.divider,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }) : null);\n    }) : __jsx(\"div\", {\n      className: classes.loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, __jsx(CircularProgress, {\n      size: 32,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }))))));\n  }));\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js"],"names":["useStyles","makeStyles","paper","transformOrigin","list","width","theme","maxHeight","overflow","listItem","display","flexDirection","loading","justifyContent","margin","divider","classes","open","setOpen","React","tooltipOpen","setTooltipOpen","anchorRef","t","useSelector","state","dispatch","useDispatch","userLanguage","messages","lastSeen","messageList","message","navigator","handleToggle","type","ACTION_TYPES","payload","id","document","active","sleep","result","fetch","newMessages","seen","getCookie","lastSeenNotification","count","TransitionProps","__html","text","year","month","day"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Popper from '@material-ui/core/Popper';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport sleep from 'modules/waterfall/sleep';\nimport { getCookie } from 'docs/src/modules/utils/helpers';\nimport { ACTION_TYPES } from 'docs/src/modules/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    transformOrigin: 'top right',\n  },\n  list: {\n    width: theme.spacing(40),\n    maxHeight: theme.spacing(40),\n    overflow: 'auto',\n  },\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(1, 0),\n  },\n  divider: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nexport default function Notifications() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const t = useSelector((state) => state.options.t);\n  const dispatch = useDispatch();\n  const userLanguage = useSelector((state) => state.options.userLanguage);\n  const messages = useSelector((state) => state.notifications.messages);\n  const lastSeen = useSelector((state) => state.notifications.lastSeen);\n\n  const messageList = messages\n    ? messages\n        .filter((message) => {\n          if (\n            message.userLanguage &&\n            message.userLanguage !== userLanguage &&\n            message.userLanguage !== navigator.language.substring(0, 2)\n          ) {\n            return false;\n          }\n          return true;\n        })\n        .reverse()\n    : null;\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id,\n        },\n      });\n      document.cookie = `lastSeenNotification=${messageList[0].id};path=/;max-age=31536000`;\n    }\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    // Prevent search engines from indexing the notification.\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1500); // Soften the pressure on the main thread.\n      let newMessages;\n      try {\n        const result = await fetch(\n          'https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json',\n        );\n        newMessages = await result.json();\n      } catch (err) {\n        // Swallow the exceptions, e.g. rate limit\n      }\n\n      if (active) {\n        const seen = getCookie('lastSeenNotification');\n        const lastSeenNotification = seen === '' ? 0 : parseInt(seen, 10);\n\n        dispatch({\n          type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n          payload: {\n            messages: newMessages || [],\n            lastSeen: lastSeenNotification,\n          },\n        });\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        open={tooltipOpen}\n        onOpen={() => {\n          setTooltipOpen(!open);\n        }}\n        onClose={() => {\n          setTooltipOpen(false);\n        }}\n        title={t('toggleNotifications')}\n        enterDelay={300}\n      >\n        <IconButton\n          color=\"inherit\"\n          ref={anchorRef}\n          aria-controls={open ? 'notifications-popup' : undefined}\n          aria-haspopup=\"true\"\n          aria-label={t('toggleNotifications')}\n          onClick={handleToggle}\n          data-ga-event-category=\"AppBar\"\n          data-ga-event-action=\"toggleNotifications\"\n        >\n          <Badge\n            color=\"secondary\"\n            badgeContent={\n              messageList\n                ? messageList.reduce(\n                    (count, message) => (message.id > lastSeen ? count + 1 : count),\n                    0,\n                  )\n                : 0\n            }\n          >\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n      <Popper\n        id=\"notifications-popup\"\n        anchorEl={anchorRef.current}\n        open={open}\n        placement=\"bottom-end\"\n        transition\n        disablePortal\n        role={undefined}\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener\n            onClickAway={() => {\n              setOpen(false);\n            }}\n          >\n            <Grow in={open} {...TransitionProps}>\n              <Paper className={classes.paper}>\n                <List className={classes.list}>\n                  {messageList ? (\n                    messageList.map((message, index) => (\n                      <React.Fragment key={message.id}>\n                        <ListItem alignItems=\"flex-start\" className={classes.listItem}>\n                          <Typography gutterBottom>{message.title}</Typography>\n                          <Typography gutterBottom variant=\"body2\">\n                            <span\n                              id=\"notification-message\"\n                              dangerouslySetInnerHTML={{ __html: message.text }}\n                            />\n                          </Typography>\n                          {message.date && (\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                              {new Date(message.date).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </Typography>\n                          )}\n                        </ListItem>\n                        {index < messageList.length - 1 ? (\n                          <Divider className={classes.divider} />\n                        ) : null}\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <div className={classes.loading}>\n                      <CircularProgress size={32} />\n                    </div>\n                  )}\n                </List>\n              </Paper>\n            </Grow>\n          </ClickAwayListener>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}