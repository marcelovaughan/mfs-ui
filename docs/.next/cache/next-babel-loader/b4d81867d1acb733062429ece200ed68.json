{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nvar useEnhancedEffect = true && true ? React.useLayoutEffect : React.useEffect;\nexport var AdContext = React.createContext(); // Persisted for the whole session.\n// The state is used to use different ad placements.\n\nvar randomSession1 = Math.random();\nvar randomSession2 = Math.random(); // Distribution profile:\n// 25% body-image\n// 25% body-inline\n// 25% tocs-bottom-image\n// 25% tocs-top-image\n\nexport var adPlacement = randomSession1 < 0.5 ? 'body' : \"tocs-\".concat(randomSession1 < 0.75 ? 'top' : 'bottom');\nexport var adShape = randomSession1 < 0.5 && randomSession2 < 0.5 ? 'inline' : 'image';\nexport default function AdManager(props) {\n  var _React$useState = React.useState({}),\n      portal = _React$useState[0],\n      setPortal = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (adPlacement !== 'body' || typeof IntersectionObserver === 'undefined' || !Array.prototype.findIndex) {\n      return undefined;\n    }\n\n    var description = document.querySelector('.description');\n    setPortal({\n      placement: 'body-top',\n      element: description\n    });\n    var nodes = [description].concat(_toConsumableArray(_Array$from(document.querySelectorAll('[data-ad=\"slot\"]')))).map(function (element) {\n      return {\n        element: element,\n        offsetTop: element.offsetTop\n      };\n    });\n    var lastPosition;\n    var selectedNodes = nodes.filter(function (node, index) {\n      if (index === 0) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n\n      if (node.offsetTop - lastPosition > window.innerHeight * 4) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n\n      return false;\n    });\n    var footer = nodes[nodes.length - 1];\n\n    if (selectedNodes.length > 1 && selectedNodes.indexOf(footer) === -1) {\n      selectedNodes[selectedNodes.length - 1] = footer;\n    }\n\n    var observer = new IntersectionObserver(function (entries) {\n      if (entries[0].isIntersecting) {\n        var element = entries[0].target;\n        var index = selectedNodes.findIndex(function (node) {\n          return node.element === element;\n        });\n        var placement;\n\n        if (index === 0) {\n          placement = 'body-top';\n        } else if (index === selectedNodes.length - 1) {\n          placement = 'body-bottom';\n        } else {\n          placement = \"body-\".concat(index);\n        }\n\n        setPortal({\n          placement: placement,\n          element: element\n        });\n      }\n    });\n    selectedNodes.forEach(function (node, index) {\n      if (index !== 0 && !node.element.style.height) {\n        node.element.style.height = '130px';\n      }\n\n      observer.observe(node.element);\n    });\n    return function () {\n      observer.disconnect();\n    };\n  }, []);\n  return __jsx(AdContext.Provider, {\n    value: {\n      portal: portal\n    }\n  }, props.children);\n}","map":null,"metadata":{},"sourceType":"module"}