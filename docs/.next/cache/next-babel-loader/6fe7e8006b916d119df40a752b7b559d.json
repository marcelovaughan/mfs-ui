{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport InputLabel from \"../../../../../packages/material-ui/src/InputLabel\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport Select from \"../../../../../packages/material-ui/src/Select\";\nimport Card from \"../../../../../packages/material-ui/src/Card\";\nimport CardMedia from \"../../../../../packages/material-ui/src/CardMedia\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport IconButton from \"../../../../../packages/material-ui/src/IconButton\";\nimport GitHubIcon from \"../../../../../packages/material-ui-icons/src/GitHub\";\nimport Link from \"../../../modules/components/Link\";\nimport appList from \"./appList\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    formControl: {\n      marginBottom: theme.spacing(4),\n      minWidth: 120\n    },\n    title: {\n      marginBottom: theme.spacing(2)\n    },\n    card: {\n      marginBottom: theme.spacing(1),\n      maxWidth: 600\n    },\n    description: {\n      marginBottom: theme.spacing(6),\n      maxWidth: 600\n    },\n    cardMedia: {\n      paddingTop: '75%' // 4:3\n\n    }\n  };\n};\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n} // Returns a function that sorts reverse numerically by value of `key`\n\n\nfunction sortFactory(key) {\n  return function sortNumeric(a, b) {\n    if (b[key] < a[key]) {\n      return -1;\n    }\n\n    if (b[key] > a[key]) {\n      return 1;\n    }\n\n    return 0;\n  };\n}\n\nvar sortFunctions = {\n  dateAdded: sortFactory('dateAdded'),\n  similarWebVisits: sortFactory('similarWebVisits'),\n  stars: sortFactory('stars')\n};\n\nvar _ref = __jsx(InputLabel, {\n  htmlFor: \"sort\"\n}, \"Sort by\");\n\nvar _ref2 = __jsx(GitHubIcon, null);\n\nfunction Showcase(props) {\n  var classes = props.classes;\n\n  var _React$useState = React.useState('dateAdded'),\n      sortFunctionName = _React$useState[0],\n      setSortFunctionName = _React$useState[1];\n\n  var sortFunction = sortFunctions[sortFunctionName];\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n\n  var handleChangeSort = function handleChangeSort(event) {\n    setSortFunctionName(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, _ref, __jsx(Select, {\n    value: sortFunctionName,\n    onChange: handleChangeSort,\n    inputProps: {\n      id: 'sort'\n    }\n  }, __jsx(MenuItem, {\n    value: \"dateAdded\"\n  }, t('newest')), __jsx(MenuItem, {\n    value: \"similarWebVisits\"\n  }, t('traffic')), __jsx(MenuItem, {\n    value: \"stars\"\n  }, t('stars')))), stableSort(appList.filter(function (item) {\n    return item[sortFunctionName] !== undefined;\n  }), sortFunction).map(function (app) {\n    return __jsx(\"div\", {\n      key: app.title\n    }, __jsx(Typography, {\n      component: \"h2\",\n      variant: \"h4\",\n      gutterBottom: true,\n      className: classes.title\n    }, __jsx(\"span\", null, app.title), app.source ? __jsx(IconButton, {\n      href: app.source,\n      target: \"_blank\",\n      \"aria-label\": \"\".concat(app.title, \" \").concat(t('sourceCode'))\n    }, _ref2) : null), app.image ? __jsx(Card, {\n      className: classes.card\n    }, __jsx(CardMedia, {\n      component: \"a\",\n      href: app.link,\n      rel: \"noopener\",\n      target: \"_blank\",\n      className: classes.cardMedia,\n      image: \"/static/images/showcase/\".concat(app.image),\n      title: app.title\n    })) : __jsx(Link, {\n      variant: \"body2\",\n      target: \"_blank\",\n      rel: \"noopener nofollow\",\n      href: app.link,\n      gutterBottom: true\n    }, t('visit')), __jsx(Typography, {\n      gutterBottom: true\n    }, app.description), __jsx(Typography, {\n      variant: \"caption\",\n      display: \"block\",\n      color: \"textSecondary\",\n      className: classes.description\n    }, app.dateAdded));\n  }));\n}\n\nexport default withStyles(styles)(Showcase);","map":null,"metadata":{},"sourceType":"module"}