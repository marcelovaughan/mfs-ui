{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Slide/Slide.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from \"../utils/debounce\";\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from \"../../../material-ui-utils/src\";\nimport useForkRef from \"../utils/useForkRef\";\nimport useTheme from \"../styles/useTheme\";\nimport { duration } from \"../styles/transitions\";\nimport { reflow, getTransitionProps } from \"../transitions/utils\"; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = _parseInt(transformValues[4], 10);\n    offsetY = _parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props[\"in\"],\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return __jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    \"in\": inProp,\n    timeout: timeout\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _objectSpread({\n      ref: handleRef,\n      style: _objectSpread(_objectSpread({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style), children.props.style)\n    }, childProps));\n  });\n});\nSlide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  \"in\": PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n};\nexport default Slide;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Slide/Slide.js"],"names":["React","PropTypes","ReactDOM","debounce","Transition","elementAcceptingRef","useForkRef","useTheme","duration","reflow","getTransitionProps","getTranslateValue","direction","node","rect","getBoundingClientRect","transform","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","innerWidth","left","width","innerHeight","top","height","setTranslateValue","style","webkitTransform","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Slide","forwardRef","props","ref","children","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","other","theme","childrenRef","useRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRefIntermediary","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","handleEntering","transitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","useEffect","handleResize","addEventListener","clear","removeEventListener","state","childProps","cloneElement","visibility","propTypes","oneOf","bool","func","object","oneOfType","number","shape","appear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\n\n// Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = window.getComputedStyle(node);\n    transform =\n      computedStyle.getPropertyValue('-webkit-transform') ||\n      computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${window.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${window.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  }\n\n  // direction === 'down'\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen,\n};\n\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Slide = React.forwardRef(function Slide(props, ref) {\n  const {\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n  const handleOwnRef = React.useCallback((instance) => {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = (callback) => (isAppearing) => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps(\n      { timeout, style },\n      {\n        mode: 'enter',\n      },\n    );\n\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.easeOut,\n    });\n\n    node.style.transition = theme.transitions.create('transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.easeOut,\n    });\n\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps(\n      { timeout, style },\n      {\n        mode: 'exit',\n      },\n    );\n\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.sharp,\n    });\n\n    node.style.transition = theme.transitions.create('transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.sharp,\n    });\n\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n\n  const handleExited = normalizedTransitionCallback((node) => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n\n  return (\n    <TransitionComponent\n      nodeRef={childrenRef}\n      onEnter={handleEnter}\n      onEntered={handleEntered}\n      onEntering={handleEntering}\n      onExit={handleExit}\n      onExited={handleExited}\n      onExiting={handleExiting}\n      appear\n      in={inProp}\n      timeout={timeout}\n      {...other}\n    >\n      {(state, childProps) => {\n        return React.cloneElement(children, {\n          ref: handleRef,\n          style: {\n            visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n            ...style,\n            ...children.props.style,\n          },\n          ...childProps,\n        });\n      }}\n    </TransitionComponent>\n  );\n});\n\nSlide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      appear: PropTypes.number,\n      enter: PropTypes.number,\n      exit: PropTypes.number,\n    }),\n  ]),\n};\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}