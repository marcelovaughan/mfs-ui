{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n\n/* eslint-disable no-underscore-dangle */\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport optionsReducer from \"./optionsReducer\";\nimport notificationsReducer from \"./notificationsReducer\";\nimport { createLogger } from 'redux-logger'; // Get the Redux DevTools extension and fallback to a no-op function\n\nvar devtools = function devtools(x) {\n  return x;\n};\n\nif (false && true && window.__REDUX_DEVTOOLS_EXTENSION__) {\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\n}\n\nexport default function create(initialState) {\n  var middleware = [];\n\n  if (false && true && !window.__REDUX_DEVTOOLS_EXTENSION__ && // redux-logger needs this feature\n  Object.hasOwnProperty('assign')) {\n    middleware = [].concat(_toConsumableArray(middleware), [createLogger()]);\n  }\n\n  return createStore(combineReducers({\n    options: optionsReducer,\n    notifications: notificationsReducer\n  }), initialState, // Hydrate the store with server-side data\n  compose(applyMiddleware.apply(void 0, _toConsumableArray(middleware)), devtools));\n}","map":null,"metadata":{},"sourceType":"module"}