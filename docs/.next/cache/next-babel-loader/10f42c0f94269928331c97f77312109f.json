{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { withStyles } from \"../../../../packages/material-ui/src/styles\";\nimport ChevronRightIcon from \"../../../../packages/material-ui-icons/src/ChevronRight\";\nimport ChevronLeftIcon from \"../../../../packages/material-ui-icons/src/ChevronLeft\";\nimport Button from \"../../../../packages/material-ui/src/Button\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport Head from \"./Head\";\nimport AppFrame from \"./AppFrame\";\nimport EditPage from \"./EditPage\";\nimport AppContainer from \"./AppContainer\";\nimport PageContext from \"./PageContext\";\nimport { pageToTitleI18n } from \"../utils/helpers\";\nimport Link from \"./Link\";\nimport { exactProp } from \"../../../../packages/material-ui-utils/src\";\nimport { SOURCE_CODE_ROOT_URL } from \"../constants\";\nimport Demo from \"./Demo\";\nimport AppTableOfContents from \"./AppTableOfContents\";\nimport MarkdownElement from \"./MarkdownElement\";\nimport Ad from \"./Ad\";\nimport AdManager from \"./AdManager\";\nimport AdGuest from \"./AdGuest\";\n\nfunction flattenPages(pages) {\n  var current = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return pages.reduce(function (items, item) {\n    if (item.children && item.children.length > 1) {\n      items = flattenPages(item.children, items);\n    } else {\n      items.push(item.children && item.children.length === 1 ? item.children[0] : item);\n    }\n\n    return items;\n  }, current);\n} // To replace with .findIndex() once we stop IE 11 support.\n\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar styles = function styles(theme) {\n  var _toc;\n\n  return {\n    root: {\n      width: '100%'\n    },\n    container: {\n      position: 'relative'\n    },\n    actions: {\n      position: 'absolute',\n      right: 16,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end'\n    },\n    ad: {\n      '& .description': {\n        marginBottom: 198\n      },\n      '& .description.ad': {\n        marginBottom: 40\n      }\n    },\n    toc: (_toc = {}, _defineProperty(_toc, theme.breakpoints.up('sm'), {\n      width: 'calc(100% - 175px)'\n    }), _defineProperty(_toc, theme.breakpoints.up('lg'), {\n      width: 'calc(100% - 175px - 240px)'\n    }), _toc),\n    footer: {\n      marginTop: theme.spacing(12)\n    },\n    pagination: {\n      margin: theme.spacing(3, 0, 4),\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    pageLinkButton: {\n      textTransform: 'none',\n      fontWeight: theme.typography.fontWeightRegular\n    }\n  };\n};\n\nvar _ref2 = __jsx(AdGuest, null, __jsx(Ad, {\n  placement: \"body\"\n}));\n\nvar _ref3 = __jsx(\"div\", {\n  \"data-ad\": \"slot\"\n});\n\nvar _ref4 = __jsx(Divider, null);\n\nvar _ref5 = __jsx(ChevronLeftIcon, null);\n\nvar _ref6 = __jsx(\"div\", null);\n\nvar _ref7 = __jsx(ChevronRightIcon, null);\n\nfunction MarkdownDocs(props) {\n  var classes = props.classes,\n      _props$disableAd = props.disableAd,\n      disableAd = _props$disableAd === void 0 ? false : _props$disableAd,\n      _props$disableToc = props.disableToc,\n      disableToc = _props$disableToc === void 0 ? false : _props$disableToc,\n      _props$demos = props.demos,\n      demos = _props$demos === void 0 ? {} : _props$demos,\n      docs = props.docs,\n      requireDemo = props.requireDemo;\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n\n  var _ref = docs[userLanguage] || docs.en,\n      description = _ref.description,\n      location = _ref.location,\n      rendered = _ref.rendered,\n      title = _ref.title,\n      toc = _ref.toc;\n\n  if (description === undefined) {\n    throw new Error('Missing description in the page');\n  }\n\n  var _React$useContext = React.useContext(PageContext),\n      activePage = _React$useContext.activePage,\n      pages = _React$useContext.pages;\n\n  var pageList = flattenPages(pages);\n  var currentPageNum = findIndex(pageList, function (page) {\n    return page.pathname === (activePage === null || activePage === void 0 ? void 0 : activePage.pathname);\n  });\n  var currentPage = pageList[currentPageNum];\n  var prevPage = pageList[currentPageNum - 1];\n  var nextPage = pageList[currentPageNum + 1];\n  return __jsx(AppFrame, null, __jsx(AdManager, null, __jsx(Head, {\n    title: \"\".concat(title, \" - Material-UI\"),\n    description: description\n  }), disableAd ? null : _ref2, __jsx(\"div\", {\n    className: clsx(classes.root, !disableAd && classes.ad, !disableToc && classes.toc)\n  }, __jsx(AppContainer, {\n    className: classes.container\n  }, __jsx(\"div\", {\n    className: classes.actions\n  }, __jsx(EditPage, {\n    markdownLocation: location\n  })), rendered.map(function (renderedMarkdownOrDemo, index) {\n    if (typeof renderedMarkdownOrDemo === 'string') {\n      var renderedMarkdown = renderedMarkdownOrDemo;\n      return __jsx(MarkdownElement, {\n        key: index,\n        renderedMarkdown: renderedMarkdown\n      });\n    }\n\n    var demoOptions = renderedMarkdownOrDemo;\n    var name = demoOptions.demo;\n    var demo = demos === null || demos === void 0 ? void 0 : demos[name];\n\n    if (demo === undefined) {\n      var errorMessage = [\"Missing demo: \".concat(name, \". You can use one of the following:\"), _Object$keys(demos)].join('\\n');\n\n      if (userLanguage === 'en') {\n        throw new Error(errorMessage);\n      }\n\n      if (false) {\n        console.error(errorMessage);\n      }\n\n      var warnIcon = __jsx(\"span\", {\n        role: \"img\",\n        \"aria-label\": t('emojiWarning')\n      }, \"\\u26A0\\uFE0F\");\n\n      return __jsx(\"div\", {\n        key: index\n      }, warnIcon, \" Missing demo `\", name, \"` \", warnIcon);\n    }\n\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(Demo, {\n      demo: {\n        raw: demo.raw,\n        js: requireDemo(demo.module)[\"default\"],\n        rawTS: demo.rawTS,\n        tsx: demo.moduleTS ? requireDemo(demo.moduleTS)[\"default\"] : null\n      },\n      demoOptions: demoOptions,\n      githubLocation: \"\".concat(SOURCE_CODE_ROOT_URL, \"/docs/src/\").concat(name)\n    }));\n  }), _ref3, __jsx(\"footer\", {\n    className: classes.footer\n  }, !currentPage || currentPage.displayNav === false || nextPage.displayNav === false && !prevPage ? null : __jsx(React.Fragment, null, _ref4, __jsx(\"div\", {\n    className: classes.pagination\n  }, prevPage ? __jsx(Button, {\n    component: Link,\n    naked: true,\n    href: prevPage.pathname,\n    size: \"large\",\n    className: classes.pageLinkButton,\n    startIcon: _ref5\n  }, pageToTitleI18n(prevPage, t)) : _ref6, nextPage.displayNav === false ? null : __jsx(Button, {\n    component: Link,\n    naked: true,\n    href: nextPage.pathname,\n    size: \"large\",\n    className: classes.pageLinkButton,\n    endIcon: _ref7\n  }, pageToTitleI18n(nextPage, t))))))), disableToc ? null : __jsx(AppTableOfContents, {\n    items: toc\n  })));\n}\n\nif (false) {}\n\nexport default withStyles(styles)(MarkdownDocs);","map":null,"metadata":{},"sourceType":"module"}