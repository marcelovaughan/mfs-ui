{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(_Array$isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/InputBase/utils.js"],"names":["hasValue","value","length","isFilled","obj","SSR","defaultValue","isAdornedStart","startAdornment"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAOA,KAAK,IAAI,IAAT,IAAiB,EAAE,eAAcA,KAAd,KAAwBA,KAAK,CAACC,MAAN,KAAiB,CAA3C,CAAxB;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAoC;AAAA,MAAbC,GAAa,uEAAP,KAAO;AACzC,SACED,GAAG,KACDJ,QAAQ,CAACI,GAAG,CAACH,KAAL,CAAR,IAAuBG,GAAG,CAACH,KAAJ,KAAc,EAAtC,IACEI,GAAG,IAAIL,QAAQ,CAACI,GAAG,CAACE,YAAL,CAAf,IAAqCF,GAAG,CAACE,YAAJ,KAAqB,EAF1D,CADL;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBH,GAAxB,EAA6B;AAClC,SAAOA,GAAG,CAACI,cAAX;AACD","sourcesContent":["// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nexport function isFilled(obj, SSR = false) {\n  return (\n    obj &&\n    ((hasValue(obj.value) && obj.value !== '') ||\n      (SSR && hasValue(obj.defaultValue) && obj.defaultValue !== ''))\n  );\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}\n"]},"metadata":{},"sourceType":"module"}