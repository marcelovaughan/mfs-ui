{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport FormLabel from \"../../../../../packages/material-ui/src/FormLabel\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport RadioGroup from \"../../../../../packages/material-ui/src/RadioGroup\";\nimport Radio from \"../../../../../packages/material-ui/src/Radio\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport HighlightedCode from \"../../../modules/components/HighlightedCode\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    demo: {\n      height: 240\n    },\n    paper: {\n      padding: theme.spacing(2),\n      height: '100%',\n      color: theme.palette.text.secondary\n    },\n    control: {\n      padding: theme.spacing(2)\n    }\n  };\n});\n\nvar _ref = __jsx(FormLabel, null, \"direction\");\n\nvar _ref2 = __jsx(FormControlLabel, {\n  value: \"row\",\n  control: __jsx(Radio, null),\n  label: \"row\"\n});\n\nvar _ref3 = __jsx(FormControlLabel, {\n  value: \"row-reverse\",\n  control: __jsx(Radio, null),\n  label: \"row-reverse\"\n});\n\nvar _ref4 = __jsx(FormControlLabel, {\n  value: \"column\",\n  control: __jsx(Radio, null),\n  label: \"column\"\n});\n\nvar _ref5 = __jsx(FormControlLabel, {\n  value: \"column-reverse\",\n  control: __jsx(Radio, null),\n  label: \"column-reverse\"\n});\n\nvar _ref6 = __jsx(FormLabel, null, \"justify\");\n\nvar _ref7 = __jsx(FormControlLabel, {\n  value: \"flex-start\",\n  control: __jsx(Radio, null),\n  label: \"flex-start\"\n});\n\nvar _ref8 = __jsx(FormControlLabel, {\n  value: \"center\",\n  control: __jsx(Radio, null),\n  label: \"center\"\n});\n\nvar _ref9 = __jsx(FormControlLabel, {\n  value: \"flex-end\",\n  control: __jsx(Radio, null),\n  label: \"flex-end\"\n});\n\nvar _ref10 = __jsx(FormControlLabel, {\n  value: \"space-between\",\n  control: __jsx(Radio, null),\n  label: \"space-between\"\n});\n\nvar _ref11 = __jsx(FormControlLabel, {\n  value: \"space-around\",\n  control: __jsx(Radio, null),\n  label: \"space-around\"\n});\n\nvar _ref12 = __jsx(FormControlLabel, {\n  value: \"space-evenly\",\n  control: __jsx(Radio, null),\n  label: \"space-evenly\"\n});\n\nvar _ref13 = __jsx(FormLabel, null, \"alignItems\");\n\nvar _ref14 = __jsx(FormControlLabel, {\n  value: \"flex-start\",\n  control: __jsx(Radio, null),\n  label: \"flex-start\"\n});\n\nvar _ref15 = __jsx(FormControlLabel, {\n  value: \"center\",\n  control: __jsx(Radio, null),\n  label: \"center\"\n});\n\nvar _ref16 = __jsx(FormControlLabel, {\n  value: \"flex-end\",\n  control: __jsx(Radio, null),\n  label: \"flex-end\"\n});\n\nvar _ref17 = __jsx(FormControlLabel, {\n  value: \"stretch\",\n  control: __jsx(Radio, null),\n  label: \"stretch\"\n});\n\nvar _ref18 = __jsx(FormControlLabel, {\n  value: \"baseline\",\n  control: __jsx(Radio, null),\n  label: \"baseline\"\n});\n\nexport default function InteractiveGrid() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState('row'),\n      direction = _React$useState[0],\n      setDirection = _React$useState[1];\n\n  var _React$useState2 = React.useState('center'),\n      justify = _React$useState2[0],\n      setJustify = _React$useState2[1];\n\n  var _React$useState3 = React.useState('center'),\n      alignItems = _React$useState3[0],\n      setAlignItems = _React$useState3[1];\n\n  var jsx = \"\\n<Grid\\n  container\\n  direction=\\\"\".concat(direction, \"\\\"\\n  justify=\\\"\").concat(justify, \"\\\"\\n  alignItems=\\\"\").concat(alignItems, \"\\\"\\n>\\n\");\n  return __jsx(Grid, {\n    container: true,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.demo,\n    alignItems: alignItems,\n    direction: direction,\n    justify: justify\n  }, [0, 1, 2].map(function (value) {\n    return __jsx(Grid, {\n      key: value,\n      item: true\n    }, __jsx(Paper, {\n      className: classes.paper,\n      style: {\n        paddingTop: (value + 1) * 10,\n        paddingBottom: (value + 1) * 10\n      }\n    }, \"Cell \".concat(value + 1)));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Paper, {\n    className: classes.control\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref, __jsx(RadioGroup, {\n    row: true,\n    name: \"direction\",\n    \"aria-label\": \"direction\",\n    value: direction,\n    onChange: function onChange(event) {\n      setDirection(event.target.value);\n    }\n  }, _ref2, _ref3, _ref4, _ref5))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref6, __jsx(RadioGroup, {\n    row: true,\n    name: \"justify\",\n    \"aria-label\": \"justify\",\n    value: justify,\n    onChange: function onChange(event) {\n      setJustify(event.target.value);\n    }\n  }, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref13, __jsx(RadioGroup, {\n    row: true,\n    name: \"alignItems\",\n    \"aria-label\": \"align items\",\n    value: alignItems,\n    onChange: function onChange(event) {\n      setAlignItems(event.target.value);\n    }\n  }, _ref14, _ref15, _ref16, _ref17, _ref18)))))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(HighlightedCode, {\n    code: jsx,\n    language: \"jsx\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}