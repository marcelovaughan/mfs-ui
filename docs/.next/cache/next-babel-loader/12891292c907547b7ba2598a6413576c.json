{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Box from \"../../../../../packages/material-ui/src/Box\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Popover from \"../../../../../packages/material-ui/src/Popover\";\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\n\nvar _ref = __jsx(Box, {\n  p: 2\n}, __jsx(Typography, null, \"The content of the Popover.\"));\n\nexport default function PopoverPopupState() {\n  return __jsx(PopupState, {\n    variant: \"popover\",\n    popupId: \"demo-popup-popover\"\n  }, popupState => __jsx(\"div\", null, __jsx(Button, _extends({\n    variant: \"contained\",\n    color: \"primary\"\n  }, bindTrigger(popupState)), \"Open Popover\"), __jsx(Popover, _extends({}, bindPopover(popupState), {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }), _ref)));\n}","map":null,"metadata":{},"sourceType":"module"}