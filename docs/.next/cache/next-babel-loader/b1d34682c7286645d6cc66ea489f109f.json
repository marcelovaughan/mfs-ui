{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Switch/Switch.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from \"../../../material-ui-utils/src\";\nimport withStyles from \"../styles/withStyles\";\nimport { fade } from \"../styles/colorManipulator\";\nimport capitalize from \"../utils/capitalize\";\nimport SwitchBase from \"../internal/SwitchBase\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    verticalAlign: 'middle',\n    // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8\n  },\n\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    // Render above the focus ripple.\n    color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)'\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      opacity: 0.5\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main\n    },\n    '&$disabled + $track': {\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%'\n  },\n\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n  }\n});\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  const icon = __jsx(\"span\", {\n    className: classes.thumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }\n  });\n\n  return __jsx(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[`size${capitalize(size)}`]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, __jsx(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  })), __jsx(\"span\", {\n    className: classes.track,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }));\n});\nSwitch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n};\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Switch/Switch.js"],"names":["React","PropTypes","clsx","refType","withStyles","fade","capitalize","SwitchBase","styles","theme","root","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","edgeStart","marginLeft","edgeEnd","marginRight","switchBase","top","left","color","palette","type","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","checked","disabled","input","thumb","boxShadow","shadows","borderRadius","track","Switch","forwardRef","props","ref","classes","className","edge","size","other","icon","propTypes","bool","checkedIcon","node","object","string","oneOf","defaultChecked","disableRipple","id","inputProps","inputRef","onChange","func","required","value","any","name"],"mappings":"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","sourcesContent":["// @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 34 + 12 * 2,\n    height: 14 + 12 * 2,\n    overflow: 'hidden',\n    padding: 12,\n    boxSizing: 'border-box',\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0, // Reset the stacking context.\n    verticalAlign: 'middle', // For correct alignment with the text.\n    '@media print': {\n      colorAdjust: 'exact',\n    },\n  },\n  /* Styles applied to the root element if `edge=\"start\"`. */\n  edgeStart: {\n    marginLeft: -8,\n  },\n  /* Styles applied to the root element if `edge=\"end\"`. */\n  edgeEnd: {\n    marginRight: -8,\n  },\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1, // Render above the focus ripple.\n    color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create(['left', 'transform'], {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&$checked': {\n      transform: 'translateX(20px)',\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n    },\n    '&$checked + $track': {\n      opacity: 0.5,\n    },\n    '&$disabled + $track': {\n      opacity: theme.palette.type === 'light' ? 0.12 : 0.1,\n    },\n  },\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.primary.main,\n    },\n    '&$disabled + $track': {\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    },\n  },\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n    '&$disabled': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n    },\n    '&$checked + $track': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n    '&$disabled + $track': {\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    },\n  },\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    width: 40,\n    height: 24,\n    padding: 7,\n    '& $thumb': {\n      width: 16,\n      height: 16,\n    },\n    '& $switchBase': {\n      padding: 4,\n      '&$checked': {\n        transform: 'translateX(16px)',\n      },\n    },\n  },\n  /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {},\n  /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n  disabled: {},\n  /* Styles applied to the internal SwitchBase component's input element. */\n  input: {\n    left: '-100%',\n    width: '300%',\n  },\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  thumb: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%',\n  },\n  /* Styles applied to the track element. */\n  track: {\n    height: '100%',\n    width: '100%',\n    borderRadius: 14 / 2,\n    zIndex: -1,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest,\n    }),\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.type === 'light' ? 0.38 : 0.3,\n  },\n});\n\nconst Switch = React.forwardRef(function Switch(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium',\n    ...other\n  } = props;\n\n  const icon = <span className={classes.thumb} />;\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes.edgeStart]: edge === 'start',\n          [classes.edgeEnd]: edge === 'end',\n          [classes[`size${capitalize(size)}`]]: size !== 'medium',\n        },\n        className,\n      )}\n    >\n      <SwitchBase\n        type=\"checkbox\"\n        icon={icon}\n        checkedIcon={icon}\n        classes={{\n          root: clsx(classes.switchBase, classes[`color${capitalize(color)}`]),\n          input: classes.input,\n          checked: classes.checked,\n          disabled: classes.disabled,\n        }}\n        ref={ref}\n        {...other}\n      />\n      <span className={classes.track} />\n    </span>\n  );\n});\n\nSwitch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any,\n};\n\nexport default withStyles(styles, { name: 'MuiSwitch' })(Switch);\n"]},"metadata":{},"sourceType":"module"}