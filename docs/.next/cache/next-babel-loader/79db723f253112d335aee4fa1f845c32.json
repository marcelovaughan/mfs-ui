{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Container/Container.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'block',\n    // Fix IE 11 layout when used with main.\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  },\n\n  /* Styles applied to the root element if `disableGutters={true}`. */\n  disableGutters: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n\n  /* Styles applied to the root element if `fixed={true}`. */\n  fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: value\n      };\n    }\n\n    return acc;\n  }, {}),\n\n  /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n  maxWidthXs: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n  maxWidthSm: {\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: theme.breakpoints.values.sm\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"md\"`. */\n  maxWidthMd: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.md\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n  maxWidthLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.lg\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n  maxWidthXl: {\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: theme.breakpoints.values.xl\n    }\n  }\n});\nconst Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[`maxWidth${capitalize(String(maxWidth))}`]),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n});\nContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n};\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Container/Container.js"],"names":["React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","disableGutters","fixed","Object","keys","values","reduce","acc","breakpoint","value","maxWidth","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Container","forwardRef","props","ref","classes","className","component","Component","other","String","propTypes","children","node","isRequired","object","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'block', // Fix IE 11 layout when used with main.\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  /* Styles applied to the root element if `disableGutters={true}`. */\n  disableGutters: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  /* Styles applied to the root element if `fixed={true}`. */\n  fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: value,\n      };\n    }\n    return acc;\n  }, {}),\n  /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n  maxWidthXs: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n  maxWidthSm: {\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: theme.breakpoints.values.sm,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"md\"`. */\n  maxWidthMd: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.md,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n  maxWidthLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.lg,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n  maxWidthXl: {\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: theme.breakpoints.values.xl,\n    },\n  },\n});\n\nconst Container = React.forwardRef(function Container(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg',\n    ...other\n  } = props;\n\n  return (\n    <Component\n      className={clsx(\n        classes.root,\n        {\n          [classes.fixed]: fixed,\n          [classes.disableGutters]: disableGutters,\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]: maxWidth !== false,\n        },\n        className,\n      )}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n};\n\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\n"]},"metadata":{},"sourceType":"module"}