{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from \"../../../../../../../packages/material-ui/src/styles\";\nimport Typography from \"../../../../../../../packages/material-ui/src/Typography\";\nimport Link from \"../../../../../../../packages/material-ui/src/Link\";\n\nconst styles = theme => ({\n  listItem: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: props => __jsx(Typography, _extends({\n        gutterBottom: true,\n        variant: \"h4\"\n      }, props))\n    },\n    h2: {\n      component: props => __jsx(Typography, _extends({\n        gutterBottom: true,\n        variant: \"h6\"\n      }, props))\n    },\n    h3: {\n      component: props => __jsx(Typography, _extends({\n        gutterBottom: true,\n        variant: \"subtitle1\"\n      }, props))\n    },\n    h4: {\n      component: props => __jsx(Typography, _extends({\n        gutterBottom: true,\n        variant: \"caption\",\n        paragraph: true\n      }, props))\n    },\n    p: {\n      component: props => __jsx(Typography, _extends({\n        paragraph: true\n      }, props))\n    },\n    a: {\n      component: Link\n    },\n    li: {\n      component: withStyles(styles)((_ref) => {\n        let {\n          classes\n        } = _ref,\n            props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n        return __jsx(\"li\", {\n          className: classes.listItem\n        }, __jsx(Typography, _extends({\n          component: \"span\"\n        }, props)));\n      })\n    }\n  }\n};\n\nfunction Markdown(props) {\n  return __jsx(ReactMarkdown, _extends({\n    options: options\n  }, props));\n}\n\nexport default Markdown;","map":null,"metadata":{},"sourceType":"module"}