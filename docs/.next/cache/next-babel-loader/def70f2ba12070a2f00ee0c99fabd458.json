{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { fade, withStyles } from \"../../../material-ui/src/styles\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 60%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: theme.shape.borderRadius,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"rect\"`. */\n  rect: {},\n\n  /* Styles applied to the root element if `variant=\"circle\"`. */\n  circle: {\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the root element if `animation=\"pulse\"`. */\n  pulse: {\n    animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n  },\n  '@keyframes pulse': {\n    '0%': {\n      opacity: 1\n    },\n    '50%': {\n      opacity: 0.4\n    },\n    '100%': {\n      opacity: 1\n    }\n  },\n\n  /* Styles applied to the root element if `animation=\"wave\"`. */\n  wave: {\n    position: 'relative',\n    overflow: 'hidden',\n    '&::after': {\n      animation: '$wave 1.6s linear 0.5s infinite',\n      background: `linear-gradient(90deg, transparent, ${theme.palette.action.hover}, transparent)`,\n      content: '\"\"',\n      position: 'absolute',\n      transform: 'translateX(-100%)',\n      // Avoid flash during server-side hydration\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n  },\n  '@keyframes wave': {\n    '0%': {\n      transform: 'translateX(-100%)'\n    },\n    '60%': {\n      // +0.5s of delay between each loop\n      transform: 'translateX(100%)'\n    },\n    '100%': {\n      transform: 'translateX(100%)'\n    }\n  },\n\n  /* Styles applied when the component is passed children. */\n  withChildren: {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  },\n\n  /* Styles applied when the component is passed children and no width. */\n  fitContent: {\n    maxWidth: 'fit-content'\n  },\n\n  /* Styles applied when the component is passed children and no height. */\n  heightAuto: {\n    height: 'auto'\n  }\n});\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  const {\n    animation = 'pulse',\n    classes,\n    className,\n    component: Component = 'span',\n    height,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  const hasChildren = Boolean(other.children);\n  return __jsx(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _objectSpread({\n      width,\n      height\n    }, other.style)\n  }));\n});\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","map":null,"metadata":{},"sourceType":"module"}