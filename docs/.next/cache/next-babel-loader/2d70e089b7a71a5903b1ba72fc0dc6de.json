{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport ButtonGroup from \"../../../../../packages/material-ui/src/ButtonGroup\";\nimport ArrowDropDownIcon from \"../../../../../packages/material-ui-icons/src/ArrowDropDown\";\nimport ClickAwayListener from \"../../../../../packages/material-ui/src/ClickAwayListener\";\nimport Grow from \"../../../../../packages/material-ui/src/Grow\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport Popper from \"../../../../../packages/material-ui/src/Popper\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport MenuList from \"../../../../../packages/material-ui/src/MenuList\";\nvar options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\n\nvar _ref = __jsx(ArrowDropDownIcon, null);\n\nexport default function SplitButton() {\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var anchorRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(1),\n      selectedIndex = _React$useState2[0],\n      setSelectedIndex = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    console.info(\"You clicked \".concat(options[selectedIndex]));\n  };\n\n  var handleMenuItemClick = function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\"\n  }, __jsx(Button, {\n    onClick: handleClick\n  }, options[selectedIndex]), __jsx(Button, {\n    color: \"primary\",\n    size: \"small\",\n    \"aria-controls\": open ? 'split-button-menu' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle\n  }, _ref)), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      }\n    }), __jsx(Paper, null, __jsx(ClickAwayListener, {\n      onClickAway: handleClose\n    }, __jsx(MenuList, {\n      id: \"split-button-menu\"\n    }, options.map(function (option, index) {\n      return __jsx(MenuItem, {\n        key: option,\n        disabled: index === 2,\n        selected: index === selectedIndex,\n        onClick: function onClick(event) {\n          return handleMenuItemClick(event, index);\n        }\n      }, option);\n    })))));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}