{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { ThemeProvider, useTheme, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color\n  })\n}));\n\nvar _ref = __jsx(\"br\", null);\n\nvar _ref2 = __jsx(\"br\", null);\n\nconst Component = /*#__PURE__*/React.memo(props => {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const rendered = React.useRef(1);\n  React.useEffect(() => {\n    rendered.current += 1;\n  });\n  return __jsx(\"div\", {\n    className: classes.root\n  }, \"rendered \", rendered.current, \" times\", _ref, \"color: \", theme.color, _ref2, \"backgroundColor: \", props.backgroundColor);\n});\n\nvar _ref3 = __jsx(\"label\", {\n  htmlFor: \"color\"\n}, \"theme color: \");\n\nvar _ref4 = __jsx(\"label\", {\n  htmlFor: \"background-color\"\n}, \"background-color property:\", ' ');\n\nexport default function StressTest() {\n  const [backgroundColor, setBackgroundColor] = React.useState('#2196f3');\n\n  const handleBackgroundColorChange = event => {\n    setBackgroundColor(event.target.value);\n  };\n\n  const [color, setColor] = React.useState('#ffffff');\n\n  const handleColorChange = event => {\n    setColor(event.target.value);\n  };\n\n  const theme = React.useMemo(() => ({\n    color\n  }), [color]);\n  return __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(\"div\", null, __jsx(\"fieldset\", null, __jsx(\"div\", null, _ref3, __jsx(\"input\", {\n    id: \"color\",\n    type: \"color\",\n    onChange: handleColorChange,\n    value: color\n  })), __jsx(\"div\", null, _ref4, __jsx(\"input\", {\n    id: \"background-color\",\n    type: \"color\",\n    onChange: handleBackgroundColorChange,\n    value: backgroundColor\n  }))), __jsx(Component, {\n    backgroundColor: backgroundColor\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}