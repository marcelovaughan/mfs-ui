{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport FormLabel from \"../../../../../packages/material-ui/src/FormLabel\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport FormHelperText from \"../../../../../packages/material-ui/src/FormHelperText\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\n\nvar _ref = __jsx(FormLabel, {\n  component: \"legend\"\n}, \"Assign responsibility\");\n\nvar _ref2 = __jsx(FormHelperText, null, \"Be careful\");\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return __jsx(FormControl, {\n    component: \"fieldset\"\n  }, _ref, __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: state.gilad,\n      onChange: handleChange,\n      name: \"gilad\"\n    }),\n    label: \"Gilad Gray\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: state.jason,\n      onChange: handleChange,\n      name: \"jason\"\n    }),\n    label: \"Jason Killian\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: state.antoine,\n      onChange: handleChange,\n      name: \"antoine\"\n    }),\n    label: \"Antoine Llorca\"\n  })), _ref2);\n}","map":null,"metadata":{},"sourceType":"module"}