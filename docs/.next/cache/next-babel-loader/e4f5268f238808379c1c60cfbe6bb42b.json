{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport { green } from \"../../../../../packages/material-ui/src/colors\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Checkbox from \"../../../../../packages/material-ui/src/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"../../../../../packages/material-ui-icons/src/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"../../../../../packages/material-ui-icons/src/CheckBox\";\nimport Favorite from \"../../../../../packages/material-ui-icons/src/Favorite\";\nimport FavoriteBorder from \"../../../../../packages/material-ui-icons/src/FavoriteBorder\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => __jsx(Checkbox, _extends({\n  color: \"default\"\n}, props)));\n\nvar _ref = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    name: \"checkedC\"\n  }),\n  label: \"Uncontrolled\"\n});\n\nvar _ref2 = __jsx(FormControlLabel, {\n  disabled: true,\n  control: __jsx(Checkbox, {\n    name: \"checkedD\"\n  }),\n  label: \"Disabled\"\n});\n\nvar _ref3 = __jsx(FormControlLabel, {\n  disabled: true,\n  control: __jsx(Checkbox, {\n    checked: true,\n    name: \"checkedE\"\n  }),\n  label: \"Disabled\"\n});\n\nvar _ref4 = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    icon: __jsx(FavoriteBorder, null),\n    checkedIcon: __jsx(Favorite, null),\n    name: \"checkedH\"\n  }),\n  label: \"Custom icon\"\n});\n\nvar _ref5 = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    icon: __jsx(CheckBoxOutlineBlankIcon, {\n      fontSize: \"small\"\n    }),\n    checkedIcon: __jsx(CheckBoxIcon, {\n      fontSize: \"small\"\n    }),\n    name: \"checkedI\"\n  }),\n  label: \"Custom size\"\n});\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return __jsx(FormGroup, {\n    row: true\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedA,\n      onChange: handleChange,\n      name: \"checkedA\"\n    }),\n    label: \"Secondary\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\",\n      color: \"primary\"\n    }),\n    label: \"Primary\"\n  }), _ref, _ref2, _ref3, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedF,\n      onChange: handleChange,\n      name: \"checkedF\",\n      indeterminate: true\n    }),\n    label: \"Indeterminate\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange,\n      name: \"checkedG\"\n    }),\n    label: \"Custom color\"\n  }), _ref4, _ref5);\n}","map":null,"metadata":{},"sourceType":"module"}