{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Modal/SimpleBackdrop.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? __jsx(\"div\", _extends({\n    \"data-mui-test\": \"Backdrop\",\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.root), invisible ? styles.invisible : {}), other.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  })) : null;\n});\nSimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n};\nexport default SimpleBackdrop;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Modal/SimpleBackdrop.js"],"names":["React","PropTypes","styles","root","zIndex","position","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","forwardRef","props","ref","open","other","style","propTypes","bool","isRequired"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CAAC,CADL;AAEJC,IAAAA,QAAQ,EAAE,OAFN;AAGJC,IAAAA,KAAK,EAAE,CAHH;AAIJC,IAAAA,MAAM,EAAE,CAJJ;AAKJC,IAAAA,GAAG,EAAE,CALD;AAMJC,IAAAA,IAAI,EAAE,CANF;AAOJC,IAAAA,eAAe,EAAE,oBAPb;AAQJC,IAAAA,uBAAuB,EAAE;AARrB,GAFc;;AAYpB;AACAC,EAAAA,SAAS,EAAE;AACTF,IAAAA,eAAe,EAAE;AADR;AAbS,CAAf;AAkBP;;;;AAGA,IAAMG,cAAc,gBAAGb,KAAK,CAACc,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AAAA,yBAC5BD,KAD4B,CAClEH,SADkE;AAAA,MAClEA,SADkE,iCACtD,KADsD;AAAA,MAC/CK,IAD+C,GAC5BF,KAD4B,CAC/CE,IAD+C;AAAA,MACtCC,KADsC,4BAC5BH,KAD4B;;AAG1E,SAAOE,IAAI,GACT;AACE,qBAAc,UADhB;AAEE,uBAFF;AAGE,IAAA,GAAG,EAAED;AAHP,KAIME,KAJN;AAKE,IAAA,KAAK,gDACAhB,MAAM,CAACC,IADP,GAECS,SAAS,GAAGV,MAAM,CAACU,SAAV,GAAsB,EAFhC,GAGAM,KAAK,CAACC,KAHN,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADS,GAYP,IAZJ;AAaD,CAhBsB,CAAvB;AAkBAN,cAAc,CAACO,SAAf,GAA2B;AACzB;;;;AAIAR,EAAAA,SAAS,EAAEX,SAAS,CAACoB,IALI;;AAMzB;;;AAGAJ,EAAAA,IAAI,EAAEhB,SAAS,CAACoB,IAAV,CAAeC;AATI,CAA3B;AAYA,eAAeT,cAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent',\n  },\n};\n\n/**\n * @ignore - internal component.\n */\nconst SimpleBackdrop = React.forwardRef(function SimpleBackdrop(props, ref) {\n  const { invisible = false, open, ...other } = props;\n\n  return open ? (\n    <div\n      data-mui-test=\"Backdrop\"\n      aria-hidden\n      ref={ref}\n      {...other}\n      style={{\n        ...styles.root,\n        ...(invisible ? styles.invisible : {}),\n        ...other.style,\n      }}\n    />\n  ) : null;\n});\n\nSimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n};\n\nexport default SimpleBackdrop;\n"]},"metadata":{},"sourceType":"module"}