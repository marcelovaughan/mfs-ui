{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/no-danger */\nimport React from 'react';\nimport throttle from 'lodash/throttle';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport Typography from \"../../../../packages/material-ui/src/Typography\";\nimport NoSsr from \"../../../../packages/material-ui/src/NoSsr\";\nimport Link from \"./Link\";\nimport PageContext from \"./PageContext\";\nimport Ad from \"./Ad\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      top: 70,\n      // Fix IE 11 position sticky issue.\n      marginTop: 70,\n      width: 175,\n      flexShrink: 0,\n      position: 'sticky',\n      height: 'calc(100vh - 70px)',\n      overflowY: 'auto',\n      padding: theme.spacing(2, 2, 2, 0),\n      display: 'none'\n    }, theme.breakpoints.up('sm'), {\n      display: 'block'\n    }),\n    contents: {\n      marginTop: theme.spacing(2),\n      paddingLeft: theme.spacing(1)\n    },\n    ul: {\n      padding: 0,\n      margin: 0,\n      listStyle: 'none'\n    },\n    item: {\n      fontSize: '.8125rem',\n      padding: theme.spacing(0.5, 0, 0.5, \"\".concat(Math.max(0, theme.spacing(1) - 3), \"px\")),\n      borderLeft: \"3px solid transparent\",\n      boxSizing: 'border-box',\n      '&:hover': {\n        borderLeftColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900]\n      },\n      '&$active,&:active': {\n        borderLeftColor: theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[800]\n      }\n    },\n    secondaryItem: {\n      paddingLeft: theme.spacing(2.5)\n    },\n    active: {}\n  };\n}); // TODO: these nodes are mutable sources. Use createMutableSource once it's stable\n\nfunction getItemsClient(headings) {\n  var itemsWithNode = [];\n  headings.forEach(function (item) {\n    itemsWithNode.push(_objectSpread(_objectSpread({}, item), {}, {\n      node: document.getElementById(item.hash)\n    }));\n\n    if (item.children.length > 0) {\n      item.children.forEach(function (subitem) {\n        itemsWithNode.push(_objectSpread(_objectSpread({}, subitem), {}, {\n          node: document.getElementById(subitem.hash)\n        }));\n      });\n    }\n  });\n  return itemsWithNode;\n}\n\nvar noop = function noop() {};\n\nfunction useThrottledOnScroll(callback, delay) {\n  var throttledCallback = React.useMemo(function () {\n    return callback ? throttle(callback, delay) : noop;\n  }, [callback, delay]);\n  React.useEffect(function () {\n    if (throttledCallback === noop) {\n      return undefined;\n    }\n\n    window.addEventListener('scroll', throttledCallback);\n    return function () {\n      window.removeEventListener('scroll', throttledCallback);\n      throttledCallback.cancel();\n    };\n  }, [throttledCallback]);\n}\n\nvar _ref = __jsx(NoSsr, null, __jsx(Ad, {\n  placement: \"tocs-top\"\n}));\n\nvar _ref2 = __jsx(NoSsr, null, __jsx(Ad, {\n  placement: \"tocs-bottom\"\n}));\n\nexport default function AppTableOfContents(props) {\n  var items = props.items;\n  var classes = useStyles();\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var itemsWithNodeRef = React.useRef([]);\n  React.useEffect(function () {\n    itemsWithNodeRef.current = getItemsClient(items);\n  }, [items]);\n\n  var _React$useContext = React.useContext(PageContext),\n      activePage = _React$useContext.activePage;\n\n  var _React$useState = React.useState(null),\n      activeState = _React$useState[0],\n      setActiveState = _React$useState[1];\n\n  var clickedRef = React.useRef(false);\n  var unsetClickedRef = React.useRef(null);\n  var findActiveIndex = React.useCallback(function () {\n    // Don't set the active index based on scroll if a link was just clicked\n    if (clickedRef.current) {\n      return;\n    }\n\n    var active;\n\n    for (var i = itemsWithNodeRef.current.length - 1; i >= 0; i -= 1) {\n      // No hash if we're near the top of the page\n      if (document.documentElement.scrollTop < 200) {\n        active = {\n          hash: null\n        };\n        break;\n      }\n\n      var item = itemsWithNodeRef.current[i];\n\n      if (false) {\n        if (!item.node) {\n          console.error(\"Missing node on the item \".concat(_JSON$stringify(item, null, 2)));\n        }\n      }\n\n      if (item.node && item.node.offsetTop < document.documentElement.scrollTop + document.documentElement.clientHeight / 8) {\n        active = item;\n        break;\n      }\n    }\n\n    if (active && activeState !== active.hash) {\n      setActiveState(active.hash);\n    }\n  }, [activeState]); // Corresponds to 10 frames at 60 Hz\n\n  useThrottledOnScroll(items.length > 0 ? findActiveIndex : null, 166);\n\n  var handleClick = function handleClick(hash) {\n    return function (event) {\n      // Ignore click for new tab/new window behavior\n      if (event.defaultPrevented || event.button !== 0 || // ignore everything but left-click\n      event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) {\n        return;\n      } // Used to disable findActiveIndex if the page scrolls due to a click\n\n\n      clickedRef.current = true;\n      unsetClickedRef.current = setTimeout(function () {\n        clickedRef.current = false;\n      }, 1000);\n\n      if (activeState !== hash) {\n        setActiveState(hash);\n      }\n    };\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(unsetClickedRef.current);\n    };\n  }, []);\n\n  var itemLink = function itemLink(item, secondary) {\n    return __jsx(Link, {\n      display: \"block\",\n      color: activeState === item.hash ? 'textPrimary' : 'textSecondary',\n      href: \"\".concat(activePage.pathname, \"#\").concat(item.hash),\n      underline: \"none\",\n      onClick: handleClick(item.hash),\n      className: clsx(classes.item, secondary && classes.secondaryItem, activeState === item.hash && classes.active)\n    }, __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: item.text\n      }\n    }));\n  };\n\n  return __jsx(\"nav\", {\n    className: classes.root,\n    \"aria-label\": t('pageTOC')\n  }, _ref, items.length > 0 ? __jsx(React.Fragment, null, __jsx(Typography, {\n    gutterBottom: true,\n    className: classes.contents\n  }, t('tableOfContents')), __jsx(Typography, {\n    component: \"ul\",\n    className: classes.ul\n  }, items.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.text\n    }, itemLink(item), item.children.length > 0 ? __jsx(\"ul\", {\n      className: classes.ul\n    }, item.children.map(function (subitem) {\n      return __jsx(\"li\", {\n        key: subitem.text\n      }, itemLink(subitem, true));\n    })) : null);\n  }))) : null, _ref2);\n}","map":null,"metadata":{},"sourceType":"module"}