{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from \"../../../../../packages/material-ui/src/TextField\";\nimport Autocomplete from \"../../../../../packages/material-ui-lab/src/Autocomplete\";\nexport default function DisabledOptions() {\n  return __jsx(Autocomplete, {\n    id: \"disabled-options-demo\",\n    options: timeSlots,\n    getOptionDisabled: option => option === timeSlots[0] || option === timeSlots[2],\n    style: {\n      width: 300\n    },\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"Disabled options\",\n      variant: \"outlined\"\n    }))\n  });\n} // One time slot every 30 minutes.\n\nconst timeSlots = Array.from(new Array(24 * 2)).map((_, index) => `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${index % 2 === 0 ? '00' : '30'}`);","map":null,"metadata":{},"sourceType":"module"}