{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport { ACTION_TYPES } from \"../constants\";\n\nvar mapping = _defineProperty({}, ACTION_TYPES.NOTIFICATIONS_CHANGE, function (state, action) {\n  var newState = _objectSpread(_objectSpread({}, state), action.payload);\n\n  return newState;\n});\n\nexport default function notificationsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  if (mapping[action.type]) {\n    newState = mapping[action.type](state, action);\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/redux/notificationsReducer.js"],"names":["mapping","ACTION_TYPES","newState","action","state"],"mappings":";;AAAA,SAAA,YAAA;;AAEA,IAAMA,OAAO,GAAA,eAAA,CAAA,EAAA,EACVC,YAAY,CADF,oBAAA,EAC0B,UAAA,KAAA,EAAA,MAAA,EAAmB;AACtD,MAAMC,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAETC,MAAM,CAFX,OAAc,CAAd;;AAIA,SAAA,QAAA;AANJ,CAAa,CAAb;;AAUA,eAAe,SAAA,oBAAA,GAAkD;AAAA,MAApBC,KAAoB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,EAAY;AAAA,MAARD,MAAQ,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;;AAC/D,MAAID,QAAQ,GAAA,aAAA,CAAA,EAAA,EAAZ,KAAY,CAAZ;;AAEA,MAAIF,OAAO,CAACG,MAAM,CAAlB,IAAW,CAAX,EAA0B;AACxBD,IAAAA,QAAQ,GAAGF,OAAO,CAACG,MAAM,CAAdH,IAAO,CAAPA,CAAAA,KAAAA,EAAXE,MAAWF,CAAXE;AACD;;AAED,SAAA,QAAA;AACD","sourcesContent":["import { ACTION_TYPES } from 'docs/src/modules/constants';\n\nconst mapping = {\n  [ACTION_TYPES.NOTIFICATIONS_CHANGE]: (state, action) => {\n    const newState = {\n      ...state,\n      ...action.payload,\n    };\n    return newState;\n  },\n};\n\nexport default function notificationsReducer(state = {}, action) {\n  let newState = { ...state };\n\n  if (mapping[action.type]) {\n    newState = mapping[action.type](state, action);\n  }\n\n  return newState;\n}\n"]},"metadata":{},"sourceType":"module"}