{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createMuiTheme } from \"../../../../../../packages/material-ui/src/styles\";\nimport { green, grey, red } from \"../../../../../../packages/material-ui/src/colors\";\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#69696a',\n      main: '#28282a',\n      dark: '#1e1e1f'\n    },\n    secondary: {\n      light: '#fff5f8',\n      main: '#ff3366',\n      dark: '#e62958'\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e'\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700]\n    },\n    success: {\n      xLight: green[50],\n      main: green[500],\n      dark: green[700]\n    }\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300,\n    // Work Sans\n    fontWeightRegular: 400,\n    // Work Sans\n    fontWeightMedium: 700,\n    // Roboto Condensed\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\"\n  }\n});\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n  textTransform: 'uppercase'\n};\n\nconst theme = _objectSpread(_objectSpread({}, rawTheme), {}, {\n  palette: _objectSpread(_objectSpread({}, rawTheme.palette), {}, {\n    background: _objectSpread(_objectSpread({}, rawTheme.palette.background), {}, {\n      default: rawTheme.palette.common.white,\n      placeholder: grey[200]\n    })\n  }),\n  typography: _objectSpread(_objectSpread({}, rawTheme.typography), {}, {\n    fontHeader,\n    h1: _objectSpread(_objectSpread(_objectSpread({}, rawTheme.typography.h1), fontHeader), {}, {\n      letterSpacing: 0,\n      fontSize: 60\n    }),\n    h2: _objectSpread(_objectSpread(_objectSpread({}, rawTheme.typography.h2), fontHeader), {}, {\n      fontSize: 48\n    }),\n    h3: _objectSpread(_objectSpread(_objectSpread({}, rawTheme.typography.h3), fontHeader), {}, {\n      fontSize: 42\n    }),\n    h4: _objectSpread(_objectSpread(_objectSpread({}, rawTheme.typography.h4), fontHeader), {}, {\n      fontSize: 36\n    }),\n    h5: _objectSpread(_objectSpread({}, rawTheme.typography.h5), {}, {\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight\n    }),\n    h6: _objectSpread(_objectSpread(_objectSpread({}, rawTheme.typography.h6), fontHeader), {}, {\n      fontSize: 18\n    }),\n    subtitle1: _objectSpread(_objectSpread({}, rawTheme.typography.subtitle1), {}, {\n      fontSize: 18\n    }),\n    body1: _objectSpread(_objectSpread({}, rawTheme.typography.body2), {}, {\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16\n    }),\n    body2: _objectSpread(_objectSpread({}, rawTheme.typography.body1), {}, {\n      fontSize: 14\n    })\n  })\n});\n\nexport default theme;","map":null,"metadata":{},"sourceType":"module"}