{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Snackbar from \"../../../../../packages/material-ui/src/Snackbar\";\nimport MuiAlert from \"../../../../../packages/material-ui-lab/src/Alert\";\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  };\n});\n\nvar _ref = __jsx(Alert, {\n  severity: \"error\"\n}, \"This is an error message!\");\n\nvar _ref2 = __jsx(Alert, {\n  severity: \"warning\"\n}, \"This is a warning message!\");\n\nvar _ref3 = __jsx(Alert, {\n  severity: \"info\"\n}, \"This is an information message!\");\n\nvar _ref4 = __jsx(Alert, {\n  severity: \"success\"\n}, \"This is a success message!\");\n\nexport default function CustomizedSnackbars() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var handleClick = function handleClick() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    onClick: handleClick\n  }, \"Open success snackbar\"), __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"success\"\n  }, \"This is a success message!\")), _ref, _ref2, _ref3, _ref4);\n}","map":null,"metadata":{},"sourceType":"module"}