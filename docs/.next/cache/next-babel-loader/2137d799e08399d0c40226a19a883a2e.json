{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport prism from 'prismjs';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-tsx';\nexport default function highlight(code, language) {\n  var prismLanguage;\n\n  switch (language) {\n    case 'ts':\n      prismLanguage = prism.languages.tsx;\n      break;\n\n    case 'js':\n    case 'sh':\n      prismLanguage = prism.languages.jsx;\n      break;\n\n    case 'diff':\n      prismLanguage = _objectSpread({}, prism.languages.diff); // original `/^[-<].*$/m` matches lines starting with `<` which matches\n      // <SomeComponent />\n      // we will only use `-` as the deleted marker\n\n      prismLanguage.deleted = /^[-].*$/m;\n      break;\n\n    default:\n      prismLanguage = prism.languages[language];\n      break;\n  }\n\n  if (!prismLanguage) {\n    if (language) {\n      throw new Error(\"unsupported language: \\\"\".concat(language, \"\\\", \\\"\").concat(code, \"\\\"\"));\n    } else {\n      prismLanguage = prism.languages.jsx;\n    }\n  }\n\n  return prism.highlight(code, prismLanguage);\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/utils/prism.js"],"names":["prismLanguage","prism"],"mappings":";AAAA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,8BAAA;AACA,OAAA,+BAAA;AACA,OAAA,qCAAA;AACA,OAAA,+BAAA;AACA,OAAA,8BAAA;AACA,OAAA,iCAAA;AACA,OAAA,8BAAA;AAEA,eAAe,SAAA,SAAA,CAAA,IAAA,EAAA,QAAA,EAAmC;AAChD,MAAA,aAAA;;AACA,UAAA,QAAA;AACE,SAAA,IAAA;AACEA,MAAAA,aAAa,GAAGC,KAAK,CAALA,SAAAA,CAAhBD,GAAAA;AACA;;AAEF,SAAA,IAAA;AACA,SAAA,IAAA;AACEA,MAAAA,aAAa,GAAGC,KAAK,CAALA,SAAAA,CAAhBD,GAAAA;AACA;;AAEF,SAAA,MAAA;AACEA,MAAAA,aAAa,GAAA,aAAA,CAAA,EAAA,EAAQC,KAAK,CAALA,SAAAA,CADvB,IACe,CAAbD,CADF,CAEE;AACA;AACA;;AACAA,MAAAA,aAAa,CAAbA,OAAAA,GAAAA,UAAAA;AACA;;AAEF;AACEA,MAAAA,aAAa,GAAGC,KAAK,CAALA,SAAAA,CAAhBD,QAAgBC,CAAhBD;AACA;AApBJ;;AAuBA,MAAI,CAAJ,aAAA,EAAoB;AAClB,QAAA,QAAA,EAAc;AACZ,YAAM,IAAA,KAAA,CAAA,2BAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAAA,MAAA,CAAA,IAAA,EAAN,IAAM,CAAA,CAAN;AADF,KAAA,MAEO;AACLA,MAAAA,aAAa,GAAGC,KAAK,CAALA,SAAAA,CAAhBD,GAAAA;AACD;AACF;;AAED,SAAOC,KAAK,CAALA,SAAAA,CAAAA,IAAAA,EAAP,aAAOA,CAAP;AACD","sourcesContent":["import prism from 'prismjs';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-tsx';\n\nexport default function highlight(code, language) {\n  let prismLanguage;\n  switch (language) {\n    case 'ts':\n      prismLanguage = prism.languages.tsx;\n      break;\n\n    case 'js':\n    case 'sh':\n      prismLanguage = prism.languages.jsx;\n      break;\n\n    case 'diff':\n      prismLanguage = { ...prism.languages.diff };\n      // original `/^[-<].*$/m` matches lines starting with `<` which matches\n      // <SomeComponent />\n      // we will only use `-` as the deleted marker\n      prismLanguage.deleted = /^[-].*$/m;\n      break;\n\n    default:\n      prismLanguage = prism.languages[language];\n      break;\n  }\n\n  if (!prismLanguage) {\n    if (language) {\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\n    } else {\n      prismLanguage = prism.languages.jsx;\n    }\n  }\n\n  return prism.highlight(code, prismLanguage);\n}\n"]},"metadata":{},"sourceType":"module"}