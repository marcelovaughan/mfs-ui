{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, useTheme, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Table from \"../../../../../packages/material-ui/src/Table\";\nimport TableBody from \"../../../../../packages/material-ui/src/TableBody\";\nimport TableCell from \"../../../../../packages/material-ui/src/TableCell\";\nimport TableContainer from \"../../../../../packages/material-ui/src/TableContainer\";\nimport TableFooter from \"../../../../../packages/material-ui/src/TableFooter\";\nimport TablePagination from \"../../../../../packages/material-ui/src/TablePagination\";\nimport TableRow from \"../../../../../packages/material-ui/src/TableRow\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport IconButton from \"../../../../../packages/material-ui/src/IconButton\";\nimport FirstPageIcon from \"../../../../../packages/material-ui-icons/src/FirstPage\";\nimport KeyboardArrowLeft from \"../../../../../packages/material-ui-icons/src/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"../../../../../packages/material-ui-icons/src/KeyboardArrowRight\";\nimport LastPageIcon from \"../../../../../packages/material-ui-icons/src/LastPage\";\nvar useStyles1 = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  });\n});\n\nvar _ref = __jsx(LastPageIcon, null);\n\nvar _ref2 = __jsx(FirstPageIcon, null);\n\nvar _ref3 = __jsx(KeyboardArrowRight, null);\n\nvar _ref4 = __jsx(KeyboardArrowLeft, null);\n\nvar _ref5 = __jsx(KeyboardArrowLeft, null);\n\nvar _ref6 = __jsx(KeyboardArrowRight, null);\n\nvar _ref7 = __jsx(FirstPageIcon, null);\n\nvar _ref8 = __jsx(LastPageIcon, null);\n\nfunction TablePaginationActions(props) {\n  var classes = useStyles1();\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onChangePage = props.onChangePage;\n\n  var handleFirstPageButtonClick = function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  };\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  var handleLastPageButtonClick = function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\"\n  }, theme.direction === 'rtl' ? _ref : _ref2), __jsx(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\"\n  }, theme.direction === 'rtl' ? _ref3 : _ref4), __jsx(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\"\n  }, theme.direction === 'rtl' ? _ref5 : _ref6), __jsx(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\"\n  }, theme.direction === 'rtl' ? _ref7 : _ref8));\n}\n\nfunction createData(name, calories, fat) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat\n  };\n}\n\nvar rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort(function (a, b) {\n  return a.calories < b.calories ? -1 : 1;\n});\nvar useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\n\nvar _ref9 = __jsx(TableCell, {\n  colSpan: 6\n});\n\nexport default function CustomPaginationActionsTable() {\n  var classes = useStyles2();\n\n  var _React$useState = React.useState(0),\n      page = _React$useState[0],\n      setPage = _React$useState[1];\n\n  var _React$useState2 = React.useState(5),\n      rowsPerPage = _React$useState2[0],\n      setRowsPerPage = _React$useState2[1];\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(_parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return __jsx(TableContainer, {\n    component: Paper\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\"\n  }, __jsx(TableBody, null, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(function (row) {\n    return __jsx(TableRow, {\n      key: row.name\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, row.name), __jsx(TableCell, {\n      style: {\n        width: 160\n      },\n      align: \"right\"\n    }, row.calories), __jsx(TableCell, {\n      style: {\n        width: 160\n      },\n      align: \"right\"\n    }, row.fat));\n  }), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    }\n  }, _ref9)), __jsx(TableFooter, null, __jsx(TableRow, null, __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      \"native\": true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}