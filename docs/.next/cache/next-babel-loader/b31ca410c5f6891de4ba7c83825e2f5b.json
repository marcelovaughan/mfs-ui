{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-lab/src/ToggleButton/ToggleButton.js\";\nvar __jsx = React.createElement;\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from \"../../../material-ui/src/styles\";\nimport ButtonBase from \"../../../material-ui/src/ButtonBase\";\nimport { capitalize } from \"../../../material-ui/src/utils\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _objectSpread(_objectSpread({}, theme.typography.button), {}, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return __jsx(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, children));\n});\nToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n};\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-lab/src/ToggleButton/ToggleButton.js"],"names":["React","PropTypes","clsx","fade","withStyles","ButtonBase","capitalize","styles","theme","root","typography","button","boxSizing","borderRadius","shape","padding","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","disabled","textDecoration","text","primary","selected","label","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","ToggleButton","forwardRef","props","ref","children","classes","className","disableFocusRipple","onChange","onClick","size","value","other","handleChange","event","isDefaultPrevented","propTypes","node","isRequired","object","string","bool","disableRipple","func","oneOf","any","name"],"mappings":"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","sourcesContent":["// @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    ...theme.typography.button,\n    boxSizing: 'border-box',\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${fade(theme.palette.action.active, 0.12)}`,\n    color: fade(theme.palette.action.active, 0.38),\n    '&$selected': {\n      color: theme.palette.action.active,\n      backgroundColor: fade(theme.palette.action.active, 0.12),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, 0.15),\n      },\n      '& + &': {\n        borderLeft: 0,\n        marginLeft: 0,\n      },\n    },\n    '&$disabled': {\n      color: fade(theme.palette.action.disabled, 0.12),\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: fade(theme.palette.text.primary, 0.05),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {},\n  /* Styles applied to the `label` wrapper element. */\n  label: {\n    width: '100%', // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15),\n  },\n});\n\nconst ToggleButton = React.forwardRef(function ToggleButton(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    disabled = false,\n    disableFocusRipple = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value,\n    ...other\n  } = props;\n\n  const handleChange = (event) => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return (\n    <ButtonBase\n      className={clsx(\n        classes.root,\n        {\n          [classes.disabled]: disabled,\n          [classes.selected]: selected,\n          [classes[`size${capitalize(size)}`]]: size !== 'medium',\n        },\n        className,\n      )}\n      disabled={disabled}\n      focusRipple={!disableFocusRipple}\n      ref={ref}\n      onClick={handleChange}\n      onChange={onChange}\n      value={value}\n      aria-pressed={selected}\n      {...other}\n    >\n      <span className={classes.label}>{children}</span>\n    </ButtonBase>\n  );\n});\n\nToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles, { name: 'MuiToggleButton' })(ToggleButton);\n"]},"metadata":{},"sourceType":"module"}