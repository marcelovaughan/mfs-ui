{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport { rewriteUrlForNextExport } from 'next/dist/next-server/lib/router/rewrite-url-for-export';\nimport { withStyles, useTheme } from \"../../../../packages/material-ui/src/styles\";\nimport NProgress from 'nprogress';\nimport CssBaseline from \"../../../../packages/material-ui/src/CssBaseline\";\nimport MuiLink from \"../../../../packages/material-ui/src/Link\";\nimport AppBar from \"../../../../packages/material-ui/src/AppBar\";\nimport Toolbar from \"../../../../packages/material-ui/src/Toolbar\";\nimport IconButton from \"../../../../packages/material-ui/src/IconButton\";\nimport MenuIcon from \"../../../../packages/material-ui-icons/src/Menu\";\nimport Tooltip from \"../../../../packages/material-ui/src/Tooltip\";\nimport Button from \"../../../../packages/material-ui/src/Button\";\nimport Box from \"../../../../packages/material-ui/src/Box\";\nimport NoSsr from \"../../../../packages/material-ui/src/NoSsr\";\nimport LanguageIcon from \"../../../../packages/material-ui-icons/src/Translate\";\nimport ExpandMoreIcon from \"../../../../packages/material-ui-icons/src/ExpandMore\";\nimport Menu from \"../../../../packages/material-ui/src/Menu\";\nimport MenuItem from \"../../../../packages/material-ui/src/MenuItem\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport ColorsIcon from \"../../../../packages/material-ui-icons/src/InvertColors\";\nimport Brightness4Icon from \"../../../../packages/material-ui-icons/src/Brightness4\";\nimport Brightness7Icon from \"../../../../packages/material-ui-icons/src/Brightness7\";\nimport GitHubIcon from \"../../../../packages/material-ui-icons/src/GitHub\";\nimport NProgressBar from \"../../../../packages/material-ui-docs/src/NProgressBar\";\nimport FormatTextdirectionLToR from \"../../../../packages/material-ui-icons/src/FormatTextdirectionLToR\";\nimport FormatTextdirectionRToL from \"../../../../packages/material-ui-icons/src/FormatTextdirectionRToL\";\nimport Link from \"./Link\";\nimport AppDrawer from \"./AppDrawer\";\nimport Notifications from \"./Notifications\";\nimport MarkdownLinks from \"./MarkdownLinks\";\nimport { LANGUAGES_LABEL } from \"../constants\";\nimport { pathnameToLanguage } from \"../utils/helpers\";\nimport { useChangeTheme } from \"./ThemeContext\";\nimport PageContext from \"./PageContext\";\nvar LOCALES = {\n  zh: 'zh-CN',\n  pt: 'pt-BR',\n  es: 'es-ES'\n};\nvar CROWDIN_ROOT_URL = 'https://translate.material-ui.com/project/material-ui-docs/';\n\nRouter.onRouteChangeStart = function () {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = function () {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = function () {\n  NProgress.done();\n};\n\nvar AppSearch = /*#__PURE__*/React.lazy(function () {\n  return import(\"./AppSearch\");\n});\n\nvar _ref = __jsx(\"link\", {\n  rel: \"preload\",\n  href: \"https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.css\",\n  as: \"style\"\n});\n\nvar _ref2 = __jsx(React.Suspense, {\n  fallback: null\n}, __jsx(AppSearch, null));\n\nfunction DeferredAppSearch() {\n  var _React$useState = React.useState(false),\n      mounted = _React$useState[0],\n      setMounted = _React$useState[1];\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  return __jsx(React.Fragment, null, _ref, mounted ? _ref2 : null);\n}\n\nvar styles = function styles(theme) {\n  return {\n    '@global': {\n      '#main-content': {\n        outline: 0\n      }\n    },\n    root: {\n      display: 'flex',\n      backgroundColor: theme.palette.background.level1\n    },\n    grow: {\n      flex: '1 1 auto'\n    },\n    skipNav: {\n      position: 'fixed',\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper,\n      transition: theme.transitions.create('top', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      left: theme.spacing(2),\n      top: theme.spacing(-10),\n      zIndex: theme.zIndex.tooltip + 1,\n      '&:focus': {\n        top: theme.spacing(2),\n        transition: theme.transitions.create('top', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      '@media print': {\n        display: 'none'\n      }\n    },\n    appBar: {\n      color: theme.palette.type === 'light' ? null : '#fff',\n      backgroundColor: theme.palette.type === 'light' ? null : theme.palette.background.level2,\n      transition: theme.transitions.create('width')\n    },\n    language: _defineProperty({\n      margin: theme.spacing(0, 0.5, 0, 1),\n      display: 'none'\n    }, theme.breakpoints.up('md'), {\n      display: 'block'\n    }),\n    appBarHome: {\n      boxShadow: 'none'\n    },\n    appBarShift: _defineProperty({}, theme.breakpoints.up('lg'), {\n      width: 'calc(100% - 240px)'\n    }),\n    drawer: _defineProperty({}, theme.breakpoints.up('lg'), {\n      flexShrink: 0,\n      width: 240\n    }),\n    navIconHide: _defineProperty({}, theme.breakpoints.up('lg'), {\n      display: 'none'\n    })\n  };\n};\n\nvar _ref3 = __jsx(NProgressBar, null);\n\nvar _ref4 = __jsx(CssBaseline, null);\n\nvar _ref5 = __jsx(MarkdownLinks, null);\n\nvar _ref6 = __jsx(MenuIcon, null);\n\nvar _ref7 = __jsx(DeferredAppSearch, null);\n\nvar _ref8 = __jsx(LanguageIcon, null);\n\nvar _ref9 = __jsx(ExpandMoreIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref10 = __jsx(Box, {\n  my: 1\n}, __jsx(Divider, null));\n\nvar _ref11 = __jsx(Notifications, null);\n\nvar _ref12 = __jsx(ColorsIcon, null);\n\nvar _ref13 = __jsx(GitHubIcon, null);\n\nvar _ref14 = __jsx(Brightness4Icon, null);\n\nvar _ref15 = __jsx(Brightness7Icon, null);\n\nvar _ref16 = __jsx(FormatTextdirectionLToR, null);\n\nvar _ref17 = __jsx(FormatTextdirectionRToL, null);\n\nfunction AppFrame(props) {\n  var children = props.children,\n      classes = props.classes,\n      _props$disableDrawer = props.disableDrawer,\n      disableDrawer = _props$disableDrawer === void 0 ? false : _props$disableDrawer;\n  var theme = useTheme();\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n  var crowdInLocale = LOCALES[userLanguage] || userLanguage;\n\n  var _React$useState2 = React.useState(null),\n      languageMenu = _React$useState2[0],\n      setLanguageMenu = _React$useState2[1];\n\n  var handleLanguageIconClick = function handleLanguageIconClick(event) {\n    setLanguageMenu(event.currentTarget);\n  };\n\n  var handleLanguageMenuClose = function handleLanguageMenuClose(event) {\n    if (event.currentTarget.nodeName === 'A') {\n      document.cookie = \"userLanguage=noDefault;path=/;max-age=31536000\";\n    }\n\n    setLanguageMenu(null);\n  };\n\n  var _React$useState3 = React.useState(false),\n      mobileOpen = _React$useState3[0],\n      setMobileOpen = _React$useState3[1];\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setMobileOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setMobileOpen(false);\n  };\n\n  var changeTheme = useChangeTheme();\n\n  var handleTogglePaletteType = function handleTogglePaletteType() {\n    var paletteType = theme.palette.type === 'light' ? 'dark' : 'light';\n    changeTheme({\n      paletteType: paletteType\n    });\n  };\n\n  var handleToggleDirection = function handleToggleDirection() {\n    changeTheme({\n      direction: theme.direction === 'ltr' ? 'rtl' : 'ltr'\n    });\n  };\n\n  var router = useRouter();\n\n  var _pathnameToLanguage = pathnameToLanguage(rewriteUrlForNextExport(router.asPath)),\n      canonical = _pathnameToLanguage.canonical;\n\n  var _React$useContext = React.useContext(PageContext),\n      activePage = _React$useContext.activePage;\n\n  var disablePermanent = false;\n  var navIconClassName = '';\n  var appBarClassName = classes.appBar;\n\n  if ((activePage === null || activePage === void 0 ? void 0 : activePage.disableDrawer) === true || disableDrawer === true) {\n    disablePermanent = true;\n    appBarClassName += \" \".concat(classes.appBarHome);\n  } else {\n    navIconClassName = classes.navIconHide;\n    appBarClassName += \" \".concat(classes.appBarShift);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, _ref3, _ref4, __jsx(MuiLink, {\n    color: \"secondary\",\n    className: classes.skipNav,\n    href: \"#main-content\"\n  }, t('skipToContent')), _ref5, __jsx(AppBar, {\n    className: appBarClassName\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": t('openDrawer'),\n    onClick: handleDrawerOpen,\n    className: navIconClassName\n  }, _ref6), __jsx(\"div\", {\n    className: classes.grow\n  }), _ref7, __jsx(Tooltip, {\n    title: t('changeLanguage'),\n    enterDelay: 300\n  }, __jsx(Button, {\n    color: \"inherit\",\n    \"aria-owns\": languageMenu ? 'language-menu' : undefined,\n    \"aria-haspopup\": \"true\",\n    \"aria-label\": t('changeLanguage'),\n    onClick: handleLanguageIconClick,\n    \"data-ga-event-category\": \"header\",\n    \"data-ga-event-action\": \"language\"\n  }, _ref8, __jsx(\"span\", {\n    className: classes.language\n  }, userLanguage === 'aa' ? 'Translating' : LANGUAGES_LABEL.filter(function (language) {\n    return language.code === userLanguage;\n  })[0].text), _ref9)), __jsx(NoSsr, {\n    defer: true\n  }, __jsx(Menu, {\n    id: \"language-menu\",\n    anchorEl: languageMenu,\n    open: Boolean(languageMenu),\n    onClose: handleLanguageMenuClose\n  }, LANGUAGES_LABEL.map(function (language) {\n    return __jsx(MenuItem, {\n      component: \"a\",\n      \"data-no-link\": \"true\",\n      href: language.code === 'en' ? canonical : \"/\".concat(language.code).concat(canonical),\n      key: language.code,\n      selected: userLanguage === language.code,\n      onClick: handleLanguageMenuClose,\n      lang: language.code,\n      hrefLang: language.code\n    }, language.text);\n  }), _ref10, __jsx(MenuItem, {\n    component: \"a\",\n    \"data-no-link\": \"true\",\n    href: userLanguage === 'en' || userLanguage === 'aa' ? \"\".concat(CROWDIN_ROOT_URL) : \"\".concat(CROWDIN_ROOT_URL).concat(crowdInLocale, \"#/staging\"),\n    rel: \"noopener nofollow\",\n    target: \"_blank\",\n    key: userLanguage,\n    lang: userLanguage,\n    hrefLang: \"en\",\n    onClick: handleLanguageMenuClose\n  }, \"\".concat(t('helpToTranslate'))))), _ref11, __jsx(Tooltip, {\n    title: t('editWebsiteColors'),\n    enterDelay: 300\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": t('editWebsiteColors'),\n    component: Link,\n    naked: true,\n    href: \"/customization/color/#playground\",\n    \"data-ga-event-category\": \"header\",\n    \"data-ga-event-action\": \"colors\"\n  }, _ref12)), __jsx(Tooltip, {\n    title: t('github'),\n    enterDelay: 300\n  }, __jsx(IconButton, {\n    component: \"a\",\n    color: \"inherit\",\n    href: \"https://github.com/mui-org/material-ui\",\n    \"aria-label\": t('github'),\n    \"data-ga-event-category\": \"header\",\n    \"data-ga-event-action\": \"github\"\n  }, _ref13)), __jsx(Tooltip, {\n    title: t('toggleTheme'),\n    enterDelay: 300\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    onClick: handleTogglePaletteType,\n    \"aria-label\": t('toggleTheme'),\n    \"data-ga-event-category\": \"header\",\n    \"data-ga-event-action\": \"dark\"\n  }, theme.palette.type === 'light' ? _ref14 : _ref15)), __jsx(Tooltip, {\n    title: t('toggleRTL'),\n    key: theme.direction,\n    enterDelay: 300\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    onClick: handleToggleDirection,\n    \"aria-label\": t('toggleRTL'),\n    \"data-ga-event-category\": \"header\",\n    \"data-ga-event-action\": \"rtl\"\n  }, theme.direction === 'rtl' ? _ref16 : _ref17)))), __jsx(AppDrawer, {\n    className: disablePermanent ? '' : classes.drawer,\n    disablePermanent: disablePermanent,\n    onClose: handleDrawerClose,\n    onOpen: handleDrawerOpen,\n    mobileOpen: mobileOpen\n  }), children);\n}\n\nexport default withStyles(styles)(AppFrame);","map":null,"metadata":{},"sourceType":"module"}