{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/StylesProvider/StylesProvider.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from \"../../../material-ui-utils/src\";\nimport createGenerateClassName from \"../createGenerateClassName\";\nimport { create } from 'jss';\nimport jssPreset from \"../jssPreset\"; // Default JSS instance.\n\nvar jss = create(jssPreset()); // Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\n\nvar generateClassName = createGenerateClassName(); // Exported for test purposes\n\nexport var sheetsManager = new _Map();\nvar defaultOptions = {\n  disableGeneration: false,\n  generateClassName: generateClassName,\n  jss: jss,\n  sheetsCache: null,\n  sheetsManager: sheetsManager,\n  sheetsRegistry: null\n};\nexport var StylesContext = React.createContext(defaultOptions);\n\nif (true) {\n  StylesContext.displayName = 'StylesContext';\n}\n\nvar injectFirstNode;\nexport default function StylesProvider(props) {\n  var children = props.children,\n      _props$injectFirst = props.injectFirst,\n      injectFirst = _props$injectFirst === void 0 ? false : _props$injectFirst,\n      _props$disableGenerat = props.disableGeneration,\n      disableGeneration = _props$disableGenerat === void 0 ? false : _props$disableGenerat,\n      localOptions = _objectWithoutProperties(props, [\"children\", \"injectFirst\", \"disableGeneration\"]);\n\n  var outerOptions = React.useContext(StylesContext);\n\n  var context = _objectSpread(_objectSpread({}, outerOptions), {}, {\n    disableGeneration: disableGeneration\n  }, localOptions);\n\n  if (true) {\n    if (false && !context.sheetsManager) {\n      console.error('Material-UI: You need to use the ServerStyleSheets API when rendering on the server.');\n    }\n  }\n\n  if (true) {\n    if (context.jss.options.insertionPoint && injectFirst) {\n      console.error('Material-UI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.');\n    }\n  }\n\n  if (true) {\n    if (injectFirst && localOptions.jss) {\n      console.error('Material-UI: You cannot use the jss and injectFirst props at the same time.');\n    }\n  }\n\n  if (!context.jss.options.insertionPoint && injectFirst && true) {\n    if (!injectFirstNode) {\n      var head = document.head;\n      injectFirstNode = document.createComment('mui-inject-first');\n      head.insertBefore(injectFirstNode, head.firstChild);\n    }\n\n    context.jss = create({\n      plugins: jssPreset().plugins,\n      insertionPoint: injectFirstNode\n    });\n  }\n\n  return __jsx(StylesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, children);\n}\nStylesProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.\n   */\n  disableGeneration: PropTypes.bool,\n\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: PropTypes.func,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override Material-UI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool,\n\n  /**\n   * JSS's instance.\n   */\n  jss: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  serverGenerateClassName: PropTypes.func,\n\n  /**\n   * @ignore\n   *\n   * Beta feature.\n   *\n   * Cache for the sheets.\n   */\n  sheetsCache: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * Collect the sheets.\n   */\n  sheetsRegistry: PropTypes.object\n};\n\nif (true) {\n  StylesProvider.propTypes = exactProp(StylesProvider.propTypes);\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/StylesProvider/StylesProvider.js"],"names":["React","PropTypes","exactProp","createGenerateClassName","create","jssPreset","jss","generateClassName","sheetsManager","defaultOptions","disableGeneration","sheetsCache","sheetsRegistry","StylesContext","createContext","displayName","injectFirstNode","StylesProvider","props","children","injectFirst","localOptions","outerOptions","useContext","context","console","error","options","insertionPoint","head","document","createComment","insertBefore","firstChild","plugins","propTypes","node","isRequired","bool","func","object","serverGenerateClassName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport createGenerateClassName from '../createGenerateClassName';\nimport { create } from 'jss';\nimport jssPreset from '../jssPreset';\n\n// Default JSS instance.\nconst jss = create(jssPreset());\n\n// Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\nconst generateClassName = createGenerateClassName();\n\n// Exported for test purposes\nexport const sheetsManager = new Map();\n\nconst defaultOptions = {\n  disableGeneration: false,\n  generateClassName,\n  jss,\n  sheetsCache: null,\n  sheetsManager,\n  sheetsRegistry: null,\n};\n\nexport const StylesContext = React.createContext(defaultOptions);\n\nif (process.env.NODE_ENV !== 'production') {\n  StylesContext.displayName = 'StylesContext';\n}\n\nlet injectFirstNode;\n\nexport default function StylesProvider(props) {\n  const { children, injectFirst = false, disableGeneration = false, ...localOptions } = props;\n\n  const outerOptions = React.useContext(StylesContext);\n  const context = { ...outerOptions, disableGeneration, ...localOptions };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'undefined' && !context.sheetsManager) {\n      console.error(\n        'Material-UI: You need to use the ServerStyleSheets API when rendering on the server.',\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (context.jss.options.insertionPoint && injectFirst) {\n      console.error(\n        'Material-UI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.',\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (injectFirst && localOptions.jss) {\n      console.error('Material-UI: You cannot use the jss and injectFirst props at the same time.');\n    }\n  }\n\n  if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {\n    if (!injectFirstNode) {\n      const head = document.head;\n      injectFirstNode = document.createComment('mui-inject-first');\n      head.insertBefore(injectFirstNode, head.firstChild);\n    }\n\n    context.jss = create({ plugins: jssPreset().plugins, insertionPoint: injectFirstNode });\n  }\n\n  return <StylesContext.Provider value={context}>{children}</StylesContext.Provider>;\n}\n\nStylesProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.\n   */\n  disableGeneration: PropTypes.bool,\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: PropTypes.func,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override Material-UI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool,\n  /**\n   * JSS's instance.\n   */\n  jss: PropTypes.object,\n  /**\n   * @ignore\n   */\n  serverGenerateClassName: PropTypes.func,\n  /**\n   * @ignore\n   *\n   * Beta feature.\n   *\n   * Cache for the sheets.\n   */\n  sheetsCache: PropTypes.object,\n  /**\n   * @ignore\n   *\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: PropTypes.object,\n  /**\n   * @ignore\n   *\n   * Collect the sheets.\n   */\n  sheetsRegistry: PropTypes.object,\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  StylesProvider.propTypes = exactProp(StylesProvider.propTypes);\n}\n"]},"metadata":{},"sourceType":"module"}