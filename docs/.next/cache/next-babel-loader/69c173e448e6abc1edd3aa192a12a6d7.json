{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Snackbar from \"../../../../../packages/material-ui/src/Snackbar\";\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center'\n  });\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n\n  const handleClick = newState => () => {\n    setState(_objectSpread({\n      open: true\n    }, newState));\n  };\n\n  const handleClose = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  };\n\n  const buttons = __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'top',\n      horizontal: 'center'\n    })\n  }, \"Top-Center\"), __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'top',\n      horizontal: 'right'\n    })\n  }, \"Top-Right\"), __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'bottom',\n      horizontal: 'right'\n    })\n  }, \"Bottom-Right\"), __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'bottom',\n      horizontal: 'center'\n    })\n  }, \"Bottom-Center\"), __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'bottom',\n      horizontal: 'left'\n    })\n  }, \"Bottom-Left\"), __jsx(Button, {\n    onClick: handleClick({\n      vertical: 'top',\n      horizontal: 'left'\n    })\n  }, \"Top-Left\"));\n\n  return __jsx(\"div\", null, buttons, __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    open: open,\n    onClose: handleClose,\n    message: \"I love snacks\",\n    key: vertical + horizontal\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}