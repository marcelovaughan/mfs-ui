{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\"; // Like https://github.com/brunobertolini/styled-by\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst styles = {\n  root: {\n    background: styledBy('color', {\n      default: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n    }),\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: styledBy('color', {\n      default: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)'\n    })\n  }\n};\nconst StyledButton = withStyles(styles)(_ref => {\n  let {\n    classes,\n    color\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"classes\", \"color\"]);\n\n  return __jsx(Button, _extends({\n    className: classes.root\n  }, other));\n});\nexport default function DynamicCSS() {\n  const [color, setColor] = React.useState('default');\n\n  const handleChange = event => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: color === 'blue',\n      onChange: handleChange,\n      color: \"primary\",\n      value: \"dynamic-class-name\"\n    }),\n    label: \"Blue\"\n  }), __jsx(StyledButton, {\n    color: color\n  }, \"Dynamic CSS\"));\n}","map":null,"metadata":{},"sourceType":"module"}