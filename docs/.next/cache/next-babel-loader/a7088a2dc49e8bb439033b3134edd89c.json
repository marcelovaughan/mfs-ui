{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { makeStyles, withStyles, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Tabs from \"../../../../../packages/material-ui/src/Tabs\";\nimport Tab from \"../../../../../packages/material-ui/src/Tab\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #e8e8e8'\n  },\n  indicator: {\n    backgroundColor: '#1890ff'\n  }\n})(Tabs);\nconst AntTab = withStyles(theme => createStyles({\n  root: {\n    textTransform: 'none',\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1\n    },\n    '&$selected': {\n      color: '#1890ff',\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '&:focus': {\n      color: '#40a9ff'\n    }\n  },\n  selected: {}\n}))(props => __jsx(Tab, _extends({\n  disableRipple: true\n}, props)));\n\nvar _ref = __jsx(\"span\", null);\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    '& > span': {\n      maxWidth: 40,\n      width: '100%',\n      backgroundColor: '#635ee7'\n    }\n  }\n})(props => __jsx(Tabs, _extends({}, props, {\n  TabIndicatorProps: {\n    children: _ref\n  }\n})));\nconst StyledTab = withStyles(theme => createStyles({\n  root: {\n    textTransform: 'none',\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(1),\n    '&:focus': {\n      opacity: 1\n    }\n  }\n}))(props => __jsx(Tab, _extends({\n  disableRipple: true\n}, props)));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  padding: {\n    padding: theme.spacing(3)\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper\n  },\n  demo2: {\n    backgroundColor: '#2e1534'\n  }\n}));\n\nvar _ref2 = __jsx(AntTab, {\n  label: \"Tab 1\"\n});\n\nvar _ref3 = __jsx(AntTab, {\n  label: \"Tab 2\"\n});\n\nvar _ref4 = __jsx(AntTab, {\n  label: \"Tab 3\"\n});\n\nvar _ref5 = __jsx(StyledTab, {\n  label: \"Workflows\"\n});\n\nvar _ref6 = __jsx(StyledTab, {\n  label: \"Datasets\"\n});\n\nvar _ref7 = __jsx(StyledTab, {\n  label: \"Connections\"\n});\n\nexport default function CustomizedTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.demo1\n  }, __jsx(AntTabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"ant example\"\n  }, _ref2, _ref3, _ref4), __jsx(Typography, {\n    className: classes.padding\n  })), __jsx(\"div\", {\n    className: classes.demo2\n  }, __jsx(StyledTabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"styled tabs example\"\n  }, _ref5, _ref6, _ref7), __jsx(Typography, {\n    className: classes.padding\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}