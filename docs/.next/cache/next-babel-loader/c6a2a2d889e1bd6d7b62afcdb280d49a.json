{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref[\"default\"],\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (true) {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [_JSON$stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/utils/useControlled.js"],"names":["React","useControlled","controlled","defaultProp","name","state","useRef","undefined","isControlled","current","useState","valueState","setValue","value","useEffect","console","error","join","defaultValue","setValueIfUncontrolled","useCallback","newValue"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,aAAT,OAAoF;AAAA,MAA3DC,UAA2D,QAA3DA,UAA2D;AAAA,MAAtCC,WAAsC;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,wBAAnBC,KAAmB;AAAA,MAAnBA,KAAmB,2BAAX,OAAW;;AAAA,sBAC/DL,KAAK,CAACM,MAAN,CAAaJ,UAAU,KAAKK,SAA5B,CAD+D;AAAA,MAChFC,YADgF,iBACzFC,OADyF;;AAAA,wBAElET,KAAK,CAACU,QAAN,CAAeP,WAAf,CAFkE;AAAA,MAE1FQ,UAF0F;AAAA,MAE9EC,QAF8E;;AAGjG,MAAMC,KAAK,GAAGL,YAAY,GAAGN,UAAH,GAAgBS,UAA1C;;AAEA,YAA2C;AACzCX,IAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,UAAIN,YAAY,MAAMN,UAAU,KAAKK,SAArB,CAAhB,EAAiD;AAC/CQ,QAAAA,OAAO,CAACC,KAAR,CACE,oDAEIR,YAAY,GAAG,EAAH,GAAQ,IAFxB,wBAGgBH,KAHhB,uBAGkCD,IAHlC,oBAGgDI,YAAY,GAAG,IAAH,GAAU,EAHtE,kBAIE,6EAJF,EAKE,4DAAqDJ,IAArD,SACE,4CANJ,EAOE,4HAPF,EAQE,sDARF,EASEa,IATF,CASO,IATP,CADF;AAYD;AACF,KAfD,EAeG,CAACf,UAAD,CAfH;;AADyC,yBAkBPF,KAAK,CAACM,MAAN,CAAaH,WAAb,CAlBO;AAAA,QAkBxBe,YAlBwB,kBAkBjCT,OAlBiC;;AAoBzCT,IAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,UAAI,CAACN,YAAD,IAAiBU,YAAY,KAAKf,WAAtC,EAAmD;AACjDY,QAAAA,OAAO,CAACC,KAAR,CACE,CACE,2DAAoDX,KAApD,uCAAsFD,IAAtF,6FACsDA,IADtD,MADF,EAGEa,IAHF,CAGO,IAHP,CADF;AAMD;AACF,KATD,EASG,CAAC,gBAAed,WAAf,CAAD,CATH;AAUD;;AAED,MAAMgB,sBAAsB,GAAGnB,KAAK,CAACoB,WAAN,CAAkB,UAACC,QAAD,EAAc;AAC7D,QAAI,CAACb,YAAL,EAAmB;AACjBI,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACD;AACF,GAJ8B,EAI5B,EAJ4B,CAA/B;AAMA,SAAO,CAACR,KAAD,EAAQM,sBAAR,CAAP;AACD","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\n\nexport default function useControlled({ controlled, default: defaultProp, name, state = 'value' }) {\n  const { current: isControlled } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error(\n          [\n            `Material-UI: A component is changing the ${\n              isControlled ? '' : 'un'\n            }controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`,\n            'Elements should not switch from uncontrolled to controlled (or vice versa).',\n            `Decide between using a controlled or uncontrolled ${name} ` +\n              'element for the lifetime of the component.',\n            \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\",\n            'More info: https://fb.me/react-controlled-components',\n          ].join('\\n'),\n        );\n      }\n    }, [controlled]);\n\n    const { current: defaultValue } = React.useRef(defaultProp);\n\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error(\n          [\n            `Material-UI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` +\n              `To suppress this warning opt to use a controlled ${name}.`,\n          ].join('\\n'),\n        );\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  const setValueIfUncontrolled = React.useCallback((newValue) => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n\n  return [value, setValueIfUncontrolled];\n}\n"]},"metadata":{},"sourceType":"module"}