{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/pages/components/buttons/ButtonBase.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport ButtonBase from \"../../../../../packages/material-ui/src/ButtonBase\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nconst images = [{\n  url: '/static/images/grid-list/breakfast.jpg',\n  title: 'Breakfast',\n  width: '40%'\n}, {\n  url: '/static/images/grid-list/burgers.jpg',\n  title: 'Burgers',\n  width: '30%'\n}, {\n  url: '/static/images/grid-list/camera.jpg',\n  title: 'Camera',\n  width: '30%'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%'\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%'\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity')\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity')\n  }\n}));\nexport default function ButtonBases() {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, images.map(image => __jsx(ButtonBase, {\n    focusRipple: true,\n    key: image.title,\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    style: {\n      width: image.width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: classes.imageSrc,\n    style: {\n      backgroundImage: `url(${image.url})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    className: classes.imageBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    className: classes.imageButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.imageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, image.title, __jsx(\"span\", {\n    className: classes.imageMarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/pages/components/buttons/ButtonBase.js"],"names":["images","url","title","width","useStyles","makeStyles","theme","root","display","flexWrap","minWidth","image","position","height","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","transition","imageTitle","padding","imageMarked","classes","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\n\nconst images = [\n  {\n    url: '/static/images/grid-list/breakfast.jpg',\n    title: 'Breakfast',\n    width: '40%',\n  },\n  {\n    url: '/static/images/grid-list/burgers.jpg',\n    title: 'Burgers',\n    width: '30%',\n  },\n  {\n    url: '/static/images/grid-list/camera.jpg',\n    title: 'Camera',\n    width: '30%',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n}));\n\nexport default function ButtonBases() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {images.map((image) => (\n        <ButtonBase\n          focusRipple\n          key={image.title}\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: image.width,\n          }}\n        >\n          <span\n            className={classes.imageSrc}\n            style={{\n              backgroundImage: `url(${image.url})`,\n            }}\n          />\n          <span className={classes.imageBackdrop} />\n          <span className={classes.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.imageTitle}\n            >\n              {image.title}\n              <span className={classes.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}