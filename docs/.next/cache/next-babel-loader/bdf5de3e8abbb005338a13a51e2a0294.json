{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport LinearProgress from \"../../../../../packages/material-ui/src/LinearProgress\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Box from \"../../../../../packages/material-ui/src/Box\";\n\nfunction LinearProgressWithLabel(props) {\n  return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Box, {\n    width: \"100%\",\n    mr: 1\n  }, __jsx(LinearProgress, _extends({\n    variant: \"determinate\"\n  }, props))), __jsx(Box, {\n    minWidth: 35\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\"\n  }, `${Math.round(props.value)}%`)));\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  }\n});\nexport default function LinearWithValueLabel() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(10);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 10);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(LinearProgressWithLabel, {\n    value: progress\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}