{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport { makeStyles, ThemeProvider, useTheme, createMuiTheme } from \"../../../../../packages/material-ui/src/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    padding: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  group: {\n    marginTop: theme.spacing(3)\n  },\n  color: {\n    display: 'flex',\n    alignItems: 'center',\n    '& div:first-of-type': {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      flexShrink: 0,\n      marginRight: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}));\n\nvar _ref = __jsx(Typography, {\n  gutterBottom: true\n}, \"Typography\");\n\nfunction Demo() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const item = (color, name, expanded = false, border = false) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: expanded ? 8 : 4,\n    className: classes.color\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: color,\n      border: border ? `1px solid ${theme.palette.divider}` : undefined\n    }\n  }), __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"body2\"\n  }, name), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\"\n  }, color)));\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, _ref, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, item(theme.palette.text.primary, 'palette.text.primary'), item(theme.palette.text.secondary, 'palette.text.secondary'), item(theme.palette.text.disabled, 'palette.text.disabled')), __jsx(Typography, {\n    gutterBottom: true,\n    className: classes.group\n  }, \"Buttons\"), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, item(theme.palette.action.active, 'palette.action.active'), item(theme.palette.action.hover, 'palette.action.hover'), item(theme.palette.action.selected, 'palette.action.selected'), item(theme.palette.action.disabled, 'palette.action.disabled'), item(theme.palette.action.disabledBackground, 'palette.action.disabledBackground', true)), __jsx(Typography, {\n    gutterBottom: true,\n    className: classes.group\n  }, \"Background\"), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, item(theme.palette.background.default, 'palette.background.default', false, true), item(theme.palette.background.paper, 'palette.background.paper')), __jsx(Typography, {\n    gutterBottom: true,\n    className: classes.group\n  }, \"Divider\"), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, item(theme.palette.divider, 'palette.divider')));\n}\n\nconst lightTheme = createMuiTheme();\nconst darkTheme = createMuiTheme({\n  palette: {\n    // Switching the dark mode on is a single property value change.\n    type: 'dark'\n  }\n});\n\nvar _ref2 = __jsx(ThemeProvider, {\n  theme: darkTheme\n}, __jsx(Demo, null));\n\nvar _ref3 = __jsx(ThemeProvider, {\n  theme: lightTheme\n}, __jsx(Demo, null));\n\nexport default function DarkTheme() {\n  // Note that if you intend to use two or more themes at the same time on your site,\n  // you need to wrap them with a single ThemeProvider at the root (not like in this example).\n  return __jsx(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, _ref2, _ref3);\n}","map":null,"metadata":{},"sourceType":"module"}