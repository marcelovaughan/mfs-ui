{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport SwipeableDrawer from \"../../../../../packages/material-ui/src/SwipeableDrawer\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport List from \"../../../../../packages/material-ui/src/List\";\nimport Divider from \"../../../../../packages/material-ui/src/Divider\";\nimport ListItem from \"../../../../../packages/material-ui/src/ListItem\";\nimport ListItemIcon from \"../../../../../packages/material-ui/src/ListItemIcon\";\nimport ListItemText from \"../../../../../packages/material-ui/src/ListItemText\";\nimport InboxIcon from \"../../../../../packages/material-ui-icons/src/MoveToInbox\";\nimport MailIcon from \"../../../../../packages/material-ui-icons/src/Mail\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nvar _ref = __jsx(InboxIcon, null);\n\nvar _ref2 = __jsx(MailIcon, null);\n\nvar _ref3 = __jsx(Divider, null);\n\nvar _ref4 = __jsx(InboxIcon, null);\n\nvar _ref5 = __jsx(MailIcon, null);\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const list = anchor => __jsx(\"div\", {\n    className: clsx(classes.list, (anchor === 'top' || anchor === 'bottom') && classes.fullList),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false)\n  }, __jsx(List, null, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text\n  }, __jsx(ListItemIcon, null, index % 2 === 0 ? _ref : _ref2), __jsx(ListItemText, {\n    primary: text\n  })))), _ref3, __jsx(List, null, ['All mail', 'Trash', 'Spam'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text\n  }, __jsx(ListItemIcon, null, index % 2 === 0 ? _ref4 : _ref5), __jsx(ListItemText, {\n    primary: text\n  })))));\n\n  return __jsx(\"div\", null, ['left', 'right', 'top', 'bottom'].map(anchor => __jsx(React.Fragment, {\n    key: anchor\n  }, __jsx(Button, {\n    onClick: toggleDrawer(anchor, true)\n  }, anchor), __jsx(SwipeableDrawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    onOpen: toggleDrawer(anchor, true)\n  }, list(anchor)))));\n}","map":null,"metadata":{},"sourceType":"module"}