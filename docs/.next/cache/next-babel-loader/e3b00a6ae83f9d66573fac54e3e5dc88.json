{"ast":null,"code":"export default function getJsxPreview(code) {\n  /* The regex matches the content of the return statement in the default export,\n   * stripping any wrapper divs:\n   *\n   * `export default.*`\n   * `\\n  return (\\n` or `\\n  return `\n   * `    <div.*>\\n` (optional)\n   *  everything until:\n   * `\\n    </div>` (optional)\n   * `  );\\n}` or `;\\n}`\n   */\n  var jsx = code.match(/export default [\\s\\S]*(?:\\n {2}return \\(\\n|\\n {2}return )(?: {4}<div[\\s\\S]*?>\\n)?([\\s\\S]*?)(\\n {4}<\\/div>)?(\\n {2}\\);\\n\\}|;\\n\\})/); // Just the match, otherwise the full source if either no match or preview disabled,\n  // so as not to break the Collapse transition.\n\n  jsx = jsx ? jsx[1] : code; // Remove leading spaces from each line\n\n  return jsx.split(/\\n/).reduce(function (acc, line) {\n    return \"\".concat(acc).concat(line.slice( // Number of leading spaces on the first line\n    jsx.match(/^ */)[0].length), \"\\n\");\n  }, '');\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/utils/getJsxPreview.js"],"names":["getJsxPreview","code","jsx","match","split","reduce","acc","line","slice","length"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC1C;;;;;;;;;;AAUA,MAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CACR,kIADQ,CAAV,CAX0C,CAc1C;AACA;;AACAD,EAAAA,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAN,GAAYD,IAArB,CAhB0C,CAkB1C;;AACA,SAAOC,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,MAAhB,CACL,UAACC,GAAD,EAAMC,IAAN;AAAA,qBACKD,GADL,SACWC,IAAI,CAACC,KAAL,EACP;AACAN,IAAAA,GAAG,CAACC,KAAJ,CAAU,KAAV,EAAiB,CAAjB,EAAoBM,MAFb,CADX;AAAA,GADK,EAML,EANK,CAAP;AAQD","sourcesContent":["export default function getJsxPreview(code) {\n  /* The regex matches the content of the return statement in the default export,\n   * stripping any wrapper divs:\n   *\n   * `export default.*`\n   * `\\n  return (\\n` or `\\n  return `\n   * `    <div.*>\\n` (optional)\n   *  everything until:\n   * `\\n    </div>` (optional)\n   * `  );\\n}` or `;\\n}`\n   */\n  let jsx = code.match(\n    /export default .*(?:\\n {2}return \\(\\n|\\n {2}return )(?: {4}<div.*?>\\n)?(.*?)(\\n {4}<\\/div>)?(\\n {2}\\);\\n}|;\\n})/s,\n  );\n  // Just the match, otherwise the full source if either no match or preview disabled,\n  // so as not to break the Collapse transition.\n  jsx = jsx ? jsx[1] : code;\n\n  // Remove leading spaces from each line\n  return jsx.split(/\\n/).reduce(\n    (acc, line) =>\n      `${acc}${line.slice(\n        // Number of leading spaces on the first line\n        jsx.match(/^ */)[0].length,\n      )}\\n`,\n    '',\n  );\n}\n"]},"metadata":{},"sourceType":"module"}