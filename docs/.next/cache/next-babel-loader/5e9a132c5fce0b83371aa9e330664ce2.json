{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport Container from \"../../../../packages/material-ui/src/Container\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 80 + 16,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  }\n}));\nexport default function AppContainer(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  return __jsx(Container, _extends({\n    component: \"main\",\n    id: \"main-content\",\n    maxWidth: \"md\",\n    tabIndex: -1,\n    className: clsx(classes.root, className)\n  }, other));\n}","map":null,"metadata":{},"sourceType":"module"}