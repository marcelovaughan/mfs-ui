{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nvar Context = React.createContext(null);\n\nif (false) {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  React.useEffect(function () {\n    setId(\"mui-p-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  var children = props.children,\n      value = props.value;\n  var idPrefix = useUniquePrefix();\n  var context = React.useMemo(function () {\n    return {\n      idPrefix: idPrefix,\n      value: value\n    };\n  }, [idPrefix, value]);\n  return __jsx(Context.Provider, {\n    value: context\n  }, children);\n}\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-P-\").concat(value);\n}\nexport function getTabId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-T-\").concat(value);\n}","map":null,"metadata":{},"sourceType":"module"}