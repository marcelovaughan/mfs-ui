{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Fade from \"../../../../../packages/material-ui/src/Fade\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport CircularProgress from \"../../../../../packages/material-ui/src/CircularProgress\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    button: {\n      margin: theme.spacing(2)\n    },\n    placeholder: {\n      height: 40\n    }\n  });\n});\n\nvar _ref = __jsx(CircularProgress, null);\n\nvar _ref2 = __jsx(Typography, null, \"Success!\");\n\nvar _ref3 = __jsx(CircularProgress, null);\n\nexport default function DelayingAppearance() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      loading = _React$useState[0],\n      setLoading = _React$useState[1];\n\n  var _React$useState2 = React.useState('idle'),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var timerRef = React.useRef();\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timerRef.current);\n    };\n  }, []);\n\n  var handleClickLoading = function handleClickLoading() {\n    setLoading(function (prevLoading) {\n      return !prevLoading;\n    });\n  };\n\n  var handleClickQuery = function handleClickQuery() {\n    clearTimeout(timerRef.current);\n\n    if (query !== 'idle') {\n      setQuery('idle');\n      return;\n    }\n\n    setQuery('progress');\n    timerRef.current = setTimeout(function () {\n      setQuery('success');\n    }, 2000);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.placeholder\n  }, __jsx(Fade, {\n    \"in\": loading,\n    style: {\n      transitionDelay: loading ? '800ms' : '0ms'\n    },\n    unmountOnExit: true\n  }, _ref)), __jsx(Button, {\n    onClick: handleClickLoading,\n    className: classes.button\n  }, loading ? 'Stop loading' : 'Loading'), __jsx(\"div\", {\n    className: classes.placeholder\n  }, query === 'success' ? _ref2 : __jsx(Fade, {\n    \"in\": query === 'progress',\n    style: {\n      transitionDelay: query === 'progress' ? '800ms' : '0ms'\n    },\n    unmountOnExit: true\n  }, _ref3)), __jsx(Button, {\n    onClick: handleClickQuery,\n    className: classes.button\n  }, query !== 'idle' ? 'Reset' : 'Simulate a load'));\n}","map":null,"metadata":{},"sourceType":"module"}