{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/SwipeableDrawer/SwipeArea.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nimport { isHorizontal } from \"../Drawer/Drawer\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes,\n    className,\n    width\n  } = props,\n        other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }));\n});\nSwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n};\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/SwipeableDrawer/SwipeArea.js"],"names":["React","PropTypes","clsx","withStyles","capitalize","isHorizontal","styles","theme","root","position","top","left","bottom","zIndex","drawer","anchorLeft","right","anchorRight","anchorTop","anchorBottom","SwipeArea","forwardRef","props","ref","anchor","classes","className","width","other","propTypes","oneOf","isRequired","object","string","number","name"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,SAASC,YAAT;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,KAAY;AAChC;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,OADN;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,MAAM,EAAE,CAJJ;AAKJC,IAAAA,MAAM,EAAEN,KAAK,CAACM,MAAN,CAAaC,MAAb,GAAsB;AAL1B,GAF0B;AAShCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAToB;AAYhCC,EAAAA,WAAW,EAAE;AACXN,IAAAA,IAAI,EAAE,MADK;AAEXK,IAAAA,KAAK,EAAE;AAFI,GAZmB;AAgBhCE,EAAAA,SAAS,EAAE;AACTN,IAAAA,MAAM,EAAE,MADC;AAETI,IAAAA,KAAK,EAAE;AAFE,GAhBqB;AAoBhCG,EAAAA,YAAY,EAAE;AACZT,IAAAA,GAAG,EAAE,MADO;AAEZE,IAAAA,MAAM,EAAE,CAFI;AAGZI,IAAAA,KAAK,EAAE;AAHK;AApBkB,CAAZ,CAAf;AA2BP;;;;AAGA,MAAMI,SAAS,gBAAGpB,KAAK,CAACqB,UAAN,CAAiB,SAASD,SAAT,CAAmBE,KAAnB,EAA0BC,GAA1B,EAA+B;AAChE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAAkDL,KAAxD;AAAA,QAA8CM,KAA9C,4BAAwDN,KAAxD;;AAEA,SACE;AACE,IAAA,SAAS,EAAEpB,IAAI,CAACuB,OAAO,CAACjB,IAAT,EAAeiB,OAAO,CAAE,SAAQrB,UAAU,CAACoB,MAAD,CAAS,EAA7B,CAAtB,EAAuDE,SAAvD,CADjB;AAEE,IAAA,GAAG,EAAEH,GAFP;AAGE,IAAA,KAAK,EAAE;AACL,OAAClB,YAAY,CAACmB,MAAD,CAAZ,GAAuB,OAAvB,GAAiC,QAAlC,GAA6CG;AADxC;AAHT,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD,CAbiB,CAAlB;AAeAR,SAAS,CAACS,SAAV,GAAsB;AACpB;;;AAGAL,EAAAA,MAAM,EAAEvB,SAAS,CAAC6B,KAAV,CAAgB,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAhB,EAAoDC,UAJxC;;AAKpB;;;AAGAN,EAAAA,OAAO,EAAExB,SAAS,CAAC+B,MAAV,CAAiBD,UARN;;AASpB;;;AAGAL,EAAAA,SAAS,EAAEzB,SAAS,CAACgC,MAZD;;AAapB;;;;AAIAN,EAAAA,KAAK,EAAE1B,SAAS,CAACiC,MAAV,CAAiBH;AAjBJ,CAAtB;AAoBA,eAAe5B,UAAU,CAACG,MAAD,EAAS;AAAE6B,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAAiDf,SAAjD,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n  },\n  anchorLeft: {\n    right: 'auto',\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0,\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0,\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0,\n  },\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = React.forwardRef(function SwipeArea(props, ref) {\n  const { anchor, classes, className, width, ...other } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, classes[`anchor${capitalize(anchor)}`], className)}\n      ref={ref}\n      style={{\n        [isHorizontal(anchor) ? 'width' : 'height']: width,\n      }}\n      {...other}\n    />\n  );\n});\n\nSwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles, { name: 'PrivateSwipeArea' })(SwipeArea);\n"]},"metadata":{},"sourceType":"module"}