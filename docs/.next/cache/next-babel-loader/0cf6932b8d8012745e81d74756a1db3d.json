{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from \"../../../../packages/material-ui/src/Link\";\nimport { useSelector } from 'react-redux';\nvar NextComposed = /*#__PURE__*/React.forwardRef(function NextComposed(props, ref) {\n  var as = props.as,\n      href = props.href,\n      other = _objectWithoutProperties(props, [\"as\", \"href\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    as: as\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other)));\n}); // A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\n\nfunction Link(props) {\n  var _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      classNameProps = props.className,\n      routerHref = props.href,\n      innerRef = props.innerRef,\n      naked = props.naked,\n      roleProp = props.role,\n      other = _objectWithoutProperties(props, [\"activeClassName\", \"className\", \"href\", \"innerRef\", \"naked\", \"role\"]); // apply nextjs rewrites\n\n\n  var href = routerHref.replace(/\\/api-docs\\/(.*)/, '/api/$1');\n  var router = useRouter();\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n  var className = clsx(classNameProps, router.pathname === routerHref && activeClassName);\n\n  if (userLanguage !== 'en' && href.indexOf('/') === 0 && href.indexOf('/blog') !== 0) {\n    other.as = \"/\".concat(userLanguage).concat(href);\n  } // catch role passed from ButtonBase. This is definitely a link\n\n\n  var role = roleProp === 'button' ? undefined : roleProp;\n  var isExternal = href.indexOf('https:') === 0 || href.indexOf('mailto:') === 0;\n\n  if (isExternal) {\n    return __jsx(MuiLink, _extends({\n      className: className,\n      href: href,\n      ref: innerRef,\n      role: role\n    }, other));\n  }\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      href: href,\n      ref: innerRef,\n      role: role\n    }, other));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    href: href,\n    ref: innerRef,\n    role: role\n  }, other));\n}\n\nexport default /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return __jsx(Link, _extends({}, props, {\n    innerRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}