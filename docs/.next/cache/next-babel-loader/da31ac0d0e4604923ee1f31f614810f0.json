{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ListItem/ListItem.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from \"../../../material-ui-utils/src\";\nimport withStyles from \"../styles/withStyles\";\nimport ButtonBase from \"../ButtonBase\";\nimport isMuiElement from \"../utils/isMuiElement\";\nimport useForkRef from \"../utils/useForkRef\";\nimport ListContext from \"../List/ListContext\";\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = false ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (true) {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _objectSpread({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return __jsx(ListContext.Provider, {\n      value: childContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, __jsx(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), __jsx(Component, _extends({}, componentProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), children), children.pop()));\n  }\n\n  return __jsx(ListContext.Provider, {\n    value: childContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({\n    ref: handleRef\n  }, componentProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), children));\n});\nListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n};\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ListItem/ListItem.js"],"names":["React","PropTypes","clsx","chainPropTypes","withStyles","ButtonBase","isMuiElement","useForkRef","ListContext","ReactDOM","styles","theme","root","display","justifyContent","alignItems","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","selected","opacity","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","borderBottom","backgroundClip","gutters","paddingLeft","paddingRight","button","transition","transitions","create","duration","shortest","hover","secondaryAction","useEnhancedEffect","useEffect","useLayoutEffect","ListItem","forwardRef","props","ref","autoFocus","childrenProp","children","classes","className","componentProp","component","ContainerComponent","ContainerProps","ContainerClassName","disableGutters","focusVisibleClassName","other","context","useContext","childContext","listItemRef","useRef","current","focus","console","error","Children","toArray","hasSecondaryAction","length","handleOwnRef","useCallback","instance","findDOMNode","handleRef","componentProps","Component","pop","propTypes","oneOf","bool","node","secondaryActionIndex","i","child","Error","object","isRequired","string","elementType","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.selected,\n    },\n    '&$selected, &$selected:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n    '&$disabled': {\n      opacity: 0.5,\n    },\n  },\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative',\n  },\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start',\n  },\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box',\n  },\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48,\n  },\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {},\n});\n\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\nconst ListItem = React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: { className: ContainerClassName, ...ContainerProps } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false,\n    ...other\n  } = props;\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          'Material-UI: Unable to set focus to a ListItem whose component has not been rendered.',\n        );\n      }\n    }\n  }, [autoFocus]);\n\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction =\n    children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const handleOwnRef = React.useCallback((instance) => {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRef = useForkRef(handleOwnRef, ref);\n\n  const componentProps = {\n    className: clsx(\n      classes.root,\n      {\n        [classes.dense]: childContext.dense,\n        [classes.gutters]: !disableGutters,\n        [classes.divider]: divider,\n        [classes.disabled]: disabled,\n        [classes.button]: button,\n        [classes.alignItemsFlexStart]: alignItems === 'flex-start',\n        [classes.secondaryAction]: hasSecondaryAction,\n        [classes.selected]: selected,\n      },\n      className,\n    ),\n    disabled,\n    ...other,\n  };\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component;\n\n    // Avoid nesting of li > li.\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return (\n      <ListContext.Provider value={childContext}>\n        <ContainerComponent\n          className={clsx(classes.container, ContainerClassName)}\n          ref={handleRef}\n          {...ContainerProps}\n        >\n          <Component {...componentProps}>{children}</Component>\n          {children.pop()}\n        </ContainerComponent>\n      </ListContext.Provider>\n    );\n  }\n\n  return (\n    <ListContext.Provider value={childContext}>\n      <Component ref={handleRef} {...componentProps}>\n        {children}\n      </Component>\n    </ListContext.Provider>\n  );\n});\n\nListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, (props) => {\n    const children = React.Children.toArray(props.children);\n\n    // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n    let secondaryActionIndex = -1;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    }\n\n    //  is ListItemSecondaryAction the last child of ListItem\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error(\n        'Material-UI: You used an element after ListItemSecondaryAction. ' +\n          'For ListItem to detect that it has a secondary action ' +\n          'you must pass it as the last child to ListItem.',\n      );\n    }\n\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'MuiListItem' })(ListItem);\n"]},"metadata":{},"sourceType":"module"}