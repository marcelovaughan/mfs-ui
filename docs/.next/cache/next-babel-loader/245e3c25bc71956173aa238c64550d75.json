{"ast":null,"code":"var __jsx = React.createElement;\nimport withRoot from \"./modules/withRoot\"; // --- Post bootstrap -----\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Link from \"../../../../../packages/material-ui/src/Link\";\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Typography from \"./modules/components/Typography\";\nimport AppFooter from \"./modules/views/AppFooter\";\nimport AppAppBar from \"./modules/views/AppAppBar\";\nimport AppForm from \"./modules/views/AppForm\";\nimport { email, required } from \"./modules/form/validation\";\nimport RFTextField from \"./modules/form/RFTextField\";\nimport FormButton from \"./modules/form/FormButton\";\nimport FormFeedback from \"./modules/form/FormFeedback\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      marginTop: theme.spacing(6)\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2)\n    },\n    feedback: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\n\nvar _ref = __jsx(AppAppBar, null);\n\nvar _ref2 = __jsx(React.Fragment, null, __jsx(Typography, {\n  variant: \"h3\",\n  gutterBottom: true,\n  marked: \"center\",\n  align: \"center\"\n}, \"Sign Up\"), __jsx(Typography, {\n  variant: \"body2\",\n  align: \"center\"\n}, __jsx(Link, {\n  href: \"/premium-themes/onepirate/sign-in/\",\n  underline: \"always\"\n}, \"Already have an account?\")));\n\nvar _ref4 = __jsx(Grid, {\n  container: true,\n  spacing: 2\n}, __jsx(Grid, {\n  item: true,\n  xs: 12,\n  sm: 6\n}, __jsx(Field, {\n  autoFocus: true,\n  component: RFTextField,\n  autoComplete: \"fname\",\n  fullWidth: true,\n  label: \"First name\",\n  name: \"firstName\",\n  required: true\n})), __jsx(Grid, {\n  item: true,\n  xs: 12,\n  sm: 6\n}, __jsx(Field, {\n  component: RFTextField,\n  autoComplete: \"lname\",\n  fullWidth: true,\n  label: \"Last name\",\n  name: \"lastName\",\n  required: true\n})));\n\nvar _ref6 = __jsx(AppFooter, null);\n\nfunction SignUp() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      sent = _React$useState[0],\n      setSent = _React$useState[1];\n\n  var validate = function validate(values) {\n    var errors = required(['firstName', 'lastName', 'email', 'password'], values);\n\n    if (!errors.email) {\n      var emailError = email(values.email, values);\n\n      if (emailError) {\n        errors.email = email(values.email, values);\n      }\n    }\n\n    return errors;\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setSent(true);\n  };\n\n  return __jsx(React.Fragment, null, _ref, __jsx(AppForm, null, _ref2, __jsx(Form, {\n    onSubmit: handleSubmit,\n    subscription: {\n      submitting: true\n    },\n    validate: validate\n  }, function (_ref3) {\n    var handleSubmit2 = _ref3.handleSubmit2,\n        submitting = _ref3.submitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit2,\n      className: classes.form,\n      noValidate: true\n    }, _ref4, __jsx(Field, {\n      autoComplete: \"email\",\n      component: RFTextField,\n      disabled: submitting || sent,\n      fullWidth: true,\n      label: \"Email\",\n      margin: \"normal\",\n      name: \"email\",\n      required: true\n    }), __jsx(Field, {\n      fullWidth: true,\n      component: RFTextField,\n      disabled: submitting || sent,\n      required: true,\n      name: \"password\",\n      autoComplete: \"current-password\",\n      label: \"Password\",\n      type: \"password\",\n      margin: \"normal\"\n    }), __jsx(FormSpy, {\n      subscription: {\n        submitError: true\n      }\n    }, function (_ref5) {\n      var submitError = _ref5.submitError;\n      return submitError ? __jsx(FormFeedback, {\n        className: classes.feedback,\n        error: true\n      }, submitError) : null;\n    }), __jsx(FormButton, {\n      className: classes.button,\n      disabled: submitting || sent,\n      color: \"secondary\",\n      fullWidth: true\n    }, submitting || sent ? 'In progressâ€¦' : 'Sign Up'));\n  })), _ref6);\n}\n\nexport default withRoot(SignUp);","map":null,"metadata":{},"sourceType":"module"}