{"ast":null,"code":"import React from 'react';\nimport Router from 'next/router';\nimport { pathnameToLanguage } from \"../utils/helpers\";\nexport async function handleEvent(event, as) {\n  // Ignore click for new tab/new window behavior\n  if (event.defaultPrevented || event.button !== 0 || // ignore everything but left-click\n  event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) {\n    return;\n  }\n\n  event.preventDefault();\n  let pathname = as.replace(/#(.*)$/, ''); // Add support for leading / in development mode.\n\n  if (pathname !== '/') {\n    // The leading / is only added to support static hosting (resolve /index.html).\n    // We remove it to normalize the pathname.\n    // See `rewriteUrlForNextExport` on Next.js side.\n    pathname = pathname.replace(/\\/$/, '');\n  }\n\n  pathname = pathnameToLanguage(pathname).canonical;\n  const success = await Router.push(pathname, as);\n\n  if (!success) {\n    return;\n  }\n\n  window.scrollTo(0, 0);\n  document.body.focus();\n}\n\nfunction handleClick(event) {\n  const activeElement = document.activeElement; // Ignore non link clicks\n\n  if (activeElement.nodeName !== 'A' || activeElement.getAttribute('target') === '_blank' || activeElement.getAttribute('data-no-link') === 'true' || activeElement.getAttribute('href').indexOf('/') !== 0) {\n    return;\n  }\n\n  handleEvent(event, document.activeElement.getAttribute('href'));\n}\n\nlet bound = false;\nexport default function MarkdownLinks() {\n  React.useEffect(() => {\n    if (bound) {\n      return;\n    }\n\n    bound = true;\n    document.addEventListener('click', handleClick);\n  }, []);\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}