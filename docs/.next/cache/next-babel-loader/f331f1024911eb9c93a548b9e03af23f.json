{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles, withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport InputLabel from \"../../../../../packages/material-ui/src/InputLabel\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport Select from \"../../../../../packages/material-ui/src/Select\";\nimport NativeSelect from \"../../../../../packages/material-ui/src/NativeSelect\";\nimport InputBase from \"../../../../../packages/material-ui/src/InputBase\";\nconst BootstrapInput = withStyles(theme => createStyles({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => createStyles({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nvar _ref = __jsx(InputLabel, {\n  htmlFor: \"demo-customized-textbox\"\n}, \"Age\");\n\nvar _ref2 = __jsx(BootstrapInput, {\n  id: \"demo-customized-textbox\"\n});\n\nvar _ref3 = __jsx(InputLabel, {\n  id: \"demo-customized-select-label\"\n}, \"Age\");\n\nvar _ref4 = __jsx(BootstrapInput, null);\n\nvar _ref5 = __jsx(MenuItem, {\n  value: \"\"\n}, __jsx(\"em\", null, \"None\"));\n\nvar _ref6 = __jsx(MenuItem, {\n  value: 10\n}, \"Ten\");\n\nvar _ref7 = __jsx(MenuItem, {\n  value: 20\n}, \"Twenty\");\n\nvar _ref8 = __jsx(MenuItem, {\n  value: 30\n}, \"Thirty\");\n\nvar _ref9 = __jsx(InputLabel, {\n  htmlFor: \"demo-customized-select-native\"\n}, \"Age\");\n\nvar _ref10 = __jsx(BootstrapInput, null);\n\nvar _ref11 = __jsx(\"option\", {\n  \"aria-label\": \"None\",\n  value: \"\"\n});\n\nvar _ref12 = __jsx(\"option\", {\n  value: 10\n}, \"Ten\");\n\nvar _ref13 = __jsx(\"option\", {\n  value: 20\n}, \"Twenty\");\n\nvar _ref14 = __jsx(\"option\", {\n  value: 30\n}, \"Thirty\");\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n\n  const handleChange = event => {\n    setAge(event.target.value);\n  };\n\n  return __jsx(\"div\", null, __jsx(FormControl, {\n    className: classes.margin\n  }, _ref, _ref2), __jsx(FormControl, {\n    className: classes.margin\n  }, _ref3, __jsx(Select, {\n    labelId: \"demo-customized-select-label\",\n    id: \"demo-customized-select\",\n    value: age,\n    onChange: handleChange,\n    input: _ref4\n  }, _ref5, _ref6, _ref7, _ref8)), __jsx(FormControl, {\n    className: classes.margin\n  }, _ref9, __jsx(NativeSelect, {\n    id: \"demo-customized-select-native\",\n    value: age,\n    onChange: handleChange,\n    input: _ref10\n  }, _ref11, _ref12, _ref13, _ref14)));\n}","map":null,"metadata":{},"sourceType":"module"}