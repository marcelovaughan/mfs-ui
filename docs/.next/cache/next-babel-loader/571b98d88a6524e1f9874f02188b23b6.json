{"ast":null,"code":"var __jsx = React.createElement;\nimport withRoot from \"./modules/withRoot\"; // --- Post bootstrap -----\n\nimport React from 'react';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Link from \"../../../../../packages/material-ui/src/Link\";\nimport Typography from \"./modules/components/Typography\";\nimport AppFooter from \"./modules/views/AppFooter\";\nimport AppAppBar from \"./modules/views/AppAppBar\";\nimport AppForm from \"./modules/views/AppForm\";\nimport { email, required } from \"./modules/form/validation\";\nimport RFTextField from \"./modules/form/RFTextField\";\nimport FormButton from \"./modules/form/FormButton\";\nimport FormFeedback from \"./modules/form/FormFeedback\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(6)\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2)\n  },\n  feedback: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nvar _ref = __jsx(AppAppBar, null);\n\nvar _ref2 = __jsx(React.Fragment, null, __jsx(Typography, {\n  variant: \"h3\",\n  gutterBottom: true,\n  marked: \"center\",\n  align: \"center\"\n}, \"Sign In\"), __jsx(Typography, {\n  variant: \"body2\",\n  align: \"center\"\n}, 'Not a member yet? ', __jsx(Link, {\n  href: \"/premium-themes/onepirate/sign-up/\",\n  align: \"center\",\n  underline: \"always\"\n}, \"Sign Up here\")));\n\nvar _ref3 = __jsx(Typography, {\n  align: \"center\"\n}, __jsx(Link, {\n  underline: \"always\",\n  href: \"/premium-themes/onepirate/forgot-password/\"\n}, \"Forgot password?\"));\n\nvar _ref4 = __jsx(AppFooter, null);\n\nfunction SignIn() {\n  const classes = useStyles();\n  const [sent, setSent] = React.useState(false);\n\n  const validate = values => {\n    const errors = required(['email', 'password'], values);\n\n    if (!errors.email) {\n      const emailError = email(values.email, values);\n\n      if (emailError) {\n        errors.email = email(values.email, values);\n      }\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = () => {\n    setSent(true);\n  };\n\n  return __jsx(React.Fragment, null, _ref, __jsx(AppForm, null, _ref2, __jsx(Form, {\n    onSubmit: handleSubmit,\n    subscription: {\n      submitting: true\n    },\n    validate: validate\n  }, ({\n    handleSubmit2,\n    submitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit2,\n    className: classes.form,\n    noValidate: true\n  }, __jsx(Field, {\n    autoComplete: \"email\",\n    autoFocus: true,\n    component: RFTextField,\n    disabled: submitting || sent,\n    fullWidth: true,\n    label: \"Email\",\n    margin: \"normal\",\n    name: \"email\",\n    required: true,\n    size: \"large\"\n  }), __jsx(Field, {\n    fullWidth: true,\n    size: \"large\",\n    component: RFTextField,\n    disabled: submitting || sent,\n    required: true,\n    name: \"password\",\n    autoComplete: \"current-password\",\n    label: \"Password\",\n    type: \"password\",\n    margin: \"normal\"\n  }), __jsx(FormSpy, {\n    subscription: {\n      submitError: true\n    }\n  }, ({\n    submitError\n  }) => submitError ? __jsx(FormFeedback, {\n    className: classes.feedback,\n    error: true\n  }, submitError) : null), __jsx(FormButton, {\n    className: classes.button,\n    disabled: submitting || sent,\n    size: \"large\",\n    color: \"secondary\",\n    fullWidth: true\n  }, submitting || sent ? 'In progressâ€¦' : 'Sign In'))), _ref3), _ref4);\n}\n\nexport default withRoot(SignIn);","map":null,"metadata":{},"sourceType":"module"}