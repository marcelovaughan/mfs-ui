{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport { createMuiTheme, ThemeProvider } from \"../../../../../packages/material-ui/src/styles\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport { blue } from \"../../../../../packages/material-ui/src/colors\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\n\nvar _ref = __jsx(Button, {\n  variant: \"contained\",\n  color: \"secondary\"\n}, 'Theme nesting');\n\nexport default function DynamicThemeNesting() {\n  const [color, setColor] = React.useState('default');\n\n  const handleChange = event => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  const theme = React.useMemo(() => {\n    if (color === 'blue') {\n      return createMuiTheme({\n        palette: {\n          secondary: {\n            main: blue[500],\n            contrastText: '#fff'\n          }\n        }\n      });\n    }\n\n    return createMuiTheme();\n  }, [color]);\n  return __jsx(React.Fragment, null, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: color === 'blue',\n      onChange: handleChange,\n      color: \"primary\",\n      value: \"dynamic-class-name\"\n    }),\n    label: \"Blue\"\n  }), __jsx(ThemeProvider, {\n    theme: theme\n  }, _ref));\n}","map":null,"metadata":{},"sourceType":"module"}