{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Card/Card.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from \"../Paper\";\nimport withStyles from \"../styles/withStyles\";\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nconst Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  const {\n    classes,\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return __jsx(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }));\n});\nCard.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n};\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Card/Card.js"],"names":["React","PropTypes","clsx","Paper","withStyles","styles","root","overflow","Card","forwardRef","props","ref","classes","className","raised","other","propTypes","children","node","object","string","bool","name"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAFc,CAAf;AAOP,MAAMC,IAAI,gBAAGR,KAAK,CAACS,UAAN,CAAiB,SAASD,IAAT,CAAcE,KAAd,EAAqBC,GAArB,EAA0B;AACtD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,MAAM,GAAG;AAA/B,MAAmDJ,KAAzD;AAAA,QAA+CK,KAA/C,4BAAyDL,KAAzD;;AAEA,SACE,MAAC,KAAD;AACE,IAAA,SAAS,EAAER,IAAI,CAACU,OAAO,CAACN,IAAT,EAAeO,SAAf,CADjB;AAEE,IAAA,SAAS,EAAEC,MAAM,GAAG,CAAH,GAAO,CAF1B;AAGE,IAAA,GAAG,EAAEH;AAHP,KAIMI,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAXY,CAAb;AAaAP,IAAI,CAACQ,SAAL,GAAiB;AACf;AACA;AACA;AACA;;AACA;;;AAGAC,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IARL;;AASf;;;;AAIAN,EAAAA,OAAO,EAAEX,SAAS,CAACkB,MAbJ;;AAcf;;;AAGAN,EAAAA,SAAS,EAAEZ,SAAS,CAACmB,MAjBN;;AAkBf;;;AAGAN,EAAAA,MAAM,EAAEb,SAAS,CAACoB;AArBH,CAAjB;AAwBA,eAAejB,UAAU,CAACC,MAAD,EAAS;AAAEiB,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAAwCd,IAAxC,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n  },\n};\n\nconst Card = React.forwardRef(function Card(props, ref) {\n  const { classes, className, raised = false, ...other } = props;\n\n  return (\n    <Paper\n      className={clsx(classes.root, className)}\n      elevation={raised ? 8 : 1}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nCard.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'MuiCard' })(Card);\n"]},"metadata":{},"sourceType":"module"}