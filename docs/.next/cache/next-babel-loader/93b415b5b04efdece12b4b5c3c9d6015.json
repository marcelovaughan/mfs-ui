{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport ListItem from \"../../../../packages/material-ui/src/ListItem\";\nimport Button from \"../../../../packages/material-ui/src/Button\";\nimport Collapse from \"../../../../packages/material-ui/src/Collapse\";\nimport Link from \"./Link\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    item: {\n      display: 'block',\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    itemLeaf: {\n      display: 'flex',\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    button: {\n      letterSpacing: 0,\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      width: '100%'\n    },\n    buttonLeaf: {\n      letterSpacing: 0,\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      width: '100%',\n      fontWeight: theme.typography.fontWeightRegular,\n      '&.depth-0': {\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    active: {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  };\n});\nexport default function AppDrawerNavItem(props) {\n  var children = props.children,\n      depth = props.depth,\n      href = props.href,\n      onClick = props.onClick,\n      _props$openImmediatel = props.openImmediately,\n      openImmediately = _props$openImmediatel === void 0 ? false : _props$openImmediatel,\n      _props$topLevel = props.topLevel,\n      topLevel = _props$topLevel === void 0 ? false : _props$topLevel,\n      title = props.title,\n      linkProps = props.linkProps,\n      other = _objectWithoutProperties(props, [\"children\", \"depth\", \"href\", \"onClick\", \"openImmediately\", \"topLevel\", \"title\", \"linkProps\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(openImmediately),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var handleClick = function handleClick() {\n    setOpen(function (oldOpen) {\n      return !oldOpen;\n    });\n  };\n\n  var style = {\n    paddingLeft: 8 * (3 + 2 * depth)\n  };\n\n  if (href) {\n    return __jsx(ListItem, _extends({\n      className: classes.itemLeaf,\n      disableGutters: true\n    }, other), __jsx(Button, _extends({\n      component: Link,\n      naked: true,\n      activeClassName: \"drawer-active \".concat(classes.active),\n      href: href,\n      className: clsx(classes.buttonLeaf, \"depth-\".concat(depth)),\n      disableTouchRipple: true,\n      onClick: onClick,\n      style: style\n    }, linkProps), title));\n  }\n\n  return __jsx(ListItem, _extends({\n    className: classes.item,\n    disableGutters: true\n  }, other), __jsx(Button, {\n    classes: {\n      root: classes.button,\n      label: topLevel ? 'algolia-lvl0' : ''\n    },\n    onClick: handleClick,\n    style: style\n  }, title), __jsx(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, children));\n}","map":null,"metadata":{},"sourceType":"module"}