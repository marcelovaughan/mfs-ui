{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Divider/Divider.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport { fade } from \"../styles/colorManipulator\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0,\n      // Reset browser default style.\n      flexShrink: 0,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider,\n      borderBottomWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      borderColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      borderBottomWidth: 0,\n      borderRightWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n});\nDivider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n};\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Divider/Divider.js"],"names":["React","PropTypes","clsx","withStyles","fade","styles","theme","root","margin","flexShrink","borderWidth","borderStyle","borderColor","palette","divider","borderBottomWidth","absolute","position","bottom","left","width","inset","marginLeft","light","middle","spacing","marginRight","vertical","height","borderRightWidth","flexItem","alignSelf","Divider","forwardRef","props","ref","classes","className","component","Component","orientation","role","undefined","variant","other","propTypes","bool","children","node","object","string","elementType","oneOf","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0, // Reset browser default style.\n    flexShrink: 0,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.palette.divider,\n    borderBottomWidth: 'thin',\n  },\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n  },\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72,\n  },\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    borderColor: fade(theme.palette.divider, 0.08),\n  },\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    borderBottomWidth: 0,\n    borderRightWidth: 'thin',\n  },\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto',\n  },\n});\n\nconst Divider = React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    component: Component = 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    variant = 'fullWidth',\n    ...other\n  } = props;\n\n  return (\n    <Component\n      className={clsx(\n        classes.root,\n        {\n          [classes[variant]]: variant !== 'fullWidth',\n          [classes.absolute]: absolute,\n          [classes.flexItem]: flexItem,\n          [classes.light]: light,\n          [classes.vertical]: orientation === 'vertical',\n        },\n        className,\n      )}\n      role={role}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nDivider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle']),\n};\n\nexport default withStyles(styles, { name: 'MuiDivider' })(Divider);\n"]},"metadata":{},"sourceType":"module"}