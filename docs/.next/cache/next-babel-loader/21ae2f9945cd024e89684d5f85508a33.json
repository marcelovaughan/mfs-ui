{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\n\n// Like https://github.com/brunobertolini/styled-by\nvar styledBy = function styledBy(property, mapping) {\n  return function (props) {\n    return mapping[props[property]];\n  };\n};\n\nvar styles = {\n  root: {\n    background: styledBy('color', {\n      \"default\": 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n    }),\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: styledBy('color', {\n      \"default\": '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)'\n    })\n  }\n};\nvar StyledButton = withStyles(styles)(function (_ref) {\n  var classes = _ref.classes,\n      color = _ref.color,\n      other = _objectWithoutProperties(_ref, [\"classes\", \"color\"]);\n\n  return __jsx(Button, _extends({\n    className: classes.root\n  }, other));\n});\nexport default function DynamicCSS() {\n  var _React$useState = React.useState('default'),\n      color = _React$useState[0],\n      setColor = _React$useState[1];\n\n  var handleChange = function handleChange(event) {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: color === 'blue',\n      onChange: handleChange,\n      color: \"primary\",\n      value: \"dynamic-class-name\"\n    }),\n    label: \"Blue\"\n  }), __jsx(StyledButton, {\n    color: color\n  }, \"Dynamic CSS\"));\n}","map":null,"metadata":{},"sourceType":"module"}