{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Dialog from \"../../../../../packages/material-ui/src/Dialog\";\nimport DialogActions from \"../../../../../packages/material-ui/src/DialogActions\";\nimport DialogContent from \"../../../../../packages/material-ui/src/DialogContent\";\nimport DialogContentText from \"../../../../../packages/material-ui/src/DialogContentText\";\nimport DialogTitle from \"../../../../../packages/material-ui/src/DialogTitle\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport InputLabel from \"../../../../../packages/material-ui/src/InputLabel\";\nimport MenuItem from \"../../../../../packages/material-ui/src/MenuItem\";\nimport Select from \"../../../../../packages/material-ui/src/Select\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content'\n    },\n    formControl: {\n      marginTop: theme.spacing(2),\n      minWidth: 120\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1)\n    }\n  });\n});\n\nvar _ref = __jsx(DialogTitle, {\n  id: \"max-width-dialog-title\"\n}, \"Optional sizes\");\n\nvar _ref2 = __jsx(DialogContentText, null, \"You can set my maximum width and whether to adapt or not.\");\n\nvar _ref3 = __jsx(InputLabel, {\n  htmlFor: \"max-width\"\n}, \"maxWidth\");\n\nvar _ref4 = __jsx(MenuItem, {\n  value: \"xs\"\n}, \"xs\");\n\nvar _ref5 = __jsx(MenuItem, {\n  value: \"sm\"\n}, \"sm\");\n\nvar _ref6 = __jsx(MenuItem, {\n  value: \"md\"\n}, \"md\");\n\nvar _ref7 = __jsx(MenuItem, {\n  value: \"lg\"\n}, \"lg\");\n\nvar _ref8 = __jsx(MenuItem, {\n  value: \"xl\"\n}, \"xl\");\n\nexport default function MaxWidthDialog() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var _React$useState2 = React.useState(true),\n      fullWidth = _React$useState2[0],\n      setFullWidth = _React$useState2[1];\n\n  var _React$useState3 = React.useState('sm'),\n      maxWidth = _React$useState3[0],\n      setMaxWidth = _React$useState3[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleMaxWidthChange = function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  };\n\n  var handleFullWidthChange = function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen\n  }, \"Open max-width dialog\"), __jsx(Dialog, {\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"max-width-dialog-title\"\n  }, _ref, __jsx(DialogContent, null, _ref2, __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, _ref3, __jsx(Select, {\n    autoFocus: true,\n    value: maxWidth,\n    onChange: handleMaxWidthChange,\n    inputProps: {\n      name: 'max-width',\n      id: 'max-width'\n    }\n  }, __jsx(MenuItem, {\n    value: false\n  }, \"false\"), _ref4, _ref5, _ref6, _ref7, _ref8)), __jsx(FormControlLabel, {\n    className: classes.formControlLabel,\n    control: __jsx(Switch, {\n      checked: fullWidth,\n      onChange: handleFullWidthChange\n    }),\n    label: \"Full width\"\n  }))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Close\"))));\n}","map":null,"metadata":{},"sourceType":"module"}