{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ListItem/ListItem.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from \"../../../material-ui-utils/src\";\nimport withStyles from \"../styles/withStyles\";\nimport ButtonBase from \"../ButtonBase\";\nimport isMuiElement from \"../utils/isMuiElement\";\nimport useForkRef from \"../utils/useForkRef\";\nimport ListContext from \"../List/ListContext\";\nimport * as ReactDOM from 'react-dom';\nexport const styles = theme => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&$selected, &$selected:hover': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&$disabled': {\n      opacity: 0.5\n    }\n  },\n\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  },\n\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start'\n  },\n\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box'\n  },\n\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48\n  },\n\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {}\n});\nconst useEnhancedEffect = true ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutProperties(props.ContainerProps, [\"className\"]),\n        other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (true) {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRef = useForkRef(handleOwnRef, ref);\n\n  const componentProps = _objectSpread({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return __jsx(ListContext.Provider, {\n      value: childContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, __jsx(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), __jsx(Component, _extends({}, componentProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), children), children.pop()));\n  }\n\n  return __jsx(ListContext.Provider, {\n    value: childContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({\n    ref: handleRef\n  }, componentProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), children));\n});\nListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n};\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ListItem/ListItem.js"],"names":["React","PropTypes","clsx","chainPropTypes","withStyles","ButtonBase","isMuiElement","useForkRef","ListContext","ReactDOM","styles","theme","root","display","justifyContent","alignItems","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","selected","opacity","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","borderBottom","backgroundClip","gutters","paddingLeft","paddingRight","button","transition","transitions","create","duration","shortest","hover","secondaryAction","useEnhancedEffect","useEffect","useLayoutEffect","ListItem","forwardRef","props","ref","autoFocus","children","childrenProp","classes","className","component","componentProp","ContainerComponent","ContainerProps","ContainerClassName","disableGutters","focusVisibleClassName","other","context","useContext","childContext","listItemRef","useRef","current","focus","console","error","Children","toArray","hasSecondaryAction","length","handleOwnRef","useCallback","instance","findDOMNode","handleRef","componentProps","Component","pop","propTypes","oneOf","bool","node","secondaryActionIndex","i","child","Error","object","isRequired","string","elementType","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.selected,\n    },\n    '&$selected, &$selected:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n    '&$disabled': {\n      opacity: 0.5,\n    },\n  },\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative',\n  },\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start',\n  },\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box',\n  },\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48,\n  },\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {},\n});\n\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\nconst ListItem = React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: { className: ContainerClassName, ...ContainerProps } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false,\n    ...other\n  } = props;\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          'Material-UI: Unable to set focus to a ListItem whose component has not been rendered.',\n        );\n      }\n    }\n  }, [autoFocus]);\n\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction =\n    children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const handleOwnRef = React.useCallback((instance) => {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRef = useForkRef(handleOwnRef, ref);\n\n  const componentProps = {\n    className: clsx(\n      classes.root,\n      {\n        [classes.dense]: childContext.dense,\n        [classes.gutters]: !disableGutters,\n        [classes.divider]: divider,\n        [classes.disabled]: disabled,\n        [classes.button]: button,\n        [classes.alignItemsFlexStart]: alignItems === 'flex-start',\n        [classes.secondaryAction]: hasSecondaryAction,\n        [classes.selected]: selected,\n      },\n      className,\n    ),\n    disabled,\n    ...other,\n  };\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component;\n\n    // Avoid nesting of li > li.\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return (\n      <ListContext.Provider value={childContext}>\n        <ContainerComponent\n          className={clsx(classes.container, ContainerClassName)}\n          ref={handleRef}\n          {...ContainerProps}\n        >\n          <Component {...componentProps}>{children}</Component>\n          {children.pop()}\n        </ContainerComponent>\n      </ListContext.Provider>\n    );\n  }\n\n  return (\n    <ListContext.Provider value={childContext}>\n      <Component ref={handleRef} {...componentProps}>\n        {children}\n      </Component>\n    </ListContext.Provider>\n  );\n});\n\nListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, (props) => {\n    const children = React.Children.toArray(props.children);\n\n    // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n    let secondaryActionIndex = -1;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    }\n\n    //  is ListItemSecondaryAction the last child of ListItem\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error(\n        'Material-UI: You used an element after ListItemSecondaryAction. ' +\n          'For ListItem to detect that it has a secondary action ' +\n          'you must pass it as the last child to ListItem.',\n      );\n    }\n\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'MuiListItem' })(ListItem);\n"]},"metadata":{},"sourceType":"module"}