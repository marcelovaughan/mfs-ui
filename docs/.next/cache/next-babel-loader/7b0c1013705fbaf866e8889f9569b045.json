{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime-corejs2/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport TableCell from \"../../../../../packages/material-ui/src/TableCell\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    flexContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box'\n    },\n    table: {\n      // temporary right-to-left patch, waiting for\n      // https://github.com/bvaughn/react-virtualized/issues/454\n      '& .ReactVirtualized__Table__headerRow': {\n        flip: false,\n        paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined\n      }\n    },\n    tableRow: {\n      cursor: 'pointer'\n    },\n    tableRowHover: {\n      '&:hover': {\n        backgroundColor: theme.palette.grey[200]\n      }\n    },\n    tableCell: {\n      flex: 1\n    },\n    noClick: {\n      cursor: 'initial'\n    }\n  });\n};\n\nvar MuiVirtualizedTable = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MuiVirtualizedTable, _React$PureComponent);\n\n  var _super = _createSuper(MuiVirtualizedTable);\n\n  function MuiVirtualizedTable() {\n    var _this;\n\n    _classCallCheck(this, MuiVirtualizedTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRowClassName\", function (_ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          onRowClick = _this$props.onRowClick;\n      return clsx(classes.tableRow, classes.flexContainer, index !== -1 && onRowClick != null && classes.tableRowHover);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cellRenderer\", function (_ref2) {\n      var cellData = _ref2.cellData,\n          columnIndex = _ref2.columnIndex;\n      var _this$props2 = _this.props,\n          columns = _this$props2.columns,\n          classes = _this$props2.classes,\n          rowHeight = _this$props2.rowHeight,\n          onRowClick = _this$props2.onRowClick;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, onRowClick == null && classes.noClick),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left'\n      }, cellData);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"headerRenderer\", function (_ref3) {\n      var label = _ref3.label,\n          columnIndex = _ref3.columnIndex;\n      var _this$props3 = _this.props,\n          headerHeight = _this$props3.headerHeight,\n          columns = _this$props3.columns,\n          classes = _this$props3.classes;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left'\n      }, __jsx(\"span\", null, label));\n    });\n\n    return _this;\n  }\n\n  _createClass(MuiVirtualizedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          rowHeight = _this$props4.rowHeight,\n          headerHeight = _this$props4.headerHeight,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\", \"rowHeight\", \"headerHeight\"]);\n\n      return __jsx(AutoSizer, null, function (_ref4) {\n        var height = _ref4.height,\n            width = _ref4.width;\n        return __jsx(Table, _extends({\n          height: height,\n          width: width,\n          rowHeight: rowHeight,\n          gridStyle: {\n            direction: 'inherit'\n          },\n          headerHeight: headerHeight,\n          className: classes.table\n        }, tableProps, {\n          rowClassName: _this2.getRowClassName\n        }), columns.map(function (_ref5, index) {\n          var dataKey = _ref5.dataKey,\n              other = _objectWithoutProperties(_ref5, [\"dataKey\"]);\n\n          return __jsx(Column, _extends({\n            key: dataKey,\n            headerRenderer: function headerRenderer(headerProps) {\n              return _this2.headerRenderer(_objectSpread(_objectSpread({}, headerProps), {}, {\n                columnIndex: index\n              }));\n            },\n            className: classes.flexContainer,\n            cellRenderer: _this2.cellRenderer,\n            dataKey: dataKey\n          }, other));\n        }));\n      });\n    }\n  }]);\n\n  return MuiVirtualizedTable;\n}(React.PureComponent);\n\n_defineProperty(MuiVirtualizedTable, \"defaultProps\", {\n  headerHeight: 48,\n  rowHeight: 48\n});\n\nvar VirtualizedTable = withStyles(styles)(MuiVirtualizedTable); // ---\n\nvar sample = [['Frozen yoghurt', 159, 6.0, 24, 4.0], ['Ice cream sandwich', 237, 9.0, 37, 4.3], ['Eclair', 262, 16.0, 24, 6.0], ['Cupcake', 305, 3.7, 67, 4.3], ['Gingerbread', 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id: id,\n    dessert: dessert,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [];\n\nfor (var i = 0; i < 200; i += 1) {\n  var randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData.apply(void 0, [i].concat(_toConsumableArray(randomSelection))));\n}\n\nexport default function ReactVirtualizedTable() {\n  return __jsx(Paper, {\n    style: {\n      height: 400,\n      width: '100%'\n    }\n  }, __jsx(VirtualizedTable, {\n    rowCount: rows.length,\n    rowGetter: function rowGetter(_ref6) {\n      var index = _ref6.index;\n      return rows[index];\n    },\n    columns: [{\n      width: 200,\n      label: 'Dessert',\n      dataKey: 'dessert'\n    }, {\n      width: 120,\n      label: \"Calories\\xA0(g)\",\n      dataKey: 'calories',\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Fat\\xA0(g)\",\n      dataKey: 'fat',\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Carbs\\xA0(g)\",\n      dataKey: 'carbs',\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Protein\\xA0(g)\",\n      dataKey: 'protein',\n      numeric: true\n    }]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}