{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Tooltip/Tooltip.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from \"../../../material-ui-utils/src\";\nimport { fade } from \"../styles/colorManipulator\";\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nimport Grow from \"../Grow\";\nimport Popper from \"../Popper\";\nimport useForkRef from \"../utils/useForkRef\";\nimport useId from \"../utils/unstable_useId\";\nimport setRef from \"../utils/setRef\";\nimport useIsFocusVisible from \"../utils/useIsFocusVisible\";\nimport useControlled from \"../utils/useControlled\";\nimport useTheme from \"../styles/useTheme\";\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none' // disable jss-rtl plugin\n\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the Popper component if `arrow={true}`. */\n    popperArrow: arrowGenerator(),\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: fade(theme.palette.grey[700], 0.9),\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(round(14 / 10), \"em\"),\n      maxWidth: 300,\n      wordWrap: 'break-word',\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n    tooltipArrow: {\n      position: 'relative',\n      margin: '0'\n    },\n\n    /* Styles applied to the arrow element. */\n    arrow: {\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '1em',\n      height: '0.71em'\n      /* = width / sqrt(2) = (length of the hypotenuse) */\n      ,\n      boxSizing: 'border-box',\n      color: fade(theme.palette.grey[700], 0.9),\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'currentColor',\n        transform: 'rotate(45deg)'\n      }\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(round(16 / 14), \"em\"),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: _defineProperty({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: _defineProperty({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: _defineProperty({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: _defineProperty({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\nvar hystersisOpen = false;\nvar hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nvar Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  var _this = this;\n\n  var _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? false : _props$arrow,\n      children = props.children,\n      classes = props.classes,\n      _props$disableFocusLi = props.disableFocusListener,\n      disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi,\n      _props$disableHoverLi = props.disableHoverListener,\n      disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi,\n      _props$disableTouchLi = props.disableTouchListener,\n      disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi,\n      _props$enterDelay = props.enterDelay,\n      enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay,\n      _props$enterNextDelay = props.enterNextDelay,\n      enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay,\n      _props$enterTouchDela = props.enterTouchDelay,\n      enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,\n      idProp = props.id,\n      _props$interactive = props.interactive,\n      interactive = _props$interactive === void 0 ? false : _props$interactive,\n      _props$leaveDelay = props.leaveDelay,\n      leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,\n      _props$leaveTouchDela = props.leaveTouchDelay,\n      leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      PopperProps = props.PopperProps,\n      title = props.title,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(),\n      childNode = _React$useState[0],\n      setChildNode = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var ignoreNonTouchEvents = React.useRef(false);\n  var closeTimer = React.useRef();\n  var enterTimer = React.useRef();\n  var leaveTimer = React.useRef();\n  var touchTimer = React.useRef();\n\n  var _useControlled = useControlled({\n    controlled: openProp,\n    \"default\": false,\n    name: 'Tooltip',\n    state: 'open'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      openState = _useControlled2[0],\n      setOpenState = _useControlled2[1];\n\n  var open = openState;\n\n  if (true) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _React$useRef = React.useRef(openProp !== undefined),\n        isControlled = _React$useRef.current; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n    React.useEffect(function () {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  var id = useId(idProp);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  var handleOpen = function handleOpen(event) {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleEnter = function handleEnter() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      if (childNode) {\n        childNode.removeAttribute('title');\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n\n      if (enterDelay || hystersisOpen && enterNextDelay) {\n        event.persist();\n        enterTimer.current = setTimeout(function () {\n          handleOpen(event);\n        }, hystersisOpen ? enterNextDelay : enterDelay);\n      } else {\n        handleOpen(event);\n      }\n    };\n  };\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      childIsFocusVisible = _React$useState3[0],\n      setChildIsFocusVisible = _React$useState3[1];\n\n  var handleBlur = function handleBlur() {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  var handleFocus = function handleFocus() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      // Workaround for https://github.com/facebook/react/issues/7769\n      // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n      if (!childNode) {\n        setChildNode(event.currentTarget);\n      }\n\n      if (isFocusVisible(event)) {\n        setChildIsFocusVisible(true);\n        handleEnter()(event);\n      }\n\n      var childrenProps = children.props;\n\n      if (childrenProps.onFocus && forward) {\n        childrenProps.onFocus(event);\n      }\n    };\n  };\n\n  var handleClose = function handleClose(event) {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(function () {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  var handleLeave = function handleLeave() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'blur') {\n        if (childrenProps.onBlur && forward) {\n          childrenProps.onBlur(event);\n        }\n\n        handleBlur();\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      event.persist();\n      leaveTimer.current = setTimeout(function () {\n        handleClose(event);\n      }, leaveDelay);\n    };\n  };\n\n  var detectTouchStart = function detectTouchStart(event) {\n    ignoreNonTouchEvents.current = true;\n    var childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  var handleTouchStart = function handleTouchStart(event) {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(function () {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(function () {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  var handleUseRef = useForkRef(setChildNode, ref);\n  var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  var shouldShowNativeTitle = !open && !disableHoverListener;\n\n  var childrenProps = _objectSpread(_objectSpread(_objectSpread({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other), children.props), {}, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  var interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (true) {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', \"Remove this title prop `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n'));\n    }\n  }\n\n  var mergedPopperProps = React.useMemo(function () {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.cloneElement(children, childrenProps), __jsx(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }\n  }), function (_ref) {\n    var placementInner = _ref.placement,\n        TransitionPropsInner = _ref.TransitionProps;\n    return __jsx(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: clsx(classes.tooltip, classes[\"tooltipPlacement\".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, title, arrow ? __jsx(\"span\", {\n      className: classes.arrow,\n      ref: setArrowRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 24\n      }\n    }) : null));\n  }));\n});\nTooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n};\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Tooltip/Tooltip.js"],"names":["React","ReactDOM","PropTypes","clsx","deepmerge","elementAcceptingRef","fade","withStyles","capitalize","Grow","Popper","useForkRef","useId","setRef","useIsFocusVisible","useControlled","useTheme","round","value","Math","arrowGenerator","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","height","width","right","styles","theme","popper","zIndex","tooltip","pointerEvents","popperInteractive","popperArrow","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","maxWidth","wordWrap","fontWeight","fontWeightMedium","tooltipArrow","position","margin","arrow","overflow","boxSizing","content","display","transform","touch","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","hystersisOpen","hystersisTimer","testReset","clearTimeout","Tooltip","forwardRef","props","ref","children","classes","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","idProp","id","interactive","leaveDelay","leaveTouchDelay","onClose","onOpen","openProp","open","placement","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","useState","childNode","setChildNode","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","controlled","name","state","openState","setOpenState","undefined","isControlled","current","useEffect","disabled","tagName","toLowerCase","console","error","join","handleOpen","event","handleEnter","forward","childrenProps","type","onMouseOver","removeAttribute","persist","setTimeout","isFocusVisible","onBlurVisible","focusVisibleRef","childIsFocusVisible","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","onFocus","handleClose","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleTouchStart","handleTouchEnd","onTouchEnd","handleUseRef","handleFocusRef","handleOwnRef","useCallback","instance","findDOMNode","handleRef","shouldShowNativeTitle","className","interactiveWrapperListeners","mergedPopperProps","useMemo","popperOptions","modifiers","enabled","Boolean","element","cloneElement","placementInner","TransitionPropsInner","shorter","split","propTypes","bool","isRequired","object","string","number","func","oneOf","elementType","node","flip"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,mBAApB;AACA,SAASC,IAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOC,IAAI,CAACF,KAAL,CAAWC,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACD;;AAED,SAASE,cAAT,GAA0B;AACxB,SAAO;AACL,uCAAmC;AACjCC,MAAAA,GAAG,EAAE,CAD4B;AAEjCC,MAAAA,IAAI,EAAE,CAF2B;AAGjCC,MAAAA,SAAS,EAAE,SAHsB;AAIjCC,MAAAA,UAAU,EAAE,CAJqB;AAKjCC,MAAAA,WAAW,EAAE,CALoB;AAMjC,mBAAa;AACXC,QAAAA,eAAe,EAAE;AADN;AANoB,KAD9B;AAWL,oCAAgC;AAC9BC,MAAAA,MAAM,EAAE,CADsB;AAE9BL,MAAAA,IAAI,EAAE,CAFwB;AAG9BM,MAAAA,YAAY,EAAE,SAHgB;AAI9BJ,MAAAA,UAAU,EAAE,CAJkB;AAK9BC,MAAAA,WAAW,EAAE,CALiB;AAM9B,mBAAa;AACXC,QAAAA,eAAe,EAAE;AADN;AANiB,KAX3B;AAqBL,sCAAkC;AAChCJ,MAAAA,IAAI,EAAE,CAD0B;AAEhCE,MAAAA,UAAU,EAAE,SAFoB;AAGhCK,MAAAA,MAAM,EAAE,KAHwB;AAIhCC,MAAAA,KAAK,EAAE,QAJyB;AAKhCP,MAAAA,SAAS,EAAE,CALqB;AAMhCK,MAAAA,YAAY,EAAE,CANkB;AAOhC,mBAAa;AACXF,QAAAA,eAAe,EAAE;AADN;AAPmB,KArB7B;AAgCL,qCAAiC;AAC/BK,MAAAA,KAAK,EAAE,CADwB;AAE/BN,MAAAA,WAAW,EAAE,SAFkB;AAG/BI,MAAAA,MAAM,EAAE,KAHuB;AAI/BC,MAAAA,KAAK,EAAE,QAJwB;AAK/BP,MAAAA,SAAS,EAAE,CALoB;AAM/BK,MAAAA,YAAY,EAAE,CANiB;AAO/B,mBAAa;AACXF,QAAAA,eAAe,EAAE;AADN;AAPkB;AAhC5B,GAAP;AA4CD;;AAED,OAAO,IAAMM,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAY;AAChC;AACAC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaC,OADf;AAENC,MAAAA,aAAa,EAAE,MAFT,CAEiB;;AAFjB,KAFwB;;AAMhC;AACAC,IAAAA,iBAAiB,EAAE;AACjBD,MAAAA,aAAa,EAAE;AADE,KAPa;;AAUhC;AACAE,IAAAA,WAAW,EAAEnB,cAAc,EAXK;;AAYhC;AACAgB,IAAAA,OAAO,EAAE;AACPI,MAAAA,eAAe,EAAElC,IAAI,CAAC2B,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAD,EAA0B,GAA1B,CADd;AAEPC,MAAAA,YAAY,EAAEV,KAAK,CAACW,KAAN,CAAYD,YAFnB;AAGPE,MAAAA,KAAK,EAAEZ,KAAK,CAACQ,OAAN,CAAcK,MAAd,CAAqBC,KAHrB;AAIPC,MAAAA,UAAU,EAAEf,KAAK,CAACgB,UAAN,CAAiBD,UAJtB;AAKPE,MAAAA,OAAO,EAAE,SALF;AAMPC,MAAAA,QAAQ,EAAElB,KAAK,CAACgB,UAAN,CAAiBG,OAAjB,CAAyB,EAAzB,CANH;AAOPC,MAAAA,UAAU,YAAKpC,KAAK,CAAC,KAAK,EAAN,CAAV,OAPH;AAQPqC,MAAAA,QAAQ,EAAE,GARH;AASPC,MAAAA,QAAQ,EAAE,YATH;AAUPC,MAAAA,UAAU,EAAEvB,KAAK,CAACgB,UAAN,CAAiBQ;AAVtB,KAbuB;;AAyBhC;AACAC,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KA1BkB;;AA8BhC;AACAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,QADL;AAELH,MAAAA,QAAQ,EAAE,UAFL;AAGL7B,MAAAA,KAAK,EAAE,KAHF;AAILD,MAAAA,MAAM,EAAE;AAAS;AAJZ;AAKLkC,MAAAA,SAAS,EAAE,YALN;AAMLlB,MAAAA,KAAK,EAAEvC,IAAI,CAAC2B,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAD,EAA0B,GAA1B,CANN;AAOL,mBAAa;AACXsB,QAAAA,OAAO,EAAE,IADE;AAEXJ,QAAAA,MAAM,EAAE,MAFG;AAGXK,QAAAA,OAAO,EAAE,OAHE;AAIXnC,QAAAA,KAAK,EAAE,MAJI;AAKXD,QAAAA,MAAM,EAAE,MALG;AAMXW,QAAAA,eAAe,EAAE,cANN;AAOX0B,QAAAA,SAAS,EAAE;AAPA;AAPR,KA/ByB;;AAgDhC;AACAC,IAAAA,KAAK,EAAE;AACLjB,MAAAA,OAAO,EAAE,UADJ;AAELC,MAAAA,QAAQ,EAAElB,KAAK,CAACgB,UAAN,CAAiBG,OAAjB,CAAyB,EAAzB,CAFL;AAGLC,MAAAA,UAAU,YAAKpC,KAAK,CAAC,KAAK,EAAN,CAAV,OAHL;AAILuC,MAAAA,UAAU,EAAEvB,KAAK,CAACgB,UAAN,CAAiBmB;AAJxB,KAjDyB;;AAuDhC;AACAC,IAAAA,oBAAoB;AAClB3C,MAAAA,eAAe,EAAE,cADC;AAElBkC,MAAAA,MAAM,EAAE;AAFU,OAGjB3B,KAAK,CAACqC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAHiB,EAGY;AAC5BX,MAAAA,MAAM,EAAE;AADoB,KAHZ,CAxDY;;AA+DhC;AACAY,IAAAA,qBAAqB;AACnB9C,MAAAA,eAAe,EAAE,aADE;AAEnBkC,MAAAA,MAAM,EAAE;AAFW,OAGlB3B,KAAK,CAACqC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAHkB,EAGW;AAC5BX,MAAAA,MAAM,EAAE;AADoB,KAHX,CAhEW;;AAuEhC;AACAa,IAAAA,mBAAmB;AACjB/C,MAAAA,eAAe,EAAE,eADA;AAEjBkC,MAAAA,MAAM,EAAE;AAFS,OAGhB3B,KAAK,CAACqC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAHgB,EAGa;AAC5BX,MAAAA,MAAM,EAAE;AADoB,KAHb,CAxEa;;AA+EhC;AACAc,IAAAA,sBAAsB;AACpBhD,MAAAA,eAAe,EAAE,YADG;AAEpBkC,MAAAA,MAAM,EAAE;AAFY,OAGnB3B,KAAK,CAACqC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAHmB,EAGU;AAC5BX,MAAAA,MAAM,EAAE;AADoB,KAHV;AAhFU,GAAZ;AAAA,CAAf;AAyFP,IAAIe,aAAa,GAAG,KAApB;AACA,IAAIC,cAAc,GAAG,IAArB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1BF,EAAAA,aAAa,GAAG,KAAhB;AACAG,EAAAA,YAAY,CAACF,cAAD,CAAZ;AACD;AAED,IAAMG,OAAO,gBAAG/E,KAAK,CAACgF,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AAAA;;AAAA,qBAyBxDD,KAzBwD,CAE1DpB,KAF0D;AAAA,MAE1DA,KAF0D,6BAElD,KAFkD;AAAA,MAG1DsB,QAH0D,GAyBxDF,KAzBwD,CAG1DE,QAH0D;AAAA,MAI1DC,OAJ0D,GAyBxDH,KAzBwD,CAI1DG,OAJ0D;AAAA,8BAyBxDH,KAzBwD,CAK1DI,oBAL0D;AAAA,MAK1DA,oBAL0D,sCAKnC,KALmC;AAAA,8BAyBxDJ,KAzBwD,CAM1DK,oBAN0D;AAAA,MAM1DA,oBAN0D,sCAMnC,KANmC;AAAA,8BAyBxDL,KAzBwD,CAO1DM,oBAP0D;AAAA,MAO1DA,oBAP0D,sCAOnC,KAPmC;AAAA,0BAyBxDN,KAzBwD,CAQ1DO,UAR0D;AAAA,MAQ1DA,UAR0D,kCAQ7C,GAR6C;AAAA,8BAyBxDP,KAzBwD,CAS1DQ,cAT0D;AAAA,MAS1DA,cAT0D,sCASzC,CATyC;AAAA,8BAyBxDR,KAzBwD,CAU1DS,eAV0D;AAAA,MAU1DA,eAV0D,sCAUxC,GAVwC;AAAA,MAWtDC,MAXsD,GAyBxDV,KAzBwD,CAW1DW,EAX0D;AAAA,2BAyBxDX,KAzBwD,CAY1DY,WAZ0D;AAAA,MAY1DA,WAZ0D,mCAY5C,KAZ4C;AAAA,0BAyBxDZ,KAzBwD,CAa1Da,UAb0D;AAAA,MAa1DA,UAb0D,kCAa7C,CAb6C;AAAA,8BAyBxDb,KAzBwD,CAc1Dc,eAd0D;AAAA,MAc1DA,eAd0D,sCAcxC,IAdwC;AAAA,MAe1DC,OAf0D,GAyBxDf,KAzBwD,CAe1De,OAf0D;AAAA,MAgB1DC,MAhB0D,GAyBxDhB,KAzBwD,CAgB1DgB,MAhB0D;AAAA,MAiBpDC,QAjBoD,GAyBxDjB,KAzBwD,CAiB1DkB,IAjB0D;AAAA,yBAyBxDlB,KAzBwD,CAkB1DmB,SAlB0D;AAAA,MAkB1DA,SAlB0D,iCAkB9C,QAlB8C;AAAA,8BAyBxDnB,KAzBwD,CAmB1DoB,eAnB0D;AAAA,MAmB1DA,eAnB0D,sCAmBxC3F,MAnBwC;AAAA,MAoB1D4F,WApB0D,GAyBxDrB,KAzBwD,CAoB1DqB,WApB0D;AAAA,MAqB1DC,KArB0D,GAyBxDtB,KAzBwD,CAqB1DsB,KArB0D;AAAA,8BAyBxDtB,KAzBwD,CAsB1DuB,mBAtB0D;AAAA,MAsB1DA,mBAtB0D,sCAsBpC/F,IAtBoC;AAAA,MAuB1DgG,eAvB0D,GAyBxDxB,KAzBwD,CAuB1DwB,eAvB0D;AAAA,MAwBvDC,KAxBuD,4BAyBxDzB,KAzBwD;;AA0B5D,MAAMhD,KAAK,GAAGjB,QAAQ,EAAtB;;AA1B4D,wBA4B1BhB,KAAK,CAAC2G,QAAN,EA5B0B;AAAA,MA4BrDC,SA5BqD;AAAA,MA4B1CC,YA5B0C;;AAAA,yBA6B5B7G,KAAK,CAAC2G,QAAN,CAAe,IAAf,CA7B4B;AAAA,MA6BrDG,QA7BqD;AAAA,MA6B3CC,WA7B2C;;AA8B5D,MAAMC,oBAAoB,GAAGhH,KAAK,CAACiH,MAAN,CAAa,KAAb,CAA7B;AAEA,MAAMC,UAAU,GAAGlH,KAAK,CAACiH,MAAN,EAAnB;AACA,MAAME,UAAU,GAAGnH,KAAK,CAACiH,MAAN,EAAnB;AACA,MAAMG,UAAU,GAAGpH,KAAK,CAACiH,MAAN,EAAnB;AACA,MAAMI,UAAU,GAAGrH,KAAK,CAACiH,MAAN,EAAnB;;AAnC4D,uBAqC1BlG,aAAa,CAAC;AAC9CuG,IAAAA,UAAU,EAAEpB,QADkC;AAE9C,eAAS,KAFqC;AAG9CqB,IAAAA,IAAI,EAAE,SAHwC;AAI9CC,IAAAA,KAAK,EAAE;AAJuC,GAAD,CArCa;AAAA;AAAA,MAqCrDC,SArCqD;AAAA,MAqC1CC,YArC0C;;AA4C5D,MAAIvB,IAAI,GAAGsB,SAAX;;AAEA,YAA2C;AACzC;AADyC,wBAEPzH,KAAK,CAACiH,MAAN,CAAaf,QAAQ,KAAKyB,SAA1B,CAFO;AAAA,QAExBC,YAFwB,iBAEjCC,OAFiC,EAIzC;;;AACA7H,IAAAA,KAAK,CAAC8H,SAAN,CAAgB,YAAM;AACpB,UACElB,SAAS,IACTA,SAAS,CAACmB,QADV,IAEA,CAACH,YAFD,IAGArB,KAAK,KAAK,EAHV,IAIAK,SAAS,CAACoB,OAAV,CAAkBC,WAAlB,OAAoC,QALtC,EAME;AACAC,QAAAA,OAAO,CAACC,KAAR,CACE,CACE,oFADF,EAEE,0CAFF,EAGE,6EAHF,EAIE,EAJF,EAKE,iDALF,EAMEC,IANF,CAMO,IANP,CADF;AASD;AACF,KAlBD,EAkBG,CAAC7B,KAAD,EAAQK,SAAR,EAAmBgB,YAAnB,CAlBH;AAmBD;;AAED,MAAMhC,EAAE,GAAGhF,KAAK,CAAC+E,MAAD,CAAhB;AAEA3F,EAAAA,KAAK,CAAC8H,SAAN,CAAgB,YAAM;AACpB,WAAO,YAAM;AACXhD,MAAAA,YAAY,CAACoC,UAAU,CAACW,OAAZ,CAAZ;AACA/C,MAAAA,YAAY,CAACqC,UAAU,CAACU,OAAZ,CAAZ;AACA/C,MAAAA,YAAY,CAACsC,UAAU,CAACS,OAAZ,CAAZ;AACA/C,MAAAA,YAAY,CAACuC,UAAU,CAACQ,OAAZ,CAAZ;AACD,KALD;AAMD,GAPD,EAOG,EAPH;;AASA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5BxD,IAAAA,YAAY,CAACF,cAAD,CAAZ;AACAD,IAAAA,aAAa,GAAG,IAAhB,CAF4B,CAI5B;AACA;AACA;;AACA+C,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAIzB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACqC,KAAD,CAAN;AACD;AACF,GAZD;;AAcA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,QAACC,OAAD,uEAAW,IAAX;AAAA,WAAoB,UAACF,KAAD,EAAW;AACjD,UAAMG,aAAa,GAAGtD,QAAQ,CAACF,KAA/B;;AAEA,UAAIqD,KAAK,CAACI,IAAN,KAAe,WAAf,IAA8BD,aAAa,CAACE,WAA5C,IAA2DH,OAA/D,EAAwE;AACtEC,QAAAA,aAAa,CAACE,WAAd,CAA0BL,KAA1B;AACD;;AAED,UAAItB,oBAAoB,CAACa,OAArB,IAAgCS,KAAK,CAACI,IAAN,KAAe,YAAnD,EAAiE;AAC/D;AACD,OATgD,CAWjD;AACA;AACA;;;AACA,UAAI9B,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACgC,eAAV,CAA0B,OAA1B;AACD;;AAED9D,MAAAA,YAAY,CAACqC,UAAU,CAACU,OAAZ,CAAZ;AACA/C,MAAAA,YAAY,CAACsC,UAAU,CAACS,OAAZ,CAAZ;;AACA,UAAIrC,UAAU,IAAKb,aAAa,IAAIc,cAApC,EAAqD;AACnD6C,QAAAA,KAAK,CAACO,OAAN;AACA1B,QAAAA,UAAU,CAACU,OAAX,GAAqBiB,UAAU,CAC7B,YAAM;AACJT,UAAAA,UAAU,CAACC,KAAD,CAAV;AACD,SAH4B,EAI7B3D,aAAa,GAAGc,cAAH,GAAoBD,UAJJ,CAA/B;AAMD,OARD,MAQO;AACL6C,QAAAA,UAAU,CAACC,KAAD,CAAV;AACD;AACF,KA/BmB;AAAA,GAApB;;AAjG4D,2BAkIIxH,iBAAiB,EAlIrB;AAAA,MAkIpDiI,cAlIoD,sBAkIpDA,cAlIoD;AAAA,MAkIpCC,aAlIoC,sBAkIpCA,aAlIoC;AAAA,MAkIhBC,eAlIgB,sBAkIrB/D,GAlIqB;;AAAA,yBAmINlF,KAAK,CAAC2G,QAAN,CAAe,KAAf,CAnIM;AAAA,MAmIrDuC,mBAnIqD;AAAA,MAmIhCC,sBAnIgC;;AAoI5D,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIF,mBAAJ,EAAyB;AACvBC,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAH,MAAAA,aAAa;AACd;AACF,GALD;;AAOA,MAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,QAACb,OAAD,uEAAW,IAAX;AAAA,WAAoB,UAACF,KAAD,EAAW;AACjD;AACA;AACA;AACA,UAAI,CAAC1B,SAAL,EAAgB;AACdC,QAAAA,YAAY,CAACyB,KAAK,CAACgB,aAAP,CAAZ;AACD;;AAED,UAAIP,cAAc,CAACT,KAAD,CAAlB,EAA2B;AACzBa,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAZ,QAAAA,WAAW,GAAGD,KAAH,CAAX;AACD;;AAED,UAAMG,aAAa,GAAGtD,QAAQ,CAACF,KAA/B;;AACA,UAAIwD,aAAa,CAACc,OAAd,IAAyBf,OAA7B,EAAsC;AACpCC,QAAAA,aAAa,CAACc,OAAd,CAAsBjB,KAAtB;AACD;AACF,KAjBmB;AAAA,GAApB;;AAmBA,MAAMkB,WAAW,GAAG,SAAdA,WAAc,CAAClB,KAAD,EAAW;AAC7BxD,IAAAA,YAAY,CAACF,cAAD,CAAZ;AACAA,IAAAA,cAAc,GAAGkE,UAAU,CAAC,YAAM;AAChCnE,MAAAA,aAAa,GAAG,KAAhB;AACD,KAF0B,EAExB,MAAMmB,UAFkB,CAA3B;AAGA4B,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,QAAI1B,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACsC,KAAD,CAAP;AACD;;AAEDxD,IAAAA,YAAY,CAACoC,UAAU,CAACW,OAAZ,CAAZ;AACAX,IAAAA,UAAU,CAACW,OAAX,GAAqBiB,UAAU,CAAC,YAAM;AACpC9B,MAAAA,oBAAoB,CAACa,OAArB,GAA+B,KAA/B;AACD,KAF8B,EAE5B5F,KAAK,CAACwH,WAAN,CAAkBC,QAAlB,CAA2BC,QAFC,CAA/B;AAGD,GAfD;;AAiBA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,QAACpB,OAAD,uEAAW,IAAX;AAAA,WAAoB,UAACF,KAAD,EAAW;AACjD,UAAMG,aAAa,GAAGtD,QAAQ,CAACF,KAA/B;;AAEA,UAAIqD,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAID,aAAa,CAACoB,MAAd,IAAwBrB,OAA5B,EAAqC;AACnCC,UAAAA,aAAa,CAACoB,MAAd,CAAqBvB,KAArB;AACD;;AACDc,QAAAA,UAAU;AACX;;AAED,UACEd,KAAK,CAACI,IAAN,KAAe,YAAf,IACAD,aAAa,CAACqB,YADd,IAEAxB,KAAK,CAACgB,aAAN,KAAwB1C,SAH1B,EAIE;AACA6B,QAAAA,aAAa,CAACqB,YAAd,CAA2BxB,KAA3B;AACD;;AAEDxD,MAAAA,YAAY,CAACqC,UAAU,CAACU,OAAZ,CAAZ;AACA/C,MAAAA,YAAY,CAACsC,UAAU,CAACS,OAAZ,CAAZ;AACAS,MAAAA,KAAK,CAACO,OAAN;AACAzB,MAAAA,UAAU,CAACS,OAAX,GAAqBiB,UAAU,CAAC,YAAM;AACpCU,QAAAA,WAAW,CAAClB,KAAD,CAAX;AACD,OAF8B,EAE5BxC,UAF4B,CAA/B;AAGD,KAxBmB;AAAA,GAApB;;AA0BA,MAAMiE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACzB,KAAD,EAAW;AAClCtB,IAAAA,oBAAoB,CAACa,OAArB,GAA+B,IAA/B;AAEA,QAAMY,aAAa,GAAGtD,QAAQ,CAACF,KAA/B;;AACA,QAAIwD,aAAa,CAACuB,YAAlB,EAAgC;AAC9BvB,MAAAA,aAAa,CAACuB,YAAd,CAA2B1B,KAA3B;AACD;AACF,GAPD;;AASA,MAAM2B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC3B,KAAD,EAAW;AAClCyB,IAAAA,gBAAgB,CAACzB,KAAD,CAAhB;AACAxD,IAAAA,YAAY,CAACsC,UAAU,CAACS,OAAZ,CAAZ;AACA/C,IAAAA,YAAY,CAACoC,UAAU,CAACW,OAAZ,CAAZ;AACA/C,IAAAA,YAAY,CAACuC,UAAU,CAACQ,OAAZ,CAAZ;AACAS,IAAAA,KAAK,CAACO,OAAN;AACAxB,IAAAA,UAAU,CAACQ,OAAX,GAAqBiB,UAAU,CAAC,YAAM;AACpCP,MAAAA,WAAW,GAAGD,KAAH,CAAX;AACD,KAF8B,EAE5B5C,eAF4B,CAA/B;AAGD,GATD;;AAWA,MAAMwE,cAAc,GAAG,SAAjBA,cAAiB,CAAC5B,KAAD,EAAW;AAChC,QAAInD,QAAQ,CAACF,KAAT,CAAekF,UAAnB,EAA+B;AAC7BhF,MAAAA,QAAQ,CAACF,KAAT,CAAekF,UAAf,CAA0B7B,KAA1B;AACD;;AAEDxD,IAAAA,YAAY,CAACuC,UAAU,CAACQ,OAAZ,CAAZ;AACA/C,IAAAA,YAAY,CAACsC,UAAU,CAACS,OAAZ,CAAZ;AACAS,IAAAA,KAAK,CAACO,OAAN;AACAzB,IAAAA,UAAU,CAACS,OAAX,GAAqBiB,UAAU,CAAC,YAAM;AACpCU,MAAAA,WAAW,CAAClB,KAAD,CAAX;AACD,KAF8B,EAE5BvC,eAF4B,CAA/B;AAGD,GAXD;;AAaA,MAAMqE,YAAY,GAAGzJ,UAAU,CAACkG,YAAD,EAAe3B,GAAf,CAA/B;AACA,MAAMmF,cAAc,GAAG1J,UAAU,CAACsI,eAAD,EAAkBmB,YAAlB,CAAjC,CA3O4D,CA4O5D;;AACA,MAAME,YAAY,GAAGtK,KAAK,CAACuK,WAAN,CACnB,UAACC,QAAD,EAAc;AACZ;AACA3J,IAAAA,MAAM,CAACwJ,cAAD,EAAiBpK,QAAQ,CAACwK,WAAT,CAAqBD,QAArB,CAAjB,CAAN;AACD,GAJkB,EAKnB,CAACH,cAAD,CALmB,CAArB;AAQA,MAAMK,SAAS,GAAG/J,UAAU,CAACwE,QAAQ,CAACD,GAAV,EAAeoF,YAAf,CAA5B,CArP4D,CAuP5D;;AACA,MAAI/D,KAAK,KAAK,EAAd,EAAkB;AAChBJ,IAAAA,IAAI,GAAG,KAAP;AACD,GA1P2D,CA4P5D;AACA;AACA;AACA;AACA;;;AACA,MAAMwE,qBAAqB,GAAG,CAACxE,IAAD,IAAS,CAACb,oBAAxC;;AACA,MAAMmD,aAAa;AACjB,wBAAoBtC,IAAI,GAAGP,EAAH,GAAQ,IADf;AAEjBW,IAAAA,KAAK,EAAEoE,qBAAqB,IAAI,OAAOpE,KAAP,KAAiB,QAA1C,GAAqDA,KAArD,GAA6D;AAFnD,KAGdG,KAHc,GAIdvB,QAAQ,CAACF,KAJK;AAKjB2F,IAAAA,SAAS,EAAEzK,IAAI,CAACuG,KAAK,CAACkE,SAAP,EAAkBzF,QAAQ,CAACF,KAAT,CAAe2F,SAAjC,CALE;AAMjBZ,IAAAA,YAAY,EAAED,gBANG;AAOjB7E,IAAAA,GAAG,EAAEwF;AAPY,IAAnB;;AAUA,MAAMG,2BAA2B,GAAG,EAApC;;AAEA,MAAI,CAACtF,oBAAL,EAA2B;AACzBkD,IAAAA,aAAa,CAACuB,YAAd,GAA6BC,gBAA7B;AACAxB,IAAAA,aAAa,CAAC0B,UAAd,GAA2BD,cAA3B;AACD;;AAED,MAAI,CAAC5E,oBAAL,EAA2B;AACzBmD,IAAAA,aAAa,CAACE,WAAd,GAA4BJ,WAAW,EAAvC;AACAE,IAAAA,aAAa,CAACqB,YAAd,GAA6BF,WAAW,EAAxC;;AAEA,QAAI/D,WAAJ,EAAiB;AACfgF,MAAAA,2BAA2B,CAAClC,WAA5B,GAA0CJ,WAAW,CAAC,KAAD,CAArD;AACAsC,MAAAA,2BAA2B,CAACf,YAA5B,GAA2CF,WAAW,CAAC,KAAD,CAAtD;AACD;AACF;;AAED,MAAI,CAACvE,oBAAL,EAA2B;AACzBoD,IAAAA,aAAa,CAACc,OAAd,GAAwBF,WAAW,EAAnC;AACAZ,IAAAA,aAAa,CAACoB,MAAd,GAAuBD,WAAW,EAAlC;;AAEA,QAAI/D,WAAJ,EAAiB;AACfgF,MAAAA,2BAA2B,CAACtB,OAA5B,GAAsCF,WAAW,CAAC,KAAD,CAAjD;AACAwB,MAAAA,2BAA2B,CAAChB,MAA5B,GAAqCD,WAAW,CAAC,KAAD,CAAhD;AACD;AACF;;AAED,YAA2C;AACzC,QAAIzE,QAAQ,CAACF,KAAT,CAAesB,KAAnB,EAA0B;AACxB2B,MAAAA,OAAO,CAACC,KAAR,CACE,CACE,4EADF,oCAE8BhD,QAAQ,CAACF,KAAT,CAAesB,KAF7C,kCAGE6B,IAHF,CAGO,IAHP,CADF;AAMD;AACF;;AAED,MAAM0C,iBAAiB,GAAG9K,KAAK,CAAC+K,OAAN,CAAc,YAAM;AAC5C,WAAO3K,SAAS,CACd;AACE4K,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE;AACTpH,UAAAA,KAAK,EAAE;AACLqH,YAAAA,OAAO,EAAEC,OAAO,CAACrE,QAAD,CADX;AAELsE,YAAAA,OAAO,EAAEtE;AAFJ;AADE;AADE;AADjB,KADc,EAWdR,WAXc,CAAhB;AAaD,GAdyB,EAcvB,CAACQ,QAAD,EAAWR,WAAX,CAduB,CAA1B;AAgBA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGtG,KAAK,CAACqL,YAAN,CAAmBlG,QAAnB,EAA6BsD,aAA7B,CADH,EAEE,MAAC,eAAD;AACE,IAAA,SAAS,EAAEtI,IAAI,CAACiF,OAAO,CAAClD,MAAT,EACgB2D,WADhB,IACZT,OAAO,CAAC9C,iBADI,EAEUuB,KAFV,IAEZuB,OAAO,CAAC7C,WAFI,CADjB;AAKE,IAAA,SAAS,EAAE6D,SALb;AAME,IAAA,QAAQ,EAAEQ,SANZ;AAOE,IAAA,IAAI,EAAEA,SAAS,GAAGT,IAAH,GAAU,KAP3B;AAQE,IAAA,EAAE,EAAEsC,aAAa,CAAC,kBAAD,CARnB;AASE,IAAA,UAAU;AATZ,KAUMoC,2BAVN,EAWMC,iBAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaG;AAAA,QAAcQ,cAAd,QAAGlF,SAAH;AAAA,QAA+CmF,oBAA/C,QAA8B9E,eAA9B;AAAA,WACC,MAAC,mBAAD;AACE,MAAA,OAAO,EAAExE,KAAK,CAACwH,WAAN,CAAkBC,QAAlB,CAA2B8B;AADtC,OAEMD,oBAFN,EAGM9E,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE;AACE,MAAA,SAAS,EAAEtG,IAAI,CACbiF,OAAO,CAAChD,OADK,EAMbgD,OAAO,2BAAoB5E,UAAU,CAAC8K,cAAc,CAACG,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD,CAA9B,EANM,EAGMzE,oBAAoB,CAACa,OAH3B,IAGVzC,OAAO,CAACjB,KAHE,EAIaN,KAJb,IAIVuB,OAAO,CAAC1B,YAJE,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG6C,KAVH,EAWG1C,KAAK,GAAG;AAAM,MAAA,SAAS,EAAEuB,OAAO,CAACvB,KAAzB;AAAgC,MAAA,GAAG,EAAEkD,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA0D,IAXlE,CALF,CADD;AAAA,GAbH,CAFF,CADF;AAwCD,CA1We,CAAhB;AA4WAhC,OAAO,CAAC2G,SAAR,GAAoB;AAClB;AACA;AACA;AACA;;AACA;;;AAGA7H,EAAAA,KAAK,EAAE3D,SAAS,CAACyL,IARC;;AASlB;;;AAGAxG,EAAAA,QAAQ,EAAE9E,mBAAmB,CAACuL,UAZZ;;AAalB;;;;AAIAxG,EAAAA,OAAO,EAAElF,SAAS,CAAC2L,MAjBD;;AAkBlB;;;AAGAjB,EAAAA,SAAS,EAAE1K,SAAS,CAAC4L,MArBH;;AAsBlB;;;AAGAzG,EAAAA,oBAAoB,EAAEnF,SAAS,CAACyL,IAzBd;;AA0BlB;;;AAGArG,EAAAA,oBAAoB,EAAEpF,SAAS,CAACyL,IA7Bd;;AA8BlB;;;AAGApG,EAAAA,oBAAoB,EAAErF,SAAS,CAACyL,IAjCd;;AAkClB;;;;AAIAnG,EAAAA,UAAU,EAAEtF,SAAS,CAAC6L,MAtCJ;;AAuClB;;;AAGAtG,EAAAA,cAAc,EAAEvF,SAAS,CAAC6L,MA1CR;;AA2ClB;;;AAGArG,EAAAA,eAAe,EAAExF,SAAS,CAAC6L,MA9CT;;AA+ClB;;;;AAIAnG,EAAAA,EAAE,EAAE1F,SAAS,CAAC4L,MAnDI;;AAoDlB;;;;AAIAjG,EAAAA,WAAW,EAAE3F,SAAS,CAACyL,IAxDL;;AAyDlB;;;;AAIA7F,EAAAA,UAAU,EAAE5F,SAAS,CAAC6L,MA7DJ;;AA8DlB;;;AAGAhG,EAAAA,eAAe,EAAE7F,SAAS,CAAC6L,MAjET;;AAkElB;;;;;AAKA/F,EAAAA,OAAO,EAAE9F,SAAS,CAAC8L,IAvED;;AAwElB;;;;;AAKA/F,EAAAA,MAAM,EAAE/F,SAAS,CAAC8L,IA7EA;;AA8ElB;;;AAGA7F,EAAAA,IAAI,EAAEjG,SAAS,CAACyL,IAjFE;;AAkFlB;;;AAGAvF,EAAAA,SAAS,EAAElG,SAAS,CAAC+L,KAAV,CAAgB,CACzB,YADyB,EAEzB,cAFyB,EAGzB,QAHyB,EAIzB,UAJyB,EAKzB,YALyB,EAMzB,MANyB,EAOzB,WAPyB,EAQzB,aARyB,EASzB,OATyB,EAUzB,SAVyB,EAWzB,WAXyB,EAYzB,KAZyB,CAAhB,CArFO;;AAmGlB;;;AAGA5F,EAAAA,eAAe,EAAEnG,SAAS,CAACgM,WAtGT;;AAuGlB;;;AAGA5F,EAAAA,WAAW,EAAEpG,SAAS,CAAC2L,MA1GL;;AA2GlB;;;AAGAtF,EAAAA,KAAK,EAAErG;AAAU;AAAD,GAAuCiM,IAAhD,CAAqDP,UA9G1C;;AA+GlB;;;;AAIApF,EAAAA,mBAAmB,EAAEtG,SAAS,CAACgM,WAnHb;;AAoHlB;;;AAGAzF,EAAAA,eAAe,EAAEvG,SAAS,CAAC2L;AAvHT,CAApB;AA0HA,eAAetL,UAAU,CAACyB,MAAD,EAAS;AAAEuF,EAAAA,IAAI,EAAE,YAAR;AAAsB6E,EAAAA,IAAI,EAAE;AAA5B,CAAT,CAAV,CAAwDrH,OAAxD,CAAf","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%',\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0',\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%',\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0',\n      },\n    },\n  };\n}\n\nexport const styles = (theme) => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none', // disable jss-rtl plugin\n  },\n  /* Styles applied to the Popper component if `interactive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto',\n  },\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: fade(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(10),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0',\n  },\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em' /* = width / sqrt(2) = (length of the hypotenuse) */,\n    boxSizing: 'border-box',\n    color: fade(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)',\n    },\n  },\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px',\n    },\n  },\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px',\n    },\n  },\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0',\n    },\n  },\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0',\n    },\n  },\n});\n\nlet hystersisOpen = false;\nlet hystersisTimer = null;\n\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nconst Tooltip = React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    id: idProp,\n    interactive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps,\n    ...other\n  } = props;\n  const theme = useTheme();\n\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open',\n  });\n\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { current: isControlled } = React.useRef(openProp !== undefined);\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (\n        childNode &&\n        childNode.disabled &&\n        !isControlled &&\n        title !== '' &&\n        childNode.tagName.toLowerCase() === 'button'\n      ) {\n        console.error(\n          [\n            'Material-UI: You are providing a disabled `button` child to the Tooltip component.',\n            'A disabled element does not fire events.',\n            \"Tooltip needs to listen to the child element's events to display the title.\",\n            '',\n            'Add a simple wrapper element, such as a `span`.',\n          ].join('\\n'),\n        );\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = (event) => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true;\n\n    // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleEnter = (forward = true) => (event) => {\n    const childrenProps = children.props;\n\n    if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n      childrenProps.onMouseOver(event);\n    }\n\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    }\n\n    // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    if (enterDelay || (hystersisOpen && enterNextDelay)) {\n      event.persist();\n      enterTimer.current = setTimeout(\n        () => {\n          handleOpen(event);\n        },\n        hystersisOpen ? enterNextDelay : enterDelay,\n      );\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const { isFocusVisible, onBlurVisible, ref: focusVisibleRef } = useIsFocusVisible();\n  const [childIsFocusVisible, setChildIsFocusVisible] = React.useState(false);\n  const handleBlur = () => {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  const handleFocus = (forward = true) => (event) => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    if (isFocusVisible(event)) {\n      setChildIsFocusVisible(true);\n      handleEnter()(event);\n    }\n\n    const childrenProps = children.props;\n    if (childrenProps.onFocus && forward) {\n      childrenProps.onFocus(event);\n    }\n  };\n\n  const handleClose = (event) => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  const handleLeave = (forward = true) => (event) => {\n    const childrenProps = children.props;\n\n    if (event.type === 'blur') {\n      if (childrenProps.onBlur && forward) {\n        childrenProps.onBlur(event);\n      }\n      handleBlur();\n    }\n\n    if (\n      event.type === 'mouseleave' &&\n      childrenProps.onMouseLeave &&\n      event.currentTarget === childNode\n    ) {\n      childrenProps.onMouseLeave(event);\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const detectTouchStart = (event) => {\n    ignoreNonTouchEvents.current = true;\n\n    const childrenProps = children.props;\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleTouchStart = (event) => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = (event) => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  // can be removed once we drop support for non ref forwarding class components\n  const handleOwnRef = React.useCallback(\n    (instance) => {\n      // #StrictMode ready\n      setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n    },\n    [handleFocusRef],\n  );\n\n  const handleRef = useForkRef(children.ref, handleOwnRef);\n\n  // There is no point in displaying an empty tooltip.\n  if (title === '') {\n    open = false;\n  }\n\n  // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n  const shouldShowNativeTitle = !open && !disableHoverListener;\n  const childrenProps = {\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null,\n    ...other,\n    ...children.props,\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef,\n  };\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(\n        [\n          'Material-UI: You have provided a `title` prop to the child of <Tooltip />.',\n          `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`,\n        ].join('\\n'),\n      );\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge(\n      {\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      },\n      PopperProps,\n    );\n  }, [arrowRef, PopperProps]);\n\n  return (\n    <React.Fragment>\n      {React.cloneElement(children, childrenProps)}\n      <PopperComponent\n        className={clsx(classes.popper, {\n          [classes.popperInteractive]: interactive,\n          [classes.popperArrow]: arrow,\n        })}\n        placement={placement}\n        anchorEl={childNode}\n        open={childNode ? open : false}\n        id={childrenProps['aria-describedby']}\n        transition\n        {...interactiveWrapperListeners}\n        {...mergedPopperProps}\n      >\n        {({ placement: placementInner, TransitionProps: TransitionPropsInner }) => (\n          <TransitionComponent\n            timeout={theme.transitions.duration.shorter}\n            {...TransitionPropsInner}\n            {...TransitionProps}\n          >\n            <div\n              className={clsx(\n                classes.tooltip,\n                {\n                  [classes.touch]: ignoreNonTouchEvents.current,\n                  [classes.tooltipArrow]: arrow,\n                },\n                classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`],\n              )}\n            >\n              {title}\n              {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n            </div>\n          </TransitionComponent>\n        )}\n      </PopperComponent>\n    </React.Fragment>\n  );\n});\n\nTooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf([\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top',\n  ]),\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object,\n};\n\nexport default withStyles(styles, { name: 'MuiTooltip', flip: false })(Tooltip);\n"]},"metadata":{},"sourceType":"module"}