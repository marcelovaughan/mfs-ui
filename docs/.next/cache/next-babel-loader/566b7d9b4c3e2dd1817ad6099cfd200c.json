{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\nconst styles = {\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n  },\n  buttonBlue: {\n    background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)'\n  }\n};\nexport default function DynamicInlineStyle() {\n  const [color, setColor] = React.useState('default');\n\n  const handleChange = event => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: color === 'blue',\n      onChange: handleChange,\n      color: \"primary\",\n      value: \"dynamic-class-name\"\n    }),\n    label: \"Blue\"\n  }), __jsx(Button, {\n    style: _objectSpread(_objectSpread({}, styles.button), color === 'blue' ? styles.buttonBlue : {})\n  }, 'dynamic inline-style'));\n}","map":null,"metadata":{},"sourceType":"module"}