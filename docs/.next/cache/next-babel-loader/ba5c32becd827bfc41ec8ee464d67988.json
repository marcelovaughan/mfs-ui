{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { withStyles } from \"../../../../packages/material-ui/src/styles\";\nimport List from \"../../../../packages/material-ui/src/List\";\nimport Drawer from \"../../../../packages/material-ui/src/Drawer\";\nimport SwipeableDrawer from \"../../../../packages/material-ui/src/SwipeableDrawer\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport Hidden from \"../../../../packages/material-ui/src/Hidden\";\nimport Box from \"../../../../packages/material-ui/src/Box\";\nimport DiamondSponsors from \"./DiamondSponsors\";\nimport AppDrawerNavItem from \"./AppDrawerNavItem\";\nimport Link from \"./Link\";\nimport { pageToTitleI18n } from \"../utils/helpers\";\nimport PageContext from \"./PageContext\";\nlet savedScrollTop = null;\n\nfunction PersistScroll(props) {\n  const {\n    children\n  } = props;\n  const rootRef = React.useRef();\n  React.useEffect(() => {\n    const parent = rootRef.current ? rootRef.current.parentElement : null;\n    const activeElement = document.querySelector('.drawer-active');\n\n    if (!parent || !activeElement || !activeElement.scrollIntoView) {\n      return undefined;\n    }\n\n    const activeBox = activeElement.getBoundingClientRect();\n\n    if (savedScrollTop === null || activeBox.top - savedScrollTop < 0) {\n      // Center the selected item in the list container.\n      activeElement.scrollIntoView(); // Fix a Chrome issue, reset the tabbable ring back to the top of the document.\n\n      document.body.scrollIntoView();\n    } else {\n      parent.scrollTop = savedScrollTop;\n    }\n\n    return () => {\n      savedScrollTop = parent.scrollTop;\n    };\n  }, []);\n  return __jsx(\"div\", {\n    ref: rootRef\n  }, children);\n}\n\nconst styles = theme => ({\n  paper: {\n    width: 240,\n    backgroundColor: theme.palette.background.level1\n  },\n  title: {\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(0.5),\n    '&:hover': {\n      color: theme.palette.primary.main\n    }\n  },\n  // https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items\n  toolbarIe11: {\n    display: 'flex'\n  },\n  toolbar: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n    paddingLeft: theme.spacing(3),\n    display: 'flex',\n    flexGrow: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  })\n});\n\nfunction renderNavItems(options) {\n  const {\n    pages\n  } = options,\n        params = _objectWithoutProperties(options, [\"pages\"]);\n\n  return __jsx(List, null, pages.reduce( // eslint-disable-next-line no-use-before-define\n  (items, page) => reduceChildRoutes(_objectSpread({\n    items,\n    page\n  }, params)), []));\n}\n\nfunction reduceChildRoutes({\n  props,\n  activePage,\n  items,\n  page,\n  depth,\n  t\n}) {\n  if (page.displayNav === false) {\n    return items;\n  }\n\n  if (page.children && page.children.length > 1) {\n    const title = pageToTitleI18n(page, t);\n    const topLevel = activePage ? activePage.pathname.indexOf(`${page.pathname}/`) === 0 : false;\n    items.push(__jsx(AppDrawerNavItem, {\n      linkProps: page.linkProps,\n      depth: depth,\n      key: title,\n      topLevel: topLevel && !page.subheader,\n      openImmediately: topLevel || Boolean(page.subheader),\n      title: title\n    }, renderNavItems({\n      props,\n      pages: page.children,\n      activePage,\n      depth: depth + 1,\n      t\n    })));\n  } else {\n    const title = pageToTitleI18n(page, t);\n    page = page.children && page.children.length === 1 ? page.children[0] : page;\n    items.push(__jsx(AppDrawerNavItem, {\n      linkProps: page.linkProps,\n      depth: depth,\n      key: title,\n      title: title,\n      href: page.pathname,\n      onClick: props.onClose\n    }));\n  }\n\n  return items;\n} // iOS is hosted on high-end devices. We can enable the backdrop transition without\n// dropping frames. The performance will be good enough.\n// So: <SwipeableDrawer disableBackdropTransition={false} />\n\n\nconst iOS = false && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nvar _ref = __jsx(Divider, null);\n\nvar _ref2 = __jsx(Box, {\n  mx: 3,\n  my: 2\n}, __jsx(DiamondSponsors, {\n  spot: \"drawer\"\n}));\n\nfunction AppDrawer(props) {\n  const {\n    classes,\n    className,\n    disablePermanent,\n    mobileOpen,\n    onClose,\n    onOpen\n  } = props;\n  const {\n    activePage,\n    pages\n  } = React.useContext(PageContext);\n  const userLanguage = useSelector(state => state.options.userLanguage);\n  const languagePrefix = userLanguage === 'en' ? '' : `/${userLanguage}`;\n  const t = useSelector(state => state.options.t);\n\n  const drawer = __jsx(PersistScroll, null, __jsx(\"div\", {\n    className: classes.toolbarIe11\n  }, __jsx(\"div\", {\n    className: classes.toolbar\n  }, __jsx(Link, {\n    className: classes.title,\n    href: \"/\",\n    onClick: onClose,\n    variant: \"h6\",\n    color: \"inherit\"\n  }, \"Material-UI\"), process.env.LIB_VERSION ? __jsx(Link, {\n    color: \"textSecondary\",\n    variant: \"caption\",\n    href: `https://material-ui.com${languagePrefix}/versions/`,\n    onClick: onClose\n  }, `v${process.env.LIB_VERSION}`) : null)), _ref, _ref2, renderNavItems({\n    props,\n    pages,\n    activePage,\n    depth: 0,\n    t\n  }));\n\n  return __jsx(\"nav\", {\n    className: className,\n    \"aria-label\": t('mainNavigation')\n  }, __jsx(Hidden, {\n    lgUp: !disablePermanent,\n    implementation: \"js\"\n  }, __jsx(SwipeableDrawer, {\n    classes: {\n      paper: clsx(classes.paper, 'algolia-drawer')\n    },\n    disableBackdropTransition: !iOS,\n    variant: \"temporary\",\n    open: mobileOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    ModalProps: {\n      keepMounted: true\n    }\n  }, drawer)), disablePermanent ? null : __jsx(Hidden, {\n    mdDown: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    classes: {\n      paper: classes.paper\n    },\n    variant: \"permanent\",\n    open: true\n  }, drawer)));\n}\n\nexport default withStyles(styles)(AppDrawer);","map":null,"metadata":{},"sourceType":"module"}