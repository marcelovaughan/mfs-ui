{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport merge from \"./merge\"; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nconst values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (true) {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      acc[themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = props => {\n    const base = styleFunction(props);\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_objectSpread({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = true ? _objectSpread(_objectSpread({}, styleFunction.propTypes), {}, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default breakpoints;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-system/src/breakpoints.js"],"names":["PropTypes","merge","values","xs","sm","md","lg","xl","defaultBreakpoints","keys","up","key","handleBreakpoints","props","propValue","styleFromPropValue","theme","console","error","Array","isArray","themeBreakpoints","breakpoints","reduce","acc","item","index","Object","breakpoint","output","styleFunction","newStyleFunction","base","extended","propTypes","object","filterProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport merge from './merge';\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nconst values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: (key) => `@media (min-width:${values[key]}px)`,\n};\n\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      acc[themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = (props) => {\n    const base = styleFunction(props);\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction({ theme: props.theme, ...props[key] });\n      }\n      return acc;\n    }, null);\n\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes =\n    process.env.NODE_ENV !== 'production'\n      ? {\n          ...styleFunction.propTypes,\n          xs: PropTypes.object,\n          sm: PropTypes.object,\n          md: PropTypes.object,\n          lg: PropTypes.object,\n          xl: PropTypes.object,\n        }\n      : {};\n\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n\n  return newStyleFunction;\n}\n\nexport default breakpoints;\n"]},"metadata":{},"sourceType":"module"}