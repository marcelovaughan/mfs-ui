{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { emphasize, withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Breadcrumbs from \"../../../../../packages/material-ui/src/Breadcrumbs\";\nimport Chip from \"../../../../../packages/material-ui/src/Chip\";\nimport HomeIcon from \"../../../../../packages/material-ui-icons/src/Home\";\nimport ExpandMoreIcon from \"../../../../../packages/material-ui-icons/src/ExpandMore\";\nconst StyledBreadcrumb = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12)\n    }\n  }\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nvar _ref = __jsx(Breadcrumbs, {\n  \"aria-label\": \"breadcrumb\"\n}, __jsx(StyledBreadcrumb, {\n  component: \"a\",\n  href: \"#\",\n  label: \"Home\",\n  icon: __jsx(HomeIcon, {\n    fontSize: \"small\"\n  }),\n  onClick: handleClick\n}), __jsx(StyledBreadcrumb, {\n  component: \"a\",\n  href: \"#\",\n  label: \"Catalog\",\n  onClick: handleClick\n}), __jsx(StyledBreadcrumb, {\n  label: \"Accessories\",\n  deleteIcon: __jsx(ExpandMoreIcon, null),\n  onClick: handleClick,\n  onDelete: handleClick\n}));\n\nexport default function CustomizedBreadcrumbs() {\n  return _ref;\n}","map":null,"metadata":{},"sourceType":"module"}