{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport { getDependencies } from \"./helpers\";\nimport { CODE_VARIANTS } from \"../constants\";\n\nfunction jsDemo(demoData) {\n  return {\n    dependencies: getDependencies(demoData.raw),\n    files: {\n      'demo.js': demoData.raw,\n      'index.js': \"\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport Demo from './demo';\\n\\nReactDOM.render(<Demo />, document.querySelector('#root'));\\n    \"\n    }\n  };\n}\n\nfunction tsDemo(demoData) {\n  return {\n    dependencies: getDependencies(demoData.raw, {\n      codeLanguage: CODE_VARIANTS.TS\n    }),\n    files: {\n      'demo.tsx': demoData.raw,\n      'index.tsx': \"\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport Demo from './demo';\\n\\nReactDOM.render(<Demo />, document.querySelector('#root'));\\n    \",\n      'tsconfig.json': \"{\\n  \\\"compilerOptions\\\": {\\n    \\\"target\\\": \\\"es5\\\",\\n    \\\"lib\\\": [\\n      \\\"dom\\\",\\n      \\\"dom.iterable\\\",\\n      \\\"esnext\\\"\\n    ],\\n    \\\"allowJs\\\": true,\\n    \\\"skipLibCheck\\\": true,\\n    \\\"esModuleInterop\\\": true,\\n    \\\"allowSyntheticDefaultImports\\\": true,\\n    \\\"strict\\\": true,\\n    \\\"forceConsistentCasingInFileNames\\\": true,\\n    \\\"module\\\": \\\"esnext\\\",\\n    \\\"moduleResolution\\\": \\\"node\\\",\\n    \\\"resolveJsonModule\\\": true,\\n    \\\"isolatedModules\\\": true,\\n    \\\"noEmit\\\": true,\\n    \\\"jsx\\\": \\\"preserve\\\"\\n  },\\n  \\\"include\\\": [\\n    \\\"src\\\"\\n  ]\\n}\\n      \"\n    },\n    main: 'index.tsx',\n    scripts: {\n      start: 'react-scripts start'\n    }\n  };\n}\n\nfunction getLanguageConfig(demoData) {\n  switch (demoData.codeVariant) {\n    case CODE_VARIANTS.TS:\n      return tsDemo(demoData);\n\n    case CODE_VARIANTS.JS:\n      return jsDemo(demoData);\n\n    default:\n      throw new Error(\"Unsupported codeVariant: \".concat(demoData.codeVariant));\n  }\n}\n\nexport default function getDemo(demoData) {\n  var baseConfig = {\n    title: 'Material demo',\n    description: demoData.githubLocation,\n    files: {\n      'index.html': \"\\n<body>\\n  <!-- Fonts to support Material Design -->\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\\\" />\\n  <!-- Icons to support Material Design -->\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" />\\n  <div id=\\\"root\\\"></div>\\n</body>\\n      \"\n    }\n  };\n  var languageConfig = getLanguageConfig(demoData);\n  return _objectSpread(_objectSpread(_objectSpread({}, baseConfig), languageConfig), {}, {\n    files: _objectSpread(_objectSpread({}, baseConfig.files), languageConfig.files)\n  });\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/utils/getDemoConfig.js"],"names":["getDependencies","CODE_VARIANTS","jsDemo","demoData","dependencies","raw","files","tsDemo","codeLanguage","TS","main","scripts","start","getLanguageConfig","codeVariant","JS","Error","getDemo","baseConfig","title","description","githubLocation","languageConfig"],"mappings":";AAAA,SAASA,eAAT;AACA,SAASC,aAAT;;AAEA,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACxB,SAAO;AACLC,IAAAA,YAAY,EAAEJ,eAAe,CAACG,QAAQ,CAACE,GAAV,CADxB;AAELC,IAAAA,KAAK,EAAE;AACL,iBAAWH,QAAQ,CAACE,GADf;AAEL;AAFK;AAFF,GAAP;AAaD;;AAED,SAASE,MAAT,CAAgBJ,QAAhB,EAA0B;AACxB,SAAO;AACLC,IAAAA,YAAY,EAAEJ,eAAe,CAACG,QAAQ,CAACE,GAAV,EAAe;AAAEG,MAAAA,YAAY,EAAEP,aAAa,CAACQ;AAA9B,KAAf,CADxB;AAELH,IAAAA,KAAK,EAAE;AACL,kBAAYH,QAAQ,CAACE,GADhB;AAEL,qLAFK;AASL;AATK,KAFF;AAsCLK,IAAAA,IAAI,EAAE,WAtCD;AAuCLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AADA;AAvCJ,GAAP;AA2CD;;AAED,SAASC,iBAAT,CAA2BV,QAA3B,EAAqC;AACnC,UAAQA,QAAQ,CAACW,WAAjB;AACE,SAAKb,aAAa,CAACQ,EAAnB;AACE,aAAOF,MAAM,CAACJ,QAAD,CAAb;;AACF,SAAKF,aAAa,CAACc,EAAnB;AACE,aAAOb,MAAM,CAACC,QAAD,CAAb;;AACF;AACE,YAAM,IAAIa,KAAJ,oCAAsCb,QAAQ,CAACW,WAA/C,EAAN;AANJ;AAQD;;AAED,eAAe,SAASG,OAAT,CAAiBd,QAAjB,EAA2B;AACxC,MAAMe,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE,eADU;AAEjBC,IAAAA,WAAW,EAAEjB,QAAQ,CAACkB,cAFL;AAGjBf,IAAAA,KAAK,EAAE;AACL;AADK;AAHU,GAAnB;AAeA,MAAMgB,cAAc,GAAGT,iBAAiB,CAACV,QAAD,CAAxC;AAEA,uDACKe,UADL,GAEKI,cAFL;AAGEhB,IAAAA,KAAK,kCACAY,UAAU,CAACZ,KADX,GAEAgB,cAAc,CAAChB,KAFf;AAHP;AAQD","sourcesContent":["import { getDependencies } from './helpers';\nimport { CODE_VARIANTS } from 'docs/src/modules/constants';\n\nfunction jsDemo(demoData) {\n  return {\n    dependencies: getDependencies(demoData.raw),\n    files: {\n      'demo.js': demoData.raw,\n      'index.js': `\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './demo';\n\nReactDOM.render(<Demo />, document.querySelector('#root'));\n    `,\n    },\n  };\n}\n\nfunction tsDemo(demoData) {\n  return {\n    dependencies: getDependencies(demoData.raw, { codeLanguage: CODE_VARIANTS.TS }),\n    files: {\n      'demo.tsx': demoData.raw,\n      'index.tsx': `\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './demo';\n\nReactDOM.render(<Demo />, document.querySelector('#root'));\n    `,\n      'tsconfig.json': `{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\n      \"dom\",\n      \"dom.iterable\",\n      \"esnext\"\n    ],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"preserve\"\n  },\n  \"include\": [\n    \"src\"\n  ]\n}\n      `,\n    },\n    main: 'index.tsx',\n    scripts: {\n      start: 'react-scripts start',\n    },\n  };\n}\n\nfunction getLanguageConfig(demoData) {\n  switch (demoData.codeVariant) {\n    case CODE_VARIANTS.TS:\n      return tsDemo(demoData);\n    case CODE_VARIANTS.JS:\n      return jsDemo(demoData);\n    default:\n      throw new Error(`Unsupported codeVariant: ${demoData.codeVariant}`);\n  }\n}\n\nexport default function getDemo(demoData) {\n  const baseConfig = {\n    title: 'Material demo',\n    description: demoData.githubLocation,\n    files: {\n      'index.html': `\n<body>\n  <!-- Fonts to support Material Design -->\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n  <!-- Icons to support Material Design -->\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n  <div id=\"root\"></div>\n</body>\n      `,\n    },\n  };\n  const languageConfig = getLanguageConfig(demoData);\n\n  return {\n    ...baseConfig,\n    ...languageConfig,\n    files: {\n      ...baseConfig.files,\n      ...languageConfig.files,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}