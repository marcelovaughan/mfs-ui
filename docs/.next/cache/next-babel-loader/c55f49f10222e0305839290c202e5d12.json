{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Hidden/HiddenCss.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from \"../utils/capitalize\";\nimport withStyles from \"../styles/withStyles\";\nimport useTheme from \"../styles/useTheme\";\n\nconst styles = theme => {\n  const hidden = {\n    display: 'none'\n  };\n  return theme.breakpoints.keys.reduce((acc, key) => {\n    acc[`only${capitalize(key)}`] = {\n      [theme.breakpoints.only(key)]: hidden\n    };\n    acc[`${key}Up`] = {\n      [theme.breakpoints.up(key)]: hidden\n    };\n    acc[`${key}Down`] = {\n      [theme.breakpoints.down(key)]: hidden\n    };\n    return acc;\n  }, {});\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction HiddenCss(props) {\n  const {\n    children,\n    classes,\n    className,\n    only\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"only\"]);\n\n  const theme = useTheme();\n\n  if (true) {\n    const unknownProps = Object.keys(other).filter(propName => {\n      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some(breakpoint => {\n        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;\n      });\n      return isUndeclaredBreakpoint;\n    });\n\n    if (unknownProps.length > 0) {\n      console.error(`Material-UI: Unsupported props received by \\`<Hidden implementation=\"css\" />\\`: ${unknownProps.join(', ')}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);\n    }\n  }\n\n  const clsx = [];\n\n  if (className) {\n    clsx.push(className);\n  }\n\n  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    const breakpoint = theme.breakpoints.keys[i];\n    const breakpointUp = props[`${breakpoint}Up`];\n    const breakpointDown = props[`${breakpoint}Down`];\n\n    if (breakpointUp) {\n      clsx.push(classes[`${breakpoint}Up`]);\n    }\n\n    if (breakpointDown) {\n      clsx.push(classes[`${breakpoint}Down`]);\n    }\n  }\n\n  if (only) {\n    const onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach(breakpoint => {\n      clsx.push(classes[`only${capitalize(breakpoint)}`]);\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: clsx.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, children);\n}\n\nHiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n};\nexport default withStyles(styles, {\n  name: 'PrivateHiddenCss'\n})(HiddenCss);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Hidden/HiddenCss.js"],"names":["React","PropTypes","capitalize","withStyles","useTheme","styles","theme","hidden","display","breakpoints","keys","reduce","acc","key","only","up","down","HiddenCss","props","children","classes","className","other","unknownProps","Object","filter","propName","isUndeclaredBreakpoint","some","breakpoint","length","console","error","join","clsx","push","i","breakpointUp","breakpointDown","onlyBreakpoints","Array","isArray","forEach","propTypes","node","object","isRequired","string","implementation","oneOf","lgDown","bool","lgUp","mdDown","mdUp","oneOfType","arrayOf","smDown","smUp","xlDown","xlUp","xsDown","xsUp","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\n\nconst styles = (theme) => {\n  const hidden = {\n    display: 'none',\n  };\n\n  return theme.breakpoints.keys.reduce((acc, key) => {\n    acc[`only${capitalize(key)}`] = {\n      [theme.breakpoints.only(key)]: hidden,\n    };\n    acc[`${key}Up`] = {\n      [theme.breakpoints.up(key)]: hidden,\n    };\n    acc[`${key}Down`] = {\n      [theme.breakpoints.down(key)]: hidden,\n    };\n\n    return acc;\n  }, {});\n};\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenCss(props) {\n  const { children, classes, className, only, ...other } = props;\n  const theme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    const unknownProps = Object.keys(other).filter((propName) => {\n      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some((breakpoint) => {\n        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;\n      });\n      return isUndeclaredBreakpoint;\n    });\n\n    if (unknownProps.length > 0) {\n      console.error(\n        `Material-UI: Unsupported props received by \\`<Hidden implementation=\"css\" />\\`: ${unknownProps.join(\n          ', ',\n        )}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`,\n      );\n    }\n  }\n\n  const clsx = [];\n\n  if (className) {\n    clsx.push(className);\n  }\n\n  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    const breakpoint = theme.breakpoints.keys[i];\n    const breakpointUp = props[`${breakpoint}Up`];\n    const breakpointDown = props[`${breakpoint}Down`];\n\n    if (breakpointUp) {\n      clsx.push(classes[`${breakpoint}Up`]);\n    }\n    if (breakpointDown) {\n      clsx.push(classes[`${breakpoint}Down`]);\n    }\n  }\n\n  if (only) {\n    const onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach((breakpoint) => {\n      clsx.push(classes[`only${capitalize(breakpoint)}`]);\n    });\n  }\n\n  return <div className={clsx.join(' ')}>{children}</div>;\n}\n\nHiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([\n    PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])),\n  ]),\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'PrivateHiddenCss' })(HiddenCss);\n"]},"metadata":{},"sourceType":"module"}