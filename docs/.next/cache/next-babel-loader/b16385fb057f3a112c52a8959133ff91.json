{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Table from \"../../../../../packages/material-ui/src/Table\";\nimport TableBody from \"../../../../../packages/material-ui/src/TableBody\";\nimport TableCell from \"../../../../../packages/material-ui/src/TableCell\";\nimport TableContainer from \"../../../../../packages/material-ui/src/TableContainer\";\nimport TableHead from \"../../../../../packages/material-ui/src/TableHead\";\nimport TableRow from \"../../../../../packages/material-ui/src/TableRow\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nconst TAX_RATE = 0.07;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  },\n  hideBorder: {\n    border: 0\n  }\n});\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow(desc, qty, unit) {\n  const price = priceRow(qty, unit);\n  return {\n    desc,\n    qty,\n    unit,\n    price\n  };\n}\n\nfunction subtotal(items) {\n  return items.map(({\n    price\n  }) => price).reduce((sum, i) => sum + i, 0);\n}\n\nconst rows = [createRow('Paperclips (Box)', 100, 1.15), createRow('Paper (Case)', 10, 45.99), createRow('Waste Basket', 2, 17.99)];\nconst invoiceSubtotal = subtotal(rows);\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\nvar _ref = __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n  align: \"center\",\n  colSpan: 3\n}, \"Details\"), __jsx(TableCell, {\n  align: \"right\"\n}, \"Price\")), __jsx(TableRow, null, __jsx(TableCell, null, \"Desc\"), __jsx(TableCell, {\n  align: \"right\"\n}, \"Qty.\"), __jsx(TableCell, {\n  align: \"right\"\n}, \"Unit\"), __jsx(TableCell, {\n  align: \"right\"\n}, \"Sum\")));\n\nvar _ref2 = __jsx(TableCell, {\n  rowSpan: 3\n});\n\nvar _ref3 = __jsx(TableCell, {\n  colSpan: 2\n}, \"Subtotal\");\n\nvar _ref4 = __jsx(TableCell, null, \"Tax\");\n\nvar _ref5 = __jsx(TableCell, {\n  colSpan: 2\n}, \"Total\");\n\nexport default function SpanningTable() {\n  const classes = useStyles();\n  return __jsx(TableContainer, {\n    component: Paper\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"spanning table\"\n  }, _ref, __jsx(TableBody, null, rows.map(row => __jsx(TableRow, {\n    key: row.desc\n  }, __jsx(TableCell, null, row.desc), __jsx(TableCell, {\n    align: \"right\"\n  }, row.qty), __jsx(TableCell, {\n    align: \"right\"\n  }, row.unit), __jsx(TableCell, {\n    align: \"right\"\n  }, ccyFormat(row.price)))), __jsx(TableRow, null, _ref2, _ref3, __jsx(TableCell, {\n    align: \"right\"\n  }, ccyFormat(invoiceSubtotal))), __jsx(TableRow, null, _ref4, __jsx(TableCell, {\n    align: \"right\"\n  }, `${(TAX_RATE * 100).toFixed(0)} %`), __jsx(TableCell, {\n    align: \"right\"\n  }, ccyFormat(invoiceTaxes))), __jsx(TableRow, null, _ref5, __jsx(TableCell, {\n    align: \"right\"\n  }, ccyFormat(invoiceTotal))))));\n}","map":null,"metadata":{},"sourceType":"module"}