{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Chip from \"../../../../../packages/material-ui/src/Chip\";\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport TagFacesIcon from \"../../../../../packages/material-ui-icons/src/TagFaces\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nvar _ref = __jsx(TagFacesIcon, null);\n\nexport default function ChipsArray() {\n  const classes = useStyles();\n  const [chipData, setChipData] = React.useState([{\n    key: 0,\n    label: 'Angular'\n  }, {\n    key: 1,\n    label: 'jQuery'\n  }, {\n    key: 2,\n    label: 'Polymer'\n  }, {\n    key: 3,\n    label: 'React'\n  }, {\n    key: 4,\n    label: 'Vue.js'\n  }]);\n\n  const handleDelete = chipToDelete => () => {\n    setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  return __jsx(Paper, {\n    component: \"ul\",\n    className: classes.root\n  }, chipData.map(data => {\n    let icon;\n\n    if (data.label === 'React') {\n      icon = _ref;\n    }\n\n    return __jsx(\"li\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      label: data.label,\n      onDelete: data.label === 'React' ? undefined : handleDelete(data),\n      className: classes.chip\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}