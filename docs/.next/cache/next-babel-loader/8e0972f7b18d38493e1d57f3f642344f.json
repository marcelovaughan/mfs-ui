{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport PropTypes from 'prop-types';\nimport merge from \"./merge\";\n\nfunction omit(input, fields) {\n  var output = {};\n\n  _Object$keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _objectSpread(_objectSpread({}, merge(output, styleFunction(_objectSpread({\n        theme: props.theme\n      }, props.css)))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = true ? _objectSpread(_objectSpread({}, styleFunction.propTypes), {}, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-system/src/css.js"],"names":["PropTypes","merge","omit","input","fields","output","forEach","prop","indexOf","css","styleFunction","newStyleFunction","props","theme","filterProps","propTypes","object"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AAC3B,MAAMC,MAAM,GAAG,EAAf;;AAEA,eAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAACC,IAAD,EAAU;AACnC,QAAIH,MAAM,CAACI,OAAP,CAAeD,IAAf,MAAyB,CAAC,CAA9B,EAAiC;AAC/BF,MAAAA,MAAM,CAACE,IAAD,CAAN,GAAeJ,KAAK,CAACI,IAAD,CAApB;AACD;AACF,GAJD;;AAMA,SAAOF,MAAP;AACD;;AAED,SAASI,GAAT,CAAaC,aAAb,EAA4B;AAC1B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,QAAMP,MAAM,GAAGK,aAAa,CAACE,KAAD,CAA5B;;AAEA,QAAIA,KAAK,CAACH,GAAV,EAAe;AACb,6CACKR,KAAK,CAACI,MAAD,EAASK,aAAa;AAAGG,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAhB,SAA0BD,KAAK,CAACH,GAAhC,EAAtB,CADV,GAEKP,IAAI,CAACU,KAAK,CAACH,GAAP,EAAY,CAACC,aAAa,CAACI,WAAf,CAAZ,CAFT;AAID;;AAED,WAAOT,MAAP;AACD,GAXD;;AAaAM,EAAAA,gBAAgB,CAACI,SAAjB,GACE,uCAESL,aAAa,CAACK,SAFvB;AAGMN,IAAAA,GAAG,EAAET,SAAS,CAACgB;AAHrB,OAKI,EANN;AAQAL,EAAAA,gBAAgB,CAACG,WAAjB,IAAgC,KAAhC,4BAA0CJ,aAAa,CAACI,WAAxD;AAEA,SAAOH,gBAAP;AACD;;AAED,eAAeF,GAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  const output = {};\n\n  Object.keys(input).forEach((prop) => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = (props) => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return {\n        ...merge(output, styleFunction({ theme: props.theme, ...props.css })),\n        ...omit(props.css, [styleFunction.filterProps]),\n      };\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes =\n    process.env.NODE_ENV !== 'production'\n      ? {\n          ...styleFunction.propTypes,\n          css: PropTypes.object,\n        }\n      : {};\n\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n\n  return newStyleFunction;\n}\n\nexport default css;\n"]},"metadata":{},"sourceType":"module"}