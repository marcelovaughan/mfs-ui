{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\n\nconst styles = theme => ({\n  root: _objectSpread(_objectSpread({}, theme.typography.body1), {}, {\n    color: theme.palette.text.primary,\n    wordBreak: 'break-word',\n    '& .anchor-link': {\n      marginTop: -96,\n      // Offset for the anchor.\n      position: 'absolute'\n    },\n    '& pre': {\n      margin: theme.spacing(3, 'auto'),\n      padding: theme.spacing(2),\n      backgroundColor: '#272c34',\n      direction: 'ltr',\n      borderRadius: theme.shape.borderRadius,\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      // iOS momentum scrolling.\n      maxWidth: 'calc(100vw - 32px)',\n      [theme.breakpoints.up('md')]: {\n        maxWidth: 'calc(100vw - 32px - 16px)'\n      }\n    },\n    // inline code\n    '& code': {\n      direction: 'ltr',\n      lineHeight: 1.4,\n      display: 'inline-block',\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n      WebkitFontSmoothing: 'subpixel-antialiased',\n      padding: '0 3px',\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\n      fontSize: '.85em',\n      borderRadius: 2\n    },\n    '& code[class*=\"language-\"]': {\n      backgroundColor: '#272c34',\n      color: '#fff',\n      // Avoid layout jump after hydration (style injected by prism)\n      lineHeight: 1.5\n    },\n    // code blocks\n    '& pre code': {\n      fontSize: '.9em'\n    },\n    '& .token.operator': {\n      background: 'transparent'\n    },\n    '& h1': _objectSpread(_objectSpread({}, theme.typography.h3), {}, {\n      fontSize: 40,\n      margin: '16px 0'\n    }),\n    '& .description': _objectSpread(_objectSpread({}, theme.typography.h5), {}, {\n      margin: '0 0 40px'\n    }),\n    '& h2': _objectSpread(_objectSpread({}, theme.typography.h4), {}, {\n      fontSize: 30,\n      margin: '40px 0 16px'\n    }),\n    '& h3': _objectSpread(_objectSpread({}, theme.typography.h5), {}, {\n      margin: '40px 0 16px'\n    }),\n    '& h4': _objectSpread(_objectSpread({}, theme.typography.h6), {}, {\n      margin: '32px 0 16px'\n    }),\n    '& h5': _objectSpread(_objectSpread({}, theme.typography.subtitle2), {}, {\n      margin: '32px 0 16px'\n    }),\n    '& p, & ul, & ol': {\n      marginTop: 0,\n      marginBottom: 16\n    },\n    '& ul': {\n      paddingLeft: 30\n    },\n    '& h1, & h2, & h3, & h4': {\n      '& code': {\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n        // Remove scroll on small screens.\n        wordBreak: 'break-all'\n      },\n      '& .anchor-link-style': {\n        // To prevent the link to get the focus.\n        display: 'none'\n      },\n      '&:hover .anchor-link-style': {\n        display: 'inline-block',\n        padding: '0 8px',\n        color: theme.palette.text.secondary,\n        '&:hover': {\n          color: theme.palette.text.primary\n        },\n        '& svg': {\n          width: '0.7em',\n          height: '0.7em',\n          fill: 'currentColor'\n        }\n      }\n    },\n    '& table': {\n      // Trade display table for scroll overflow\n      display: 'block',\n      wordBreak: 'normal',\n      width: '100%',\n      overflowX: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      // iOS momentum scrolling.\n      borderCollapse: 'collapse',\n      marginBottom: '16px',\n      borderSpacing: 0,\n      overflow: 'hidden',\n      '& .prop-name': {\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace'\n      },\n      '& .required': {\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5'\n      },\n      '& .prop-type': {\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec'\n      },\n      '& .prop-default': {\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        borderBottom: `1px dotted ${theme.palette.divider}`\n      }\n    },\n    '& td': _objectSpread(_objectSpread({}, theme.typography.body2), {}, {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: 16,\n      color: theme.palette.text.primary\n    }),\n    '& td code': {\n      lineHeight: 1.6\n    },\n    '& th': {\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.primary,\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: 16\n    },\n    '& blockquote': {\n      borderLeft: '5px solid #ffe564',\n      backgroundColor: 'rgba(255,229,100,0.2)',\n      padding: '4px 24px',\n      margin: '24px 0',\n      '& p': {\n        marginTop: '16px'\n      }\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '& img, video': {\n      maxWidth: '100%'\n    },\n    '& img': {\n      // Avoid layout jump\n      display: 'inline-block'\n    },\n    '& hr': {\n      height: 1,\n      margin: theme.spacing(6, 0),\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n    '& kbd': {\n      // Style taken from GitHub\n      padding: '2px 5px',\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\n      lineHeight: '10px',\n      color: '#444d56',\n      verticalAlign: 'middle',\n      backgroundColor: '#fafbfc',\n      border: '1px solid #d1d5da',\n      borderRadius: 3,\n      boxShadow: 'inset 0 -1px 0 #d1d5da'\n    }\n  })\n});\n\nconst useStyles = makeStyles(styles, {\n  name: 'MarkdownElement',\n  flip: false\n});\nconst MarkdownElement = /*#__PURE__*/React.forwardRef(function MarkdownElement(props, ref) {\n  const {\n    className,\n    renderedMarkdown\n  } = props,\n        other = _objectWithoutProperties(props, [\"className\", \"renderedMarkdown\"]);\n\n  const classes = useStyles();\n  const more = {};\n\n  if (typeof renderedMarkdown === 'string') {\n    // workaround for https://github.com/facebook/react/issues/17170\n    // otherwise we could just set `dangerouslySetInnerHTML={undefined}`\n    more.dangerouslySetInnerHTML = {\n      __html: renderedMarkdown\n    };\n  }\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, 'markdown-body', className)\n  }, more, other, {\n    ref: ref\n  }));\n});\nexport default MarkdownElement;","map":null,"metadata":{},"sourceType":"module"}