{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { usePagination } from \"../../../../../packages/material-ui-lab/src/Pagination\";\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nconst useStyles = makeStyles({\n  ul: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    display: 'flex'\n  }\n});\nexport default function UsePagination() {\n  const classes = useStyles();\n  const {\n    items\n  } = usePagination({\n    count: 10\n  });\n  return __jsx(\"nav\", null, __jsx(\"ul\", {\n    className: classes.ul\n  }, items.map((_ref, index) => {\n    let {\n      page,\n      type,\n      selected\n    } = _ref,\n        item = _objectWithoutProperties(_ref, [\"page\", \"type\", \"selected\"]);\n\n    let children = null;\n\n    if (type === 'start-ellipsis' || type === 'end-ellipsis') {\n      children = 'â€¦';\n    } else if (type === 'page') {\n      children = __jsx(\"button\", _extends({\n        type: \"button\",\n        style: {\n          fontWeight: selected ? 'bold' : undefined\n        }\n      }, item), page);\n    } else {\n      children = __jsx(\"button\", _extends({\n        type: \"button\"\n      }, item), type);\n    }\n\n    return __jsx(\"li\", {\n      key: index\n    }, children);\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}