{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardActionArea/CardActionArea.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport ButtonBase from \"../ButtonBase\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration[\"short\"]\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return __jsx(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), children, __jsx(\"span\", {\n    className: classes.focusHighlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n});\nCardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n};\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CardActionArea/CardActionArea.js"],"names":["React","PropTypes","clsx","withStyles","ButtonBase","styles","theme","root","display","textAlign","width","opacity","palette","action","hoverOpacity","focusVisible","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","CardActionArea","forwardRef","props","ref","children","classes","className","focusVisibleClassName","other","propTypes","node","object","string","name"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAY;AAChC;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,OADL;AAEJC,MAAAA,SAAS,EAAE,SAFP;AAGJC,MAAAA,KAAK,EAAE,MAHH;AAIJ,iCAA2B;AACzBC,QAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC;AADL,OAJvB;AAOJ,wCAAkC;AAChCH,QAAAA,OAAO,EAAE;AADuB;AAP9B,KAF0B;;AAahC;AACAI,IAAAA,YAAY,EAAE,EAdkB;;AAehC;AACAC,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,aAAa,EAAE,MAFD;AAGdC,MAAAA,QAAQ,EAAE,UAHI;AAIdC,MAAAA,GAAG,EAAE,CAJS;AAKdC,MAAAA,KAAK,EAAE,CALO;AAMdC,MAAAA,MAAM,EAAE,CANM;AAOdC,MAAAA,IAAI,EAAE,CAPQ;AAQdC,MAAAA,YAAY,EAAE,SARA;AASdb,MAAAA,OAAO,EAAE,CATK;AAUdc,MAAAA,eAAe,EAAE,cAVH;AAWdC,MAAAA,UAAU,EAAEpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB,EAAoC;AAC9CC,QAAAA,QAAQ,EAAEvB,KAAK,CAACqB,WAAN,CAAkBE,QAAlB;AADoC,OAApC;AAXE;AAhBgB,GAAZ;AAAA,CAAf;AAiCP,IAAMC,cAAc,gBAAG9B,KAAK,CAAC+B,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AAAA,MAClEC,QADkE,GACAF,KADA,CAClEE,QADkE;AAAA,MACxDC,OADwD,GACAH,KADA,CACxDG,OADwD;AAAA,MAC/CC,SAD+C,GACAJ,KADA,CAC/CI,SAD+C;AAAA,MACpCC,qBADoC,GACAL,KADA,CACpCK,qBADoC;AAAA,MACVC,KADU,4BACAN,KADA;;AAG1E,SACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAE9B,IAAI,CAACiC,OAAO,CAAC5B,IAAT,EAAe6B,SAAf,CADjB;AAEE,IAAA,qBAAqB,EAAElC,IAAI,CAACmC,qBAAD,EAAwBF,OAAO,CAACpB,YAAhC,CAF7B;AAGE,IAAA,GAAG,EAAEkB;AAHP,KAIMK,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGJ,QANH,EAOE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACnB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAdsB,CAAvB;AAgBAc,cAAc,CAACS,SAAf,GAA2B;AACzB;AACA;AACA;AACA;;AACA;;;AAGAL,EAAAA,QAAQ,EAAEjC,SAAS,CAACuC,IARK;;AASzB;;;;AAIAL,EAAAA,OAAO,EAAElC,SAAS,CAACwC,MAbM;;AAczB;;;AAGAL,EAAAA,SAAS,EAAEnC,SAAS,CAACyC,MAjBI;;AAkBzB;;;AAGAL,EAAAA,qBAAqB,EAAEpC,SAAS,CAACyC;AArBR,CAA3B;AAwBA,eAAevC,UAAU,CAACE,MAAD,EAAS;AAAEsC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAAkDb,cAAlD,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    textAlign: 'inherit',\n    width: '100%',\n    '&:hover $focusHighlight': {\n      opacity: theme.palette.action.hoverOpacity,\n    },\n    '&$focusVisible $focusHighlight': {\n      opacity: 0.12,\n    },\n  },\n  /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n  focusVisible: {},\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  focusHighlight: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit',\n    opacity: 0,\n    backgroundColor: 'currentcolor',\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.short,\n    }),\n  },\n});\n\nconst CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  const { children, classes, className, focusVisibleClassName, ...other } = props;\n\n  return (\n    <ButtonBase\n      className={clsx(classes.root, className)}\n      focusVisibleClassName={clsx(focusVisibleClassName, classes.focusVisible)}\n      ref={ref}\n      {...other}\n    >\n      {children}\n      <span className={classes.focusHighlight} />\n    </ButtonBase>\n  );\n});\n\nCardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n};\n\nexport default withStyles(styles, { name: 'MuiCardActionArea' })(CardActionArea);\n"]},"metadata":{},"sourceType":"module"}