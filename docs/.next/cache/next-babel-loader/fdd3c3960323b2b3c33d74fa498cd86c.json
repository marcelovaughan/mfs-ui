{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Toolbar/Toolbar.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"regular\"`. */\n  regular: theme.mixins.toolbar,\n\n  /* Styles applied to the root element if `variant=\"dense\"`. */\n  dense: {\n    minHeight: 48\n  }\n});\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    variant = 'regular'\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }));\n});\nToolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n};\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Toolbar/Toolbar.js"],"names":["React","PropTypes","clsx","withStyles","styles","theme","root","position","display","alignItems","gutters","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","Toolbar","forwardRef","props","ref","classes","className","component","Component","disableGutters","variant","other","propTypes","children","node","object","isRequired","string","elementType","bool","oneOf","name"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,KAAY;AAChC;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,UAAU,EAAE;AAHR,GAF0B;;AAOhC;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CADN;AAEPC,IAAAA,YAAY,EAAER,KAAK,CAACO,OAAN,CAAc,CAAd,CAFP;AAGP,KAACP,KAAK,CAACS,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BJ,MAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CADe;AAE5BC,MAAAA,YAAY,EAAER,KAAK,CAACO,OAAN,CAAc,CAAd;AAFc;AAHvB,GARuB;;AAgBhC;AACAI,EAAAA,OAAO,EAAEX,KAAK,CAACY,MAAN,CAAaC,OAjBU;;AAkBhC;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAnByB,CAAZ,CAAf;AAwBP,MAAMC,OAAO,gBAAGrB,KAAK,CAACsB,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AAC5D,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAAS,EAAEC,SAAS,GAAG,KAHnB;AAIJC,IAAAA,cAAc,GAAG,KAJb;AAKJC,IAAAA,OAAO,GAAG;AALN,MAOFP,KAPJ;AAAA,QAMKQ,KANL,4BAOIR,KAPJ;;AASA,SACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAErB,IAAI,CACbuB,OAAO,CAACnB,IADK,EAEbmB,OAAO,CAACK,OAAD,CAFM,EAMbJ,SANa,EAIQ,CAACG,cAJT,IAIVJ,OAAO,CAACf,OAJE,CADjB;AASE,IAAA,GAAG,EAAEc;AATP,KAUMO,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAxBe,CAAhB;AA0BAV,OAAO,CAACW,SAAR,GAAoB;AAClB;;;AAGAC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,IAJF;;AAKlB;;;;AAIAT,EAAAA,OAAO,EAAExB,SAAS,CAACkC,MAAV,CAAiBC,UATR;;AAUlB;;;AAGAV,EAAAA,SAAS,EAAEzB,SAAS,CAACoC,MAbH;;AAclB;;;;AAIAV,EAAAA,SAAS,EAAE1B;AAAU;AAAD,GAAuCqC,WAlBzC;;AAmBlB;;;AAGAT,EAAAA,cAAc,EAAE5B,SAAS,CAACsC,IAtBR;;AAuBlB;;;AAGAT,EAAAA,OAAO,EAAE7B,SAAS,CAACuC,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,CAAhB;AA1BS,CAApB;AA6BA,eAAerC,UAAU,CAACC,MAAD,EAAS;AAAEqC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CAA2CpB,OAA3C,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  /* Styles applied to the root element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  /* Styles applied to the root element if `variant=\"regular\"`. */\n  regular: theme.mixins.toolbar,\n  /* Styles applied to the root element if `variant=\"dense\"`. */\n  dense: {\n    minHeight: 48,\n  },\n});\n\nconst Toolbar = React.forwardRef(function Toolbar(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n\n  return (\n    <Component\n      className={clsx(\n        classes.root,\n        classes[variant],\n        {\n          [classes.gutters]: !disableGutters,\n        },\n        className,\n      )}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nToolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense']),\n};\n\nexport default withStyles(styles, { name: 'MuiToolbar' })(Toolbar);\n"]},"metadata":{},"sourceType":"module"}