{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { create } from 'jss';\nimport { makeStyles, useTheme, jssPreset, StylesProvider } from \"../../../../packages/material-ui/src/styles\";\nimport rtl from 'jss-rtl';\nimport { useSelector } from 'react-redux';\nimport DemoErrorBoundary from \"./DemoErrorBoundary\";\n\nfunction FramedDemo(props) {\n  const {\n    children,\n    document\n  } = props;\n  const theme = useTheme();\n  React.useEffect(() => {\n    document.body.dir = theme.direction;\n  }, [document, theme.direction]);\n  const {\n    jss,\n    sheetsManager\n  } = React.useMemo(() => {\n    return {\n      jss: create({\n        plugins: [...jssPreset().plugins, rtl()],\n        insertionPoint: document.head\n      }),\n      sheetsManager: new Map()\n    };\n  }, [document]);\n  const getWindow = React.useCallback(() => document.defaultView, [document]);\n  return __jsx(StylesProvider, {\n    jss: jss,\n    sheetsManager: sheetsManager\n  }, /*#__PURE__*/React.cloneElement(children, {\n    window: getWindow\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    backgroundColor: theme.palette.background.default,\n    flexGrow: 1,\n    height: 400,\n    border: 'none',\n    boxShadow: theme.shadows[1]\n  }\n}), {\n  name: 'DemoFrame'\n});\n\nfunction DemoFrame(props) {\n  var _frameRef$current;\n\n  const {\n    children,\n    title\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"title\"]);\n\n  const classes = useStyles();\n  /**\n   * @type {import('react').Ref<HTMLIFrameElement>}\n   */\n\n  const frameRef = React.useRef(null); // If we portal content into the iframe before the load event then that content\n  // is dropped in firefox.\n\n  const [iframeLoaded, onLoad] = React.useReducer(() => true, false);\n  React.useEffect(() => {\n    const document = frameRef.current.contentDocument; // When we hydrate the iframe then the load event is already dispatched\n    // once the iframe markup is parsed (maybe later but the important part is\n    // that it happens before React can attach event listeners).\n    // We need to check the readyState of the document once the iframe is mounted\n    // and \"replay\" the missed load event.\n    // See https://github.com/facebook/react/pull/13862 for ongoing effort in React\n    // (though not with iframes in mind).\n\n    if (document != null && document.readyState === 'complete' && !iframeLoaded) {\n      onLoad();\n    }\n  }, [iframeLoaded]);\n  const document = (_frameRef$current = frameRef.current) === null || _frameRef$current === void 0 ? void 0 : _frameRef$current.contentDocument;\n  return __jsx(React.Fragment, null, __jsx(\"iframe\", _extends({\n    className: classes.frame,\n    onLoad: onLoad,\n    ref: frameRef,\n    title: title\n  }, other)), iframeLoaded !== false ? /*#__PURE__*/ReactDOM.createPortal(__jsx(FramedDemo, {\n    document: document\n  }, children), document.body) : null);\n}\n/**\n * Isolates the demo component as best as possible. Additional props are spread\n * to an `iframe` if `iframe={true}`.\n */\n\n\nfunction DemoSandboxed(props) {\n  const {\n    component: Component,\n    iframe,\n    name,\n    onResetDemoClick\n  } = props,\n        other = _objectWithoutProperties(props, [\"component\", \"iframe\", \"name\", \"onResetDemoClick\"]);\n\n  const Sandbox = iframe ? DemoFrame : React.Fragment;\n  const sandboxProps = iframe ? _objectSpread({\n    title: `${name} demo`\n  }, other) : {};\n  const t = useSelector(state => state.options.t);\n  return __jsx(DemoErrorBoundary, {\n    onResetDemoClick: onResetDemoClick,\n    t: t\n  }, __jsx(Sandbox, sandboxProps, __jsx(Component, null)));\n}\n\nexport default /*#__PURE__*/React.memo(DemoSandboxed);","map":null,"metadata":{},"sourceType":"module"}