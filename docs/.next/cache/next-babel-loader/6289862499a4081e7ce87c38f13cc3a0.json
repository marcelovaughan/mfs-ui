{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default function createMixins(breakpoints, spacing, mixins) {\n  return _objectSpread({\n    gutters: (styles = {}) => {\n      // To deprecate in v4.1\n      //       warning(\n      //         false,\n      //         [\n      //           'Material-UI: Theme.mixins.gutters() is deprecated.',\n      //           'You can use the source of the mixin directly:',\n      //           `\n      // paddingLeft: theme.spacing(2),\n      // paddingRight: theme.spacing(2),\n      // [theme.breakpoints.up('sm')]: {\n      //   paddingLeft: theme.spacing(3),\n      //   paddingRight: theme.spacing(3),\n      // },\n      // `,\n      //         ].join('\\n'),\n      //       );\n      return _objectSpread(_objectSpread({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles), {}, {\n        [breakpoints.up('sm')]: _objectSpread({\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3)\n        }, styles[breakpoints.up('sm')])\n      });\n    },\n    toolbar: {\n      minHeight: 56,\n      [`${breakpoints.up('xs')} and (orientation: landscape)`]: {\n        minHeight: 48\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/styles/createMixins.js"],"names":["createMixins","breakpoints","spacing","mixins","gutters","styles","paddingLeft","paddingRight","up","toolbar","minHeight"],"mappings":";;;;;;AAAA,eAAe,SAASA,YAAT,CAAsBC,WAAtB,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoD;AACjE;AACEC,IAAAA,OAAO,EAAE,CAACC,MAAM,GAAG,EAAV,KAAiB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACEC,QAAAA,WAAW,EAAEJ,OAAO,CAAC,CAAD,CADtB;AAEEK,QAAAA,YAAY,EAAEL,OAAO,CAAC,CAAD;AAFvB,SAGKG,MAHL;AAIE,SAACJ,WAAW,CAACO,EAAZ,CAAe,IAAf,CAAD;AACEF,UAAAA,WAAW,EAAEJ,OAAO,CAAC,CAAD,CADtB;AAEEK,UAAAA,YAAY,EAAEL,OAAO,CAAC,CAAD;AAFvB,WAGKG,MAAM,CAACJ,WAAW,CAACO,EAAZ,CAAe,IAAf,CAAD,CAHX;AAJF;AAUD,KA7BH;AA8BEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,EADJ;AAEP,OAAE,GAAET,WAAW,CAACO,EAAZ,CAAe,IAAf,CAAqB,+BAAzB,GAA0D;AACxDE,QAAAA,SAAS,EAAE;AAD6C,OAFnD;AAKP,OAACT,WAAW,CAACO,EAAZ,CAAe,IAAf,CAAD,GAAwB;AACtBE,QAAAA,SAAS,EAAE;AADW;AALjB;AA9BX,KAuCKP,MAvCL;AAyCD","sourcesContent":["export default function createMixins(breakpoints, spacing, mixins) {\n  return {\n    gutters: (styles = {}) => {\n      // To deprecate in v4.1\n      //       warning(\n      //         false,\n      //         [\n      //           'Material-UI: Theme.mixins.gutters() is deprecated.',\n      //           'You can use the source of the mixin directly:',\n      //           `\n      // paddingLeft: theme.spacing(2),\n      // paddingRight: theme.spacing(2),\n      // [theme.breakpoints.up('sm')]: {\n      //   paddingLeft: theme.spacing(3),\n      //   paddingRight: theme.spacing(3),\n      // },\n      // `,\n      //         ].join('\\n'),\n      //       );\n\n      return {\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2),\n        ...styles,\n        [breakpoints.up('sm')]: {\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3),\n          ...styles[breakpoints.up('sm')],\n        },\n      };\n    },\n    toolbar: {\n      minHeight: 56,\n      [`${breakpoints.up('xs')} and (orientation: landscape)`]: {\n        minHeight: 48,\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64,\n      },\n    },\n    ...mixins,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}