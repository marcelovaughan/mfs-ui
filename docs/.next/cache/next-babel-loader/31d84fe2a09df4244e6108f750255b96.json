{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport NoSsr from \"../../../../packages/material-ui/src/NoSsr\";\nimport MarkdownElement from \"../../modules/components/MarkdownElement\";\nimport Container from \"../../../../packages/material-ui/src/Container\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport { prepareMarkdown } from \"../../modules/utils/parseMarkdown\";\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    '.anchor-link-style': {\n      position: 'absolute',\n      top: -9999,\n      left: -9999\n    }\n  },\n  root: {\n    minHeight: 600,\n    textAlign: 'center'\n  },\n  markdownElement: {\n    padding: theme.spacing(4, 0)\n  }\n}), {\n  name: 'Sponsors'\n});\n\nvar _ref = __jsx(Divider, null);\n\nexport default function Sponsors({\n  docs\n}) {\n  const classes = useStyles();\n  const userLanguage = useSelector(state => state.options.userLanguage);\n  const {\n    rendered\n  } = docs[userLanguage];\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(NoSsr, {\n    defer: true\n  }, __jsx(Container, {\n    maxWidth: \"md\"\n  }, _ref, rendered.map((renderedMarkdown, index) => {\n    return __jsx(MarkdownElement, {\n      key: index,\n      className: classes.markdownElement,\n      renderedMarkdown: renderedMarkdown\n    });\n  }))));\n}\n\nconst requireRaw = require.context(\"./\", false, /\\.md$/);\n\nexport async function getInitialProps() {\n  const {\n    docs\n  } = prepareMarkdown({\n    pageFilename: '/',\n    requireRaw\n  });\n  return {\n    docs\n  };\n}","map":null,"metadata":{},"sourceType":"module"}