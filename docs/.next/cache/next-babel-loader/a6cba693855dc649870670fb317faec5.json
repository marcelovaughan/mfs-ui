{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Popover from \"../../../../../packages/material-ui/src/Popover\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport { makeStyles, createStyles } from \"../../../../../packages/material-ui/src/styles\";\nconst useStyles = makeStyles(theme => createStyles({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n}));\n\nvar _ref = __jsx(Typography, null, \"I use Popover.\");\n\nexport default function MouseOverPopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return __jsx(\"div\", null, __jsx(Typography, {\n    \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: handlePopoverOpen,\n    onMouseLeave: handlePopoverClose\n  }, \"Hover with a Popover.\"), __jsx(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    onClose: handlePopoverClose,\n    disableRestoreFocus: true\n  }, _ref));\n}","map":null,"metadata":{},"sourceType":"module"}