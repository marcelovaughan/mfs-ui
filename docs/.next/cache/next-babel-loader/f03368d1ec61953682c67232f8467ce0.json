{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { withStyles } from \"../../../../../../../packages/material-ui/src/styles\";\nimport MuiSnackbar from \"../../../../../../../packages/material-ui/src/Snackbar\";\nimport Slide from \"../../../../../../../packages/material-ui/src/Slide\";\nimport CloseIcon from \"../../../../../../../packages/material-ui-icons/src/Close\";\nimport InfoIcon from \"../../../../../../../packages/material-ui-icons/src/Info\";\nimport IconButton from \"../../../../../../../packages/material-ui/src/IconButton\";\n\nconst styles = theme => ({\n  content: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.text.primary,\n    flexWrap: 'inherit',\n    [theme.breakpoints.up('md')]: {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 4,\n      borderBottomLeftRadius: 4\n    }\n  },\n  contentMessage: {\n    fontSize: 16,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  contentAction: {\n    paddingLeft: theme.spacing(2)\n  },\n  info: {\n    flexShrink: 0,\n    marginRight: theme.spacing(2)\n  },\n  close: {\n    padding: theme.spacing(1)\n  }\n});\n\nfunction Transition(props) {\n  return __jsx(Slide, _extends({}, props, {\n    direction: \"down\"\n  }));\n}\n\nvar _ref = __jsx(CloseIcon, null);\n\nfunction Snackbar(props) {\n  const {\n    classes,\n    onClose,\n    message\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"onClose\", \"message\"]);\n\n  return __jsx(MuiSnackbar, _extends({\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    transition: Transition,\n    ContentProps: {\n      classes: {\n        root: classes.content,\n        message: classes.contentMessage,\n        action: classes.contentAction\n      }\n    },\n    message: __jsx(React.Fragment, null, __jsx(InfoIcon, {\n      className: classes.info\n    }), __jsx(\"span\", null, message)),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose\n    }, _ref)]\n  }, other));\n}\n\nexport default withStyles(styles)(Snackbar);","map":null,"metadata":{},"sourceType":"module"}