{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\n\n\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from \"../../../../packages/material-ui/src/styles\";\nimport NotificationsIcon from \"../../../../packages/material-ui-icons/src/Notifications\";\nimport Tooltip from \"../../../../packages/material-ui/src/Tooltip\";\nimport CircularProgress from \"../../../../packages/material-ui/src/CircularProgress\";\nimport IconButton from \"../../../../packages/material-ui/src/IconButton\";\nimport Badge from \"../../../../packages/material-ui/src/Badge\";\nimport Typography from \"../../../../packages/material-ui/src/Typography\";\nimport Popper from \"../../../../packages/material-ui/src/Popper\";\nimport Grow from \"../../../../packages/material-ui/src/Grow\";\nimport Paper from \"../../../../packages/material-ui/src/Paper\";\nimport ClickAwayListener from \"../../../../packages/material-ui/src/ClickAwayListener\";\nimport List from \"../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../packages/material-ui/src/ListItem\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport sleep from \"../../../../modules/waterfall/sleep\";\nimport { getCookie } from \"../utils/helpers\";\nimport { ACTION_TYPES } from \"../constants\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    transformOrigin: 'top right'\n  },\n  list: {\n    width: theme.spacing(40),\n    maxHeight: theme.spacing(40),\n    overflow: 'auto'\n  },\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(1, 0)\n  },\n  divider: {\n    margin: theme.spacing(1, 0)\n  }\n}));\nexport default function Notifications() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const t = useSelector(state => state.options.t);\n  const dispatch = useDispatch();\n  const userLanguage = useSelector(state => state.options.userLanguage);\n  const messages = useSelector(state => state.notifications.messages);\n  const lastSeen = useSelector(state => state.notifications.lastSeen);\n  const messageList = messages ? messages.filter(message => {\n    if (message.userLanguage && message.userLanguage !== userLanguage && message.userLanguage !== navigator.language.substring(0, 2)) {\n      return false;\n    }\n\n    return true;\n  }).reverse() : null;\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id\n        }\n      });\n      document.cookie = `lastSeenNotification=${messageList[0].id};path=/;max-age=31536000`;\n    }\n  };\n\n  React.useEffect(() => {\n    let active = true; // Prevent search engines from indexing the notification.\n\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1500); // Soften the pressure on the main thread.\n\n      let newMessages;\n\n      try {\n        const result = await fetch('https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json');\n        newMessages = await result.json();\n      } catch (err) {// Swallow the exceptions, e.g. rate limit\n      }\n\n      if (active) {\n        const seen = getCookie('lastSeenNotification');\n        const lastSeenNotification = seen === '' ? 0 : parseInt(seen, 10);\n        dispatch({\n          type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n          payload: {\n            messages: newMessages || [],\n            lastSeen: lastSeenNotification\n          }\n        });\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, __jsx(Tooltip, {\n    open: tooltipOpen,\n    onOpen: () => {\n      setTooltipOpen(!open);\n    },\n    onClose: () => {\n      setTooltipOpen(false);\n    },\n    title: t('toggleNotifications'),\n    enterDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    ref: anchorRef,\n    \"aria-controls\": open ? 'notifications-popup' : undefined,\n    \"aria-haspopup\": \"true\",\n    \"aria-label\": t('toggleNotifications'),\n    onClick: handleToggle,\n    \"data-ga-event-category\": \"AppBar\",\n    \"data-ga-event-action\": \"toggleNotifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Badge, {\n    color: \"secondary\",\n    badgeContent: messageList ? messageList.reduce((count, message) => message.id > lastSeen ? count + 1 : count, 0) : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })))), __jsx(Popper, {\n    id: \"notifications-popup\",\n    anchorEl: anchorRef.current,\n    open: open,\n    placement: \"bottom-end\",\n    transition: true,\n    disablePortal: true,\n    role: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, ({\n    TransitionProps\n  }) => __jsx(ClickAwayListener, {\n    onClickAway: () => {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(Grow, _extends({\n    in: open\n  }, TransitionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, __jsx(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, messageList ? messageList.map((message, index) => __jsx(React.Fragment, {\n    key: message.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 27\n    }\n  }, message.title), __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    id: \"notification-message\",\n    dangerouslySetInnerHTML: {\n      __html: message.text\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  })), message.date && __jsx(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, new Date(message.date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }))), index < messageList.length - 1 ? __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 27\n    }\n  }) : null)) : __jsx(\"div\", {\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, __jsx(CircularProgress, {\n    size: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/Notifications.js"],"names":["useStyles","makeStyles","theme","paper","transformOrigin","list","width","maxHeight","overflow","listItem","display","flexDirection","loading","justifyContent","margin","divider","classes","React","anchorRef","t","useSelector","state","dispatch","useDispatch","userLanguage","messages","lastSeen","messageList","message","navigator","handleToggle","setOpen","prevOpen","setTooltipOpen","type","ACTION_TYPES","payload","id","document","active","sleep","result","fetch","newMessages","seen","getCookie","lastSeenNotification","parseInt","open","count","TransitionProps","__html","text","year","month","day"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-danger, react-hooks/exhaustive-deps */\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Popper from '@material-ui/core/Popper';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport sleep from 'modules/waterfall/sleep';\nimport { getCookie } from 'docs/src/modules/utils/helpers';\nimport { ACTION_TYPES } from 'docs/src/modules/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    transformOrigin: 'top right',\n  },\n  list: {\n    width: theme.spacing(40),\n    maxHeight: theme.spacing(40),\n    overflow: 'auto',\n  },\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(1, 0),\n  },\n  divider: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nexport default function Notifications() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const t = useSelector((state) => state.options.t);\n  const dispatch = useDispatch();\n  const userLanguage = useSelector((state) => state.options.userLanguage);\n  const messages = useSelector((state) => state.notifications.messages);\n  const lastSeen = useSelector((state) => state.notifications.lastSeen);\n\n  const messageList = messages\n    ? messages\n        .filter((message) => {\n          if (\n            message.userLanguage &&\n            message.userLanguage !== userLanguage &&\n            message.userLanguage !== navigator.language.substring(0, 2)\n          ) {\n            return false;\n          }\n          return true;\n        })\n        .reverse()\n    : null;\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n    setTooltipOpen(false);\n\n    if (messageList && messageList.length > 0) {\n      dispatch({\n        type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n        payload: {\n          lastSeen: messageList[0].id,\n        },\n      });\n      document.cookie = `lastSeenNotification=${messageList[0].id};path=/;max-age=31536000`;\n    }\n  };\n\n  React.useEffect(() => {\n    let active = true;\n\n    // Prevent search engines from indexing the notification.\n    if (/glebot/.test(navigator.userAgent) || messages) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1500); // Soften the pressure on the main thread.\n      let newMessages;\n      try {\n        const result = await fetch(\n          'https://raw.githubusercontent.com/mui-org/material-ui/master/docs/notifications.json',\n        );\n        newMessages = await result.json();\n      } catch (err) {\n        // Swallow the exceptions, e.g. rate limit\n      }\n\n      if (active) {\n        const seen = getCookie('lastSeenNotification');\n        const lastSeenNotification = seen === '' ? 0 : parseInt(seen, 10);\n\n        dispatch({\n          type: ACTION_TYPES.NOTIFICATIONS_CHANGE,\n          payload: {\n            messages: newMessages || [],\n            lastSeen: lastSeenNotification,\n          },\n        });\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        open={tooltipOpen}\n        onOpen={() => {\n          setTooltipOpen(!open);\n        }}\n        onClose={() => {\n          setTooltipOpen(false);\n        }}\n        title={t('toggleNotifications')}\n        enterDelay={300}\n      >\n        <IconButton\n          color=\"inherit\"\n          ref={anchorRef}\n          aria-controls={open ? 'notifications-popup' : undefined}\n          aria-haspopup=\"true\"\n          aria-label={t('toggleNotifications')}\n          onClick={handleToggle}\n          data-ga-event-category=\"AppBar\"\n          data-ga-event-action=\"toggleNotifications\"\n        >\n          <Badge\n            color=\"secondary\"\n            badgeContent={\n              messageList\n                ? messageList.reduce(\n                    (count, message) => (message.id > lastSeen ? count + 1 : count),\n                    0,\n                  )\n                : 0\n            }\n          >\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n      <Popper\n        id=\"notifications-popup\"\n        anchorEl={anchorRef.current}\n        open={open}\n        placement=\"bottom-end\"\n        transition\n        disablePortal\n        role={undefined}\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener\n            onClickAway={() => {\n              setOpen(false);\n            }}\n          >\n            <Grow in={open} {...TransitionProps}>\n              <Paper className={classes.paper}>\n                <List className={classes.list}>\n                  {messageList ? (\n                    messageList.map((message, index) => (\n                      <React.Fragment key={message.id}>\n                        <ListItem alignItems=\"flex-start\" className={classes.listItem}>\n                          <Typography gutterBottom>{message.title}</Typography>\n                          <Typography gutterBottom variant=\"body2\">\n                            <span\n                              id=\"notification-message\"\n                              dangerouslySetInnerHTML={{ __html: message.text }}\n                            />\n                          </Typography>\n                          {message.date && (\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                              {new Date(message.date).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </Typography>\n                          )}\n                        </ListItem>\n                        {index < messageList.length - 1 ? (\n                          <Divider className={classes.divider} />\n                        ) : null}\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <div className={classes.loading}>\n                      <CircularProgress size={32} />\n                    </div>\n                  )}\n                </List>\n              </Paper>\n            </Grow>\n          </ClickAwayListener>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}