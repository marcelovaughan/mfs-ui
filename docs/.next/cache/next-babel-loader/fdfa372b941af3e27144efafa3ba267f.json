{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { withStyles, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Tooltip from \"../../../../../packages/material-ui/src/Tooltip\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\nconst useStylesBootstrap = makeStyles(theme => ({\n  arrow: {\n    color: theme.palette.common.black\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black\n  }\n}));\n\nfunction BootstrapTooltip(props) {\n  const classes = useStylesBootstrap();\n  return __jsx(Tooltip, _extends({\n    arrow: true,\n    classes: classes\n  }, props));\n}\n\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9'\n  }\n}))(Tooltip);\n\nvar _ref = __jsx(\"div\", null, __jsx(LightTooltip, {\n  title: \"Add\"\n}, __jsx(Button, null, \"Light\")), __jsx(BootstrapTooltip, {\n  title: \"Add\"\n}, __jsx(Button, null, \"Bootstrap\")), __jsx(HtmlTooltip, {\n  title: __jsx(React.Fragment, null, __jsx(Typography, {\n    color: \"inherit\"\n  }, \"Tooltip with HTML\"), __jsx(\"em\", null, \"And here's\"), \" \", __jsx(\"b\", null, 'some'), \" \", __jsx(\"u\", null, 'amazing content'), \".\", ' ', \"It's very engaging. Right?\")\n}, __jsx(Button, null, \"HTML\")));\n\nexport default function CustomizedTooltips() {\n  return _ref;\n}","map":null,"metadata":{},"sourceType":"module"}