{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Slide/Slide.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from \"../utils/debounce\";\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from \"../../../material-ui-utils/src\";\nimport useForkRef from \"../utils/useForkRef\";\nimport useTheme from \"../styles/useTheme\";\nimport { duration } from \"../styles/transitions\";\nimport { reflow, getTransitionProps } from \"../transitions/utils\"; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${window.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${window.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _objectSpread(_objectSpread({}, transitionProps), {}, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return __jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _objectSpread({\n      ref: handleRef,\n      style: _objectSpread(_objectSpread({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style), children.props.style)\n    }, childProps));\n  });\n});\nSlide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n};\nexport default Slide;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Slide/Slide.js"],"names":["React","PropTypes","ReactDOM","debounce","Transition","elementAcceptingRef","useForkRef","useTheme","duration","reflow","getTransitionProps","getTranslateValue","direction","node","rect","getBoundingClientRect","transform","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","setTranslateValue","style","webkitTransform","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Slide","forwardRef","props","ref","children","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","other","theme","childrenRef","useRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRefIntermediary","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","handleEntering","transitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","useEffect","handleResize","addEventListener","clear","removeEventListener","state","childProps","cloneElement","visibility","propTypes","oneOf","bool","func","object","oneOfType","number","shape","appear"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,QAAP;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,mBAAT;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT;AACA,SAASC,MAAT,EAAiBC,kBAAjB,+B,CAEA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,IAAtC,EAA4C;AAC1C,QAAMC,IAAI,GAAGD,IAAI,CAACE,qBAAL,EAAb;AAEA,MAAIC,SAAJ;;AAEA,MAAIH,IAAI,CAACI,aAAT,EAAwB;AACtBD,IAAAA,SAAS,GAAGH,IAAI,CAACI,aAAjB;AACD,GAFD,MAEO;AACL,UAAMC,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwBP,IAAxB,CAAtB;AACAG,IAAAA,SAAS,GACPE,aAAa,CAACG,gBAAd,CAA+B,mBAA/B,KACAH,aAAa,CAACG,gBAAd,CAA+B,WAA/B,CAFF;AAGD;;AAED,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AAEA,MAAIP,SAAS,IAAIA,SAAS,KAAK,MAA3B,IAAqC,OAAOA,SAAP,KAAqB,QAA9D,EAAwE;AACtE,UAAMQ,eAAe,GAAGR,SAAS,CAACS,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,EAAsCA,KAAtC,CAA4C,GAA5C,CAAxB;AACAH,IAAAA,OAAO,GAAGI,QAAQ,CAACF,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAAlB;AACAD,IAAAA,OAAO,GAAGG,QAAQ,CAACF,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAAlB;AACD;;AAED,MAAIZ,SAAS,KAAK,MAAlB,EAA0B;AACxB,WAAQ,cAAaO,MAAM,CAACQ,UAAW,kBAAiBL,OAAO,GAAGR,IAAI,CAACc,IAAK,KAA5E;AACD;;AAED,MAAIhB,SAAS,KAAK,OAAlB,EAA2B;AACzB,WAAQ,eAAcE,IAAI,CAACc,IAAL,GAAYd,IAAI,CAACe,KAAjB,GAAyBP,OAAQ,KAAvD;AACD;;AAED,MAAIV,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAQ,cAAaO,MAAM,CAACW,WAAY,kBAAiBP,OAAO,GAAGT,IAAI,CAACiB,GAAI,KAA5E;AACD,GAjCyC,CAmC1C;;;AACA,SAAQ,eAAcjB,IAAI,CAACiB,GAAL,GAAWjB,IAAI,CAACkB,MAAhB,GAAyBT,OAAQ,KAAvD;AACD;;AAED,OAAO,SAASU,iBAAT,CAA2BrB,SAA3B,EAAsCC,IAAtC,EAA4C;AACjD,QAAMG,SAAS,GAAGL,iBAAiB,CAACC,SAAD,EAAYC,IAAZ,CAAnC;;AAEA,MAAIG,SAAJ,EAAe;AACbH,IAAAA,IAAI,CAACqB,KAAL,CAAWC,eAAX,GAA6BnB,SAA7B;AACAH,IAAAA,IAAI,CAACqB,KAAL,CAAWlB,SAAX,GAAuBA,SAAvB;AACD;AACF;AAED,MAAMoB,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE7B,QAAQ,CAAC8B,cADK;AAErBC,EAAAA,IAAI,EAAE/B,QAAQ,CAACgC;AAFM,CAAvB;AAKA;;;;;AAIA,MAAMC,KAAK,gBAAGzC,KAAK,CAAC0C,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACxD,QAAM;AACJC,IAAAA,QADI;AAEJjC,IAAAA,SAAS,GAAG,MAFR;AAGJkC,IAAAA,EAAE,EAAEC,MAHA;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,SATI;AAUJnB,IAAAA,KAVI;AAWJoB,IAAAA,OAAO,GAAGlB,cAXN;AAYJ;AACAmB,IAAAA,mBAAmB,GAAGnD;AAblB,MAeFuC,KAfJ;AAAA,QAcKa,KAdL,4BAeIb,KAfJ;;AAiBA,QAAMc,KAAK,GAAGlD,QAAQ,EAAtB;AACA,QAAMmD,WAAW,GAAG1D,KAAK,CAAC2D,MAAN,CAAa,IAAb,CAApB;AACA;;;;AAGA,QAAMC,YAAY,GAAG5D,KAAK,CAAC6D,WAAN,CAAmBC,QAAD,IAAc;AACnD;AACAJ,IAAAA,WAAW,CAACK,OAAZ,GAAsB7D,QAAQ,CAAC8D,WAAT,CAAqBF,QAArB,CAAtB;AACD,GAHoB,EAGlB,EAHkB,CAArB;AAIA,QAAMG,qBAAqB,GAAG3D,UAAU,CAACuC,QAAQ,CAACD,GAAV,EAAegB,YAAf,CAAxC;AACA,QAAMM,SAAS,GAAG5D,UAAU,CAAC2D,qBAAD,EAAwBrB,GAAxB,CAA5B;;AAEA,QAAMuB,4BAA4B,GAAIC,QAAD,IAAeC,WAAD,IAAiB;AAClE,QAAID,QAAJ,EAAc;AACZ;AACA,UAAIC,WAAW,KAAKC,SAApB,EAA+B;AAC7BF,QAAAA,QAAQ,CAACV,WAAW,CAACK,OAAb,CAAR;AACD,OAFD,MAEO;AACLK,QAAAA,QAAQ,CAACV,WAAW,CAACK,OAAb,EAAsBM,WAAtB,CAAR;AACD;AACF;AACF,GATD;;AAWA,QAAME,WAAW,GAAGJ,4BAA4B,CAAC,CAACtD,IAAD,EAAOwD,WAAP,KAAuB;AACtEpC,IAAAA,iBAAiB,CAACrB,SAAD,EAAYC,IAAZ,CAAjB;AACAJ,IAAAA,MAAM,CAACI,IAAD,CAAN;;AAEA,QAAImC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACnC,IAAD,EAAOwD,WAAP,CAAP;AACD;AACF,GAP+C,CAAhD;AASA,QAAMG,cAAc,GAAGL,4BAA4B,CAAC,CAACtD,IAAD,EAAOwD,WAAP,KAAuB;AACzE,UAAMI,eAAe,GAAG/D,kBAAkB,CACxC;AAAE4C,MAAAA,OAAF;AAAWpB,MAAAA;AAAX,KADwC,EAExC;AACEwC,MAAAA,IAAI,EAAE;AADR,KAFwC,CAA1C;AAOA7D,IAAAA,IAAI,CAACqB,KAAL,CAAWyC,gBAAX,GAA8BlB,KAAK,CAACmB,WAAN,CAAkBC,MAAlB,CAAyB,mBAAzB,kCACzBJ,eADyB;AAE5BK,MAAAA,MAAM,EAAErB,KAAK,CAACmB,WAAN,CAAkBE,MAAlB,CAAyBC;AAFL,OAA9B;AAKAlE,IAAAA,IAAI,CAACqB,KAAL,CAAW8C,UAAX,GAAwBvB,KAAK,CAACmB,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,kCACnBJ,eADmB;AAEtBK,MAAAA,MAAM,EAAErB,KAAK,CAACmB,WAAN,CAAkBE,MAAlB,CAAyBC;AAFX,OAAxB;AAKAlE,IAAAA,IAAI,CAACqB,KAAL,CAAWC,eAAX,GAA6B,MAA7B;AACAtB,IAAAA,IAAI,CAACqB,KAAL,CAAWlB,SAAX,GAAuB,MAAvB;;AACA,QAAIkC,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACrC,IAAD,EAAOwD,WAAP,CAAV;AACD;AACF,GAvBkD,CAAnD;AAyBA,QAAMY,aAAa,GAAGd,4BAA4B,CAAClB,SAAD,CAAlD;AACA,QAAMiC,aAAa,GAAGf,4BAA4B,CAACd,SAAD,CAAlD;AAEA,QAAM8B,UAAU,GAAGhB,4BAA4B,CAAEtD,IAAD,IAAU;AACxD,UAAM4D,eAAe,GAAG/D,kBAAkB,CACxC;AAAE4C,MAAAA,OAAF;AAAWpB,MAAAA;AAAX,KADwC,EAExC;AACEwC,MAAAA,IAAI,EAAE;AADR,KAFwC,CAA1C;AAOA7D,IAAAA,IAAI,CAACqB,KAAL,CAAWyC,gBAAX,GAA8BlB,KAAK,CAACmB,WAAN,CAAkBC,MAAlB,CAAyB,mBAAzB,kCACzBJ,eADyB;AAE5BK,MAAAA,MAAM,EAAErB,KAAK,CAACmB,WAAN,CAAkBE,MAAlB,CAAyBM;AAFL,OAA9B;AAKAvE,IAAAA,IAAI,CAACqB,KAAL,CAAW8C,UAAX,GAAwBvB,KAAK,CAACmB,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,kCACnBJ,eADmB;AAEtBK,MAAAA,MAAM,EAAErB,KAAK,CAACmB,WAAN,CAAkBE,MAAlB,CAAyBM;AAFX,OAAxB;AAKAnD,IAAAA,iBAAiB,CAACrB,SAAD,EAAYC,IAAZ,CAAjB;;AAEA,QAAIsC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACtC,IAAD,CAAN;AACD;AACF,GAvB8C,CAA/C;AAyBA,QAAMwE,YAAY,GAAGlB,4BAA4B,CAAEtD,IAAD,IAAU;AAC1D;AACAA,IAAAA,IAAI,CAACqB,KAAL,CAAWyC,gBAAX,GAA8B,EAA9B;AACA9D,IAAAA,IAAI,CAACqB,KAAL,CAAW8C,UAAX,GAAwB,EAAxB;;AAEA,QAAI5B,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACvC,IAAD,CAAR;AACD;AACF,GARgD,CAAjD;AAUA,QAAMyE,cAAc,GAAGtF,KAAK,CAAC6D,WAAN,CAAkB,MAAM;AAC7C,QAAIH,WAAW,CAACK,OAAhB,EAAyB;AACvB9B,MAAAA,iBAAiB,CAACrB,SAAD,EAAY8C,WAAW,CAACK,OAAxB,CAAjB;AACD;AACF,GAJsB,EAIpB,CAACnD,SAAD,CAJoB,CAAvB;AAMAZ,EAAAA,KAAK,CAACuF,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIxC,MAAM,IAAInC,SAAS,KAAK,MAAxB,IAAkCA,SAAS,KAAK,OAApD,EAA6D;AAC3D,aAAO0D,SAAP;AACD;;AAED,UAAMkB,YAAY,GAAGrF,QAAQ,CAAC,MAAM;AAClC,UAAIuD,WAAW,CAACK,OAAhB,EAAyB;AACvB9B,QAAAA,iBAAiB,CAACrB,SAAD,EAAY8C,WAAW,CAACK,OAAxB,CAAjB;AACD;AACF,KAJ4B,CAA7B;AAMA5C,IAAAA,MAAM,CAACsE,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAM;AACXA,MAAAA,YAAY,CAACE,KAAb;AACAvE,MAAAA,MAAM,CAACwE,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;AACD,KAHD;AAID,GAjBD,EAiBG,CAAC5E,SAAD,EAAYmC,MAAZ,CAjBH;AAmBA/C,EAAAA,KAAK,CAACuF,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACxC,MAAL,EAAa;AACX;AACA;AACAuC,MAAAA,cAAc;AACf;AACF,GAND,EAMG,CAACvC,MAAD,EAASuC,cAAT,CANH;AAQA,SACE,MAAC,mBAAD;AACE,IAAA,OAAO,EAAE5B,WADX;AAEE,IAAA,OAAO,EAAEa,WAFX;AAGE,IAAA,SAAS,EAAEU,aAHb;AAIE,IAAA,UAAU,EAAET,cAJd;AAKE,IAAA,MAAM,EAAEW,UALV;AAME,IAAA,QAAQ,EAAEE,YANZ;AAOE,IAAA,SAAS,EAAEH,aAPb;AAQE,IAAA,MAAM,MARR;AASE,IAAA,EAAE,EAAEnC,MATN;AAUE,IAAA,OAAO,EAAEO;AAVX,KAWME,KAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaG,CAACoC,KAAD,EAAQC,UAAR,KAAuB;AACtB,wBAAO7F,KAAK,CAAC8F,YAAN,CAAmBjD,QAAnB;AACLD,MAAAA,GAAG,EAAEsB,SADA;AAELhC,MAAAA,KAAK;AACH6D,QAAAA,UAAU,EAAEH,KAAK,KAAK,QAAV,IAAsB,CAAC7C,MAAvB,GAAgC,QAAhC,GAA2CuB;AADpD,SAEApC,KAFA,GAGAW,QAAQ,CAACF,KAAT,CAAeT,KAHf;AAFA,OAOF2D,UAPE,EAAP;AASD,GAvBH,CADF;AA2BD,CA7Ka,CAAd;AA+KApD,KAAK,CAACuD,SAAN,GAAkB;AAChB;AACA;AACA;AACA;;AACA;;;AAGAnD,EAAAA,QAAQ,EAAExC,mBARM;;AAShB;;;AAGAO,EAAAA,SAAS,EAAEX,SAAS,CAACgG,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,CAAhB,CAZK;;AAahB;;;AAGAnD,EAAAA,EAAE,EAAE7C,SAAS,CAACiG,IAhBE;;AAiBhB;;;AAGAlD,EAAAA,OAAO,EAAE/C,SAAS,CAACkG,IApBH;;AAqBhB;;;AAGAlD,EAAAA,SAAS,EAAEhD,SAAS,CAACkG,IAxBL;;AAyBhB;;;AAGAjD,EAAAA,UAAU,EAAEjD,SAAS,CAACkG,IA5BN;;AA6BhB;;;AAGAhD,EAAAA,MAAM,EAAElD,SAAS,CAACkG,IAhCF;;AAiChB;;;AAGA/C,EAAAA,QAAQ,EAAEnD,SAAS,CAACkG,IApCJ;;AAqChB;;;AAGA9C,EAAAA,SAAS,EAAEpD,SAAS,CAACkG,IAxCL;;AAyChB;;;AAGAjE,EAAAA,KAAK,EAAEjC,SAAS,CAACmG,MA5CD;;AA6ChB;;;;AAIA9C,EAAAA,OAAO,EAAErD,SAAS,CAACoG,SAAV,CAAoB,CAC3BpG,SAAS,CAACqG,MADiB,EAE3BrG,SAAS,CAACsG,KAAV,CAAgB;AACdC,IAAAA,MAAM,EAAEvG,SAAS,CAACqG,MADJ;AAEdjE,IAAAA,KAAK,EAAEpC,SAAS,CAACqG,MAFH;AAGd/D,IAAAA,IAAI,EAAEtC,SAAS,CAACqG;AAHF,GAAhB,CAF2B,CAApB;AAjDO,CAAlB;AA2DA,eAAe7D,KAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\n\n// Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = window.getComputedStyle(node);\n    transform =\n      computedStyle.getPropertyValue('-webkit-transform') ||\n      computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${window.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${window.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  }\n\n  // direction === 'down'\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen,\n};\n\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Slide = React.forwardRef(function Slide(props, ref) {\n  const {\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n  const handleOwnRef = React.useCallback((instance) => {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = (callback) => (isAppearing) => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps(\n      { timeout, style },\n      {\n        mode: 'enter',\n      },\n    );\n\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.easeOut,\n    });\n\n    node.style.transition = theme.transitions.create('transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.easeOut,\n    });\n\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps(\n      { timeout, style },\n      {\n        mode: 'exit',\n      },\n    );\n\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.sharp,\n    });\n\n    node.style.transition = theme.transitions.create('transform', {\n      ...transitionProps,\n      easing: theme.transitions.easing.sharp,\n    });\n\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n\n  const handleExited = normalizedTransitionCallback((node) => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n\n  return (\n    <TransitionComponent\n      nodeRef={childrenRef}\n      onEnter={handleEnter}\n      onEntered={handleEntered}\n      onEntering={handleEntering}\n      onExit={handleExit}\n      onExited={handleExited}\n      onExiting={handleExiting}\n      appear\n      in={inProp}\n      timeout={timeout}\n      {...other}\n    >\n      {(state, childProps) => {\n        return React.cloneElement(children, {\n          ref: handleRef,\n          style: {\n            visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n            ...style,\n            ...children.props.style,\n          },\n          ...childProps,\n        });\n      }}\n    </TransitionComponent>\n  );\n});\n\nSlide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      appear: PropTypes.number,\n      enter: PropTypes.number,\n      exit: PropTypes.number,\n    }),\n  ]),\n};\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}