{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport TreeView from \"../../../../../packages/material-ui-lab/src/TreeView\";\nimport ExpandMoreIcon from \"../../../../../packages/material-ui-icons/src/ExpandMore\";\nimport ChevronRightIcon from \"../../../../../packages/material-ui-icons/src/ChevronRight\";\nimport TreeItem from \"../../../../../packages/material-ui-lab/src/TreeItem\";\nvar data = {\n  id: 'root',\n  name: 'Parent',\n  children: [{\n    id: '1',\n    name: 'Child - 1'\n  }, {\n    id: '3',\n    name: 'Child - 3',\n    children: [{\n      id: '4',\n      name: 'Child - 4'\n    }]\n  }]\n};\nvar useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400\n  }\n});\n\nvar _ref = __jsx(ExpandMoreIcon, null);\n\nvar _ref2 = __jsx(ChevronRightIcon, null);\n\nexport default function RecursiveTreeView() {\n  var classes = useStyles();\n\n  var renderTree = function renderTree(nodes) {\n    return __jsx(TreeItem, {\n      key: nodes.id,\n      nodeId: nodes.id,\n      label: nodes.name\n    }, _Array$isArray(nodes.children) ? nodes.children.map(function (node) {\n      return renderTree(node);\n    }) : null);\n  };\n\n  return __jsx(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: _ref,\n    defaultExpanded: ['root'],\n    defaultExpandIcon: _ref2\n  }, renderTree(data));\n}","map":null,"metadata":{},"sourceType":"module"}