{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Dialog from \"../../../../../packages/material-ui/src/Dialog\";\nimport DialogActions from \"../../../../../packages/material-ui/src/DialogActions\";\nimport DialogContent from \"../../../../../packages/material-ui/src/DialogContent\";\nimport DialogContentText from \"../../../../../packages/material-ui/src/DialogContentText\";\nimport DialogTitle from \"../../../../../packages/material-ui/src/DialogTitle\";\n\nvar _ref = __jsx(DialogTitle, {\n  id: \"scroll-dialog-title\"\n}, \"Subscribe\");\n\nexport default function ScrollDialog() {\n  var _React$useState = React.useState(false),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  var _React$useState2 = React.useState('paper'),\n      scroll = _React$useState2[0],\n      setScroll = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen(scrollType) {\n    return function () {\n      setOpen(true);\n      setScroll(scrollType);\n    };\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var descriptionElementRef = React.useRef(null);\n  React.useEffect(function () {\n    if (open) {\n      var descriptionElement = descriptionElementRef.current;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return __jsx(\"div\", null, __jsx(Button, {\n    onClick: handleClickOpen('paper')\n  }, \"scroll=paper\"), __jsx(Button, {\n    onClick: handleClickOpen('body')\n  }, \"scroll=body\"), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\"\n  }, _ref, __jsx(DialogContent, {\n    dividers: scroll === 'paper'\n  }, __jsx(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1\n  }, _toConsumableArray(new Array(50)).map(function () {\n    return \"Cras mattis consectetur purus sit amet fermentum.\\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.\";\n  }).join('\\n'))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Subscribe\"))));\n}","map":null,"metadata":{},"sourceType":"module"}