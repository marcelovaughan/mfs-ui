{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport Snackbar from \"../../../../../packages/material-ui/src/Snackbar\";\nimport Fade from \"../../../../../packages/material-ui/src/Fade\";\nimport Slide from \"../../../../../packages/material-ui/src/Slide\";\nimport Grow from \"../../../../../packages/material-ui/src/Grow\";\n\nfunction SlideTransition(props) {\n  return __jsx(Slide, _extends({}, props, {\n    direction: \"up\"\n  }));\n}\n\nfunction GrowTransition(props) {\n  return __jsx(Grow, props);\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade\n  });\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition\n    });\n  };\n\n  const handleClose = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  };\n\n  return __jsx(\"div\", null, __jsx(Button, {\n    onClick: handleClick(GrowTransition)\n  }, \"Grow Transition\"), __jsx(Button, {\n    onClick: handleClick(Fade)\n  }, \"Fade Transition\"), __jsx(Button, {\n    onClick: handleClick(SlideTransition)\n  }, \"Slide Transition\"), __jsx(Snackbar, {\n    open: state.open,\n    onClose: handleClose,\n    TransitionComponent: state.Transition,\n    message: \"I love snacks\",\n    key: state.Transition.name\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}