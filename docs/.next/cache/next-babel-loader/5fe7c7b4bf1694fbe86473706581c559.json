{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { rgbToHex, withStyles, useTheme } from \"../../../../../packages/material-ui/src/styles\";\nimport * as colors from \"../../../../../packages/material-ui/src/colors\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Input from \"../../../../../packages/material-ui/src/Input\";\nimport Radio from \"../../../../../packages/material-ui/src/Radio\";\nimport Tooltip from \"../../../../../packages/material-ui/src/Tooltip\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Button from \"../../../../../packages/material-ui/src/Button\";\nimport CheckIcon from \"../../../../../packages/material-ui-icons/src/Check\";\nimport Slider from \"../../../../../packages/material-ui/src/Slider\";\nimport { capitalize } from \"../../../../../packages/material-ui/src/utils\";\nimport ColorDemo from \"./ColorDemo\";\nimport { DispatchContext } from \"../../../modules/components/ThemeContext\";\nvar defaults = {\n  primary: '#2196f3',\n  secondary: '#f50057'\n};\n\nvar hues = _Object$keys(colors).slice(1, 17);\n\nvar shades = [900, 800, 700, 600, 500, 400, 300, 200, 100, 50, 'A700', 'A400', 'A200', 'A100'];\n\nvar styles = function styles(theme) {\n  return {\n    radio: {\n      padding: 0\n    },\n    radioIcon: {\n      width: 48,\n      height: 48\n    },\n    radioIconSelected: {\n      width: 48,\n      height: 48,\n      border: '1px solid white',\n      color: theme.palette.common.white,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    swatch: {\n      width: 192\n    },\n    sliderContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    slider: {\n      width: 'calc(100% - 80px)',\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3)\n    },\n    colorBar: {\n      marginTop: theme.spacing(2)\n    },\n    colorSquare: {\n      width: 64,\n      height: 64,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    button: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n};\n\nfunction ColorTool(props) {\n  var classes = props.classes;\n  var dispatch = React.useContext(DispatchContext);\n  var theme = useTheme();\n\n  var _React$useState = React.useState({\n    primary: defaults.primary,\n    secondary: defaults.secondary,\n    primaryInput: defaults.primary,\n    secondaryInput: defaults.secondary,\n    primaryHue: 'blue',\n    secondaryHue: 'pink',\n    primaryShade: 4,\n    secondaryShade: 11\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var handleChangeColor = function handleChangeColor(name) {\n    return function (event) {\n      var isRgb = function isRgb(string) {\n        return /rgb\\([0-9]{1,3}\\s*,\\s*[0-9]{1,3}\\s*,\\s*[0-9]{1,3}\\)/i.test(string);\n      };\n\n      var isHex = function isHex(string) {\n        return /^#?([0-9a-f]{3})$|^#?([0-9a-f]){6}$/i.test(string);\n      };\n\n      var color = event.target.value;\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, \"\".concat(name, \"Input\"), color));\n      });\n      var isValidColor = false;\n\n      if (isRgb(color)) {\n        isValidColor = true;\n      } else if (isHex(color)) {\n        isValidColor = true;\n\n        if (color.indexOf('#') === -1) {\n          color = \"#\".concat(color);\n        }\n      }\n\n      if (isValidColor) {\n        setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, color));\n        });\n      }\n    };\n  };\n\n  var handleChangeHue = function handleChangeHue(name) {\n    return function (event) {\n      var _objectSpread4;\n\n      var hue = event.target.value;\n      var color = colors[hue][shades[state[\"\".concat(name, \"Shade\")]]];\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, \"\".concat(name, \"Hue\"), hue), _defineProperty(_objectSpread4, name, color), _defineProperty(_objectSpread4, \"\".concat(name, \"Input\"), color), _objectSpread4)));\n    };\n  };\n\n  var handleChangeShade = function handleChangeShade(name) {\n    return function (event, shade) {\n      var _objectSpread5;\n\n      var color = colors[state[\"\".concat(name, \"Hue\")]][shades[shade]];\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, \"\".concat(name, \"Shade\"), shade), _defineProperty(_objectSpread5, name, color), _defineProperty(_objectSpread5, \"\".concat(name, \"Input\"), color), _objectSpread5)));\n    };\n  };\n\n  var handleChangeDocsColors = function handleChangeDocsColors() {\n    var paletteColors = {\n      primary: {\n        main: state.primary\n      },\n      secondary: {\n        main: state.secondary\n      }\n    };\n    dispatch({\n      type: 'CHANGE',\n      payload: {\n        paletteColors: paletteColors\n      }\n    });\n    document.cookie = \"paletteColors=\".concat(_JSON$stringify(paletteColors), \";path=/;max-age=31536000\");\n  };\n\n  var handleResetDocsColors = function handleResetDocsColors() {\n    dispatch({\n      type: 'RESET_COLORS'\n    });\n    document.cookie = 'paletteColors=;path=/;max-age=0';\n  };\n\n  var colorBar = function colorBar(color) {\n    var background = theme.palette.augmentColor({\n      main: color\n    });\n    return __jsx(Grid, {\n      container: true,\n      className: classes.colorBar\n    }, ['dark', 'main', 'light'].map(function (key) {\n      return __jsx(\"div\", {\n        className: classes.colorSquare,\n        style: {\n          backgroundColor: background[key]\n        },\n        key: key\n      }, __jsx(Typography, {\n        variant: \"caption\",\n        style: {\n          color: theme.palette.getContrastText(background[key])\n        }\n      }, rgbToHex(background[key])));\n    }));\n  };\n\n  var colorPicker = function colorPicker(intent) {\n    var intentInput = state[\"\".concat(intent, \"Input\")];\n    var intentShade = state[\"\".concat(intent, \"Shade\")];\n    var color = state[\"\".concat(intent)];\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4\n    }, __jsx(Typography, {\n      component: \"label\",\n      gutterBottom: true,\n      htmlFor: intent,\n      variant: \"h6\"\n    }, capitalize(intent)), __jsx(Input, {\n      id: intent,\n      value: intentInput,\n      onChange: handleChangeColor(intent),\n      fullWidth: true\n    }), __jsx(\"div\", {\n      className: classes.sliderContainer\n    }, __jsx(Typography, {\n      id: \"\".concat(intent, \"ShadeSliderLabel\")\n    }, \"Shade:\"), __jsx(Slider, {\n      className: classes.slider,\n      value: intentShade,\n      min: 0,\n      max: 13,\n      step: 1,\n      onChange: handleChangeShade(intent),\n      \"aria-labelledby\": \"\".concat(intent, \"ShadeSliderLabel\")\n    }), __jsx(Typography, null, shades[intentShade])), __jsx(\"div\", {\n      className: classes.swatch\n    }, hues.map(function (hue) {\n      var shade = intent === 'primary' ? shades[state.primaryShade] : shades[state.secondaryShade];\n      var backgroundColor = colors[hue][shade];\n      return __jsx(Tooltip, {\n        placement: \"right\",\n        title: hue,\n        key: hue\n      }, __jsx(Radio, {\n        className: classes.radio,\n        color: \"default\",\n        checked: state[intent] === backgroundColor,\n        onChange: handleChangeHue(intent),\n        value: hue,\n        name: intent,\n        \"aria-labelledby\": \"tooltip-\".concat(intent, \"-\").concat(hue),\n        icon: __jsx(\"div\", {\n          className: classes.radioIcon,\n          style: {\n            backgroundColor: backgroundColor\n          }\n        }),\n        checkedIcon: __jsx(\"div\", {\n          className: classes.radioIconSelected,\n          style: {\n            backgroundColor: backgroundColor\n          }\n        }, __jsx(CheckIcon, {\n          style: {\n            fontSize: 30\n          }\n        }))\n      }));\n    })), colorBar(color));\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 5,\n    className: classes.root\n  }, colorPicker('primary'), colorPicker('secondary'), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4\n  }, __jsx(ColorDemo, {\n    data: state\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleChangeDocsColors\n  }, \"Set Docs Colors\"), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleResetDocsColors,\n    className: classes.button\n  }, \"Reset Docs Colors\")));\n}\n\nexport default withStyles(styles)(ColorTool);","map":null,"metadata":{},"sourceType":"module"}