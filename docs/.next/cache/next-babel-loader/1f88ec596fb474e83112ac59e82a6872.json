{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport merge from \"./merge\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = props => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return _objectSpread(_objectSpread({}, merge(output, styleFunction(_objectSpread({\n        theme: props.theme\n      }, props.css)))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = true ? _objectSpread(_objectSpread({}, styleFunction.propTypes), {}, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default css;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-system/src/css.js"],"names":["PropTypes","merge","omit","input","fields","output","Object","keys","forEach","prop","indexOf","css","styleFunction","newStyleFunction","props","theme","filterProps","propTypes","object"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AAC3B,QAAMC,MAAM,GAAG,EAAf;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA4BC,IAAD,IAAU;AACnC,QAAIL,MAAM,CAACM,OAAP,CAAeD,IAAf,MAAyB,CAAC,CAA9B,EAAiC;AAC/BJ,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeN,KAAK,CAACM,IAAD,CAApB;AACD;AACF,GAJD;AAMA,SAAOJ,MAAP;AACD;;AAED,SAASM,GAAT,CAAaC,aAAb,EAA4B;AAC1B,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMT,MAAM,GAAGO,aAAa,CAACE,KAAD,CAA5B;;AAEA,QAAIA,KAAK,CAACH,GAAV,EAAe;AACb,6CACKV,KAAK,CAACI,MAAD,EAASO,aAAa;AAAGG,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAhB,SAA0BD,KAAK,CAACH,GAAhC,EAAtB,CADV,GAEKT,IAAI,CAACY,KAAK,CAACH,GAAP,EAAY,CAACC,aAAa,CAACI,WAAf,CAAZ,CAFT;AAID;;AAED,WAAOX,MAAP;AACD,GAXD;;AAaAQ,EAAAA,gBAAgB,CAACI,SAAjB,GACE,uCAESL,aAAa,CAACK,SAFvB;AAGMN,IAAAA,GAAG,EAAEX,SAAS,CAACkB;AAHrB,OAKI,EANN;AAQAL,EAAAA,gBAAgB,CAACG,WAAjB,GAA+B,CAAC,KAAD,EAAQ,GAAGJ,aAAa,CAACI,WAAzB,CAA/B;AAEA,SAAOH,gBAAP;AACD;;AAED,eAAeF,GAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  const output = {};\n\n  Object.keys(input).forEach((prop) => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = (props) => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return {\n        ...merge(output, styleFunction({ theme: props.theme, ...props.css })),\n        ...omit(props.css, [styleFunction.filterProps]),\n      };\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes =\n    process.env.NODE_ENV !== 'production'\n      ? {\n          ...styleFunction.propTypes,\n          css: PropTypes.object,\n        }\n      : {};\n\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n\n  return newStyleFunction;\n}\n\nexport default css;\n"]},"metadata":{},"sourceType":"module"}