{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from \"../../../material-ui-utils/src\";\nimport { capitalize } from \"../../../material-ui/src/utils\";\nimport { withStyles } from \"../../../material-ui/src/styles\";\nimport Button from \"../../../material-ui/src/Button\";\nimport CircularProgress from \"../../../material-ui/src/CircularProgress\";\nexport const styles = () => ({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `pending={true}`. */\n  pending: {},\n\n  /* Styles applied to the pendingIndicator element. */\n  pendingIndicator: {\n    position: 'absolute',\n    visibility: 'visible',\n    display: 'flex'\n  },\n\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"center\"`. */\n  pendingIndicatorCenter: {\n    left: '50%',\n    transform: 'translate(-50%)'\n  },\n\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"start\"`. */\n  pendingIndicatorStart: {\n    left: 14\n  },\n\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"end\"`. */\n  pendingIndicatorEnd: {\n    right: 14\n  },\n\n  /* Styles applied to the endIcon element if `pending={true}` and `pendingPosition=\"end\"`. */\n  endIconPendingEnd: {\n    visibility: 'hidden'\n  },\n\n  /* Styles applied to the startIcon element if `pending={true}` and `pendingPosition=\"start\"`. */\n  startIconPendingStart: {\n    visibility: 'hidden'\n  },\n\n  /* Styles applied to the label element if `pending={true}` and `pendingPosition=\"center\"`. */\n  labelPendingCenter: {\n    visibility: 'hidden'\n  }\n});\n\nconst PendingIndicator = __jsx(CircularProgress, {\n  color: \"inherit\",\n  size: 16\n});\n\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    disabled = false,\n    pending = false,\n    pendingIndicator = PendingIndicator,\n    pendingPosition = 'center'\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"pending\", \"pendingIndicator\", \"pendingPosition\"]);\n\n  return __jsx(Button, _extends({\n    className: clsx(classes.root, className, pending && classes.pending),\n    disabled: disabled || pending,\n    ref: ref,\n    classes: {\n      startIcon: classes[`startIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`],\n      endIcon: classes[`endIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`],\n      label: classes[`label${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`]\n    }\n  }, other), pending && __jsx(\"div\", {\n    className: clsx(classes.pendingIndicator, classes[`pendingIndicator${capitalize(pendingPosition)}`])\n  }, pendingIndicator), children);\n});\nexport default withStyles(styles, {\n  name: 'MuiLoadingButton'\n})(LoadingButton);","map":null,"metadata":{},"sourceType":"module"}