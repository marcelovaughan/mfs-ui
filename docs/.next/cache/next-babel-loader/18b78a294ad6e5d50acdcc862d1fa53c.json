{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Button/Button.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport { fade } from \"../styles/colorManipulator\";\nimport ButtonBase from \"../ButtonBase\";\nimport capitalize from \"../utils/capitalize\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _objectSpread(_objectSpread({}, theme.typography.button), {}, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && __jsx(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }, startIconProp);\n\n  var endIcon = endIconProp && __jsx(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, endIconProp);\n\n  return __jsx(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    \"data-test\": \"button\",\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, startIcon, children, endIcon));\n});\nButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n};\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Button/Button.js"],"names":["React","PropTypes","clsx","withStyles","fade","ButtonBase","capitalize","styles","theme","root","typography","button","boxSizing","minWidth","padding","borderRadius","shape","color","palette","text","primary","transition","transitions","create","duration","textDecoration","backgroundColor","action","hoverOpacity","disabled","label","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","type","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","disableElevation","focusVisible","colorInherit","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","fullWidth","startIcon","marginRight","marginLeft","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge","Button","forwardRef","props","ref","children","classes","className","component","disableFocusRipple","endIconProp","focusVisibleClassName","size","startIconProp","variant","other","propTypes","node","object","string","oneOf","elementType","bool","disableRipple","href","oneOfType","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    ...theme.typography.button,\n    boxSizing: 'border-box',\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n      },\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n    },\n  },\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%', // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    padding: '6px 8px',\n  },\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n  textPrimary: {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n  textSecondary: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {\n    padding: '5px 15px',\n    border: `1px solid ${\n      theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'\n    }`,\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n  outlinedPrimary: {\n    color: theme.palette.primary.main,\n    border: `1px solid ${fade(theme.palette.primary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.primary.main}`,\n      backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n  outlinedSecondary: {\n    color: theme.palette.secondary.main,\n    border: `1px solid ${fade(theme.palette.secondary.main, 0.5)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.secondary.main}`,\n      backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n    '&$disabled': {\n      border: `1px solid ${theme.palette.action.disabled}`,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"`. */\n  contained: {\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    boxShadow: theme.shadows[2],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      boxShadow: theme.shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: theme.shadows[2],\n        backgroundColor: theme.palette.grey[300],\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground,\n      },\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[8],\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n  containedPrimary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n  },\n  /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n  containedSecondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main,\n      },\n    },\n  },\n  /* Styles applied to the root element if `disableElevation={true}`. */\n  disableElevation: {\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none',\n    },\n    '&$focusVisible': {\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n    },\n    '&$disabled': {\n      boxShadow: 'none',\n    },\n  },\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit',\n    borderColor: 'currentColor',\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n  textSizeSmall: {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n  textSizeLarge: {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n  outlinedSizeSmall: {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n  outlinedSizeLarge: {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n  containedSizeSmall: {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13),\n  },\n  /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n  containedSizeLarge: {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15),\n  },\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {},\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {},\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%',\n  },\n  /* Styles applied to the startIcon element if supplied. */\n  startIcon: {\n    display: 'inherit',\n    marginRight: 8,\n    marginLeft: -4,\n    '&$iconSizeSmall': {\n      marginLeft: -2,\n    },\n  },\n  /* Styles applied to the endIcon element if supplied. */\n  endIcon: {\n    display: 'inherit',\n    marginRight: -4,\n    marginLeft: 8,\n    '&$iconSizeSmall': {\n      marginRight: -2,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n  iconSizeSmall: {\n    '& > *:first-child': {\n      fontSize: 18,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n  iconSizeMedium: {\n    '& > *:first-child': {\n      fontSize: 20,\n    },\n  },\n  /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n  iconSizeLarge: {\n    '& > *:first-child': {\n      fontSize: 22,\n    },\n  },\n});\n\nconst Button = React.forwardRef(function Button(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type = 'button',\n    variant = 'text',\n    ...other\n  } = props;\n\n  const startIcon = startIconProp && (\n    <span className={clsx(classes.startIcon, classes[`iconSize${capitalize(size)}`])}>\n      {startIconProp}\n    </span>\n  );\n\n  const endIcon = endIconProp && (\n    <span className={clsx(classes.endIcon, classes[`iconSize${capitalize(size)}`])}>\n      {endIconProp}\n    </span>\n  );\n\n  return (\n    <ButtonBase\n      className={clsx(\n        classes.root,\n        classes[variant],\n        {\n          [classes[`${variant}${capitalize(color)}`]]: color !== 'default' && color !== 'inherit',\n          [classes[`${variant}Size${capitalize(size)}`]]: size !== 'medium',\n          [classes[`size${capitalize(size)}`]]: size !== 'medium',\n          [classes.disableElevation]: disableElevation,\n          [classes.disabled]: disabled,\n          [classes.fullWidth]: fullWidth,\n          [classes.colorInherit]: color === 'inherit',\n        },\n        className,\n      )}\n      component={component}\n      disabled={disabled}\n      focusRipple={!disableFocusRipple}\n      focusVisibleClassName={clsx(classes.focusVisible, focusVisibleClassName)}\n      ref={ref}\n      type={type}\n      {...other}\n    >\n      {/*\n       * The inner <span> is required to vertically align the children.\n       * Browsers don't support `display: flex` on a <button> element.\n       * https://github.com/philipwalton/flexbugs/blob/master/README.md#flexbug-9\n       * TODO v5: evaluate if still required for the supported browsers.\n       */}\n      <span data-test=\"button\" className={classes.label}>\n        {startIcon}\n        {children}\n        {endIcon}\n      </span>\n    </ButtonBase>\n  );\n});\n\nButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\n};\n\nexport default withStyles(styles, { name: 'MuiButton' })(Button);\n"]},"metadata":{},"sourceType":"module"}