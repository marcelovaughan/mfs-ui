{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Collapse from \"../Collapse\";\nimport withStyles from \"../styles/withStyles\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    marginTop: 8,\n    marginLeft: 12,\n    // half icon\n    paddingLeft: 8 + 12,\n    // margin + half icon\n    paddingRight: 8,\n    borderLeft: `1px solid ${theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]}`\n  },\n\n  /* Styles applied to the root element if `last={true}` (controlled by `Step`). */\n  last: {\n    borderLeft: 'none'\n  },\n\n  /* Styles applied to the Transition component. */\n  transition: {}\n});\nconst StepContent = /*#__PURE__*/React.forwardRef(function StepContent(props, ref) {\n  const {\n    // eslint-disable-next-line react/prop-types\n    active,\n    // eslint-disable-next-line react/prop-types\n    alternativeLabel,\n    children,\n    classes,\n    className,\n    // eslint-disable-next-line react/prop-types\n    completed,\n    // eslint-disable-next-line react/prop-types\n    expanded,\n    // eslint-disable-next-line react/prop-types\n    last,\n    // eslint-disable-next-line react/prop-types\n    optional,\n    // eslint-disable-next-line react/prop-types\n    orientation,\n    TransitionComponent = Collapse,\n    transitionDuration: transitionDurationProp = 'auto',\n    TransitionProps\n  } = props,\n        other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"expanded\", \"last\", \"optional\", \"orientation\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  if (false) {\n    if (orientation !== 'vertical') {\n      console.error('Material-UI: <StepContent /> is only designed for use with the vertical stepper.');\n    }\n  }\n\n  let transitionDuration = transitionDurationProp;\n\n  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {\n    transitionDuration = undefined;\n  }\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className, last && classes.last),\n    ref: ref\n  }, other), __jsx(TransitionComponent, _extends({\n    in: active || expanded,\n    className: classes.transition,\n    timeout: transitionDuration,\n    unmountOnExit: true\n  }, TransitionProps), children));\n});\nexport default withStyles(styles, {\n  name: 'MuiStepContent'\n})(StepContent);","map":null,"metadata":{},"sourceType":"module"}