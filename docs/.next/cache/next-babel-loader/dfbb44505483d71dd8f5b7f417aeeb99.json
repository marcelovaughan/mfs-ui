{"ast":null,"code":"function makeUnique(hash, unique, i = 1) {\n  const uniqueHash = i === 1 ? hash : `${hash}-${i}`;\n\n  if (!unique[uniqueHash]) {\n    unique[uniqueHash] = true;\n    return uniqueHash;\n  }\n\n  return makeUnique(hash, unique, i + 1);\n}\n/**\n * @param {string} text - HTML from e.g. parseMarkdown#render\n * @param {Record<string, boolean>} [unique] - Ensures that each output is unique in `unique`\n * @returns {string} that is safe to use in fragment links\n */\n\n\nexport default function textToHash(text, unique = {}) {\n  return makeUnique(encodeURI(text.toLowerCase().replace(/<\\/?[^>]+(>|$)/g, '') // remove HTML\n  .replace(/=&gt;|&lt;| \\/&gt;|<code>|<\\/code>|&#39;/g, '').replace(/[!@#$%^&*()=_+[\\]{}`~;:'\"|,.<>/?\\s]+/g, '-').replace(/([\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])\\uFE0F?/g, '') // remove emojis\n  .replace(/-+/g, '-').replace(/^-|-$/g, '')), unique);\n}","map":null,"metadata":{},"sourceType":"module"}