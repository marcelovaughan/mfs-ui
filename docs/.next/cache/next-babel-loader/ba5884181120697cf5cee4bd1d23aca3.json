{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Popper from \"../../../../../packages/material-ui/src/Popper\";\nimport Fade from \"../../../../../packages/material-ui/src/Fade\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    border: '1px solid',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function TransitionsPopper() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'transitions-popper' : undefined;\n  return __jsx(\"div\", null, __jsx(\"button\", {\n    \"aria-describedby\": id,\n    type: \"button\",\n    onClick: handleClick\n  }, \"Toggle Popper\"), __jsx(Popper, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    transition: true\n  }, ({\n    TransitionProps\n  }) => __jsx(Fade, _extends({}, TransitionProps, {\n    timeout: 350\n  }), __jsx(\"div\", {\n    className: classes.paper\n  }, \"The content of the Popper.\"))));\n}","map":null,"metadata":{},"sourceType":"module"}