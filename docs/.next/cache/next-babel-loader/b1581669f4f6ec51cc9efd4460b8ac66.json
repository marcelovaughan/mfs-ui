{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CircularProgress/CircularProgress.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from \"../../../material-ui-utils/src\";\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    \"static\": {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes[\"static\"]\n    }[variant]),\n    style: _objectSpread(_objectSpread({\n      width: size,\n      height: size\n    }, rootStyle), style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }), __jsx(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })));\n});\nCircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n};\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/CircularProgress/CircularProgress.js"],"names":["React","PropTypes","clsx","chainPropTypes","withStyles","capitalize","SIZE","getRelativeValue","value","min","max","Math","easeOut","t","easeIn","styles","theme","root","display","transition","transitions","create","indeterminate","animation","colorPrimary","color","palette","primary","main","colorSecondary","secondary","svg","circle","stroke","circleStatic","circleIndeterminate","strokeDasharray","strokeDashoffset","transformOrigin","transform","circleDisableShrink","CircularProgress","forwardRef","props","ref","classes","className","disableShrink","size","style","thickness","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","toFixed","round","width","height","propTypes","object","string","oneOf","bool","Error","oneOfType","number","name","flip"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\n\nconst SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1);\n  // https://gist.github.com/gre/1650294\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block',\n  },\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform'),\n  },\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite',\n  },\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main,\n  },\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main,\n  },\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block', // Keeps the progress centered\n  },\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor',\n    // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset'),\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px', // Add the unit to fix a Edge 16 and below bug.\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      // Fix IE 11 wobbly\n      transformOrigin: '50% 50%',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px',\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px',\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px',\n    },\n  },\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none',\n  },\n});\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${(((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(\n        3,\n      )}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes[`color${capitalize(color)}`]]: color !== 'inherit',\n          [classes.indeterminate]: variant === 'indeterminate',\n          [classes.static]: variant === 'static',\n        },\n        className,\n      )}\n      style={{ width: size, height: size, ...rootStyle, ...style }}\n      ref={ref}\n      role=\"progressbar\"\n      {...rootProps}\n      {...other}\n    >\n      <svg className={classes.svg} viewBox={`${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`}>\n        <circle\n          className={clsx(classes.circle, {\n            [classes.circleIndeterminate]: variant === 'indeterminate',\n            [classes.circleStatic]: variant === 'static',\n            [classes.circleDisableShrink]: disableShrink,\n          })}\n          style={circleStyle}\n          cx={SIZE}\n          cy={SIZE}\n          r={(SIZE - thickness) / 2}\n          fill=\"none\"\n          strokeWidth={thickness}\n        />\n      </svg>\n    </div>\n  );\n});\n\nCircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, (props) => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error(\n        'Material-UI: You have provided the `disableShrink` prop ' +\n          'with a variant other than `indeterminate`. This will have no effect.',\n      );\n    }\n\n    return null;\n  }),\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static']),\n};\n\nexport default withStyles(styles, { name: 'MuiCircularProgress', flip: false })(CircularProgress);\n"]},"metadata":{},"sourceType":"module"}