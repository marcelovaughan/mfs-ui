{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/styled/styled.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from \"../../../material-ui-utils/src\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from \"../makeStyles\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (true && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (true) {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_objectSpread({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _objectSpread({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _objectSpread({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_objectSpread({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return __jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }), children);\n    });\n    StyledComponent.propTypes = _objectSpread({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes);\n\n    if (true) {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui-styles/src/styled/styled.js"],"names":["React","clsx","PropTypes","chainPropTypes","getDisplayName","hoistNonReactStatics","makeStyles","omit","input","fields","output","Object","keys","forEach","prop","indexOf","styled","Component","componentCreator","style","options","name","stylesOptions","undefined","Error","join","classNamePrefix","displayName","stylesOrCreator","theme","root","props","useStyles","filterProps","propTypes","StyledComponent","forwardRef","ref","children","className","classNameProp","clone","component","ComponentProp","other","classes","spread","cloneElement","FinalComponent","oneOfType","node","func","string","bool","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  const output = {};\n\n  Object.keys(input).forEach((prop) => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n\n  return output;\n}\n\n// styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const { name, ...stylesOptions } = options;\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(\n        [\n          'You are calling styled(Component)(style) with an undefined component.',\n          'You may have forgotten to import it.',\n        ].join('\\n'),\n      );\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator =\n      typeof style === 'function'\n        ? (theme) => ({ root: (props) => style({ theme, ...props }) })\n        : { root: style };\n\n    const useStyles = makeStyles(stylesOrCreator, {\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix,\n      ...stylesOptions,\n    });\n\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n\n    /* eslint-disable react/forbid-foreign-prop-types */\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n    const StyledComponent = React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp,\n        ...other\n      } = props;\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n\n      let spread = other;\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return React.cloneElement(children, {\n          className: clsx(children.props.className, className),\n          ...spread,\n        });\n      }\n\n      if (typeof children === 'function') {\n        return children({ className, ...spread });\n      }\n\n      const FinalComponent = ComponentProp || Component;\n\n      return (\n        <FinalComponent ref={ref} className={className} {...spread}>\n          {children}\n        </FinalComponent>\n      );\n    });\n\n    StyledComponent.propTypes = {\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, (props) => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n        return null;\n      }),\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n      ...propTypes,\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}\n"]},"metadata":{},"sourceType":"module"}