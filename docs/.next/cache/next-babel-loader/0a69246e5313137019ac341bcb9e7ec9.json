{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport LoadingButton from \"../../../../../packages/material-ui-lab/src/LoadingButton\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\nimport SaveIcon from \"../../../../../packages/material-ui-icons/src/Save\";\nimport SendIcon from \"../../../../../packages/material-ui-icons/src/Send\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& button': {\n      margin: theme.spacing(1)\n    }\n  },\n  switch: {\n    display: 'block'\n  }\n}));\n\nvar _ref = __jsx(SendIcon, null);\n\nvar _ref2 = __jsx(SaveIcon, null);\n\nexport default function LoadingButtonsTransition() {\n  const classes = useStyles();\n  const [pending, setPending] = React.useState(false);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: pending,\n      onChange: () => setPending(!pending),\n      name: \"pending\",\n      color: \"primary\"\n    }),\n    className: classes.switch,\n    label: \"Pending\"\n  }), __jsx(LoadingButton, {\n    variant: \"outlined\",\n    pending: pending\n  }, \"Submit\"), __jsx(LoadingButton, {\n    variant: \"outlined\",\n    pending: pending,\n    pendingIndicator: \"Loading...\"\n  }, \"Fetch data\"), __jsx(LoadingButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    pending: pending,\n    pendingPosition: \"end\",\n    endIcon: _ref\n  }, \"Send\"), __jsx(LoadingButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    pending: pending,\n    pendingPosition: \"start\",\n    startIcon: _ref2\n  }, \"Save\"));\n}","map":null,"metadata":{},"sourceType":"module"}