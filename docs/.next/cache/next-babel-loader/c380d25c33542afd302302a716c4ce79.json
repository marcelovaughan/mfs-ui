{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport { purple } from \"../../../../../packages/material-ui/src/colors\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Switch from \"../../../../../packages/material-ui/src/Switch\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nvar PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500]\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nvar IOSSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none'\n        }\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff'\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: \"1px solid \".concat(theme.palette.grey[400]),\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    checked: {},\n    focusVisible: {}\n  };\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Switch, _extends({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props));\n});\nvar AntSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 28,\n      height: 16,\n      padding: 0,\n      display: 'flex'\n    },\n    switchBase: {\n      padding: 2,\n      color: theme.palette.grey[500],\n      '&$checked': {\n        transform: 'translateX(12px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main\n        }\n      }\n    },\n    thumb: {\n      width: 12,\n      height: 12,\n      boxShadow: 'none'\n    },\n    track: {\n      border: \"1px solid \".concat(theme.palette.grey[500]),\n      borderRadius: 16 / 2,\n      opacity: 1,\n      backgroundColor: theme.palette.common.white\n    },\n    checked: {}\n  };\n})(Switch);\n\nvar _ref2 = __jsx(Grid, {\n  item: true\n}, \"Off\");\n\nvar _ref3 = __jsx(Grid, {\n  item: true\n}, \"On\");\n\nexport default function CustomizedSwitches() {\n  var _React$useState = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  return __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(PurpleSwitch, {\n      checked: state.checkedA,\n      onChange: handleChange,\n      name: \"checkedA\"\n    }),\n    label: \"Custom color\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(IOSSwitch, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\"\n    }),\n    label: \"iOS style\"\n  }), __jsx(Typography, {\n    component: \"div\"\n  }, __jsx(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 1\n  }, _ref2, __jsx(Grid, {\n    item: true\n  }, __jsx(AntSwitch, {\n    checked: state.checkedC,\n    onChange: handleChange,\n    name: \"checkedC\"\n  })), _ref3)));\n}","map":null,"metadata":{},"sourceType":"module"}