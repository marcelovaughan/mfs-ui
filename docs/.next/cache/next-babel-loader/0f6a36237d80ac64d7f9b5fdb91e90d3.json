{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Grid/Grid.js\";\nvar __jsx = React.createElement;\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport requirePropFactory from \"../utils/requirePropFactory\";\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var parse = _parseFloat(val);\n\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _objectSpread(_objectSpread({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs')), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return __jsx(Component, _extends({\n    className: className,\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 10\n    }\n  }));\n});\nGrid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n};\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (true) {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _objectSpread(_objectSpread({}, StyledGrid.propTypes), {}, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Grid/Grid.js"],"names":["React","PropTypes","clsx","withStyles","requirePropFactory","SPACINGS","GRID_SIZES","generateGrid","globalStyles","theme","breakpoint","styles","forEach","size","key","flexBasis","flexGrow","maxWidth","width","Math","round","breakpoints","up","getOffset","val","div","parse","String","replace","generateGutter","spacing","themeSpacing","margin","padding","root","container","boxSizing","display","flexWrap","item","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","keys","reduce","accumulator","Grid","forwardRef","props","ref","classes","classNameProp","className","component","Component","direction","justify","lg","md","sm","wrap","xl","xs","other","propTypes","oneOf","children","node","object","isRequired","string","elementType","bool","StyledGrid","name","requireProp"],"mappings":"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","sourcesContent":["// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\n\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  const styles = {};\n\n  GRID_SIZES.forEach((size) => {\n    const key = `grid-${breakpoint}-${size}`;\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%',\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none',\n      };\n      return;\n    }\n\n    // Keep 7 significant numbers.\n    const width = `${Math.round((size / 12) * 10e7) / 10e5}%`;\n\n    // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width,\n    };\n  });\n\n  // No need for a media query for the first size.\n  if (breakpoint === 'xs') {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val, div = 1) {\n  const parse = parseFloat(val);\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGutter(theme, breakpoint) {\n  const styles = {};\n\n  SPACINGS.forEach((spacing) => {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[`spacing-${breakpoint}-${spacing}`] = {\n      margin: `-${getOffset(themeSpacing, 2)}`,\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2),\n      },\n    };\n  });\n\n  return styles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {},\n  /* Styles applied to the root element if `container={true}`. */\n  container: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  /* Styles applied to the root element if `item={true}`. */\n  item: {\n    boxSizing: 'border-box',\n    margin: '0', // For instance, it's useful when used with a `figure` element.\n  },\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\n  zeroMinWidth: {\n    minWidth: 0,\n  },\n  /* Styles applied to the root element if `direction=\"column\"`. */\n  'direction-xs-column': {\n    flexDirection: 'column',\n  },\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n  'direction-xs-column-reverse': {\n    flexDirection: 'column-reverse',\n  },\n  /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n  'direction-xs-row-reverse': {\n    flexDirection: 'row-reverse',\n  },\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n  'wrap-xs-nowrap': {\n    flexWrap: 'nowrap',\n  },\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\n  'wrap-xs-wrap-reverse': {\n    flexWrap: 'wrap-reverse',\n  },\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\n  'align-items-xs-center': {\n    alignItems: 'center',\n  },\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n  'align-items-xs-flex-start': {\n    alignItems: 'flex-start',\n  },\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n  'align-items-xs-flex-end': {\n    alignItems: 'flex-end',\n  },\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n  'align-items-xs-baseline': {\n    alignItems: 'baseline',\n  },\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\n  'align-content-xs-center': {\n    alignContent: 'center',\n  },\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n  'align-content-xs-flex-start': {\n    alignContent: 'flex-start',\n  },\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n  'align-content-xs-flex-end': {\n    alignContent: 'flex-end',\n  },\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n  'align-content-xs-space-between': {\n    alignContent: 'space-between',\n  },\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n  'align-content-xs-space-around': {\n    alignContent: 'space-around',\n  },\n  /* Styles applied to the root element if `justify=\"center\"`. */\n  'justify-xs-center': {\n    justifyContent: 'center',\n  },\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\n  'justify-xs-flex-end': {\n    justifyContent: 'flex-end',\n  },\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\n  'justify-xs-space-between': {\n    justifyContent: 'space-between',\n  },\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\n  'justify-xs-space-around': {\n    justifyContent: 'space-around',\n  },\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n  'justify-xs-space-evenly': {\n    justifyContent: 'space-evenly',\n  },\n  ...generateGutter(theme, 'xs'),\n  ...theme.breakpoints.keys.reduce((accumulator, key) => {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}),\n});\n\nconst Grid = React.forwardRef(function Grid(props, ref) {\n  const {\n    alignContent = 'stretch',\n    alignItems = 'stretch',\n    classes,\n    className: classNameProp,\n    component: Component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    justify = 'flex-start',\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false,\n    ...other\n  } = props;\n\n  const className = clsx(\n    classes.root,\n    {\n      [classes.container]: container,\n      [classes.item]: item,\n      [classes.zeroMinWidth]: zeroMinWidth,\n      [classes[`spacing-xs-${String(spacing)}`]]: container && spacing !== 0,\n      [classes[`direction-xs-${String(direction)}`]]: direction !== 'row',\n      [classes[`wrap-xs-${String(wrap)}`]]: wrap !== 'wrap',\n      [classes[`align-items-xs-${String(alignItems)}`]]: alignItems !== 'stretch',\n      [classes[`align-content-xs-${String(alignContent)}`]]: alignContent !== 'stretch',\n      [classes[`justify-xs-${String(justify)}`]]: justify !== 'flex-start',\n      [classes[`grid-xs-${String(xs)}`]]: xs !== false,\n      [classes[`grid-sm-${String(sm)}`]]: sm !== false,\n      [classes[`grid-md-${String(md)}`]]: md !== false,\n      [classes[`grid-lg-${String(lg)}`]]: lg !== false,\n      [classes[`grid-xl-${String(xl)}`]]: xl !== false,\n    },\n    classNameProp,\n  );\n\n  return <Component className={className} ref={ref} {...other} />;\n});\n\nGrid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf([\n    'stretch',\n    'center',\n    'flex-start',\n    'flex-end',\n    'space-between',\n    'space-around',\n  ]),\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf([\n    'flex-start',\n    'center',\n    'flex-end',\n    'space-between',\n    'space-around',\n    'space-evenly',\n  ]),\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool,\n};\n\nconst StyledGrid = withStyles(styles, { name: 'MuiGrid' })(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = {\n    ...StyledGrid.propTypes,\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item'),\n  };\n}\n\nexport default StyledGrid;\n"]},"metadata":{},"sourceType":"module"}