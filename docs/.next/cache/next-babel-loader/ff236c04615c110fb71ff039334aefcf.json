{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport List from \"../../../../../packages/material-ui/src/List\";\nimport ListItem from \"../../../../../packages/material-ui/src/ListItem\";\nimport ListItemAvatar from \"../../../../../packages/material-ui/src/ListItemAvatar\";\nimport ListItemIcon from \"../../../../../packages/material-ui/src/ListItemIcon\";\nimport ListItemSecondaryAction from \"../../../../../packages/material-ui/src/ListItemSecondaryAction\";\nimport ListItemText from \"../../../../../packages/material-ui/src/ListItemText\";\nimport Avatar from \"../../../../../packages/material-ui/src/Avatar\";\nimport IconButton from \"../../../../../packages/material-ui/src/IconButton\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Checkbox from \"../../../../../packages/material-ui/src/Checkbox\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport FolderIcon from \"../../../../../packages/material-ui-icons/src/Folder\";\nimport DeleteIcon from \"../../../../../packages/material-ui-icons/src/Delete\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  }\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map(value => /*#__PURE__*/React.cloneElement(element, {\n    key: value\n  }));\n}\n\nvar _ref = __jsx(ListItemIcon, null, __jsx(FolderIcon, null));\n\nvar _ref2 = __jsx(ListItemAvatar, null, __jsx(Avatar, null, __jsx(FolderIcon, null)));\n\nvar _ref3 = __jsx(ListItemAvatar, null, __jsx(Avatar, null, __jsx(FolderIcon, null)));\n\nvar _ref4 = __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n  edge: \"end\",\n  \"aria-label\": \"delete\"\n}, __jsx(DeleteIcon, null)));\n\nexport default function InteractiveList() {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormGroup, {\n    row: true\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: dense,\n      onChange: event => setDense(event.target.checked)\n    }),\n    label: \"Enable dense\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: secondary,\n      onChange: event => setSecondary(event.target.checked)\n    }),\n    label: \"Enable secondary text\"\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Text only\"), __jsx(\"div\", {\n    className: classes.demo\n  }, __jsx(List, {\n    dense: dense\n  }, generate(__jsx(ListItem, null, __jsx(ListItemText, {\n    primary: \"Single-line item\",\n    secondary: secondary ? 'Secondary text' : null\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Icon with text\"), __jsx(\"div\", {\n    className: classes.demo\n  }, __jsx(List, {\n    dense: dense\n  }, generate(__jsx(ListItem, null, _ref, __jsx(ListItemText, {\n    primary: \"Single-line item\",\n    secondary: secondary ? 'Secondary text' : null\n  }))))))), __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Avatar with text\"), __jsx(\"div\", {\n    className: classes.demo\n  }, __jsx(List, {\n    dense: dense\n  }, generate(__jsx(ListItem, null, _ref2, __jsx(ListItemText, {\n    primary: \"Single-line item\",\n    secondary: secondary ? 'Secondary text' : null\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Avatar with text and icon\"), __jsx(\"div\", {\n    className: classes.demo\n  }, __jsx(List, {\n    dense: dense\n  }, generate(__jsx(ListItem, null, _ref3, __jsx(ListItemText, {\n    primary: \"Single-line item\",\n    secondary: secondary ? 'Secondary text' : null\n  }), _ref4)))))));\n}","map":null,"metadata":{},"sourceType":"module"}