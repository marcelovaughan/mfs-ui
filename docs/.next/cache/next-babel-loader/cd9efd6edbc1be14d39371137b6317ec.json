{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport sortedUniqBy from 'lodash/sortedUniqBy';\nimport MarkdownDocs from \"../src/modules/components/MarkdownDocs\";\nimport fetch from 'cross-fetch';\nimport { prepareMarkdown } from \"../src/modules/utils/parseMarkdown\";\nvar pageFilename = 'versions';\n\nvar requireDemo = require.context(\"../src/pages/versions\", false, /\\.(js|tsx)$/);\n\nvar requireRaw = require.context('!raw-loader!../src/pages/versions', false, /\\.(js|md|tsx)$/);\n\nexport default function Page(_ref) {\n  var demos = _ref.demos,\n      docs = _ref.docs;\n  return __jsx(MarkdownDocs, {\n    demos: demos,\n    docs: docs,\n    requireDemo: requireDemo\n  });\n}\n\nfunction formatVersion(version) {\n  return version.replace('v', '').split('.').map(function (n) {\n    return +n + 1000;\n  }).join('.');\n}\n\nfunction getBranches() {\n  return _getBranches.apply(this, arguments);\n}\n\nfunction _getBranches() {\n  _getBranches = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var githubAuthorizationToken, result, branches;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            githubAuthorizationToken = process.env.GITHUB_AUTH || '';\n            _context2.next = 3;\n            return fetch('https://api.github.com/repos/mui-org/material-ui-docs/branches', {\n              headers: {\n                Authorization: \"Basic \".concat(Buffer.from(githubAuthorizationToken).toString('base64'))\n              }\n            });\n\n          case 3:\n            result = _context2.sent;\n            _context2.next = 6;\n            return result.json();\n\n          case 6:\n            branches = _context2.sent;\n            return _context2.abrupt(\"return\", branches);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getBranches.apply(this, arguments);\n}\n\nPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var FILTERED_BRANCHES, branches, versions, _prepareMarkdown, demos, docs;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          FILTERED_BRANCHES = ['latest', 'staging', 'l10n', 'next'];\n          _context.next = 3;\n          return getBranches();\n\n        case 3:\n          branches = _context.sent;\n          versions = branches.map(function (n) {\n            return n.name;\n          });\n          versions = versions.filter(function (value) {\n            return FILTERED_BRANCHES.indexOf(value) === -1;\n          });\n          versions = versions.map(function (version) {\n            return {\n              version: version,\n              // Replace dot with dashes for Netlify branch subdomains\n              url: \"https://\".concat(version.replace(/\\./g, '-'), \".material-ui.com\")\n            };\n          }); // Current version.\n\n          versions.push({\n            version: \"v\".concat(process.env.LIB_VERSION),\n            url: 'https://material-ui.com'\n          }); // Legacy documentation.\n\n          versions.push({\n            version: 'v0',\n            url: 'https://v0.material-ui.com'\n          });\n          versions = versions.sort(function (a, b) {\n            return formatVersion(b.version).localeCompare(formatVersion(a.version));\n          });\n          versions = sortedUniqBy(versions, 'version');\n          _prepareMarkdown = prepareMarkdown({\n            pageFilename: pageFilename,\n            requireRaw: requireRaw\n          }), demos = _prepareMarkdown.demos, docs = _prepareMarkdown.docs;\n          return _context.abrupt(\"return\", {\n            demos: demos,\n            docs: docs,\n            versions: versions\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","map":null,"metadata":{},"sourceType":"module"}