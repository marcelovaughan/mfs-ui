{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/EditPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Button from \"../../../../packages/material-ui/src/Button\";\nimport { SOURCE_CODE_ROOT_URL } from \"../constants\";\nexport default function EditPage(props) {\n  var markdownLocation = props.markdownLocation;\n  var t = useSelector(function (state) {\n    return state.options.t;\n  });\n  var userLanguage = useSelector(function (state) {\n    return state.options.userLanguage;\n  });\n  var LOCALES = {\n    zh: 'zh-CN',\n    pt: 'pt-BR',\n    es: 'es-ES'\n  };\n  var CROWDIN_ROOT_URL = 'https://translate.material-ui.com/project/material-ui-docs/';\n  var crowdInLocale = LOCALES[userLanguage] || userLanguage;\n  var crowdInPath = markdownLocation.substring(0, markdownLocation.lastIndexOf('/'));\n  return __jsx(Button, {\n    component: \"a\",\n    href: userLanguage === 'en' ? \"\".concat(SOURCE_CODE_ROOT_URL).concat(markdownLocation) : \"\".concat(CROWDIN_ROOT_URL).concat(crowdInLocale, \"#/staging\").concat(crowdInPath),\n    target: \"_blank\",\n    rel: \"noopener nofollow\",\n    size: \"small\",\n    \"data-ga-event-category\": userLanguage === 'en' ? undefined : 'l10n',\n    \"data-ga-event-action\": userLanguage === 'en' ? undefined : 'edit-button',\n    \"data-ga-event-label\": userLanguage === 'en' ? undefined : userLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, t('editPage'));\n}\nEditPage.propTypes = {\n  markdownLocation: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/EditPage.js"],"names":["React","PropTypes","useSelector","Button","SOURCE_CODE_ROOT_URL","EditPage","props","markdownLocation","t","state","options","userLanguage","LOCALES","zh","pt","es","CROWDIN_ROOT_URL","crowdInLocale","crowdInPath","substring","lastIndexOf","undefined","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP;AACA,SAASC,oBAAT;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MAC9BC,gBAD8B,GACTD,KADS,CAC9BC,gBAD8B;AAEtC,MAAMC,CAAC,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAN,CAAcF,CAAzB;AAAA,GAAD,CAArB;AACA,MAAMG,YAAY,GAAGT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAN,CAAcC,YAAzB;AAAA,GAAD,CAAhC;AACA,MAAMC,OAAO,GAAG;AAAEC,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,EAAE,EAAE,OAAnB;AAA4BC,IAAAA,EAAE,EAAE;AAAhC,GAAhB;AACA,MAAMC,gBAAgB,GAAG,6DAAzB;AACA,MAAMC,aAAa,GAAGL,OAAO,CAACD,YAAD,CAAP,IAAyBA,YAA/C;AACA,MAAMO,WAAW,GAAGX,gBAAgB,CAACY,SAAjB,CAA2B,CAA3B,EAA8BZ,gBAAgB,CAACa,WAAjB,CAA6B,GAA7B,CAA9B,CAApB;AAEA,SACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,GADZ;AAEE,IAAA,IAAI,EACFT,YAAY,KAAK,IAAjB,aACOP,oBADP,SAC8BG,gBAD9B,cAEOS,gBAFP,SAE0BC,aAF1B,sBAEmDC,WAFnD,CAHJ;AAOE,IAAA,MAAM,EAAC,QAPT;AAQE,IAAA,GAAG,EAAC,mBARN;AASE,IAAA,IAAI,EAAC,OATP;AAUE,8BAAwBP,YAAY,KAAK,IAAjB,GAAwBU,SAAxB,GAAoC,MAV9D;AAWE,4BAAsBV,YAAY,KAAK,IAAjB,GAAwBU,SAAxB,GAAoC,aAX5D;AAYE,2BAAqBV,YAAY,KAAK,IAAjB,GAAwBU,SAAxB,GAAoCV,YAZ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGH,CAAC,CAAC,UAAD,CAdJ,CADF;AAkBD;AAEDH,QAAQ,CAACiB,SAAT,GAAqB;AACnBf,EAAAA,gBAAgB,EAAEN,SAAS,CAACsB,MAAV,CAAiBC;AADhB,CAArB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { SOURCE_CODE_ROOT_URL } from 'docs/src/modules/constants';\n\nexport default function EditPage(props) {\n  const { markdownLocation } = props;\n  const t = useSelector((state) => state.options.t);\n  const userLanguage = useSelector((state) => state.options.userLanguage);\n  const LOCALES = { zh: 'zh-CN', pt: 'pt-BR', es: 'es-ES' };\n  const CROWDIN_ROOT_URL = 'https://translate.material-ui.com/project/material-ui-docs/';\n  const crowdInLocale = LOCALES[userLanguage] || userLanguage;\n  const crowdInPath = markdownLocation.substring(0, markdownLocation.lastIndexOf('/'));\n\n  return (\n    <Button\n      component=\"a\"\n      href={\n        userLanguage === 'en'\n          ? `${SOURCE_CODE_ROOT_URL}${markdownLocation}`\n          : `${CROWDIN_ROOT_URL}${crowdInLocale}#/staging${crowdInPath}`\n      }\n      target=\"_blank\"\n      rel=\"noopener nofollow\"\n      size=\"small\"\n      data-ga-event-category={userLanguage === 'en' ? undefined : 'l10n'}\n      data-ga-event-action={userLanguage === 'en' ? undefined : 'edit-button'}\n      data-ga-event-label={userLanguage === 'en' ? undefined : userLanguage}\n    >\n      {t('editPage')}\n    </Button>\n  );\n}\n\nEditPage.propTypes = {\n  markdownLocation: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}