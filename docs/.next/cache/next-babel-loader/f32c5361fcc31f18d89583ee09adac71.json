{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport TextField from \"../../../../../packages/material-ui/src/TextField\";\nimport Autocomplete from \"../../../../../packages/material-ui-lab/src/Autocomplete\";\nconst options = ['Option 1', 'Option 2'];\n\nvar _ref = __jsx(\"br\", null);\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n  return __jsx(\"div\", null, __jsx(\"div\", null, `value: ${value !== null ? `'${value}'` : 'null'}`), __jsx(\"div\", null, `inputValue: '${inputValue}'`), _ref, __jsx(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    inputValue: inputValue,\n    onInputChange: (event, newInputValue) => {\n      setInputValue(newInputValue);\n    },\n    id: \"controllable-states-demo\",\n    options: options,\n    style: {\n      width: 300\n    },\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"Controllable\",\n      variant: \"outlined\"\n    }))\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}