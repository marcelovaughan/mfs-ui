{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Paper from \"../../../../../packages/material-ui/src/Paper\";\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport Avatar from \"../../../../../packages/material-ui/src/Avatar\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nvar _ref = __jsx(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2\n}, __jsx(Grid, {\n  item: true\n}, __jsx(Avatar, null, \"W\")), __jsx(Grid, {\n  item: true,\n  xs: true,\n  zeroMinWidth: true\n}, __jsx(Typography, {\n  noWrap: true\n}, message)));\n\nvar _ref2 = __jsx(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2\n}, __jsx(Grid, {\n  item: true\n}, __jsx(Avatar, null, \"W\")), __jsx(Grid, {\n  item: true,\n  xs: true\n}, __jsx(Typography, {\n  noWrap: true\n}, message)));\n\nvar _ref3 = __jsx(Grid, {\n  container: true,\n  wrap: \"nowrap\",\n  spacing: 2\n}, __jsx(Grid, {\n  item: true\n}, __jsx(Avatar, null, \"W\")), __jsx(Grid, {\n  item: true,\n  xs: true\n}, __jsx(Typography, null, message)));\n\nexport default function AutoGridNoWrap() {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, _ref), __jsx(Paper, {\n    className: classes.paper\n  }, _ref2), __jsx(Paper, {\n    className: classes.paper\n  }, _ref3));\n}","map":null,"metadata":{},"sourceType":"module"}