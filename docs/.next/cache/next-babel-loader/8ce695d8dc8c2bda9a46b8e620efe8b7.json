{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Container/Container.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: _Object$keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n});\nContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n};\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/Container/Container.js"],"names":["React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","disableGutters","fixed","values","reduce","acc","breakpoint","value","maxWidth","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Container","forwardRef","props","ref","classes","className","component","Component","other","String","propTypes","children","node","isRequired","object","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'block', // Fix IE 11 layout when used with main.\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  /* Styles applied to the root element if `disableGutters={true}`. */\n  disableGutters: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  /* Styles applied to the root element if `fixed={true}`. */\n  fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: value,\n      };\n    }\n    return acc;\n  }, {}),\n  /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n  maxWidthXs: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n  maxWidthSm: {\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: theme.breakpoints.values.sm,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"md\"`. */\n  maxWidthMd: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.md,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n  maxWidthLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.lg,\n    },\n  },\n  /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n  maxWidthXl: {\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: theme.breakpoints.values.xl,\n    },\n  },\n});\n\nconst Container = React.forwardRef(function Container(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg',\n    ...other\n  } = props;\n\n  return (\n    <Component\n      className={clsx(\n        classes.root,\n        {\n          [classes.fixed]: fixed,\n          [classes.disableGutters]: disableGutters,\n          [classes[`maxWidth${capitalize(String(maxWidth))}`]]: maxWidth !== false,\n        },\n        className,\n      )}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n};\n\nexport default withStyles(styles, { name: 'MuiContainer' })(Container);\n"]},"metadata":{},"sourceType":"module"}