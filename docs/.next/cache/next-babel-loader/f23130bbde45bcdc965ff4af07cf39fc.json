{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/AdManager.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nconst useEnhancedEffect = false && true ? React.useLayoutEffect : React.useEffect;\nexport const AdContext = React.createContext(); // Persisted for the whole session.\n// The state is used to use different ad placements.\n\nconst randomSession1 = Math.random();\nconst randomSession2 = Math.random(); // Distribution profile:\n// 25% body-image\n// 25% body-inline\n// 25% tocs-bottom-image\n// 25% tocs-top-image\n\nexport const adPlacement = randomSession1 < 0.5 ? 'body' : `tocs-${randomSession1 < 0.75 ? 'top' : 'bottom'}`;\nexport const adShape = randomSession1 < 0.5 && randomSession2 < 0.5 ? 'inline' : 'image';\nexport default function AdManager(props) {\n  const [portal, setPortal] = React.useState({});\n  useEnhancedEffect(() => {\n    if (adPlacement !== 'body' || typeof IntersectionObserver === 'undefined' || !Array.prototype.findIndex) {\n      return undefined;\n    }\n\n    const description = document.querySelector('.description');\n    setPortal({\n      placement: 'body-top',\n      element: description\n    });\n    const nodes = [description, ...Array.from(document.querySelectorAll('[data-ad=\"slot\"]'))].map(element => ({\n      element,\n      offsetTop: element.offsetTop\n    }));\n    let lastPosition;\n    const selectedNodes = nodes.filter((node, index) => {\n      if (index === 0) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n\n      if (node.offsetTop - lastPosition > window.innerHeight * 4) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n\n      return false;\n    });\n    const footer = nodes[nodes.length - 1];\n\n    if (selectedNodes.length > 1 && selectedNodes.indexOf(footer) === -1) {\n      selectedNodes[selectedNodes.length - 1] = footer;\n    }\n\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        const element = entries[0].target;\n        const index = selectedNodes.findIndex(node => node.element === element);\n        let placement;\n\n        if (index === 0) {\n          placement = 'body-top';\n        } else if (index === selectedNodes.length - 1) {\n          placement = 'body-bottom';\n        } else {\n          placement = `body-${index}`;\n        }\n\n        setPortal({\n          placement,\n          element\n        });\n      }\n    });\n    selectedNodes.forEach((node, index) => {\n      if (index !== 0 && !node.element.style.height) {\n        node.element.style.height = '130px';\n      }\n\n      observer.observe(node.element);\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  return __jsx(AdContext.Provider, {\n    value: {\n      portal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, props.children);\n}\nAdManager.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/docs/src/modules/components/AdManager.js"],"names":["React","PropTypes","useEnhancedEffect","useLayoutEffect","useEffect","AdContext","createContext","randomSession1","Math","random","randomSession2","adPlacement","adShape","AdManager","props","portal","setPortal","useState","IntersectionObserver","Array","prototype","findIndex","undefined","description","document","querySelector","placement","element","nodes","from","querySelectorAll","map","offsetTop","lastPosition","selectedNodes","filter","node","index","window","innerHeight","footer","length","indexOf","observer","entries","isIntersecting","target","forEach","style","height","observe","disconnect","children","propTypes"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst useEnhancedEffect =\n  typeof window !== 'undefined' && process.env.NODE_ENV !== 'test'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nexport const AdContext = React.createContext();\n\n// Persisted for the whole session.\n// The state is used to use different ad placements.\nconst randomSession1 = Math.random();\nconst randomSession2 = Math.random();\n\n// Distribution profile:\n// 25% body-image\n// 25% body-inline\n// 25% tocs-bottom-image\n// 25% tocs-top-image\nexport const adPlacement =\n  randomSession1 < 0.5 ? 'body' : `tocs-${randomSession1 < 0.75 ? 'top' : 'bottom'}`;\n\nexport const adShape = randomSession1 < 0.5 && randomSession2 < 0.5 ? 'inline' : 'image';\n\nexport default function AdManager(props) {\n  const [portal, setPortal] = React.useState({});\n\n  useEnhancedEffect(() => {\n    if (\n      adPlacement !== 'body' ||\n      typeof IntersectionObserver === 'undefined' ||\n      !Array.prototype.findIndex\n    ) {\n      return undefined;\n    }\n\n    const description = document.querySelector('.description');\n    setPortal({ placement: 'body-top', element: description });\n\n    const nodes = [description, ...Array.from(document.querySelectorAll('[data-ad=\"slot\"]'))].map(\n      (element) => ({\n        element,\n        offsetTop: element.offsetTop,\n      }),\n    );\n\n    let lastPosition;\n\n    const selectedNodes = nodes.filter((node, index) => {\n      if (index === 0) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n\n      if (node.offsetTop - lastPosition > window.innerHeight * 4) {\n        lastPosition = node.offsetTop;\n        return true;\n      }\n      return false;\n    });\n\n    const footer = nodes[nodes.length - 1];\n\n    if (selectedNodes.length > 1 && selectedNodes.indexOf(footer) === -1) {\n      selectedNodes[selectedNodes.length - 1] = footer;\n    }\n\n    const observer = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        const element = entries[0].target;\n        const index = selectedNodes.findIndex((node) => node.element === element);\n\n        let placement;\n        if (index === 0) {\n          placement = 'body-top';\n        } else if (index === selectedNodes.length - 1) {\n          placement = 'body-bottom';\n        } else {\n          placement = `body-${index}`;\n        }\n\n        setPortal({ placement, element });\n      }\n    });\n\n    selectedNodes.forEach((node, index) => {\n      if (index !== 0 && !node.element.style.height) {\n        node.element.style.height = '130px';\n      }\n      observer.observe(node.element);\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <AdContext.Provider\n      value={{\n        portal,\n      }}\n    >\n      {props.children}\n    </AdContext.Provider>\n  );\n}\n\nAdManager.propTypes = {\n  children: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}