{"ast":null,"code":"var _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/withWidth/withWidth.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from \"../../../material-ui-utils/src\";\nimport { getThemeProps } from \"../../../material-ui-styles/src\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from \"../styles/useTheme\";\nimport { keys as breakpointKeys } from \"../styles/createBreakpoints\";\nimport useMediaQuery from \"../useMediaQuery\"; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport const isWidthDown = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst useEnhancedEffect = true ? React.useEffect : React.useLayoutEffect;\n\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n\n    const _getThemeProps = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props: _objectSpread({}, props)\n    }),\n          {\n      initialWidth,\n      width\n    } = _getThemeProps,\n          other = _objectWithoutProperties(_getThemeProps, [\"initialWidth\", \"width\"]);\n\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n\n    const more = _objectSpread(_objectSpread({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}), other); // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n\n\n    if (more.width === undefined) {\n      return null;\n    }\n\n    return __jsx(Component, _extends({}, more, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  };\n\n  if (true) {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithWidth, Component);\n  return WithWidth;\n};\n\nexport default withWidth;","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/withWidth/withWidth.js"],"names":["React","PropTypes","getDisplayName","getThemeProps","hoistNonReactStatics","useTheme","keys","breakpointKeys","useMediaQuery","isWidthUp","breakpoint","width","inclusive","indexOf","isWidthDown","useEnhancedEffect","useEffect","useLayoutEffect","withWidth","options","Component","withTheme","withThemeOption","noSSR","initialWidth","initialWidthOption","WithWidth","props","contextTheme","theme","name","other","mountedState","setMountedState","useState","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","undefined","propTypes","oneOf","object","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from '../styles/useTheme';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport useMediaQuery from '../useMediaQuery';\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is the same or less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\n\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\nconst withWidth = (options = {}) => (Component) => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption,\n  } = options;\n\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const { initialWidth, width, ...other } = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props: { ...props },\n    });\n\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n\n    const more = {\n      width:\n        width ||\n        (mountedState || noSSR ? widthComputed : undefined) ||\n        initialWidth ||\n        initialWidthOption,\n      ...(withThemeOption ? { theme } : {}),\n      ...other,\n    };\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n\n    return <Component {...more} />;\n  }\n\n  WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithWidth, Component);\n\n  return WithWidth;\n};\n\nexport default withWidth;\n"]},"metadata":{},"sourceType":"module"}