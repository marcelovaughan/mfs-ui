{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ButtonBase/TouchRipple.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport Ripple from \"./Ripple\";\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  var _this = this;\n\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [__jsx(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return __jsx(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }), __jsx(TransitionGroup, {\n    component: null,\n    exit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, ripples));\n});\nTouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n};\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));","map":{"version":3,"sources":["/home/marcelo.faria/Documentos/b2w/msf-ui/packages/material-ui/src/ButtonBase/TouchRipple.js"],"names":["React","PropTypes","TransitionGroup","clsx","withStyles","Ripple","DURATION","DELAY_RIPPLE","styles","theme","root","overflow","pointerEvents","position","zIndex","top","right","bottom","left","borderRadius","ripple","opacity","rippleVisible","transform","animation","transitions","easing","easeInOut","ripplePulsate","animationDuration","duration","shorter","child","display","width","height","backgroundColor","childLeaving","childPulsate","TouchRipple","forwardRef","props","ref","center","centerProp","classes","className","other","useState","ripples","setRipples","nextKey","useRef","rippleCallback","useEffect","current","ignoringMouseDown","startTimer","startTimerCommit","container","clearTimeout","startCommit","useCallback","params","pulsate","rippleX","rippleY","rippleSize","cb","oldRipples","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","setTimeout","stop","persist","length","slice","useImperativeHandle","propTypes","bool","object","isRequired","string","flip","name","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\n\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\n\nexport const styles = (theme) => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    zIndex: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit',\n  },\n  /* Styles applied to the internal `Ripple` components `ripple` class. */\n  ripple: {\n    opacity: 0,\n    position: 'absolute',\n  },\n  /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n  rippleVisible: {\n    opacity: 0.3,\n    transform: 'scale(1)',\n    animation: `$enter ${DURATION}ms ${theme.transitions.easing.easeInOut}`,\n  },\n  /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n  ripplePulsate: {\n    animationDuration: `${theme.transitions.duration.shorter}ms`,\n  },\n  /* Styles applied to the internal `Ripple` components `child` class. */\n  child: {\n    opacity: 1,\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n  childLeaving: {\n    opacity: 0,\n    animation: `$exit ${DURATION}ms ${theme.transitions.easing.easeInOut}`,\n  },\n  /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n  childPulsate: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    animation: `$pulsate 2500ms ${theme.transitions.easing.easeInOut} 200ms infinite`,\n  },\n  '@keyframes enter': {\n    '0%': {\n      transform: 'scale(0)',\n      opacity: 0.1,\n    },\n    '100%': {\n      transform: 'scale(1)',\n      opacity: 0.3,\n    },\n  },\n  '@keyframes exit': {\n    '0%': {\n      opacity: 1,\n    },\n    '100%': {\n      opacity: 0,\n    },\n  },\n  '@keyframes pulsate': {\n    '0%': {\n      transform: 'scale(1)',\n    },\n    '50%': {\n      transform: 'scale(0.92)',\n    },\n    '100%': {\n      transform: 'scale(1)',\n    },\n  },\n});\n\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\nconst TouchRipple = React.forwardRef(function TouchRipple(props, ref) {\n  const { center: centerProp = false, classes, className, ...other } = props;\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]);\n\n  // Used to filter out mouse emulated events on mobile.\n  const ignoringMouseDown = React.useRef(false);\n  // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n  const startTimer = React.useRef(null);\n\n  // This is the hook called once the previous timeout is ready.\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n\n  const startCommit = React.useCallback(\n    (params) => {\n      const { pulsate, rippleX, rippleY, rippleSize, cb } = params;\n\n      setRipples((oldRipples) => [\n        ...oldRipples,\n        <Ripple\n          key={nextKey.current}\n          classes={classes}\n          timeout={DURATION}\n          pulsate={pulsate}\n          rippleX={rippleX}\n          rippleY={rippleY}\n          rippleSize={rippleSize}\n        />,\n      ]);\n      nextKey.current += 1;\n      rippleCallback.current = cb;\n    },\n    [classes],\n  );\n\n  const start = React.useCallback(\n    (event = {}, options = {}, cb) => {\n      const {\n        pulsate = false,\n        center = centerProp || options.pulsate,\n        fakeElement = false, // For test purposes\n      } = options;\n\n      if (event.type === 'mousedown' && ignoringMouseDown.current) {\n        ignoringMouseDown.current = false;\n        return;\n      }\n\n      if (event.type === 'touchstart') {\n        ignoringMouseDown.current = true;\n      }\n\n      const element = fakeElement ? null : container.current;\n      const rect = element\n        ? element.getBoundingClientRect()\n        : {\n            width: 0,\n            height: 0,\n            left: 0,\n            top: 0,\n          };\n\n      // Get the size of the ripple\n      let rippleX;\n      let rippleY;\n      let rippleSize;\n\n      if (\n        center ||\n        (event.clientX === 0 && event.clientY === 0) ||\n        (!event.clientX && !event.touches)\n      ) {\n        rippleX = Math.round(rect.width / 2);\n        rippleY = Math.round(rect.height / 2);\n      } else {\n        const { clientX, clientY } = event.touches ? event.touches[0] : event;\n        rippleX = Math.round(clientX - rect.left);\n        rippleY = Math.round(clientY - rect.top);\n      }\n\n      if (center) {\n        rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n        // For some reason the animation is broken on Mobile Chrome if the size if even.\n        if (rippleSize % 2 === 0) {\n          rippleSize += 1;\n        }\n      } else {\n        const sizeX =\n          Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n        const sizeY =\n          Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n        rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n      }\n\n      // Touche devices\n      if (event.touches) {\n        // check that this isn't another touchstart due to multitouch\n        // otherwise we will only clear a single timer when unmounting while two\n        // are running\n        if (startTimerCommit.current === null) {\n          // Prepare the ripple effect.\n          startTimerCommit.current = () => {\n            startCommit({ pulsate, rippleX, rippleY, rippleSize, cb });\n          };\n          // Delay the execution of the ripple effect.\n          startTimer.current = setTimeout(() => {\n            if (startTimerCommit.current) {\n              startTimerCommit.current();\n              startTimerCommit.current = null;\n            }\n          }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n        }\n      } else {\n        startCommit({ pulsate, rippleX, rippleY, rippleSize, cb });\n      }\n    },\n    [centerProp, startCommit],\n  );\n\n  const pulsate = React.useCallback(() => {\n    start({}, { pulsate: true });\n  }, [start]);\n\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current);\n\n    // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n\n    setRipples((oldRipples) => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      pulsate,\n      start,\n      stop,\n    }),\n    [pulsate, start, stop],\n  );\n\n  return (\n    <span className={clsx(classes.root, className)} ref={container} {...other}>\n      <TransitionGroup component={null} exit>\n        {ripples}\n      </TransitionGroup>\n    </span>\n  );\n});\n\nTouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n};\n\nexport default withStyles(styles, { flip: false, name: 'MuiTouchRipple' })(React.memo(TouchRipple));\n"]},"metadata":{},"sourceType":"module"}