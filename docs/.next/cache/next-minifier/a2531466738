{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[342],{RL16:function(e,n,s){\"use strict\";s.r(n),s.d(n,\"default\",(function(){return c}));var t=s(\"mXGw\"),a=s.n(t),i=s(\"e+1t\"),r=s(\"kVtE\"),o=a.a.createElement,l=s(\"a+6q\"),u=s(\"vNYy\");function c(e){var n=e.demos,s=e.docs;return o(i.a,{demos:n,docs:s,requireDemo:l})}c.getInitialProps=function(){var e=Object(r.a)({pageFilename:\"system/screen-readers\",requireRaw:u});return{demos:e.demos,docs:e.docs}}},XfoL:function(e,n,s){\"use strict\";n.a={border:0,clip:\"rect(0 0 0 0)\",height:1,margin:-1,overflow:\"hidden\",padding:0,position:\"absolute\",whiteSpace:\"nowrap\",width:1}},Yzd2:function(e,n){e.exports=\"import React from 'react';\\nimport Link from '@material-ui/core/Link';\\nimport { visuallyHidden } from '@material-ui/system';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles({\\n  // TODO fix #20379.\\n  span: visuallyHidden,\\n});\\n\\nexport default function VisuallyHiddenUsage() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Link href=\\\"#foo\\\">\\n      Read more\\n      {/* always visually hidden because the parent is focusable element */}\\n      <span className={classes.span}>about how to visually hide elements</span>\\n    </Link>\\n  );\\n}\\n\"},\"a+6q\":function(e,n,s){var t={\"./VisuallyHiddenUsage.js\":\"f5/R\",\"./VisuallyHiddenUsage.tsx\":\"osL7\"};function a(e){var n=i(e);return s(n)}function i(e){if(!s.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=i,e.exports=a,a.id=\"a+6q\"},\"f5/R\":function(e,n,s){\"use strict\";s.r(n),s.d(n,\"default\",(function(){return c}));var t=s(\"mXGw\"),a=s.n(t),i=s(\"r6IM\"),r=s(\"XfoL\"),o=s(\"yZEQ\"),l=a.a.createElement,u=Object(o.a)({span:r.a});function c(){var e=u();return l(i.a,{href:\"#foo\"},\"Read more\",l(\"span\",{className:e.span},\"about how to visually hide elements\"))}},nNiR:function(e,n){e.exports=\"import React from 'react';\\nimport Link from '@material-ui/core/Link';\\nimport { visuallyHidden } from '@material-ui/system';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport { CSSProperties } from '@material-ui/styles';\\n\\nconst useStyles = makeStyles({\\n  // TODO fix #20379.\\n  span: visuallyHidden as CSSProperties,\\n});\\n\\nexport default function VisuallyHiddenUsage() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Link href=\\\"#foo\\\">\\n      Read more\\n      {/* always visually hidden because the parent is focusable element */}\\n      <span className={classes.span}>about how to visually hide elements</span>\\n    </Link>\\n  );\\n}\\n\"},osL7:function(e,n,s){\"use strict\";s.r(n),s.d(n,\"default\",(function(){return c}));var t=s(\"mXGw\"),a=s.n(t),i=s(\"r6IM\"),r=s(\"XfoL\"),o=s(\"yZEQ\"),l=a.a.createElement,u=Object(o.a)({span:r.a});function c(){var e=u();return l(i.a,{href:\"#foo\"},\"Read more\",l(\"span\",{className:e.span},\"about how to visually hide elements\"))}},s92I:function(e,n){e.exports='# Screen readers\\n\\n<p class=\"description\">Collection of utilities for improving accessibility with screen readers.</p>\\n\\n## Visually hidden elements\\n\\nThe visually hidden style utility provides a common mechanism for hidings elements visually, but making them available for the assistive technology.\\n\\n### Usage\\n\\nThe visually hidden style utility can help provide context to read more links.\\n\\n{{\"demo\": \"pages/system/screen-readers/VisuallyHiddenUsage.js\"}}\\n'},vNYy:function(e,n,s){var t={\"./VisuallyHiddenUsage.js\":\"Yzd2\",\"./VisuallyHiddenUsage.tsx\":\"nNiR\",\"./screen-readers.md\":\"s92I\"};function a(e){var n=i(e);return s(n)}function i(e){if(!s.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=i,e.exports=a,a.id=\"vNYy\"},w8v6:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/system/screen-readers\",function(){return s(\"RL16\")}])}},[[\"w8v6\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}