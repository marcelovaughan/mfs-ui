{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{\"+5Fn\":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/drawer\",function(){return a(\"kMlZ\")}])},MWFP:function(e,n){e.exports='---\\nfilename: /packages/material-ui/src/Drawer/Drawer.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# Drawer API\\n\\n<p class=\"description\">The API documentation of the Drawer React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport Drawer from \\'@material-ui/core/Drawer\\';\\n// or\\nimport { Drawer } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\nThe props of the [Modal](/api/modal/) component are available\\nwhen `variant=\"temporary\"` is set.\\n\\n## Component name\\n\\nThe `MuiDrawer` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">anchor</span> | <span class=\"prop-type\">\\'bottom\\'<br>&#124;&nbsp;\\'left\\'<br>&#124;&nbsp;\\'right\\'<br>&#124;&nbsp;\\'top\\'</span> | <span class=\"prop-default\">\\'left\\'</span> | Side from which the drawer will appear. |\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The contents of the drawer. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">elevation</span> | <span class=\"prop-type\">number</span> | <span class=\"prop-default\">16</span> | The elevation of the drawer. |\\n| <span class=\"prop-name\">ModalProps</span> | <span class=\"prop-type\">object</span> | <span class=\"prop-default\">{}</span> | Props applied to the [`Modal`](/api/modal/) element. |\\n| <span class=\"prop-name\">onClose</span> | <span class=\"prop-type\">func</span> |  | Callback fired when the component requests to be closed.<br><br>**Signature:**<br>`function(event: object) => void`<br>*event:* The event source of the callback. |\\n| <span class=\"prop-name\">open</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the drawer is open. |\\n| <span class=\"prop-name\">PaperProps</span> | <span class=\"prop-type\">object</span> | <span class=\"prop-default\">{}</span> | Props applied to the [`Paper`](/api/paper/) element. |\\n| <span class=\"prop-name\">SlideProps</span> | <span class=\"prop-type\">object</span> |  | Props applied to the [`Slide`](/api/slide/) element. |\\n| <span class=\"prop-name\">transitionDuration</span> | <span class=\"prop-type\">number<br>&#124;&nbsp;{ appear?: number, enter?: number, exit?: number }</span> | <span class=\"prop-default\">{ enter: duration.enteringScreen, exit: duration.leavingScreen }</span> | The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object. |\\n| <span class=\"prop-name\">variant</span> | <span class=\"prop-type\">\\'permanent\\'<br>&#124;&nbsp;\\'persistent\\'<br>&#124;&nbsp;\\'temporary\\'</span> | <span class=\"prop-default\">\\'temporary\\'</span> | The variant to use. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiDrawer-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">docked</span> | <span class=\"prop-name\">.MuiDrawer-docked</span> | Styles applied to the root element if `variant=\"permanent or persistent\"`.\\n| <span class=\"prop-name\">paper</span> | <span class=\"prop-name\">.MuiDrawer-paper</span> | Styles applied to the `Paper` component.\\n| <span class=\"prop-name\">paperAnchorLeft</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorLeft</span> | Styles applied to the `Paper` component if `anchor=\"left\"`.\\n| <span class=\"prop-name\">paperAnchorRight</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorRight</span> | Styles applied to the `Paper` component if `anchor=\"right\"`.\\n| <span class=\"prop-name\">paperAnchorTop</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorTop</span> | Styles applied to the `Paper` component if `anchor=\"top\"`.\\n| <span class=\"prop-name\">paperAnchorBottom</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorBottom</span> | Styles applied to the `Paper` component if `anchor=\"bottom\"`.\\n| <span class=\"prop-name\">paperAnchorDockedLeft</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorDockedLeft</span> | Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\".\\n| <span class=\"prop-name\">paperAnchorDockedTop</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorDockedTop</span> | Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\".\\n| <span class=\"prop-name\">paperAnchorDockedRight</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorDockedRight</span> | Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\".\\n| <span class=\"prop-name\">paperAnchorDockedBottom</span> | <span class=\"prop-name\">.MuiDrawer-paperAnchorDockedBottom</span> | Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\".\\n| <span class=\"prop-name\">modal</span> | <span class=\"prop-name\">.MuiDrawer-modal</span> | Styles applied to the `Modal` component.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Drawer/Drawer.js) for more detail.\\n\\n## Demos\\n\\n- [Drawers](/components/drawers/)\\n\\n'},kMlZ:function(e,n,a){\"use strict\";a.r(n),a.d(n,\"default\",(function(){return c}));var p=a(\"mXGw\"),o=a.n(p),s=a(\"e+1t\"),r=a(\"kVtE\"),t=o.a.createElement,i=a(\"mIyN\");function c(e){var n=e.docs;return t(s.a,{docs:n})}c.getInitialProps=function(){var e=Object(r.a)({pageFilename:\"api/drawer\",requireRaw:i});return{demos:e.demos,docs:e.docs}}},mIyN:function(e,n,a){var p={\"./drawer.md\":\"MWFP\"};function o(e){var n=s(e);return a(n)}function s(e){if(!a.o(p,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return p[e]}o.keys=function(){return Object.keys(p)},o.resolve=s,e.exports=o,o.id=\"mIyN\"}},[[\"+5Fn\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}