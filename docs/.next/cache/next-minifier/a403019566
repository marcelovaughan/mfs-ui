{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{\"9W1A\":function(e,n,a){var s={\"./click-away-listener.md\":\"ylkW\"};function t(e){var n=o(e);return a(n)}function o(e){if(!a.o(s,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return s[e]}t.keys=function(){return Object.keys(s)},t.resolve=o,e.exports=t,t.id=\"9W1A\"},Iil9:function(e,n,a){\"use strict\";a.r(n),a.d(n,\"default\",(function(){return c}));var s=a(\"mXGw\"),t=a.n(s),o=a(\"e+1t\"),i=a(\"kVtE\"),r=t.a.createElement,p=a(\"9W1A\");function c(e){var n=e.docs;return r(o.a,{docs:n})}c.getInitialProps=function(){var e=Object(i.a)({pageFilename:\"api/click-away-listener\",requireRaw:p});return{demos:e.demos,docs:e.docs}}},n815:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/click-away-listener\",function(){return a(\"Iil9\")}])},ylkW:function(e,n){e.exports='---\\nfilename: /packages/material-ui/src/ClickAwayListener/ClickAwayListener.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# ClickAwayListener API\\n\\n<p class=\"description\">The API documentation of the ClickAwayListener React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport ClickAwayListener from \\'@material-ui/core/ClickAwayListener\\';\\n// or\\nimport { ClickAwayListener } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\nListen for click events that occur somewhere in the document, outside of the element itself.\\nFor instance, if you need to hide a menu when people click anywhere else on your page.\\n\\n\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name required\">children<abbr title=\"required\">*</abbr></span> | <span class=\"prop-type\">element</span> |  | The wrapped element.<br>\\u26a0\\ufe0f [Needs to be able to hold a ref](/guides/composition/#caveat-with-refs). |\\n| <span class=\"prop-name\">disableReactTree</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the React tree is ignored and only the DOM tree is considered. This prop changes how portaled elements are handled. |\\n| <span class=\"prop-name\">mouseEvent</span> | <span class=\"prop-type\">\\'onClick\\'<br>&#124;&nbsp;\\'onMouseDown\\'<br>&#124;&nbsp;\\'onMouseUp\\'<br>&#124;&nbsp;false</span> | <span class=\"prop-default\">\\'onClick\\'</span> | The mouse event to listen to. You can disable the listener by providing `false`. |\\n| <span class=\"prop-name required\">onClickAway<abbr title=\"required\">*</abbr></span> | <span class=\"prop-type\">func</span> |  | Callback fired when a \"click away\" event is detected. |\\n| <span class=\"prop-name\">touchEvent</span> | <span class=\"prop-type\">\\'onTouchEnd\\'<br>&#124;&nbsp;\\'onTouchStart\\'<br>&#124;&nbsp;false</span> | <span class=\"prop-default\">\\'onTouchEnd\\'</span> | The touch event to listen to. You can disable the listener by providing `false`. |\\n\\nThe component cannot hold a ref.\\n\\n\\n## Demos\\n\\n- [Click Away Listener](/components/click-away-listener/)\\n- [Menus](/components/menus/)\\n\\n'}},[[\"n815\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}