{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{\"8WQG\":function(t,e){t.exports='---\\nfilename: /packages/material-ui/src/GridListTileBar/GridListTileBar.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# GridListTileBar API\\n\\n<p class=\"description\">The API documentation of the GridListTileBar React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport GridListTileBar from \\'@material-ui/core/GridListTileBar\\';\\n// or\\nimport { GridListTileBar } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiGridListTileBar` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">actionIcon</span> | <span class=\"prop-type\">node</span> |  | An IconButton element to be used as secondary action target (primary action target is the tile itself). |\\n| <span class=\"prop-name\">actionPosition</span> | <span class=\"prop-type\">\\'left\\'<br>&#124;&nbsp;\\'right\\'</span> | <span class=\"prop-default\">\\'right\\'</span> | Position of secondary action IconButton. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">subtitle</span> | <span class=\"prop-type\">node</span> |  | String or element serving as subtitle (support text). |\\n| <span class=\"prop-name\">title</span> | <span class=\"prop-type\">node</span> |  | Title to be displayed on tile. |\\n| <span class=\"prop-name\">titlePosition</span> | <span class=\"prop-type\">\\'bottom\\'<br>&#124;&nbsp;\\'top\\'</span> | <span class=\"prop-default\">\\'bottom\\'</span> | Position of the title bar. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiGridListTileBar-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">titlePositionBottom</span> | <span class=\"prop-name\">.MuiGridListTileBar-titlePositionBottom</span> | Styles applied to the root element if `titlePosition=\"bottom\"`.\\n| <span class=\"prop-name\">titlePositionTop</span> | <span class=\"prop-name\">.MuiGridListTileBar-titlePositionTop</span> | Styles applied to the root element if `titlePosition=\"top\"`.\\n| <span class=\"prop-name\">rootSubtitle</span> | <span class=\"prop-name\">.MuiGridListTileBar-rootSubtitle</span> | Styles applied to the root element if a `subtitle` is provided.\\n| <span class=\"prop-name\">titleWrap</span> | <span class=\"prop-name\">.MuiGridListTileBar-titleWrap</span> | Styles applied to the title and subtitle container element.\\n| <span class=\"prop-name\">titleWrapActionPosLeft</span> | <span class=\"prop-name\">.MuiGridListTileBar-titleWrapActionPosLeft</span> | Styles applied to the container element if `actionPosition=\"left\"`.\\n| <span class=\"prop-name\">titleWrapActionPosRight</span> | <span class=\"prop-name\">.MuiGridListTileBar-titleWrapActionPosRight</span> | Styles applied to the container element if `actionPosition=\"right\"`.\\n| <span class=\"prop-name\">title</span> | <span class=\"prop-name\">.MuiGridListTileBar-title</span> | Styles applied to the title container element.\\n| <span class=\"prop-name\">subtitle</span> | <span class=\"prop-name\">.MuiGridListTileBar-subtitle</span> | Styles applied to the subtitle container element.\\n| <span class=\"prop-name\">actionIcon</span> | <span class=\"prop-name\">.MuiGridListTileBar-actionIcon</span> | Styles applied to the actionIcon if supplied.\\n| <span class=\"prop-name\">actionIconActionPosLeft</span> | <span class=\"prop-name\">.MuiGridListTileBar-actionIconActionPosLeft</span> | Styles applied to the actionIcon if `actionPosition=\"left\"`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/GridListTileBar/GridListTileBar.js) for more detail.\\n\\n## Demos\\n\\n- [Grid List](/components/grid-list/)\\n\\n'},fvwe:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"default\",(function(){return l}));var s=n(\"mXGw\"),i=n.n(s),a=n(\"e+1t\"),o=n(\"kVtE\"),p=i.a.createElement,r=n(\"jJHK\");function l(t){var e=t.docs;return p(a.a,{docs:e})}l.getInitialProps=function(){var t=Object(o.a)({pageFilename:\"api/grid-list-tile-bar\",requireRaw:r});return{demos:t.demos,docs:t.docs}}},jJHK:function(t,e,n){var s={\"./grid-list-tile-bar.md\":\"8WQG\"};function i(t){var e=a(t);return n(e)}function a(t){if(!n.o(s,t)){var e=new Error(\"Cannot find module '\"+t+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return s[t]}i.keys=function(){return Object.keys(s)},i.resolve=a,t.exports=i,i.id=\"jJHK\"},sZ0X:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/grid-list-tile-bar\",function(){return n(\"fvwe\")}])}},[[\"sZ0X\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}