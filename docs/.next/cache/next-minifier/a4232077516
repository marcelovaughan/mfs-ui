{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{\"3Nkn\":function(o,n,e){var t={\"./form-group.md\":\"ody2\"};function s(o){var n=r(o);return e(n)}function r(o){if(!e.o(t,o)){var n=new Error(\"Cannot find module '\"+o+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[o]}s.keys=function(){return Object.keys(t)},s.resolve=r,o.exports=s,s.id=\"3Nkn\"},lTBN:function(o,n,e){\"use strict\";e.r(n),e.d(n,\"default\",(function(){return c}));var t=e(\"mXGw\"),s=e.n(t),r=e(\"e+1t\"),a=e(\"kVtE\"),p=s.a.createElement,i=e(\"3Nkn\");function c(o){var n=o.docs;return p(r.a,{docs:n})}c.getInitialProps=function(){var o=Object(a.a)({pageFilename:\"api/form-group\",requireRaw:i});return{demos:o.demos,docs:o.docs}}},ody2:function(o,n){o.exports='---\\nfilename: /packages/material-ui/src/FormGroup/FormGroup.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# FormGroup API\\n\\n<p class=\"description\">The API documentation of the FormGroup React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport FormGroup from \\'@material-ui/core/FormGroup\\';\\n// or\\nimport { FormGroup } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n`FormGroup` wraps controls such as `Checkbox` and `Switch`.\\nIt provides compact row layout.\\nFor the `Radio`, you should be using the `RadioGroup` component instead of this one.\\n\\n## Component name\\n\\nThe `MuiFormGroup` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">row</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | Display group of elements in a compact row. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiFormGroup-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">row</span> | <span class=\"prop-name\">.MuiFormGroup-row</span> | Styles applied to the root element if `row={true}`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/FormGroup/FormGroup.js) for more detail.\\n\\n## Demos\\n\\n- [Checkboxes](/components/checkboxes/)\\n- [Switches](/components/switches/)\\n\\n'},\"p+eM\":function(o,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/form-group\",function(){return e(\"lTBN\")}])}},[[\"p+eM\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}