{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{\"+oOr\":function(n,e){n.exports='---\\ntitle: \\u6a21\\u6001\\u6846 React \\u7ec4\\u4ef6\\ncomponents: Modal\\n---\\n\\n# Modal \\u6a21\\u6001\\u6846\\n\\n<p class=\"description\">\\u6a21\\u6001\\u6846\\u7ec4\\u4ef6\\u53ef\\u4ee5\\u7528\\u6765\\u5feb\\u901f\\u521b\\u5efa\\u5bf9\\u8bdd\\u6846\\u3001\\u5f39\\u51fa\\u7a97\\u53e3\\uff0c\\u706f\\u7bb1\\u7b49\\u4efb\\u4f55\\u4f60\\u6240\\u9700\\u7684\\u7ec4\\u4ef6\\u3002</p>\\n\\n\\u7ec4\\u4ef6\\u4f1a\\u5728\\u80cc\\u666f\\u7ec4\\u4ef6\\u524d\\u6e32\\u67d3\\u5176`children`\\u8282\\u70b9\\u3002 `Modal` \\u63d0\\u4f9b\\u4e86\\u4e00\\u4e9b\\u91cd\\u8981\\u7684\\u529f\\u80fd\\uff1a\\n\\n- \\ud83d\\udc84 Manages modal stacking when one-at-a-time just isn\\'t enough.\\n- \\ud83d\\udd10 \\u521b\\u5efa\\u4e00\\u4e2a backdrop \\u6765\\u7981\\u7528\\u5728\\u6a21\\u6001\\u6846\\u5916\\u7684\\u4ea4\\u4e92\\u3002\\n- \\ud83d\\udd10 \\u5728\\u6a21\\u6001\\u6846\\u6253\\u5f00\\u65f6\\u7981\\u7528\\u9875\\u9762\\u5185\\u5bb9\\u7684\\u6eda\\u52a8\\u3002\\n- \\u267f\\ufe0f\\u5b83\\u59a5\\u5584\\u7ba1\\u7406\\u7126\\u70b9;\\u79fb\\u52a8\\u5230\\u6a21\\u6001\\u5185\\u5bb9\\uff0c \\u5e76\\u4fdd\\u6301\\u5b83\\u76f4\\u5230\\u6a21\\u6001\\u5173\\u95ed\\u3002\\n- \\u267f\\ufe0f\\u81ea\\u52a8\\u6dfb\\u52a0\\u9002\\u5f53\\u7684ARIA\\u89d2\\u8272\\u3002\\n- \\ud83d\\udce6 [5kB \\u5df2\\u538b\\u7f29\\u7684\\u5305](/size-snapshot)\\u3002\\n\\n> **\\u672f\\u8bed\\u6ce8\\u91ca**\\u3002 \\u201c\\u6a21\\u6001\\u6846\\u201d\\uff08Modal\\uff09\\u8fd9\\u4e2a\\u8bcd\\u6709\\u65f6\\u4e5f\\u88ab\\u7528\\u6765\\u6307\\u4ee3\\u201c\\u5bf9\\u8bdd\\u6846\\u201d\\uff0c\\u4f46\\u662f\\u8fd9\\u79cd\\u7528\\u6cd5\\u5c5e\\u4e8e\\u8bef\\u7528\\u3002 \\u6a21\\u6001\\u6846\\u7684\\u7a97\\u53e3\\u53ef\\u4ee5\\u63cf\\u8ff0\\u4e3a UI \\u7684\\u4e00\\u90e8\\u5206\\u3002 \\u5982\\u679c\\u4e00\\u4e2a\\u5143\\u7d20[\\u963b\\u6321\\u4e86\\u7528\\u6237\\u4e0e\\u5e94\\u7528\\u7684\\u5176\\u5b83\\u90e8\\u5206\\u7684\\u4e92\\u52a8](https://en.wikipedia.org/wiki/Modal_window)\\uff0c\\u8fd9\\u4e2a\\u5143\\u7d20\\u5c31\\u662f\\u6a21\\u6001\\u7684\\u3002\\n\\n\\u5f53\\u4f60\\u521b\\u5efa\\u4e00\\u4e2a\\u6a21\\u6001\\u5bf9\\u8bdd\\u6846\\u65f6\\uff0c\\u4f7f\\u7528[\\u5bf9\\u8bdd\\u6846\\uff08Dialog\\uff09](/components/dialogs/)\\u7ec4\\u4ef6\\u6bd4\\u76f4\\u63a5\\u4f7f\\u7528\\u6a21\\u6001\\u6846\\u66f4\\u4f73\\u3002 \\u4ee5\\u4e0b\\u7684\\u7ec4\\u4ef6\\u5c06\\u5c06\\u6a21\\u6001\\u6846\\u4f5c\\u4e3a\\u4e00\\u4e2a\\u4f4e\\u7ea7\\u522b\\u7684\\u7ec4\\u4ef6\\u8fd0\\u7528\\uff1a\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## \\u7b80\\u5355\\u7684\\u6a21\\u6001\\u6846\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\n\\u8bf7\\u6ce8\\u610f\\uff0c\\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 `outline: 0` \\u5c5e\\u6027\\u6765\\u7981\\u7528\\u6a21\\u6001\\u6846\\u7684 outline (\\u901a\\u5e38\\u4e3a\\u84dd\\u8272\\u6216\\u91d1\\u8272)\\u3002\\n\\n## \\u8fc7\\u6e21\\u52a8\\u753b\\n\\n\\u6a21\\u6001\\u6846\\u7684 \\u6253\\u5f00/\\u5173\\u95ed \\u53ef\\u4ee5\\u4f7f\\u7528\\u4e00\\u4e2a\\u8fc7\\u6e21\\u7ec4\\u4ef6\\u8fdb\\u884c\\u52a8\\u753b\\u5316\\u5904\\u7406\\u3002 \\u6b64\\u7ec4\\u4ef6\\u5e94\\u9075\\u5b88\\u4ee5\\u4e0b\\u6761\\u4ef6\\uff1a\\n\\n- \\u6210\\u4e3a\\u6a21\\u6001\\u6846\\u7684\\u76f4\\u63a5\\u5b50\\u7ec4\\u4ef6\\u3002\\n- \\u5728 prop \\u4e2d\\u5e94\\u8be5\\u6709\\u4e00\\u4e2a `in` \\u5c5e\\u6027\\u3002 \\u8fd9\\u5bf9\\u5e94\\u4e8e \\u6253\\u5f00/\\u5173\\u95ed \\u72b6\\u6001\\u3002\\n- \\u5728\\u8fdb\\u5165\\u8fc7\\u6e21\\u5f00\\u59cb\\u65f6\\u8c03\\u7528 prop \\u4e2d\\u7684 `onEnter` \\u56de\\u8c03\\u3002\\n- \\u5728\\u9000\\u51fa\\u8fc7\\u6e21\\u5b8c\\u6210\\u540e\\u8c03\\u7528 prop \\u4e2d\\u7684 `onExited` \\u56de\\u8c03\\u3002 \\u8fd9\\u4e24\\u4e2a\\u56de\\u8c03\\u5141\\u8bb8\\u6a21\\u6001\\u6846\\u5728\\u5173\\u95ed\\u5e76\\u5b8c\\u5168\\u8fc7\\u6e21 (when closed and fully transitioned) \\u65f6\\u5378\\u8f7d\\u5b50\\u5185\\u5bb9\\u3002\\n\\n\\u6a21\\u6001\\u6846\\u5df2\\u7ecf\\u5185\\u5d4c\\u652f\\u6301 [react-transition-group](https://github.com/reactjs/react-transition-group)\\u3002\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\n\\u6216\\u8005\\uff0c\\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 [react-spring](https://github.com/react-spring/react-spring)\\u3002\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## \\u6a21\\u6001\\u6846 SSR\\n\\nReact API [\\u4e0d\\u652f\\u6301](https://github.com/facebook/react/issues/13097) \\u5728\\u670d\\u52a1\\u5668\\u4e0a\\u7684 [`createPortal()`](https://reactjs.org/docs/portals.html)\\u3002 \\u4e3a\\u4e86\\u663e\\u793a\\u6a21\\u6001\\u6846\\uff0c\\u60a8\\u9700\\u8981\\u4f7f\\u7528 prop \\u4e0a\\u7684 `disablePortal` \\u6765\\u7981\\u7528 protal \\u529f\\u80fd\\uff1a\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## \\u5c40\\u9650\\u6027\\n\\n### \\u7126\\u70b9\\u9677\\u9631\\n\\n\\u5982\\u679c\\u5931\\u53bb\\u7126\\u70b9\\uff0c\\u5219\\u6a21\\u6001\\u6846\\u4f1a\\u5c06\\u7126\\u70b9\\u79fb\\u56de\\u5230\\u7ec4\\u4ef6\\u7684\\u4e3b\\u4f53 (body of the component)\\u3002\\n\\n\\u8fd9\\u6837\\u505a\\u662f\\u4e3a\\u4e86\\u53ef\\u8bbf\\u95ee\\u6027\\uff0c\\u4f46\\u53ef\\u80fd\\u4f1a\\u9020\\u6210\\u95ee\\u9898\\u3002 \\u5982\\u679c\\u7528\\u6237\\u9700\\u8981\\u4e0e\\u9875\\u9762\\u7684\\u53e6\\u4e00\\u90e8\\u5206\\u8fdb\\u884c\\u4ea4\\u4e92\\uff0c\\u4f8b\\u5982\\u4f7f\\u7528\\u804a\\u5929\\u7a97\\u53e3\\uff0c\\u60a8\\u53ef\\u4ee5\\u7981\\u7528\\u8be5\\u884c\\u4e3a\\uff1a\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## \\u65e0\\u969c\\u788d\\u8bbe\\u8ba1\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- \\u8bb0\\u5f97\\u7528 `aria-labelledby=\"id...\"` \\u5c5e\\u6027\\u6765\\u6307\\u5411`Modal` \\u7684\\u6807\\u9898. \\u53e6\\u5916, \\u4f60\\u8fd8\\u53ef\\u4ee5\\u4f7f\\u7528 prop \\u4e0a\\u7684 `aria-describedby=\"id...\"` \\u5c5e\\u6027\\u6765\\u4e3a `Modal` \\u589e\\u52a0\\u4e00\\u6bb5\\u63cf\\u8ff0\\u3002\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- \\u8fd9\\u7bc7 [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) \\u91cc\\u7684\\u65b9\\u6cd5\\u53ef\\u4ee5\\u6839\\u636e\\u4f60\\u7684\\u6a21\\u6001\\u7a97\\u53e3\\u91cc\\u7684\\u5185\\u5bb9, \\u4e3a\\u6700\\u5408\\u9002\\u7684\\u5143\\u7d20\\u8bbe\\u7f6e\\u521d\\u59cb\\u7126\\u70b9.\\n- \\u8bf7\\u8bb0\\u4f4f\\uff0c\\u201c\\u6a21\\u6001\\u7a97\\u53e3\\u201d \\u53e0\\u52a0\\u5728\\u4e3b\\u7a97\\u53e3\\u6216\\u53e6\\u4e00\\u4e2a\\u6a21\\u6001\\u7a97\\u53e3\\u4e0a\\u3002 \\u6a21\\u6001\\u6846\\u5c42\\u4e0b\\u7684\\u6240\\u6709\\u5c42\\u7ea7\\u90fd\\u662f **inert** \\u7684\\u3002 \\u4e5f\\u5c31\\u662f\\u8bf4\\uff0c\\u7528\\u6237\\u4e0d\\u80fd\\u4e0e\\u6d3b\\u8dc3\\u7684\\u6a21\\u6001\\u6846\\u5916\\u7684\\u5185\\u5bb9\\u4ea4\\u4e92\\u3002 \\u8fd9\\u53ef\\u80fd\\u4f1a\\u4ea7\\u751f [\\u51b2\\u7a81\\u884c\\u4e3a](#focus-trap)\\u3002'},\"07Ab\":function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/components/modal\",function(){return o(\"Gz5/\")}])},\"1afP\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return h}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"WLtd\"),s=o(\"6H0w\"),d=a.a.createElement;function l(){return Math.round(20*Math.random())-10}function c(){var n=50+l(),e=50+l();return{top:\"\".concat(n,\"%\"),left:\"\".concat(e,\"%\"),transform:\"translate(-\".concat(n,\"%, -\").concat(e,\"%)\")}}var p=Object(i.a)((function(n){return Object(r.a)({paper:{position:\"absolute\",width:400,backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}})})),m=d(\"h2\",{id:\"simple-modal-title\"},\"Text in a modal\"),u=d(\"p\",{id:\"simple-modal-description\"},\"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\");function h(){var n=p(),e=a.a.useState(c)[0],o=a.a.useState(!1),t=o[0],i=o[1],r=d(\"div\",{style:e,className:n.paper},m,u,w);return d(\"div\",null,d(\"button\",{type:\"button\",onClick:function(){i(!0)}},\"Open Modal\"),d(s.a,{open:t,onClose:function(){i(!1)},\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\"},r))}var w=d(h,null)},\"5PG7\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return h}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"WLtd\"),s=o(\"6H0w\"),d=o(\"/6bg\"),l=o(\"LpUc\"),c=a.a.createElement,p=Object(i.a)((function(n){return Object(r.a)({modal:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},paper:{backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}})})),m=c(\"h2\",{id:\"transition-modal-title\"},\"Transition modal\"),u=c(\"p\",{id:\"transition-modal-description\"},\"react-transition-group animates me.\");function h(){var n=p(),e=a.a.useState(!1),o=e[0],t=e[1];return c(\"div\",null,c(\"button\",{type:\"button\",onClick:function(){t(!0)}},\"react-transition-group\"),c(s.a,{\"aria-labelledby\":\"transition-modal-title\",\"aria-describedby\":\"transition-modal-description\",className:n.modal,open:o,onClose:function(){t(!1)},closeAfterTransition:!0,BackdropComponent:d.a,BackdropProps:{timeout:500}},c(l.a,{in:o},c(\"div\",{className:n.paper},m,u))))}},\"6LFu\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return g}));var t=o(\"z3IF\"),a=o(\"2Fjn\"),i=o(\"mXGw\"),r=o.n(i),s=o(\"yZEQ\"),d=o(\"6H0w\"),l=o(\"/6bg\"),c=o(\"etKq\"),p=r.a.createElement,m=Object(s.a)((function(n){return{modal:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},paper:{backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}}})),u=r.a.forwardRef((function(n,e){var o=n.in,i=n.children,r=n.onEnter,s=n.onExited,d=Object(a.a)(n,[\"in\",\"children\",\"onEnter\",\"onExited\"]),l=Object(c.useSpring)({from:{opacity:0},to:{opacity:o?1:0},onStart:function(){o&&r&&r()},onRest:function(){!o&&s&&s()}});return p(c.animated.div,Object(t.a)({ref:e,style:l},d),i)})),h=p(\"h2\",{id:\"spring-modal-title\"},\"Spring modal\"),w=p(\"p\",{id:\"spring-modal-description\"},\"react-spring animates me.\");function g(){var n=m(),e=r.a.useState(!1),o=e[0],t=e[1];return p(\"div\",null,p(\"button\",{type:\"button\",onClick:function(){t(!0)}},\"react-spring\"),p(d.a,{\"aria-labelledby\":\"spring-modal-title\",\"aria-describedby\":\"spring-modal-description\",className:n.modal,open:o,onClose:function(){t(!1)},closeAfterTransition:!0,BackdropComponent:l.a,BackdropProps:{timeout:500}},p(u,{in:o},p(\"div\",{className:n.paper},h,w))))}},\"80lT\":function(n,e){n.exports='---\\ntitle: Modal React component\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">\\u30e2\\u30fc\\u30c0\\u30eb\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f\\u3001\\u30c0\\u30a4\\u30a2\\u30ed\\u30b0\\u3001\\u30dd\\u30c3\\u30d7\\u30aa\\u30fc\\u30d0\\u30fc\\u3001\\u30e9\\u30a4\\u30c8\\u30dc\\u30c3\\u30af\\u30b9\\u306a\\u3069\\u3092\\u4f5c\\u6210\\u3059\\u308b\\u305f\\u3081\\u306e\\u5f37\\u56fa\\u306a\\u57fa\\u76e4\\u3092\\u63d0\\u4f9b\\u3057\\u307e\\u3059\\u3002</p>\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f\\u3001backdrop\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u524d\\u306b\\u305d\\u306e `children`\\u30ce\\u30fc\\u30c9\\u3092\\u30ec\\u30f3\\u30c0\\u30ea\\u30f3\\u30b0\\u3057\\u307e\\u3059\\u3002 `Modal` \\u306b\\u306f\\u3001\\u6b21\\u306e\\u3088\\u3046\\u306a\\u91cd\\u8981\\u306a\\u6a5f\\u80fd\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n- \\ud83d\\udc84 \\u4e00\\u5ea6\\u306b1\\u3064\\u3060\\u3051\\u3067\\u306f\\u4e0d\\u5341\\u5206\\u306a\\u5834\\u5408\\u306b\\u3001\\u30e2\\u30fc\\u30c0\\u30eb\\u30b9\\u30bf\\u30c3\\u30ad\\u30f3\\u30b0\\u3092\\u7ba1\\u7406\\u3057\\u307e\\u3059\\u3002\\n- \\ud83d\\udd10\\u30e2\\u30fc\\u30c0\\u30eb\\u306e\\u4e0b\\u306e\\u30a4\\u30f3\\u30bf\\u30e9\\u30af\\u30b7\\u30e7\\u30f3\\u3092\\u7121\\u52b9\\u306b\\u3059\\u308b\\u305f\\u3081\\u306e\\u30d0\\u30c3\\u30af\\u30c9\\u30ed\\u30c3\\u30d7\\u3092\\u4f5c\\u6210\\u3057\\u307e\\u3059\\u3002\\n- \\ud83d\\udd10open\\u958b\\u3044\\u3066\\u3044\\u308b\\u9593\\u3001\\u30da\\u30fc\\u30b8\\u30b3\\u30f3\\u30c6\\u30f3\\u30c4\\u306e\\u30b9\\u30af\\u30ed\\u30fc\\u30eb\\u3092\\u7121\\u52b9\\u306b\\u3057\\u307e\\u3059\\u3002\\n- \\u267f\\ufe0f\\u30d5\\u30a9\\u30fc\\u30ab\\u30b9\\u3092\\u9069\\u5207\\u306b\\u7ba1\\u7406\\u3057\\u307e\\u3059\\u3002\\u30e2\\u30fc\\u30c0\\u30eb\\u30b3\\u30f3\\u30c6\\u30f3\\u30c4\\u306b\\u79fb\\u52d5\\u3057\\u3001 \\u3057\\u3066\\u3001\\u30e2\\u30fc\\u30c0\\u30eb\\u304c\\u9589\\u3058\\u3089\\u308c\\u308b\\u307e\\u3067\\u305d\\u3053\\u306b\\u4fdd\\u6301\\u3057\\u307e\\u3059\\u3002\\n- \\u267f\\ufe0f\\u9069\\u5207\\u306aARIA\\u30ed\\u30fc\\u30eb\\u3092\\u81ea\\u52d5\\u7684\\u306b\\u8ffd\\u52a0\\u3057\\u307e\\u3059\\u3002\\n- [5 kB gzipped](/size-snapshot).\\n\\n> **\\u7528\\u8a9e\\u306e\\u6ce8\\u8a18**\\u3002 \\u300c\\u30e2\\u30fc\\u30c0\\u30eb\\u300d\\u3068\\u3044\\u3046\\u7528\\u8a9e\\u306f\\u300c\\u30c0\\u30a4\\u30a2\\u30ed\\u30b0\\u300d\\u3092\\u610f\\u5473\\u3059\\u308b\\u305f\\u3081\\u306b\\u4f7f\\u7528\\u3055\\u308c\\u308b\\u3053\\u3068\\u304c\\u3042\\u308a\\u307e\\u3059\\u304c\\u3001\\u3053\\u308c\\u306f\\u8aa4\\u3063\\u305f\\u547c\\u3073\\u540d\\u3067\\u3059\\u3002 A modal window describes parts of a UI. \\u8981\\u7d20\\u304c[\\u30a2\\u30d7\\u30ea\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e\\u4ed6\\u306e\\u90e8\\u5206\\u3068\\u306e\\u5bfe\\u8a71\\u3092\\u30d6\\u30ed\\u30c3\\u30af\\u3059\\u308b\\u5834\\u5408](https://en.wikipedia.org/wiki/Modal_window)\\u3001\\u305d\\u306e\\u8981\\u7d20\\u306f\\u30e2\\u30fc\\u30c0\\u30eb\\u3067\\u3042\\u308b\\u3068\\u898b\\u306a\\u3055\\u308c\\u307e\\u3059\\u3002\\n\\n\\u30e2\\u30fc\\u30c0\\u30eb\\u30c0\\u30a4\\u30a2\\u30ed\\u30b0\\u3092\\u4f5c\\u6210\\u3059\\u308b\\u5834\\u5408\\u306f\\u3001\\u30e2\\u30fc\\u30c0\\u30eb\\u3092\\u76f4\\u63a5\\u4f7f\\u7528\\u3059\\u308b\\u306e\\u3067\\u306f\\u306a\\u304f\\u3001 [\\u30c0\\u30a4\\u30a2\\u30ed\\u30b0](/components/dialogs/) \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3092\\u304a\\u52e7\\u3081\\u3057\\u307e\\u3059\\u3002 \\u30e2\\u30fc\\u30c0\\u30eb\\u306f\\u3001\\u6b21\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u3088\\u3063\\u3066\\u6d3b\\u7528\\u3055\\u308c\\u308b\\u4f4e\\u30ec\\u30d9\\u30eb\\u306e\\u69cb\\u6210\\u8981\\u7d20\\u3067\\u3059\\u3002\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Simple modal\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\n`\\u30a2\\u30a6\\u30c8\\u30e9\\u30a4\\u30f3\\uff1a0` CSS\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3067\\u30a2\\u30a6\\u30c8\\u30e9\\u30a4\\u30f3\\uff08\\u591a\\u304f\\u306e\\u5834\\u5408\\u3001\\u9752\\u307e\\u305f\\u306f\\u91d1\\uff09\\u3092\\u7121\\u52b9\\u306b\\u3067\\u304d\\u308b\\u3053\\u3068\\u306b\\u6ce8\\u610f\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n## \\u30c8\\u30e9\\u30f3\\u30b8\\u30b7\\u30e7\\u30f3\\n\\nThe open/close state of the modal can be animated with a transition component. This component should respect the following conditions:\\n\\n- Be a direct child descendent of the modal.\\n- `in`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u6301\\u3063\\u3066\\u3044\\u307e\\u3059\\u3002 \\u3053\\u308c\\u306f\\u3001\\u30aa\\u30fc\\u30d7\\u30f3/\\u30af\\u30ed\\u30fc\\u30ba\\u72b6\\u614b\\u306b\\u5bfe\\u5fdc\\u3057\\u307e\\u3059\\u3002\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed. These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nAlternatively, you can use [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-side modal\\n\\nReact \\u306f\\u3001\\u30b5\\u30fc\\u30d0\\u30fc\\u4e0a\\u306e [`createPortal\\uff08\\uff09`](https://reactjs.org/docs/portals.html) API\\u3092[\\u30b5\\u30dd\\u30fc\\u30c8\\u3057\\u307e\\u305b\\u3093\\u3002](https://github.com/facebook/react/issues/13097) In order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## \\u5236\\u9650\\u4e8b\\u9805\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues. In the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## \\u30a2\\u30af\\u30bb\\u30b7\\u30d3\\u30ea\\u30c6\\u30a3\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- \\u30e2\\u30fc\\u30c0\\u30eb\\u30bf\\u30a4\\u30c8\\u30eb\\u3092\\u53c2\\u7167\\u3059\\u308b `aria-labelledby = \"id...\"` `\\u30e2\\u30fc\\u30c0\\u30eb`\\u306b\\u8ffd\\u52a0\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002 Additionally, you may give a description of your modal with the `aria-describedby=\"id...\"` prop on the `Modal`.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).'},\"D+S0\":function(n,e){n.exports='---\\ntitle: Modal React component\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.</p>\\n\\nThe component renders its `children` node in front of a backdrop component. The `Modal` offers important features:\\n\\n- \\ud83d\\udc84 Manages modal stacking when one-at-a-time just isn\\'t enough.\\n- \\ud83d\\udd10 Creates a backdrop, for disabling interaction below the modal.\\n- \\ud83d\\udd10 It disables scrolling of the page content while open.\\n- \\u267f\\ufe0f It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\\n- \\u267f\\ufe0f Adds the appropriate ARIA roles automatically.\\n- \\ud83d\\udce6 [5 kB comprimido](/size-snapshot).\\n\\n> **Terminology note**. The term \"modal\" is sometimes used to mean \"dialog\", but this is a misnomer. A modal window describes parts of a UI. An element is considered modal if [it blocks interaction with the rest of the application](https://en.wikipedia.org/wiki/Modal_window).\\n\\nIf you are creating a modal dialog, you probably want to use the [Dialog](/components/dialogs/) component rather than directly using Modal. Modal is a lower-level construct that is leveraged by the following components:\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Modal simple\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nNotice that you can disable the outline (often blue or gold) with the `outline: 0` CSS property.\\n\\n## Transiciones\\n\\nThe open/close state of the modal can be animated with a transition component. Este componente debe respetar las siguientes condiciones:\\n\\n- Ser un hijo directo del modal.\\n- Have an `in` prop. This corresponds to the open / close state.\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed. These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nComo alternativa, puedes usar [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-side modal\\n\\nReact [doesn\\'t support](https://github.com/facebook/react/issues/13097) the [`createPortal()`](https://reactjs.org/docs/portals.html) API on the server. In order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## Limitaciones\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues. In the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## Accesibilidad\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Be sure to add `aria-labelledby=\"id...\"`, referencing the modal title, to the `Modal`. Additionally, you may give a description of your modal with the `aria-describedby=\"id...\"` prop on the `Modal`.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).'},EkI4:function(n,e){n.exports='---\\ntitle: Modal React-Komponente\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">Die modale Komponente bietet eine solide Grundlage f\\xfcr das Erstellen von Dialogen, Popovers, Leuchtk\\xe4sten oder anderen Elementen.</p>\\n\\nDie Komponente rendered seine `Kinder` - Knoten vor einer Hintergrund - Komponente. The `Modal` offers important features:\\n\\n- \\ud83d\\udc84 Verwaltet modales Stacking, wenn eins zu einem Zeitpunkt nicht ausreicht.\\n- \\ud83d\\udd10 Erstellt einen Hintergrund zum Deaktivieren der Interaktion unter dem Modal.\\n- \\ud83d\\udd10 Es deaktiviert das Bl\\xe4ttern des Seiteninhalts, w\\xe4hrend es ge\\xf6ffnet ist.\\n- \\u267f\\ufe0f Der Fokus wird richtig verwaltet. Wechseln des Fokus zum modalen Inhalt und diesen halten belassen, bis der Modal geschlossen ist.\\n- \\u267f\\ufe0f F\\xfcgt die entsprechenden ARIA-Rollen automatisch hinzu.\\n- \\ud83d\\udce6 [5 kB gzipped](/size-snapshot).\\n\\n> **Terminologieanmerkung**. Der Begriff \"modal\" bedeutet manchmal \"Dialog\", aber das ist eine Fehlbezeichnung. A modal window describes parts of a UI. Ein Element wird als modal betrachtet, wenn es [die Interaktion mit dem Rest der Anwendung blockiert](https://en.wikipedia.org/wiki/Modal_window).\\n\\nWenn Sie ein modales Dialogfeld erstellen, m\\xf6chten Sie wahrscheinlich die [Dialog-](/components/dialogs/) Komponente verwenden, anstatt direkt ein Modal zu verwenden. Modal ist ein untergeordnetes Konstrukt, das von den folgenden Komponenten genutzt wird:\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Einfaches Modal\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nNotice that you can disable the outline (often blue or gold) with the `outline: 0` CSS property.\\n\\n## \\xdcberg\\xe4nge\\n\\nThe open/close state of the modal can be animated with a transition component. This component should respect the following conditions:\\n\\n- Be a direct child descendent of the modal.\\n- Have an `in` prop. This corresponds to the open / close state.\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed. These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nAlternativ k\\xf6nnen Sie [react-spring](https://github.com/react-spring/react-spring) verwenden.\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-seitiges Modal\\n\\nReact [doesn\\'t support](https://github.com/facebook/react/issues/13097) the [`createPortal()`](https://reactjs.org/docs/portals.html) API on the server. In order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## Einschr\\xe4nkungen\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues. In the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## Barrierefreiheit\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Achten Sie darauf, eine Referenzierung des modalen Titels durch `aria-labelledby = \"id...\"` zu dem `Modal` hinzuf\\xfcgen. Zus\\xe4tzlich k\\xf6nnen Sie eine Beschreibung Ihres Modals mit der `aria-describedby=\"id...\"` Prop auf dem `Modal` angeben.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).'},\"Gz5/\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return c}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"e+1t\"),r=o(\"kVtE\"),s=a.a.createElement,d=o(\"bKWZ\"),l=o(\"Olly\");function c(n){var e=n.demos,o=n.docs;return s(i.a,{demos:e,docs:o,requireDemo:d})}c.getInitialProps=function(){var n=Object(r.a)({pageFilename:\"components/modal\",requireRaw:l});return{demos:n.demos,docs:n.docs}}},\"H/2Q\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return p}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"6H0w\"),s=a.a.createElement,d=Object(i.a)((function(n){return{root:{height:300,flexGrow:1,minWidth:300,transform:\"translateZ(0)\",\"@media all and (-ms-high-contrast: none)\":{display:\"none\"}},modal:{display:\"flex\",padding:n.spacing(1),alignItems:\"center\",justifyContent:\"center\"},paper:{width:400,backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}}})),l=s(\"h2\",{id:\"server-modal-title\"},\"Server-side modal\"),c=s(\"p\",{id:\"server-modal-description\"},\"If you disable JavaScript, you will still see me.\");function p(){var n=d(),e=a.a.useRef(null);return s(\"div\",{className:n.root,ref:e},s(r.a,{disablePortal:!0,disableEnforceFocus:!0,disableAutoFocus:!0,open:!0,\"aria-labelledby\":\"server-modal-title\",\"aria-describedby\":\"server-modal-description\",className:n.modal,container:function(){return e.current}},s(\"div\",{className:n.paper},l,c)))}},J86G:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    height: 300,\\n    flexGrow: 1,\\n    minWidth: 300,\\n    transform: 'translateZ(0)',\\n    // The position fixed scoping doesn't work in IE 11.\\n    // Disable this demo to preserve the others.\\n    '@media all and (-ms-high-contrast: none)': {\\n      display: 'none',\\n    },\\n  },\\n  modal: {\\n    display: 'flex',\\n    padding: theme.spacing(1),\\n    alignItems: 'center',\\n    justifyContent: 'center',\\n  },\\n  paper: {\\n    width: 400,\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nexport default function ServerModal() {\\n  const classes = useStyles();\\n  const rootRef = React.useRef(null);\\n\\n  return (\\n    <div className={classes.root} ref={rootRef}>\\n      <Modal\\n        disablePortal\\n        disableEnforceFocus\\n        disableAutoFocus\\n        open\\n        aria-labelledby=\\\"server-modal-title\\\"\\n        aria-describedby=\\\"server-modal-description\\\"\\n        className={classes.modal}\\n        container={() => rootRef.current}\\n      >\\n        <div className={classes.paper}>\\n          <h2 id=\\\"server-modal-title\\\">Server-side modal</h2>\\n          <p id=\\\"server-modal-description\\\">\\n            If you disable JavaScript, you will still see me.\\n          </p>\\n        </div>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},KnIB:function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return u}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"6H0w\"),s=a.a.createElement;function d(){return Math.round(20*Math.random())-10}function l(){var n=50+d(),e=50+d();return{top:\"\".concat(n,\"%\"),left:\"\".concat(e,\"%\"),transform:\"translate(-\".concat(n,\"%, -\").concat(e,\"%)\")}}var c=Object(i.a)((function(n){return{paper:{position:\"absolute\",width:400,backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}}})),p=s(\"h2\",{id:\"simple-modal-title\"},\"Text in a modal\"),m=s(\"p\",{id:\"simple-modal-description\"},\"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\");function u(){var n=c(),e=a.a.useState(l)[0],o=a.a.useState(!1),t=o[0],i=o[1],d=s(\"div\",{style:e,className:n.paper},p,m,h);return s(\"div\",null,s(\"button\",{type:\"button\",onClick:function(){i(!0)}},\"Open Modal\"),s(r.a,{open:t,onClose:function(){i(!1)},\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\"},d))}var h=s(u,null)},N9Gj:function(n,e){n.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\nimport Backdrop from '@material-ui/core/Backdrop';\\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\\n\\nconst useStyles = makeStyles((theme) => ({\\n  modal: {\\n    display: 'flex',\\n    alignItems: 'center',\\n    justifyContent: 'center',\\n  },\\n  paper: {\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nconst Fade = React.forwardRef(function Fade(props, ref) {\\n  const { in: open, children, onEnter, onExited, ...other } = props;\\n  const style = useSpring({\\n    from: { opacity: 0 },\\n    to: { opacity: open ? 1 : 0 },\\n    onStart: () => {\\n      if (open && onEnter) {\\n        onEnter();\\n      }\\n    },\\n    onRest: () => {\\n      if (!open && onExited) {\\n        onExited();\\n      }\\n    },\\n  });\\n\\n  return (\\n    <animated.div ref={ref} style={style} {...other}>\\n      {children}\\n    </animated.div>\\n  );\\n});\\n\\nFade.propTypes = {\\n  children: PropTypes.element,\\n  in: PropTypes.bool.isRequired,\\n  onEnter: PropTypes.func,\\n  onExited: PropTypes.func,\\n};\\n\\nexport default function SpringModal() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        react-spring\\n      </button>\\n      <Modal\\n        aria-labelledby=\\\"spring-modal-title\\\"\\n        aria-describedby=\\\"spring-modal-description\\\"\\n        className={classes.modal}\\n        open={open}\\n        onClose={handleClose}\\n        closeAfterTransition\\n        BackdropComponent={Backdrop}\\n        BackdropProps={{\\n          timeout: 500,\\n        }}\\n      >\\n        <Fade in={open}>\\n          <div className={classes.paper}>\\n            <h2 id=\\\"spring-modal-title\\\">Spring modal</h2>\\n            <p id=\\\"spring-modal-description\\\">react-spring animates me.</p>\\n          </div>\\n        </Fade>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},Olly:function(n,e,o){var t={\"./ServerModal.js\":\"J86G\",\"./ServerModal.tsx\":\"T8tS\",\"./SimpleModal.js\":\"QALn\",\"./SimpleModal.tsx\":\"yDo9\",\"./SpringModal.js\":\"N9Gj\",\"./SpringModal.tsx\":\"aFL7\",\"./TransitionsModal.js\":\"ot7Y\",\"./TransitionsModal.tsx\":\"tKrV\",\"./modal-aa.md\":\"ocGM\",\"./modal-de.md\":\"EkI4\",\"./modal-es.md\":\"D+S0\",\"./modal-fr.md\":\"uRD+\",\"./modal-ja.md\":\"80lT\",\"./modal-pt.md\":\"k1o8\",\"./modal-ru.md\":\"vbhd\",\"./modal-zh.md\":\"+oOr\",\"./modal.md\":\"VJJc\"};function a(n){var e=i(n);return o(e)}function i(n){if(!o.o(t,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=\"Olly\"},QALn:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\n\\nfunction rand() {\\n  return Math.round(Math.random() * 20) - 10;\\n}\\n\\nfunction getModalStyle() {\\n  const top = 50 + rand();\\n  const left = 50 + rand();\\n\\n  return {\\n    top: `${top}%`,\\n    left: `${left}%`,\\n    transform: `translate(-${top}%, -${left}%)`,\\n  };\\n}\\n\\nconst useStyles = makeStyles((theme) => ({\\n  paper: {\\n    position: 'absolute',\\n    width: 400,\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nexport default function SimpleModal() {\\n  const classes = useStyles();\\n  // getModalStyle is not a pure function, we roll the style only on the first render\\n  const [modalStyle] = React.useState(getModalStyle);\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  const body = (\\n    <div style={modalStyle} className={classes.paper}>\\n      <h2 id=\\\"simple-modal-title\\\">Text in a modal</h2>\\n      <p id=\\\"simple-modal-description\\\">\\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\\n      </p>\\n      <SimpleModal />\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        Open Modal\\n      </button>\\n      <Modal\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"simple-modal-title\\\"\\n        aria-describedby=\\\"simple-modal-description\\\"\\n      >\\n        {body}\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},T8tS:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      height: 300,\\n      flexGrow: 1,\\n      minWidth: 300,\\n      transform: 'translateZ(0)',\\n      // The position fixed scoping doesn't work in IE 11.\\n      // Disable this demo to preserve the others.\\n      '@media all and (-ms-high-contrast: none)': {\\n        display: 'none',\\n      },\\n    },\\n    modal: {\\n      display: 'flex',\\n      padding: theme.spacing(1),\\n      alignItems: 'center',\\n      justifyContent: 'center',\\n    },\\n    paper: {\\n      width: 400,\\n      backgroundColor: theme.palette.background.paper,\\n      border: '2px solid #000',\\n      boxShadow: theme.shadows[5],\\n      padding: theme.spacing(2, 4, 3),\\n    },\\n  }),\\n);\\n\\nexport default function ServerModal() {\\n  const classes = useStyles();\\n  const rootRef = React.useRef<HTMLDivElement>(null);\\n\\n  return (\\n    <div className={classes.root} ref={rootRef}>\\n      <Modal\\n        disablePortal\\n        disableEnforceFocus\\n        disableAutoFocus\\n        open\\n        aria-labelledby=\\\"server-modal-title\\\"\\n        aria-describedby=\\\"server-modal-description\\\"\\n        className={classes.modal}\\n        container={() => rootRef.current}\\n      >\\n        <div className={classes.paper}>\\n          <h2 id=\\\"server-modal-title\\\">Server-side modal</h2>\\n          <p id=\\\"server-modal-description\\\">\\n            If you disable JavaScript, you will still see me.\\n          </p>\\n        </div>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},VJJc:function(n,e){n.exports='---\\ntitle: Modal React component\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.</p>\\n\\nThe component renders its `children` node in front of a backdrop component.\\nThe `Modal` offers important features:\\n\\n- \\ud83d\\udc84 Manages modal stacking when one-at-a-time just isn\\'t enough.\\n- \\ud83d\\udd10 Creates a backdrop, for disabling interaction below the modal.\\n- \\ud83d\\udd10 It disables scrolling of the page content while open.\\n- \\u267f\\ufe0f It properly manages focus; moving to the modal content,\\n  and keeping it there until the modal is closed.\\n- \\u267f\\ufe0f Adds the appropriate ARIA roles automatically.\\n- \\ud83d\\udce6 [5 kB gzipped](/size-snapshot).\\n\\n> **Terminology note**. The term \"modal\" is sometimes used to mean \"dialog\", but this is a misnomer.\\n> A modal window describes parts of a UI.\\n> An element is considered modal if [it blocks interaction with the rest of the application](https://en.wikipedia.org/wiki/Modal_window).\\n\\nIf you are creating a modal dialog, you probably want to use the [Dialog](/components/dialogs/) component rather than directly using Modal.\\nModal is a lower-level construct that is leveraged by the following components:\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Simple modal\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nNotice that you can disable the outline (often blue or gold) with the `outline: 0` CSS property.\\n\\n## Transitions\\n\\nThe open/close state of the modal can be animated with a transition component.\\nThis component should respect the following conditions:\\n\\n- Be a direct child descendent of the modal.\\n- Have an `in` prop. This corresponds to the open / close state.\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed.\\n  These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nAlternatively, you can use [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-side modal\\n\\nReact [doesn\\'t support](https://github.com/facebook/react/issues/13097) the [`createPortal()`](https://reactjs.org/docs/portals.html) API on the server.\\nIn order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## Limitations\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues.\\nIn the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## Accessibility\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Be sure to add `aria-labelledby=\"id...\"`, referencing the modal title, to the `Modal`.\\n  Additionally, you may give a description of your modal with the `aria-describedby=\"id...\"` prop on the `Modal`.\\n\\n  ```jsx\\n  <Modal aria-labelledby=\"modal-title\" aria-describedby=\"modal-description\">\\n    <h2 id=\"modal-title\">My Title</h2>\\n    <p id=\"modal-description\">My Description</p>\\n  </Modal>\\n  ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).\\n'},aFL7:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\nimport Backdrop from '@material-ui/core/Backdrop';\\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    modal: {\\n      display: 'flex',\\n      alignItems: 'center',\\n      justifyContent: 'center',\\n    },\\n    paper: {\\n      backgroundColor: theme.palette.background.paper,\\n      border: '2px solid #000',\\n      boxShadow: theme.shadows[5],\\n      padding: theme.spacing(2, 4, 3),\\n    },\\n  }),\\n);\\n\\ninterface FadeProps {\\n  children?: React.ReactElement;\\n  in: boolean;\\n  onEnter?: () => {};\\n  onExited?: () => {};\\n}\\n\\nconst Fade = React.forwardRef<HTMLDivElement, FadeProps>(function Fade(\\n  props,\\n  ref,\\n) {\\n  const { in: open, children, onEnter, onExited, ...other } = props;\\n  const style = useSpring({\\n    from: { opacity: 0 },\\n    to: { opacity: open ? 1 : 0 },\\n    onStart: () => {\\n      if (open && onEnter) {\\n        onEnter();\\n      }\\n    },\\n    onRest: () => {\\n      if (!open && onExited) {\\n        onExited();\\n      }\\n    },\\n  });\\n\\n  return (\\n    <animated.div ref={ref} style={style} {...other}>\\n      {children}\\n    </animated.div>\\n  );\\n});\\n\\nexport default function SpringModal() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        react-spring\\n      </button>\\n      <Modal\\n        aria-labelledby=\\\"spring-modal-title\\\"\\n        aria-describedby=\\\"spring-modal-description\\\"\\n        className={classes.modal}\\n        open={open}\\n        onClose={handleClose}\\n        closeAfterTransition\\n        BackdropComponent={Backdrop}\\n        BackdropProps={{\\n          timeout: 500,\\n        }}\\n      >\\n        <Fade in={open}>\\n          <div className={classes.paper}>\\n            <h2 id=\\\"spring-modal-title\\\">Spring modal</h2>\\n            <p id=\\\"spring-modal-description\\\">react-spring animates me.</p>\\n          </div>\\n        </Fade>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},bKWZ:function(n,e,o){var t={\"./ServerModal.js\":\"H/2Q\",\"./ServerModal.tsx\":\"vY6C\",\"./SimpleModal.js\":\"KnIB\",\"./SimpleModal.tsx\":\"1afP\",\"./SpringModal.js\":\"6LFu\",\"./SpringModal.tsx\":\"cMVd\",\"./TransitionsModal.js\":\"tMex\",\"./TransitionsModal.tsx\":\"5PG7\"};function a(n){var e=i(n);return o(e)}function i(n){if(!o.o(t,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=\"bKWZ\"},cMVd:function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return b}));var t=o(\"z3IF\"),a=o(\"2Fjn\"),i=o(\"mXGw\"),r=o.n(i),s=o(\"yZEQ\"),d=o(\"WLtd\"),l=o(\"6H0w\"),c=o(\"/6bg\"),p=o(\"etKq\"),m=r.a.createElement,u=Object(s.a)((function(n){return Object(d.a)({modal:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},paper:{backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}})})),h=r.a.forwardRef((function(n,e){var o=n.in,i=n.children,r=n.onEnter,s=n.onExited,d=Object(a.a)(n,[\"in\",\"children\",\"onEnter\",\"onExited\"]),l=Object(p.useSpring)({from:{opacity:0},to:{opacity:o?1:0},onStart:function(){o&&r&&r()},onRest:function(){!o&&s&&s()}});return m(p.animated.div,Object(t.a)({ref:e,style:l},d),i)})),w=m(\"h2\",{id:\"spring-modal-title\"},\"Spring modal\"),g=m(\"p\",{id:\"spring-modal-description\"},\"react-spring animates me.\");function b(){var n=u(),e=r.a.useState(!1),o=e[0],t=e[1];return m(\"div\",null,m(\"button\",{type:\"button\",onClick:function(){t(!0)}},\"react-spring\"),m(l.a,{\"aria-labelledby\":\"spring-modal-title\",\"aria-describedby\":\"spring-modal-description\",className:n.modal,open:o,onClose:function(){t(!1)},closeAfterTransition:!0,BackdropComponent:c.a,BackdropProps:{timeout:500}},m(h,{in:o},m(\"div\",{className:n.paper},w,g))))}},k1o8:function(n,e){n.exports='---\\ntitle: Componente React Modal\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">O componente modal fornece uma base s\\xf3lida para criar di\\xe1logos, popovers, lightboxes ou qualquer outra coisa.</p>\\n\\nO componente renderiza o conte\\xfado de seu `children` sobre um componente backdrop. O `Modal` oferece recursos importantes:\\n\\n- \\ud83d\\udc84 Gerencia o empilhamento de chamadas quando ter um de cada vez n\\xe3o for suficiente.\\n- \\ud83d\\udd10 Cria um pano de fundo para desabilitar a intera\\xe7\\xe3o abaixo do modal.\\n- \\ud83d\\udd10 Desativa a rolagem do conte\\xfado da p\\xe1gina enquanto estiver aberta.\\n- \\u267f\\ufe0f Gerencia adequadamente o foco; movendo para o conte\\xfado modal, e mantendo-o l\\xe1 at\\xe9 que o modal seja fechado.\\n- \\u267f\\ufe0f Adiciona as fun\\xe7\\xf5es ARIA apropriadas automaticamente.\\n- \\ud83d\\udce6 [5 kB gzipado](/size-snapshot).\\n\\n> **Nota sobre a terminologia**. O termo \"modal\" algumas vezes \\xe9 usado com o sentido de \"di\\xe1logo\", mas isto \\xe9 um equ\\xedvoco. Uma janela modal descreve partes de uma UI. Um elemento \\xe9 considerado modal se [ele bloqueia intera\\xe7\\xf5es com o resto da aplica\\xe7\\xe3o](https://en.wikipedia.org/wiki/Modal_window).\\n\\nSe voc\\xea est\\xe1 criando um di\\xe1logo Modal, voc\\xea provavelmente quer usar o componente [Dialog](/components/dialogs/) em vez de diretamente um Modal. Modal \\xe9 uma estrutura de baixo-n\\xedvel que \\xe9 alavancada pelos seguintes componentes:\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Modal Simples\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nVoc\\xea pode desativar o contorno (muitas vezes azul ou ouro) com a propriedade CSS `outline: 0`.\\n\\n## Transi\\xe7\\xf5es\\n\\nO estado de aberto/fechado do modal pode ser animado com um componente de transi\\xe7\\xe3o. Este componente deve respeitar as seguintes condi\\xe7\\xf5es:\\n\\n- Seja um filho direto descendente do modal.\\n- Tenha uma propriedade `in`. Isso corresponde ao estado de aberto/fechado.\\n- Chamar a propriedade de callback `onEnter` quando a transi\\xe7\\xe3o de entrada iniciar.\\n- Chamar a propriedade de callback `onExited` quando a transi\\xe7\\xe3o de sa\\xedda for conclu\\xedda. Esses dois callbacks permitem que o modal desmonte o conte\\xfado filho quando fechado e seja totalmente transitado.\\n\\nO modal possui suporte interno para [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nComo alternativa, voc\\xea pode usar [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Modal do lado do servidor\\n\\nReact [n\\xe3o suporta](https://github.com/facebook/react/issues/13097) a API [`createPortal()`](https://pt-br.reactjs.org/docs/portals.html) no servidor. Para exibir o modal, voc\\xea precisa desativar o recurso portal com a propriedade `disablePortal`:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## Limita\\xe7\\xf5es\\n\\n### Captura do foco\\n\\nO modal move o foco de volta para o corpo do componente se o foco tentar escapar dele.\\n\\nNo entanto, isso \\xe9 feito para fins de acessibilidade, e pode criar problemas. No caso de os usu\\xe1rios precisarem interagir com outra parte da p\\xe1gina, por exemplo, com uma janela de chatbot, voc\\xea pode desabilitar o comportamento:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## Acessibilidade\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Certifique-se de adicionar `aria-labelledby=\"id...\"`, referenciando o t\\xedtulo modal, ao `Modal`. Adicionalmente, voc\\xea pode dar uma descri\\xe7\\xe3o do seu modal com a propriedade `aria-describedby = \"id...\"` no `Modal`.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      Meu T\\xedtulo\\n    </h2>\\n    <p id=\"modal-description\">\\n      Minha Descri\\xe7\\xe3o\\n    </p>\\n    </Modal>\\n    ```\\n\\n- O [WAI-ARIA authoring practices ](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) pode ajud\\xe1-lo a definir o foco inicial no elemento mais relevante, com base no seu conte\\xfado modal.\\n- Esteja ciente que uma \"janela modal\" sobrep\\xf5e a janela prim\\xe1ria ou qualquer outra janela modal. As janelas sob um modal s\\xe3o **inertes**. Ou seja, os usu\\xe1rios n\\xe3o podem interagir com o conte\\xfado fora de uma janela modal ativa. Isso pode criar [comportamentos conflitantes](#focus-trap).'},ocGM:function(n,e){n.exports='---\\ntitle: crwdns90968:0crwdne90968:0\\ncomponents: crwdns90970:0crwdne90970:0\\n---\\n\\n# crwdns90972:0crwdne90972:0\\n\\n<p class=\"description\">crwdns90974:0crwdne90974:0</p>\\n\\ncrwdns90976:0crwdne90976:0 crwdns90978:0crwdne90978:0\\n\\n- crwdns90980:0crwdne90980:0\\n- crwdns90982:0crwdne90982:0\\n- crwdns90984:0crwdne90984:0\\n- crwdns90986:0crwdne90986:0\\n- crwdns90988:0crwdne90988:0\\n- crwdns90990:0crwdne90990:0\\n\\n> crwdns90992:0crwdne90992:0 crwdns90994:0crwdne90994:0 crwdns102578:0crwdne102578:0 crwdns90998:0crwdne90998:0\\n\\ncrwdns91000:0crwdne91000:0 crwdns91002:0crwdne91002:0\\n\\n- [crwdns91006:0crwdne91006:0](crwdns91004:0crwdne91004:0)\\n- [crwdns91010:0crwdne91010:0](crwdns91008:0crwdne91008:0)\\n- [crwdns91014:0crwdne91014:0](crwdns91012:0crwdne91012:0)\\n- [crwdns91018:0crwdne91018:0](crwdns91016:0crwdne91016:0)\\n\\n## crwdns91020:0crwdne91020:0\\n\\ncrwdns91022:0crwdne91022:0\\n\\ncrwdns91024:0crwdne91024:0\\n\\n## crwdns100462:0crwdne100462:0\\n\\ncrwdns100464:0crwdne100464:0 crwdns100466:0crwdne100466:0\\n\\n- crwdns100468:0crwdne100468:0\\n- crwdns100470:0crwdne100470:0 crwdns100472:0crwdne100472:0\\n- crwdns100474:0crwdne100474:0\\n- crwdns100476:0crwdne100476:0 crwdns100478:0crwdne100478:0\\n\\ncrwdns100480:0crwdne100480:0\\n\\ncrwdns100482:0crwdne100482:0\\n\\ncrwdns100484:0crwdne100484:0\\n\\ncrwdns100486:0crwdne100486:0\\n\\n## crwdns102580:0crwdne102580:0\\n\\ncrwdns100782:0crwdne100782:0 crwdns102582:0crwdne102582:0\\n\\ncrwdns100786:0crwdne100786:0\\n\\n## crwdns106105:0crwdne106105:0\\n\\n### crwdns106107:0crwdne106107:0\\n\\ncrwdns106109:0crwdne106109:0\\n\\ncrwdns106111:0crwdne106111:0 crwdns106113:0crwdne106113:0\\n\\n```jsx\\ncrwdns106115:0crwdne106115:0\\n```\\n\\n## crwdns106117:0crwdne106117:0\\n\\ncrwdns106119:0crwdne106119:0\\n\\n- crwdns103978:0crwdne103978:0 crwdns103980:0crwdne103980:0\\n    \\n    ```jsx\\n    crwdns103982:0crwdne103982:0\\n    ```\\n\\n- crwdns103984:0crwdne103984:0\\n- crwdns132750:0crwdne132750:0 crwdns103988:0crwdne103988:0 crwdns103990:0crwdne103990:0 crwdns132752:0crwdne132752:0'},ot7Y:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\nimport Backdrop from '@material-ui/core/Backdrop';\\nimport Fade from '@material-ui/core/Fade';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  modal: {\\n    display: 'flex',\\n    alignItems: 'center',\\n    justifyContent: 'center',\\n  },\\n  paper: {\\n    backgroundColor: theme.palette.background.paper,\\n    border: '2px solid #000',\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(2, 4, 3),\\n  },\\n}));\\n\\nexport default function TransitionsModal() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        react-transition-group\\n      </button>\\n      <Modal\\n        aria-labelledby=\\\"transition-modal-title\\\"\\n        aria-describedby=\\\"transition-modal-description\\\"\\n        className={classes.modal}\\n        open={open}\\n        onClose={handleClose}\\n        closeAfterTransition\\n        BackdropComponent={Backdrop}\\n        BackdropProps={{\\n          timeout: 500,\\n        }}\\n      >\\n        <Fade in={open}>\\n          <div className={classes.paper}>\\n            <h2 id=\\\"transition-modal-title\\\">Transition modal</h2>\\n            <p id=\\\"transition-modal-description\\\">\\n              react-transition-group animates me.\\n            </p>\\n          </div>\\n        </Fade>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},tKrV:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\nimport Backdrop from '@material-ui/core/Backdrop';\\nimport Fade from '@material-ui/core/Fade';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    modal: {\\n      display: 'flex',\\n      alignItems: 'center',\\n      justifyContent: 'center',\\n    },\\n    paper: {\\n      backgroundColor: theme.palette.background.paper,\\n      border: '2px solid #000',\\n      boxShadow: theme.shadows[5],\\n      padding: theme.spacing(2, 4, 3),\\n    },\\n  }),\\n);\\n\\nexport default function TransitionsModal() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        react-transition-group\\n      </button>\\n      <Modal\\n        aria-labelledby=\\\"transition-modal-title\\\"\\n        aria-describedby=\\\"transition-modal-description\\\"\\n        className={classes.modal}\\n        open={open}\\n        onClose={handleClose}\\n        closeAfterTransition\\n        BackdropComponent={Backdrop}\\n        BackdropProps={{\\n          timeout: 500,\\n        }}\\n      >\\n        <Fade in={open}>\\n          <div className={classes.paper}>\\n            <h2 id=\\\"transition-modal-title\\\">Transition modal</h2>\\n            <p id=\\\"transition-modal-description\\\">\\n              react-transition-group animates me.\\n            </p>\\n          </div>\\n        </Fade>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"},tMex:function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return u}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"6H0w\"),s=o(\"/6bg\"),d=o(\"LpUc\"),l=a.a.createElement,c=Object(i.a)((function(n){return{modal:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},paper:{backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}}})),p=l(\"h2\",{id:\"transition-modal-title\"},\"Transition modal\"),m=l(\"p\",{id:\"transition-modal-description\"},\"react-transition-group animates me.\");function u(){var n=c(),e=a.a.useState(!1),o=e[0],t=e[1];return l(\"div\",null,l(\"button\",{type:\"button\",onClick:function(){t(!0)}},\"react-transition-group\"),l(r.a,{\"aria-labelledby\":\"transition-modal-title\",\"aria-describedby\":\"transition-modal-description\",className:n.modal,open:o,onClose:function(){t(!1)},closeAfterTransition:!0,BackdropComponent:s.a,BackdropProps:{timeout:500}},l(d.a,{in:o},l(\"div\",{className:n.paper},p,m))))}},\"uRD+\":function(n,e){n.exports='---\\ntitle: Modal React component\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">Le composant modal fournit une base solide pour la cr\\xe9ation de bo\\xeetes de dialogue, de popovers, de lightboxes ou autres.</p>\\n\\nLe composant affiche ses n\\u0153uds `children` devant un composant d\\'arri\\xe8re-plan. The `Modal` offers important features:\\n\\n- \\ud83d\\udc84 Manages modal stacking when one-at-a-time just isn\\'t enough.\\n- \\ud83d\\udd10 Creates a backdrop, for disabling interaction below the modal.\\n- \\ud83d\\udd10 It disables scrolling of the page content while open.\\n- \\u267f\\ufe0f It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\\n- \\u267f\\ufe0f Adds the appropriate ARIA roles automatically.\\n- \\ud83d\\udce6 [5 kB gzipped](/size-snapshot).\\n\\n> **Note de terminologie**. Le terme \"modal\" est parfois utilis\\xe9 pour signifier \"dialogue\", mais c\\'est un terme impropre. A modal window describes parts of a UI. Un \\xe9l\\xe9ment est consid\\xe9r\\xe9 modal si [il bloque l\\'interaction avec le reste de l\\'application](https://en.wikipedia.org/wiki/Modal_window).\\n\\nIf you are creating a modal dialog, you probably want to use the [Dialog](/components/dialogs/) component rather than directly using Modal. Modal est un \\xe9l\\xe9ment de construction de niveau faible exploit\\xe9e par les composants suivants :\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Modal simple\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nNotice that you can disable the outline (often blue or gold) with the `outline: 0` CSS property.\\n\\n## Les transitions\\n\\nThe open/close state of the modal can be animated with a transition component. This component should respect the following conditions:\\n\\n- Be a direct child descendent of the modal.\\n- Have an `in` prop. This corresponds to the open / close state.\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed. These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nAlternatively, you can use [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-side modal\\n\\nReact [doesn\\'t support](https://github.com/facebook/react/issues/13097) the [`createPortal()`](https://reactjs.org/docs/portals.html) API on the server. In order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## Limites\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues. In the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## Accessibilit\\xe9\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Be sure to add `aria-labelledby=\"id...\"`, referencing the modal title, to the `Modal`. Additionally, you may give a description of your modal with the `aria-describedby=\"id...\"` prop on the `Modal`.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).'},vY6C:function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return m}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"yZEQ\"),r=o(\"WLtd\"),s=o(\"6H0w\"),d=a.a.createElement,l=Object(i.a)((function(n){return Object(r.a)({root:{height:300,flexGrow:1,minWidth:300,transform:\"translateZ(0)\",\"@media all and (-ms-high-contrast: none)\":{display:\"none\"}},modal:{display:\"flex\",padding:n.spacing(1),alignItems:\"center\",justifyContent:\"center\"},paper:{width:400,backgroundColor:n.palette.background.paper,border:\"2px solid #000\",boxShadow:n.shadows[5],padding:n.spacing(2,4,3)}})})),c=d(\"h2\",{id:\"server-modal-title\"},\"Server-side modal\"),p=d(\"p\",{id:\"server-modal-description\"},\"If you disable JavaScript, you will still see me.\");function m(){var n=l(),e=a.a.useRef(null);return d(\"div\",{className:n.root,ref:e},d(s.a,{disablePortal:!0,disableEnforceFocus:!0,disableAutoFocus:!0,open:!0,\"aria-labelledby\":\"server-modal-title\",\"aria-describedby\":\"server-modal-description\",className:n.modal,container:function(){return e.current}},d(\"div\",{className:n.paper},c,p)))}},vbhd:function(n,e){n.exports='---\\ntitle: Modal React component\\ncomponents: Modal\\n---\\n\\n# Modal\\n\\n<p class=\"description\">The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.</p>\\n\\nThe component renders its `children` node in front of a backdrop component. The `Modal` offers important features:\\n\\n- \\ud83d\\udc84 Manages modal stacking when one-at-a-time just isn\\'t enough.\\n- \\ud83d\\udd10 Creates a backdrop, for disabling interaction below the modal.\\n- \\ud83d\\udd10 It disables scrolling of the page content while open.\\n- \\u267f\\ufe0f It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\\n- \\u267f\\ufe0f Adds the appropriate ARIA roles automatically.\\n- 5 [1 \\u043a\\u0411 \\u0432 \\u0441\\u0436\\u0430\\u0442\\u043e\\u043c \\u0432\\u0438\\u0434\\u0435](/size-snapshot).\\n\\n> **\\u043f\\u0440\\u0438\\u043c\\u0435\\u0447\\u0430\\u043d\\u0438\\u0435 \\u043f\\u043e \\u0442\\u0435\\u0440\\u043c\\u0438\\u043d\\u043e\\u043b\\u043e\\u0433\\u0438\\u0438**. \\u0422\\u0435\\u0440\\u043c\\u0438\\u043d \\xabmodal\\xbb \\u0438\\u043d\\u043e\\u0433\\u0434\\u0430 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0434\\u043b\\u044f \\u043e\\u0431\\u043e\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f \\xabdialog\\xbb, \\u043d\\u043e \\u044d\\u0442\\u043e \\u043d\\u0435\\u0432\\u0435\\u0440\\u043d\\u043e. A modal window describes parts of a UI. An element is considered modal if [it blocks interaction with the rest of the application](https://en.wikipedia.org/wiki/Modal_window).\\n\\nIf you are creating a modal dialog, you probably want to use the [Dialog](/components/dialogs/) component rather than directly using Modal. Modal - \\u044d\\u0442\\u043e \\u043a\\u043e\\u043d\\u0441\\u0442\\u0440\\u0443\\u043a\\u0446\\u0438\\u044f \\u043d\\u0438\\u0436\\u043d\\u0435\\u0433\\u043e \\u0443\\u0440\\u043e\\u0432\\u043d\\u044f, \\u043a\\u043e\\u0442\\u043e\\u0440\\u0430\\u044f \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0438\\u043c\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430\\u043c\\u0438:\\n\\n- [Dialog](/components/dialogs/)\\n- [Drawer](/components/drawers/)\\n- [Menu](/components/menus/)\\n- [Popover](/components/popover/)\\n\\n## Simple modal\\n\\n{{\"demo\": \"pages/components/modal/SimpleModal.js\"}}\\n\\nNotice that you can disable the outline (often blue or gold) with the `outline: 0` CSS property.\\n\\n## \\u041f\\u0435\\u0440\\u0435\\u0445\\u043e\\u0434\\u044b\\n\\nThe open/close state of the modal can be animated with a transition component. This component should respect the following conditions:\\n\\n- Be a direct child descendent of the modal.\\n- Have an `in` prop. This corresponds to the open / close state.\\n- Call the `onEnter` callback prop when the enter transition starts.\\n- Call the `onExited` callback prop when the exit transition is completed. These two callbacks allow the modal to unmount the child content when closed and fully transitioned.\\n\\nModal has built-in support for [react-transition-group](https://github.com/reactjs/react-transition-group).\\n\\n{{\"demo\": \"pages/components/modal/TransitionsModal.js\"}}\\n\\nAlternatively, you can use [react-spring](https://github.com/react-spring/react-spring).\\n\\n{{\"demo\": \"pages/components/modal/SpringModal.js\"}}\\n\\n## Server-side modal\\n\\nReact [doesn\\'t support](https://github.com/facebook/react/issues/13097) the [`createPortal()`](https://reactjs.org/docs/portals.html) API on the server. In order to display the modal, you need to disable the portal feature with the `disablePortal` prop:\\n\\n{{\"demo\": \"pages/components/modal/ServerModal.js\"}}\\n\\n## \\u041e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u0438\\u044f\\n\\n### Focus trap\\n\\nThe modal moves the focus back to the body of the component if the focus tries to escape it.\\n\\nThis is done for accessibility purposes, however, it might create issues. In the event the users need to interact with another part of the page, e.g. with a chatbot window, you can disable the behavior:\\n\\n```jsx\\n<Modal disableEnforceFocus />\\n```\\n\\n## \\u0414\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u043e\\u0441\\u0442\\u044c\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#dialog_modal)\\n\\n- Be sure to add `aria-labelledby=\"id...\"`, referencing the modal title, to the `Modal`. Additionally, you may give a description of your modal with the `aria-describedby=\"id...\"` prop on the `Modal`.\\n    \\n    ```jsx\\n    <Modal\\n    aria-labelledby=\"modal-title\"\\n    aria-describedby=\"modal-description\"\\n    >\\n    <h2 id=\"modal-title\">\\n      My Title\\n    </h2>\\n    <p id=\"modal-description\">\\n      My Description\\n    </p>\\n    </Modal>\\n    ```\\n\\n- The [WAI-ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) can help you set the initial focus on the most relevant element, based on your modal content.\\n- Keep in mind that a \"modal window\" overlays on either the primary window or another modal window. Windows under a modal are **inert**. That is, users cannot interact with content outside an active modal window. This might create [conflicting behaviors](#focus-trap).'},yDo9:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport Modal from '@material-ui/core/Modal';\\n\\nfunction rand() {\\n  return Math.round(Math.random() * 20) - 10;\\n}\\n\\nfunction getModalStyle() {\\n  const top = 50 + rand();\\n  const left = 50 + rand();\\n\\n  return {\\n    top: `${top}%`,\\n    left: `${left}%`,\\n    transform: `translate(-${top}%, -${left}%)`,\\n  };\\n}\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    paper: {\\n      position: 'absolute',\\n      width: 400,\\n      backgroundColor: theme.palette.background.paper,\\n      border: '2px solid #000',\\n      boxShadow: theme.shadows[5],\\n      padding: theme.spacing(2, 4, 3),\\n    },\\n  }),\\n);\\n\\nexport default function SimpleModal() {\\n  const classes = useStyles();\\n  // getModalStyle is not a pure function, we roll the style only on the first render\\n  const [modalStyle] = React.useState(getModalStyle);\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  const body = (\\n    <div style={modalStyle} className={classes.paper}>\\n      <h2 id=\\\"simple-modal-title\\\">Text in a modal</h2>\\n      <p id=\\\"simple-modal-description\\\">\\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\\n      </p>\\n      <SimpleModal />\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <button type=\\\"button\\\" onClick={handleOpen}>\\n        Open Modal\\n      </button>\\n      <Modal\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"simple-modal-title\\\"\\n        aria-describedby=\\\"simple-modal-description\\\"\\n      >\\n        {body}\\n      </Modal>\\n    </div>\\n  );\\n}\\n\"}},[[\"07Ab\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18,33]]]);"}