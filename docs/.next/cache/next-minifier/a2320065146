{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{\"/p3G\":function(n,e,o){\"use strict\";o.r(e),o.d(e,\"default\",(function(){return u}));var t=o(\"mXGw\"),a=o.n(t),r=o(\"e+1t\"),s=o(\"kVtE\"),p=a.a.createElement,i=o(\"vAXx\");function u(n){var e=n.docs;return p(r.a,{docs:e})}u.getInitialProps=function(){var n=Object(s.a)({pageFilename:\"api/radio-group\",requireRaw:i});return{demos:n.demos,docs:n.docs}}},\"6ouu\":function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/radio-group\",function(){return o(\"/p3G\")}])},ZXej:function(n,e){n.exports='---\\nfilename: /packages/material-ui/src/RadioGroup/RadioGroup.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# RadioGroup API\\n\\n<p class=\"description\">The API documentation of the RadioGroup React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport RadioGroup from \\'@material-ui/core/RadioGroup\\';\\n// or\\nimport { RadioGroup } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">defaultValue</span> | <span class=\"prop-type\">Array&lt;string&gt;<br>&#124;&nbsp;number<br>&#124;&nbsp;string</span> |  | The default `input` element value. Use when the component is not controlled. |\\n| <span class=\"prop-name\">name</span> | <span class=\"prop-type\">string</span> |  | The name used to reference the value of the control. If you don\\'t provide this prop, it falls back to a randomly generated name. |\\n| <span class=\"prop-name\">onChange</span> | <span class=\"prop-type\">func</span> |  | Callback fired when a radio button is selected.<br><br>**Signature:**<br>`function(event: object) => void`<br>*event:* The event source of the callback. You can pull out the new value by accessing `event.target.value` (string). |\\n| <span class=\"prop-name\">value</span> | <span class=\"prop-type\">any</span> |  | Value of the selected radio button. The DOM API casts this to a string. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element ([FormGroup](/api/form-group/)).\\n\\n## Inheritance\\n\\nThe props of the [FormGroup](/api/form-group/) component are also available.\\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\\n\\n## Demos\\n\\n- [Radio Buttons](/components/radio-buttons/)\\n\\n'},vAXx:function(n,e,o){var t={\"./radio-group.md\":\"ZXej\"};function a(n){var e=r(n);return o(e)}function r(n){if(!o.o(t,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=r,n.exports=a,a.id=\"vAXx\"}},[[\"6ouu\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}