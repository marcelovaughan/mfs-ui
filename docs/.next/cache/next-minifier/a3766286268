{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{\"4wGH\":function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/list-subheader\",function(){return s(\"EuoY\")}])},\"8IMT\":function(e,n){e.exports='---\\nfilename: /packages/material-ui/src/ListSubheader/ListSubheader.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# ListSubheader API\\n\\n<p class=\"description\">The API documentation of the ListSubheader React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport ListSubheader from \\'@material-ui/core/ListSubheader\\';\\n// or\\nimport { ListSubheader } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiListSubheader` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">color</span> | <span class=\"prop-type\">\\'default\\'<br>&#124;&nbsp;\\'primary\\'<br>&#124;&nbsp;\\'inherit\\'</span> | <span class=\"prop-default\">\\'default\\'</span> | The color of the component. It supports those theme colors that make sense for this component. |\\n| <span class=\"prop-name\">component</span> | <span class=\"prop-type\">elementType</span> | <span class=\"prop-default\">\\'li\\'</span> | The component used for the root node. Either a string to use a HTML element or a component. |\\n| <span class=\"prop-name\">disableGutters</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the List Subheader will not have gutters. |\\n| <span class=\"prop-name\">disableSticky</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the List Subheader will not stick to the top during scroll. |\\n| <span class=\"prop-name\">inset</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the List Subheader will be indented. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiListSubheader-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">colorPrimary</span> | <span class=\"prop-name\">.MuiListSubheader-colorPrimary</span> | Styles applied to the root element if `color=\"primary\"`.\\n| <span class=\"prop-name\">colorInherit</span> | <span class=\"prop-name\">.MuiListSubheader-colorInherit</span> | Styles applied to the root element if `color=\"inherit\"`.\\n| <span class=\"prop-name\">gutters</span> | <span class=\"prop-name\">.MuiListSubheader-gutters</span> | Styles applied to the inner `component` element if `disableGutters={false}`.\\n| <span class=\"prop-name\">inset</span> | <span class=\"prop-name\">.MuiListSubheader-inset</span> | Styles applied to the root element if `inset={true}`.\\n| <span class=\"prop-name\">sticky</span> | <span class=\"prop-name\">.MuiListSubheader-sticky</span> | Styles applied to the root element if `disableSticky={false}`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListSubheader/ListSubheader.js) for more detail.\\n\\n## Demos\\n\\n- [Grid List](/components/grid-list/)\\n- [Lists](/components/lists/)\\n\\n'},EuoY:function(e,n,s){\"use strict\";s.r(n),s.d(n,\"default\",(function(){return l}));var t=s(\"mXGw\"),a=s.n(t),o=s(\"e+1t\"),p=s(\"kVtE\"),r=a.a.createElement,i=s(\"Q2sq\");function l(e){var n=e.docs;return r(o.a,{docs:n})}l.getInitialProps=function(){var e=Object(p.a)({pageFilename:\"api/list-subheader\",requireRaw:i});return{demos:e.demos,docs:e.docs}}},Q2sq:function(e,n,s){var t={\"./list-subheader.md\":\"8IMT\"};function a(e){var n=o(e);return s(n)}function o(e){if(!s.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id=\"Q2sq\"}},[[\"4wGH\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}