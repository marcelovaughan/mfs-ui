{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{FjFG:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),i=t(\"e+1t\"),a=t(\"kVtE\"),r=s.a.createElement,c=t(\"QLhV\");function p(n){var e=n.docs;return r(i.a,{docs:e})}p.getInitialProps=function(){var n=Object(a.a)({pageFilename:\"api/list-item-secondary-action\",requireRaw:c});return{demos:n.demos,docs:n.docs}}},QLhV:function(n,e,t){var o={\"./list-item-secondary-action.md\":\"YuZK\"};function s(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return o[n]}s.keys=function(){return Object.keys(o)},s.resolve=i,n.exports=s,s.id=\"QLhV\"},YuZK:function(n,e){n.exports='---\\nfilename: /packages/material-ui/src/ListItemSecondaryAction/ListItemSecondaryAction.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# ListItemSecondaryAction API\\n\\n<p class=\"description\">The API documentation of the ListItemSecondaryAction React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport ListItemSecondaryAction from \\'@material-ui/core/ListItemSecondaryAction\\';\\n// or\\nimport { ListItemSecondaryAction } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\nMust be used as the last child of ListItem to function properly.\\n\\n## Component name\\n\\nThe `MuiListItemSecondaryAction` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component, normally an `IconButton` or selection control. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiListItemSecondaryAction-root</span> | Styles applied to the root element.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListItemSecondaryAction/ListItemSecondaryAction.js) for more detail.\\n\\n## Demos\\n\\n- [Lists](/components/lists/)\\n\\n'},\"xvJ/\":function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/list-item-secondary-action\",function(){return t(\"FjFG\")}])}},[[\"xvJ/\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}