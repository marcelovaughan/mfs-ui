{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{DLGz:function(e,n,a){var s={\"./speed-dial.md\":\"yKRX\"};function p(e){var n=o(e);return a(n)}function o(e){if(!a.o(s,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return s[e]}p.keys=function(){return Object.keys(s)},p.resolve=o,e.exports=p,p.id=\"DLGz\"},Tp50:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/speed-dial\",function(){return a(\"YIgW\")}])},YIgW:function(e,n,a){\"use strict\";a.r(n),a.d(n,\"default\",(function(){return l}));var s=a(\"mXGw\"),p=a.n(s),o=a(\"e+1t\"),t=a(\"kVtE\"),i=p.a.createElement,r=a(\"DLGz\");function l(e){var n=e.docs;return i(o.a,{docs:n})}l.getInitialProps=function(){var e=Object(t.a)({pageFilename:\"api/speed-dial\",requireRaw:r});return{demos:e.demos,docs:e.docs}}},yKRX:function(e,n){e.exports='---\\nfilename: /packages/material-ui-lab/src/SpeedDial/SpeedDial.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# SpeedDial API\\n\\n<p class=\"description\">The API documentation of the SpeedDial React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport SpeedDial from \\'@material-ui/lab/SpeedDial\\';\\n// or\\nimport { SpeedDial } from \\'@material-ui/lab\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiSpeedDial` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name required\">ariaLabel<abbr title=\"required\">*</abbr></span> | <span class=\"prop-type\">string</span> |  | The aria-label of the button element. Also used to provide the `id` for the `SpeedDial` element and its children. |\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | SpeedDialActions to display when the SpeedDial is `open`. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">direction</span> | <span class=\"prop-type\">\\'down\\'<br>&#124;&nbsp;\\'left\\'<br>&#124;&nbsp;\\'right\\'<br>&#124;&nbsp;\\'up\\'</span> | <span class=\"prop-default\">\\'up\\'</span> | The direction the actions open relative to the floating action button. |\\n| <span class=\"prop-name\">FabProps</span> | <span class=\"prop-type\">object</span> | <span class=\"prop-default\">{}</span> | Props applied to the [`Fab`](/api/fab/) element. |\\n| <span class=\"prop-name\">hidden</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the SpeedDial will be hidden. |\\n| <span class=\"prop-name\">icon</span> | <span class=\"prop-type\">node</span> |  | The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component provides a default Icon with animation. |\\n| <span class=\"prop-name\">onClose</span> | <span class=\"prop-type\">func</span> |  | Callback fired when the component requests to be closed.<br><br>**Signature:**<br>`function(event: object, reason: string) => void`<br>*event:* The event source of the callback.<br>*reason:* Can be: `\"toggle\"`, `\"blur\"`, `\"mouseLeave\"`, `\"escapeKeyDown\"`. |\\n| <span class=\"prop-name\">onOpen</span> | <span class=\"prop-type\">func</span> |  | Callback fired when the component requests to be open.<br><br>**Signature:**<br>`function(event: object, reason: string) => void`<br>*event:* The event source of the callback.<br>*reason:* Can be: `\"toggle\"`, `\"focus\"`, `\"mouseEnter\"`. |\\n| <span class=\"prop-name required\">open<abbr title=\"required\">*</abbr></span> | <span class=\"prop-type\">bool</span> |  | If `true`, the SpeedDial is open. |\\n| <span class=\"prop-name\">openIcon</span> | <span class=\"prop-type\">node</span> |  | The icon to display in the SpeedDial Fab when the SpeedDial is open. |\\n| <span class=\"prop-name\">TransitionComponent</span> | <span class=\"prop-type\">elementType</span> | <span class=\"prop-default\">Zoom</span> | The component used for the transition. [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component. |\\n| <span class=\"prop-name\">transitionDuration</span> | <span class=\"prop-type\">number<br>&#124;&nbsp;{ appear?: number, enter?: number, exit?: number }</span> | <span class=\"prop-default\">{  enter: duration.enteringScreen,  exit: duration.leavingScreen,}</span> | The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object. |\\n| <span class=\"prop-name\">TransitionProps</span> | <span class=\"prop-type\">object</span> |  | Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiSpeedDial-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">fab</span> | <span class=\"prop-name\">.MuiSpeedDial-fab</span> | Styles applied to the Fab component.\\n| <span class=\"prop-name\">directionUp</span> | <span class=\"prop-name\">.MuiSpeedDial-directionUp</span> | Styles applied to the root if direction=\"up\"\\n| <span class=\"prop-name\">directionDown</span> | <span class=\"prop-name\">.MuiSpeedDial-directionDown</span> | Styles applied to the root if direction=\"down\"\\n| <span class=\"prop-name\">directionLeft</span> | <span class=\"prop-name\">.MuiSpeedDial-directionLeft</span> | Styles applied to the root if direction=\"left\"\\n| <span class=\"prop-name\">directionRight</span> | <span class=\"prop-name\">.MuiSpeedDial-directionRight</span> | Styles applied to the root if direction=\"right\"\\n| <span class=\"prop-name\">actions</span> | <span class=\"prop-name\">.MuiSpeedDial-actions</span> | Styles applied to the actions (`children` wrapper) element.\\n| <span class=\"prop-name\">actionsClosed</span> | <span class=\"prop-name\">.MuiSpeedDial-actionsClosed</span> | Styles applied to the actions (`children` wrapper) element if `open={false}`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/SpeedDial/SpeedDial.js) for more detail.\\n\\n## Demos\\n\\n- [Speed Dial](/components/speed-dial/)\\n\\n'}},[[\"Tp50\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}