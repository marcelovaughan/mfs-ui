{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{\"8+d1\":function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/tree-item\",function(){return o(\"DT43\")}])},DT43:function(e,n,o){\"use strict\";o.r(n),o.d(n,\"default\",(function(){return l}));var a=o(\"mXGw\"),s=o.n(a),t=o(\"e+1t\"),p=o(\"kVtE\"),r=s.a.createElement,i=o(\"ZMWd\");function l(e){var n=e.docs;return r(t.a,{docs:n})}l.getInitialProps=function(){var e=Object(p.a)({pageFilename:\"api/tree-item\",requireRaw:i});return{demos:e.demos,docs:e.docs}}},WJ4t:function(e,n){e.exports='---\\nfilename: /packages/material-ui-lab/src/TreeItem/TreeItem.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# TreeItem API\\n\\n<p class=\"description\">The API documentation of the TreeItem React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport TreeItem from \\'@material-ui/lab/TreeItem\\';\\n// or\\nimport { TreeItem } from \\'@material-ui/lab\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiTreeItem` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">collapseIcon</span> | <span class=\"prop-type\">node</span> |  | The icon used to collapse the node. |\\n| <span class=\"prop-name\">endIcon</span> | <span class=\"prop-type\">node</span> |  | The icon displayed next to a end node. |\\n| <span class=\"prop-name\">expandIcon</span> | <span class=\"prop-type\">node</span> |  | The icon used to expand the node. |\\n| <span class=\"prop-name\">icon</span> | <span class=\"prop-type\">node</span> |  | The icon to display next to the tree node\\'s label. |\\n| <span class=\"prop-name\">label</span> | <span class=\"prop-type\">node</span> |  | The tree node label. |\\n| <span class=\"prop-name required\">nodeId<abbr title=\"required\">*</abbr></span> | <span class=\"prop-type\">string</span> |  | The id of the node. |\\n| <span class=\"prop-name\">onIconClick</span> | <span class=\"prop-type\">func</span> |  | `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called. |\\n| <span class=\"prop-name\">onLabelClick</span> | <span class=\"prop-type\">func</span> |  | `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called. |\\n| <span class=\"prop-name\">TransitionComponent</span> | <span class=\"prop-type\">elementType</span> | <span class=\"prop-default\">Collapse</span> | The component used for the transition. [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component. |\\n| <span class=\"prop-name\">TransitionProps</span> | <span class=\"prop-type\">object</span> |  | Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiTreeItem-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">expanded</span> | <span class=\"prop-name\">.Mui-expanded</span> | Pseudo-class applied to the root element when expanded.\\n| <span class=\"prop-name\">selected</span> | <span class=\"prop-name\">.Mui-selected</span> | Pseudo-class applied to the root element when selected.\\n| <span class=\"prop-name\">group</span> | <span class=\"prop-name\">.MuiTreeItem-group</span> | Styles applied to the `role=\"group\"` element.\\n| <span class=\"prop-name\">content</span> | <span class=\"prop-name\">.MuiTreeItem-content</span> | Styles applied to the tree node content.\\n| <span class=\"prop-name\">iconContainer</span> | <span class=\"prop-name\">.MuiTreeItem-iconContainer</span> | Styles applied to the tree node icon and collapse/expand icon.\\n| <span class=\"prop-name\">label</span> | <span class=\"prop-name\">.MuiTreeItem-label</span> | Styles applied to the label element.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/TreeItem/TreeItem.js) for more detail.\\n\\n## Demos\\n\\n- [Tree View](/components/tree-view/)\\n\\n'},ZMWd:function(e,n,o){var a={\"./tree-item.md\":\"WJ4t\"};function s(e){var n=t(e);return o(n)}function t(e){if(!o.o(a,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=t,e.exports=s,s.id=\"ZMWd\"}},[[\"8+d1\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}