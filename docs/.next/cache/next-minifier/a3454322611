{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{DXTT:function(n,a){n.exports='---\\nfilename: /packages/material-ui/src/ButtonGroup/ButtonGroup.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# ButtonGroup API\\n\\n<p class=\"description\">The API documentation of the ButtonGroup React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport ButtonGroup from \\'@material-ui/core/ButtonGroup\\';\\n// or\\nimport { ButtonGroup } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiButtonGroup` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the button group. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">color</span> | <span class=\"prop-type\">\\'default\\'<br>&#124;&nbsp;\\'inherit\\'<br>&#124;&nbsp;\\'primary\\'<br>&#124;&nbsp;\\'secondary\\'</span> | <span class=\"prop-default\">\\'default\\'</span> | The color of the component. It supports those theme colors that make sense for this component. |\\n| <span class=\"prop-name\">component</span> | <span class=\"prop-type\">elementType</span> | <span class=\"prop-default\">\\'div\\'</span> | The component used for the root node. Either a string to use a HTML element or a component. |\\n| <span class=\"prop-name\">disabled</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the buttons will be disabled. |\\n| <span class=\"prop-name\">disableElevation</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, no elevation is used. |\\n| <span class=\"prop-name\">disableFocusRipple</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the button keyboard focus ripple will be disabled. |\\n| <span class=\"prop-name\">disableRipple</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the button ripple effect will be disabled. |\\n| <span class=\"prop-name\">fullWidth</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the buttons will take up the full width of its container. |\\n| <span class=\"prop-name\">orientation</span> | <span class=\"prop-type\">\\'horizontal\\'<br>&#124;&nbsp;\\'vertical\\'</span> | <span class=\"prop-default\">\\'horizontal\\'</span> | The group orientation (layout flow direction). |\\n| <span class=\"prop-name\">size</span> | <span class=\"prop-type\">\\'large\\'<br>&#124;&nbsp;\\'medium\\'<br>&#124;&nbsp;\\'small\\'</span> | <span class=\"prop-default\">\\'medium\\'</span> | The size of the button. `small` is equivalent to the dense button styling. |\\n| <span class=\"prop-name\">variant</span> | <span class=\"prop-type\">\\'contained\\'<br>&#124;&nbsp;\\'outlined\\'<br>&#124;&nbsp;\\'text\\'</span> | <span class=\"prop-default\">\\'outlined\\'</span> | The variant to use. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiButtonGroup-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">contained</span> | <span class=\"prop-name\">.MuiButtonGroup-contained</span> | Styles applied to the root element if `variant=\"contained\"`.\\n| <span class=\"prop-name\">disableElevation</span> | <span class=\"prop-name\">.MuiButtonGroup-disableElevation</span> | Styles applied to the root element if `disableElevation={true}`.\\n| <span class=\"prop-name\">disabled</span> | <span class=\"prop-name\">.Mui-disabled</span> | Pseudo-class applied to child elements if `disabled={true}`.\\n| <span class=\"prop-name\">fullWidth</span> | <span class=\"prop-name\">.MuiButtonGroup-fullWidth</span> | Styles applied to the root element if `fullWidth={true}`.\\n| <span class=\"prop-name\">vertical</span> | <span class=\"prop-name\">.MuiButtonGroup-vertical</span> | Styles applied to the root element if `orientation=\"vertical\"`.\\n| <span class=\"prop-name\">grouped</span> | <span class=\"prop-name\">.MuiButtonGroup-grouped</span> | Styles applied to the children.\\n| <span class=\"prop-name\">groupedHorizontal</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedHorizontal</span> | Styles applied to the children if `orientation=\"horizontal\"`.\\n| <span class=\"prop-name\">groupedVertical</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedVertical</span> | Styles applied to the children if `orientation=\"vertical\"`.\\n| <span class=\"prop-name\">groupedText</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedText</span> | Styles applied to the children if `variant=\"text\"`.\\n| <span class=\"prop-name\">groupedTextHorizontal</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedTextHorizontal</span> | Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`.\\n| <span class=\"prop-name\">groupedTextVertical</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedTextVertical</span> | Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`.\\n| <span class=\"prop-name\">groupedTextPrimary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedTextPrimary</span> | Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`.\\n| <span class=\"prop-name\">groupedTextSecondary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedTextSecondary</span> | Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`.\\n| <span class=\"prop-name\">groupedOutlined</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedOutlined</span> | Styles applied to the children if `variant=\"outlined\"`.\\n| <span class=\"prop-name\">groupedOutlinedHorizontal</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedOutlinedHorizontal</span> | Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`.\\n| <span class=\"prop-name\">groupedOutlinedVertical</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedOutlinedVertical</span> | Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`.\\n| <span class=\"prop-name\">groupedOutlinedPrimary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedOutlinedPrimary</span> | Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`.\\n| <span class=\"prop-name\">groupedOutlinedSecondary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedOutlinedSecondary</span> | Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`.\\n| <span class=\"prop-name\">groupedContained</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedContained</span> | Styles applied to the children if `variant=\"contained\"`.\\n| <span class=\"prop-name\">groupedContainedHorizontal</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedContainedHorizontal</span> | Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`.\\n| <span class=\"prop-name\">groupedContainedVertical</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedContainedVertical</span> | Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`.\\n| <span class=\"prop-name\">groupedContainedPrimary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedContainedPrimary</span> | Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`.\\n| <span class=\"prop-name\">groupedContainedSecondary</span> | <span class=\"prop-name\">.MuiButtonGroup-groupedContainedSecondary</span> | Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ButtonGroup/ButtonGroup.js) for more detail.\\n\\n## Demos\\n\\n- [Button Group](/components/button-group/)\\n\\n'},Qqg0:function(n,a,e){var p={\"./button-group.md\":\"DXTT\"};function o(n){var a=t(n);return e(a)}function t(n){if(!e.o(p,n)){var a=new Error(\"Cannot find module '\"+n+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}return p[n]}o.keys=function(){return Object.keys(p)},o.resolve=t,n.exports=o,o.id=\"Qqg0\"},V7RP:function(n,a,e){\"use strict\";e.r(a),e.d(a,\"default\",(function(){return l}));var p=e(\"mXGw\"),o=e.n(p),t=e(\"e+1t\"),s=e(\"kVtE\"),r=o.a.createElement,i=e(\"Qqg0\");function l(n){var a=n.docs;return r(t.a,{docs:a})}l.getInitialProps=function(){var n=Object(s.a)({pageFilename:\"api/button-group\",requireRaw:i});return{demos:n.demos,docs:n.docs}}},j7UX:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/button-group\",function(){return e(\"V7RP\")}])}},[[\"j7UX\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}