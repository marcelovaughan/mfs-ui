{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[258],{\"/LkE\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return y}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"NbUR\"),i=t(\"pa6t\"),r=t(\"rXVv\"),u=t(\"hYlH\"),s=t(\"pQ8Y\"),g=t(\"eou5\"),c=t(\"THuk\"),m=a.a.createElement,d=m(g.a,{value:\"left\"},m(l.a,{fontSize:\"small\"})),p=m(g.a,{value:\"center\"},m(i.a,{fontSize:\"small\"})),f=m(g.a,{value:\"right\"},m(r.a,{fontSize:\"small\"})),v=m(g.a,{value:\"justify\"},m(u.a,{fontSize:\"small\"})),b=m(g.a,{value:\"left\"},m(l.a,null)),h=m(g.a,{value:\"center\"},m(i.a,null)),T=m(g.a,{value:\"right\"},m(r.a,null)),B=m(g.a,{value:\"justify\"},m(u.a,null)),w=m(g.a,{value:\"left\"},m(l.a,null)),F=m(g.a,{value:\"center\"},m(i.a,null)),A=m(g.a,{value:\"right\"},m(r.a,null)),x=m(g.a,{value:\"justify\"},m(u.a,null));function y(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=function(n,e){t(e)};return m(s.a,{container:!0,spacing:2,direction:\"column\",alignItems:\"center\"},m(s.a,{item:!0},m(c.a,{size:\"small\",value:e,exclusive:!0,onChange:o},d,p,f,v)),m(s.a,{item:!0},m(c.a,{size:\"medium\",value:e,exclusive:!0,onChange:o},b,h,T,B)),m(s.a,{item:!0},m(c.a,{size:\"large\",value:e,exclusive:!0,onChange:o},w,F,A,x)))}},\"01+B\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return p}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"ToJE\"),i=t(\"FB/d\"),r=t(\"M8y+\"),u=t(\"eou5\"),s=t(\"THuk\"),g=a.a.createElement,c=g(u.a,{value:\"list\",\"aria-label\":\"list\"},g(l.a,null)),m=g(u.a,{value:\"module\",\"aria-label\":\"module\"},g(i.a,null)),d=g(u.a,{value:\"quilt\",\"aria-label\":\"quilt\"},g(r.a,null));function p(){var n=a.a.useState(\"list\"),e=n[0],t=n[1];return g(s.a,{orientation:\"vertical\",value:e,exclusive:!0,onChange:function(n,e){t(e)}},c,m,d)}},\"39hq\":function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"}),\"FormatUnderlined\")},\"88hk\":function(n,e){n.exports='---\\ntitle: Toggle Button React component\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Toggle Buttons\\n\\n<p class=\"description\">Toggle buttons can be used to group related options.</p>\\n\\nTo emphasize groups of related [Toggle buttons](https://material.io/components/buttons#toggle-button), a group should share a common container. The `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## \\u0420\\u0430\\u0437\\u043c\\u0435\\u0440\\u044b\\n\\nFancy larger or smaller buttons? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange function.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Standalone toggle button\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Customized toggle button\\n\\n\\u041d\\u0438\\u0436\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u0438\\u0442\\u0441\\u044f \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440 \\u043a\\u0430\\u0441\\u0442\\u043e\\u043c\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430. You can learn more about this in the [overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## \\u0414\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u043e\\u0441\\u0442\\u044c\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.'},\"8PaL\":function(n,e){n.exports='---\\ntitle: Toggle Button React component\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Toggle Buttons\\n\\n<p class=\"description\">Toggle buttons can be used to group related options.</p>\\n\\nTo emphasize groups of related [Toggle buttons](https://material.io/components/buttons#toggle-button), a group should share a common container. The `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## Tailles\\n\\nFancy larger or smaller buttons? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange function.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Standalone toggle button\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Customized toggle button\\n\\nVoici un exemple de personnalisation du composant. Vous pouvez en savoir plus dans la [page de documentation des overrides](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## Accessibilit\\xe9\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.'},\"9Tkg\":function(n,e){n.exports='---\\ntitle: \\u5207\\u6362\\u6309\\u94ae React \\u7ec4\\u4ef6\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Toggle Button \\u5207\\u6362\\u6309\\u94ae\\n\\n<p class=\"description\">Toggle Buttons \\u53ef\\u7528\\u4e8e\\u5bf9\\u76f8\\u5173\\u9009\\u9879\\u8fdb\\u884c\\u5206\\u7ec4\\u3002</p>\\n\\n\\u4e3a\\u4e86\\u5f3a\\u8c03\\u7ec4\\u5408\\u4e4b\\u95f4\\u7684\\u5173\\u8054\\uff0c\\u6bcf\\u4e00\\u7ec4 [Toggle buttons](https://material.io/components/buttons#toggle-button) \\u5e94\\u8be5\\u5171\\u4eab\\u4e00\\u4e2a\\u5bb9\\u5668\\u3002 \\u5f53\\u7ed9\\u5b9a ToggleButtonGroup\\uff08\\u5207\\u6362\\u6309\\u94ae\\uff09 \\u7684 `value` \\u5c5e\\u6027\\u65f6\\uff0c\\u90a3\\u4e48 `ToggleButtonGroup` \\u5c31\\u53ef\\u4ee5\\u63a7\\u5236\\u5176\\u5b50\\u6309\\u94ae\\u7684\\u9009\\u62e9\\u72b6\\u6001\\u3002\\n\\n## \\u5355\\u9009\\n\\n\\u6587\\u672c\\u5bf9\\u9f50\\u7684\\u5207\\u6362\\u6309\\u94ae\\u63d0\\u4f9b\\u4e86 left, right, center, full \\u548c justified \\u7684\\u9009\\u9879\\uff0c\\u4f46\\u662f\\u6bcf\\u6b21\\u53ea\\u80fd\\u9009\\u62e9\\u4e00\\u4e2a\\u9879\\u76ee\\u3002 \\u9009\\u62e9\\u4e00\\u4e2a\\u9009\\u9879\\u5219\\u4f1a\\u53d6\\u6d88\\u5176\\u4ed6\\u9009\\u9879\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## \\u591a\\u9009\\n\\n\\u903b\\u8f91\\u5206\\u7ec4 (Logically-grouped) \\u7684\\u9009\\u9879\\uff08\\u5982\\u7c97\\u4f53\\uff0c\\u659c\\u4f53\\u548c\\u4e0b\\u5212\\u7ebf\\uff09\\u53ef\\u4ee5\\u5141\\u8bb8\\u6bcf\\u6b21\\u9009\\u62e9\\u591a\\u4e2a\\u9009\\u9879\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## \\u5c3a\\u5bf8\\n\\n\\u60a8\\u60f3\\u8981\\u4e00\\u4e2a\\u5927\\u4e00\\u70b9\\u6216\\u8005\\u5c0f\\u4e00\\u70b9\\u7684\\u6309\\u94ae\\u5417\\uff1f \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 `size` \\u5c5e\\u6027\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## \\u5782\\u76f4\\u6392\\u5217\\u7684\\u6309\\u94ae\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## \\u5f3a\\u5236\\u8bbe\\u7f6e\\u503c\\n\\n\\u5982\\u679c\\u8981\\u5f3a\\u5236\\u81f3\\u5c11\\u4e00\\u4e2a\\u6309\\u94ae\\u5904\\u4e8e\\u6d3b\\u52a8\\u72b6\\u6001\\uff0c\\u5219\\u53ef\\u4ee5\\u5b9e\\u73b0 handleChange \\u51fd\\u6570\\u3002\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## \\u5355\\u72ec\\u7684\\u5207\\u6362\\u6309\\u94ae\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## \\u81ea\\u5b9a\\u4e49\\u5207\\u6362\\u6309\\u94ae\\n\\n\\u4ee5\\u4e0b\\u662f\\u81ea\\u5b9a\\u4e49\\u7ec4\\u4ef6\\u7684\\u4e00\\u4e2a\\u793a\\u4f8b\\u3002 \\u60a8\\u53ef\\u4ee5\\u5728[\\u91cd\\u5199\\u6587\\u6863\\u9875](/customization/components/)\\u4e2d\\u4e86\\u89e3\\u6709\\u5173\\u6b64\\u5185\\u5bb9\\u7684\\u66f4\\u591a\\u4fe1\\u606f\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## \\u53ef\\u8bbf\\u95ee\\u6027\\n\\n- ToggleButtonGroup \\u5177\\u6709 `role=\"group\"`\\u3002 \\u60a8\\u5e94\\u8be5\\u63d0\\u4f9b\\u4e00\\u4e2a\\u53ef\\u8bbf\\u95ee\\u7684\\u6807\\u7b7e\\uff0c\\u6807\\u7b7e\\u5305\\u542b `aria-label=\"label\"`\\u3001`aria-labelledby=\"id\"` \\u6216 `<label>`\\u3002\\n- ToggleButton \\u6839\\u636e\\u6309\\u94ae\\u7684\\u72b6\\u6001\\u6765\\u8bbe\\u7f6e `aria-pressed=\"<bool>\"`\\u3002 \\u60a8\\u5e94\\u8be5\\u7528 `aria-label` \\u6807\\u8bb0\\u6bcf\\u4e2a\\u6309\\u94ae\\u3002'},\"9Y2Q\":function(n,e){n.exports='---\\ntitle: Schalter React Komponente\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Schalter (Toggle Buttons)\\n\\n<p class=\"description\">Schalter k\\xf6nnen verwendet werden, um verwandte Optionen zu gruppieren.</p>\\n\\nUm Gruppen von verwandten [Schaltern](https://material.io/components/buttons#toggle-button), hervorzuheben, sollte eine Gruppe einen gemeinsamen Container verwenden. The `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## Gr\\xf6\\xdfen\\n\\nFancy larger or smaller buttons? Verwenden Sie die `size` Prop.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange function.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Standalone toggle button\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Customized toggle button\\n\\nHier ist ein Beispiel zum Anpassen der Komponente. Mehr dazu erfahren Sie auf der [\\xdcberschreibungsdokumentationsseite](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## Barrierefreiheit\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.'},CGDK:function(n,e){n.exports=\"import React from 'react';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\n\\nexport default function StandaloneToggleButton() {\\n  const [selected, setSelected] = React.useState(false);\\n\\n  return (\\n    <ToggleButton\\n      value=\\\"check\\\"\\n      selected={selected}\\n      onChange={() => {\\n        setSelected(!selected);\\n      }}\\n    >\\n      <CheckIcon />\\n    </ToggleButton>\\n  );\\n}\\n\"},\"FB/d\":function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\"}),\"ViewModule\")},II0w:function(n,e){n.exports='---\\ntitle: crwdns92410:0crwdne92410:0\\ncomponents: crwdns92412:0crwdne92412:0\\n---\\n\\n# crwdns92414:0crwdne92414:0\\n\\n<p class=\"description\">crwdns92416:0crwdne92416:0</p>\\n\\ncrwdns132440:0crwdne132440:0 crwdns132442:0crwdne132442:0\\n\\n## crwdns132444:0crwdne132444:0\\n\\ncrwdns132446:0crwdne132446:0 crwdns132448:0crwdne132448:0\\n\\ncrwdns92422:0crwdne92422:0\\n\\n## crwdns132450:0crwdne132450:0\\n\\ncrwdns132452:0crwdne132452:0\\n\\ncrwdns132454:0crwdne132454:0\\n\\n## crwdns132456:0crwdne132456:0\\n\\ncrwdns132458:0crwdne132458:0 crwdns132460:0crwdne132460:0\\n\\ncrwdns132462:0crwdne132462:0\\n\\n## crwdns132680:0crwdne132680:0\\n\\ncrwdns132682:0crwdne132682:0\\n\\n## crwdns132684:0crwdne132684:0\\n\\ncrwdns132686:0crwdne132686:0\\n\\n```jsx\\ncrwdns109377:0crwdne109377:0\\n```\\n\\ncrwdns132688:0crwdne132688:0\\n\\n## crwdns132690:0crwdne132690:0\\n\\ncrwdns132692:0crwdne132692:0\\n\\n## crwdns132694:0crwdne132694:0\\n\\ncrwdns132696:0crwdne132696:0 crwdns132698:0crwdne132698:0\\n\\ncrwdns132700:0crwdne132700:0\\n\\n## crwdns132702:0crwdne132702:0\\n\\n- crwdns132484:0crwdne132484:0 crwdns132486:0crwdne132486:0\\n- crwdns132488:0crwdne132488:0 crwdns132490:0crwdne132490:0'},In0f:function(n,e,t){var o={\"./CustomizedDividers.js\":\"fyWk\",\"./CustomizedDividers.tsx\":\"PEGU\",\"./StandaloneToggleButton.js\":\"YiLH\",\"./StandaloneToggleButton.tsx\":\"UQQe\",\"./ToggleButtonNotEmpty.js\":\"JAbg\",\"./ToggleButtonNotEmpty.tsx\":\"aRtR\",\"./ToggleButtonSizes.js\":\"/LkE\",\"./ToggleButtonSizes.tsx\":\"vPKl\",\"./ToggleButtons.js\":\"PCDN\",\"./ToggleButtons.tsx\":\"XPlc\",\"./ToggleButtonsMultiple.js\":\"vtg3\",\"./ToggleButtonsMultiple.tsx\":\"jwSc\",\"./VerticalToggleButtons.js\":\"y4lD\",\"./VerticalToggleButtons.tsx\":\"01+B\"};function a(n){var e=l(n);return t(e)}function l(n){if(!t.o(o,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return o[n]}a.keys=function(){return Object.keys(o)},a.resolve=l,n.exports=a,a.id=\"In0f\"},J0AO:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M7 10l5 5 5-5z\"}),\"ArrowDropDown\")},JAbg:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return y}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"yZEQ\"),i=t(\"NbUR\"),r=t(\"pa6t\"),u=t(\"rXVv\"),s=t(\"hYlH\"),g=t(\"ScAB\"),c=t(\"dkt1\"),m=t(\"y6lT\"),d=t(\"pQ8Y\"),p=t(\"eou5\"),f=t(\"THuk\"),v=a.a.createElement,b=Object(l.a)((function(n){return{toggleContainer:{margin:n.spacing(2,0)}}})),h=v(p.a,{value:\"left\",\"aria-label\":\"left aligned\"},v(i.a,null)),T=v(p.a,{value:\"center\",\"aria-label\":\"centered\"},v(r.a,null)),B=v(p.a,{value:\"right\",\"aria-label\":\"right aligned\"},v(u.a,null)),w=v(p.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},v(s.a,null)),F=v(p.a,{value:\"laptop\",\"aria-label\":\"laptop\"},v(g.a,null)),A=v(p.a,{value:\"tv\",\"aria-label\":\"tv\"},v(c.a,null)),x=v(p.a,{value:\"phone\",\"aria-label\":\"phone\"},v(m.a,null));function y(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=a.a.useState((function(){return[\"phone\"]})),l=o[0],i=o[1],r=b();return v(d.a,{container:!0,spacing:2},v(d.a,{item:!0,sm:12,md:6},v(\"div\",{className:r.toggleContainer},v(f.a,{value:e,exclusive:!0,onChange:function(n,e){null!==e&&t(e)},\"aria-label\":\"text alignment\"},h,T,B,w))),v(d.a,{item:!0,sm:12,md:6},v(\"div\",{className:r.toggleContainer},v(f.a,{value:l,onChange:function(n,e){e.length&&i(e)},\"aria-label\":\"device\"},F,A,x))))}},\"KSo+\":function(n,e){n.exports=\"import React from 'react';\\nimport {\\n  makeStyles,\\n  withStyles,\\n  Theme,\\n  createStyles,\\n} from '@material-ui/core/styles';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport Divider from '@material-ui/core/Divider';\\nimport Paper from '@material-ui/core/Paper';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    paper: {\\n      display: 'flex',\\n      border: `1px solid ${theme.palette.divider}`,\\n      flexWrap: 'wrap',\\n    },\\n    divider: {\\n      margin: theme.spacing(1, 0.5),\\n    },\\n  }),\\n);\\n\\nconst StyledToggleButtonGroup = withStyles((theme) => ({\\n  grouped: {\\n    margin: theme.spacing(0.5),\\n    border: 'none',\\n    '&:not(:first-child)': {\\n      borderRadius: theme.shape.borderRadius,\\n    },\\n    '&:first-child': {\\n      borderRadius: theme.shape.borderRadius,\\n    },\\n  },\\n}))(ToggleButtonGroup);\\n\\nexport default function CustomizedDividers() {\\n  const [alignment, setAlignment] = React.useState('left');\\n  const [formats, setFormats] = React.useState(() => ['italic']);\\n\\n  const handleFormat = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newFormats: string[],\\n  ) => {\\n    setFormats(newFormats);\\n  };\\n\\n  const handleAlignment = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newAlignment: string,\\n  ) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Paper elevation={0} className={classes.paper}>\\n        <StyledToggleButtonGroup\\n          size=\\\"small\\\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleAlignment}\\n          aria-label=\\\"text alignment\\\"\\n        >\\n          <ToggleButton value=\\\"left\\\" aria-label=\\\"left aligned\\\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"center\\\" aria-label=\\\"centered\\\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"right\\\" aria-label=\\\"right aligned\\\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"justify\\\" aria-label=\\\"justified\\\" disabled>\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </StyledToggleButtonGroup>\\n        <Divider flexItem orientation=\\\"vertical\\\" className={classes.divider} />\\n        <StyledToggleButtonGroup\\n          size=\\\"small\\\"\\n          value={formats}\\n          onChange={handleFormat}\\n          aria-label=\\\"text formatting\\\"\\n        >\\n          <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\n            <FormatBoldIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\n            <FormatItalicIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\n            <FormatUnderlinedIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\n            <FormatColorFillIcon />\\n            <ArrowDropDownIcon />\\n          </ToggleButton>\\n        </StyledToggleButtonGroup>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\"},LUaK:function(n,e){n.exports=\"import React from 'react';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nexport default function ToggleButtonsMultiple() {\\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\\n\\n  const handleFormat = (event, newFormats) => {\\n    setFormats(newFormats);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      value={formats}\\n      onChange={handleFormat}\\n      aria-label=\\\"text formatting\\\"\\n    >\\n      <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\n        <FormatBoldIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\n        <FormatItalicIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\n        <FormatUnderlinedIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\n        <FormatColorFillIcon />\\n        <ArrowDropDownIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n\"},\"M8y+\":function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z\"}),\"ViewQuilt\")},M9Mc:function(n,e){n.exports='---\\ntitle: Toggle Button React component\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Toggle Buttons\\n\\n<p class=\"description\">Los botones de alternancia se pueden utilizar para agrupar opciones relacionadas.</p>\\n\\nTo emphasize groups of related [Toggle buttons](https://material.io/components/buttons#toggle-button), a group should share a common container. The `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## Tama\\xf1os\\n\\nBotones m\\xe1s grandes o m\\xe1s peque\\xf1os? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange function.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Bot\\xf3n de conmutaci\\xf3n independiente\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Bot\\xf3n de conmutaci\\xf3n personalizado\\n\\nHere is an example of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## Accesibilidad\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.'},NbUR:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"}),\"FormatAlignLeft\")},NciA:function(n,e){n.exports='import React from \\'react\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nexport default function ToggleButtons() {\\n  const [alignment, setAlignment] = React.useState<string | null>(\\'left\\');\\n\\n  const handleAlignment = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newAlignment: string | null,\\n  ) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      value={alignment}\\n      exclusive\\n      onChange={handleAlignment}\\n      aria-label=\"text alignment\"\\n    >\\n      <ToggleButton value=\"left\" aria-label=\"left aligned\">\\n        <FormatAlignLeftIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"center\" aria-label=\"centered\">\\n        <FormatAlignCenterIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"right\" aria-label=\"right aligned\">\\n        <FormatAlignRightIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\\n        <FormatAlignJustifyIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n'},PCDN:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return v}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"NbUR\"),i=t(\"pa6t\"),r=t(\"rXVv\"),u=t(\"hYlH\"),s=t(\"eou5\"),g=t(\"THuk\"),c=a.a.createElement,m=c(s.a,{value:\"left\",\"aria-label\":\"left aligned\"},c(l.a,null)),d=c(s.a,{value:\"center\",\"aria-label\":\"centered\"},c(i.a,null)),p=c(s.a,{value:\"right\",\"aria-label\":\"right aligned\"},c(r.a,null)),f=c(s.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},c(u.a,null));function v(){var n=a.a.useState(\"left\"),e=n[0],t=n[1];return c(g.a,{value:e,exclusive:!0,onChange:function(n,e){t(e)},\"aria-label\":\"text alignment\"},m,d,p,f)}},PEGU:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return R}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"yZEQ\"),i=t(\"WLtd\"),r=t(\"XpU0\"),u=t(\"NbUR\"),s=t(\"pa6t\"),g=t(\"rXVv\"),c=t(\"hYlH\"),m=t(\"xi/j\"),d=t(\"YmQZ\"),p=t(\"39hq\"),f=t(\"tu/a\"),v=t(\"J0AO\"),b=t(\"FAXT\"),h=t(\"VPks\"),T=t(\"eou5\"),B=t(\"THuk\"),w=a.a.createElement,F=Object(l.a)((function(n){return Object(i.a)({paper:{display:\"flex\",border:\"1px solid \".concat(n.palette.divider),flexWrap:\"wrap\"},divider:{margin:n.spacing(1,.5)}})})),A=Object(r.default)((function(n){return{grouped:{margin:n.spacing(.5),border:\"none\",\"&:not(:first-child)\":{borderRadius:n.shape.borderRadius},\"&:first-child\":{borderRadius:n.shape.borderRadius}}}}))(B.a),x=w(T.a,{value:\"left\",\"aria-label\":\"left aligned\"},w(u.a,null)),y=w(T.a,{value:\"center\",\"aria-label\":\"centered\"},w(s.a,null)),I=w(T.a,{value:\"right\",\"aria-label\":\"right aligned\"},w(g.a,null)),G=w(T.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},w(c.a,null)),j=w(T.a,{value:\"bold\",\"aria-label\":\"bold\"},w(m.a,null)),C=w(T.a,{value:\"italic\",\"aria-label\":\"italic\"},w(d.a,null)),z=w(T.a,{value:\"underlined\",\"aria-label\":\"underlined\"},w(p.a,null)),S=w(T.a,{value:\"color\",\"aria-label\":\"color\",disabled:!0},w(f.a,null),w(v.a,null));function R(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=a.a.useState((function(){return[\"italic\"]})),l=o[0],i=o[1],r=F();return w(\"div\",null,w(h.a,{elevation:0,className:r.paper},w(A,{size:\"small\",value:e,exclusive:!0,onChange:function(n,e){t(e)},\"aria-label\":\"text alignment\"},x,y,I,G),w(b.a,{flexItem:!0,orientation:\"vertical\",className:r.divider}),w(A,{size:\"small\",value:l,onChange:function(n,e){i(e)},\"aria-label\":\"text formatting\"},j,C,z,S)))}},Rmic:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport Divider from '@material-ui/core/Divider';\\nimport Paper from '@material-ui/core/Paper';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  paper: {\\n    display: 'flex',\\n    border: `1px solid ${theme.palette.divider}`,\\n    flexWrap: 'wrap',\\n  },\\n  divider: {\\n    margin: theme.spacing(1, 0.5),\\n  },\\n}));\\n\\nconst StyledToggleButtonGroup = withStyles((theme) => ({\\n  grouped: {\\n    margin: theme.spacing(0.5),\\n    border: 'none',\\n    '&:not(:first-child)': {\\n      borderRadius: theme.shape.borderRadius,\\n    },\\n    '&:first-child': {\\n      borderRadius: theme.shape.borderRadius,\\n    },\\n  },\\n}))(ToggleButtonGroup);\\n\\nexport default function CustomizedDividers() {\\n  const [alignment, setAlignment] = React.useState('left');\\n  const [formats, setFormats] = React.useState(() => ['italic']);\\n\\n  const handleFormat = (event, newFormats) => {\\n    setFormats(newFormats);\\n  };\\n\\n  const handleAlignment = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Paper elevation={0} className={classes.paper}>\\n        <StyledToggleButtonGroup\\n          size=\\\"small\\\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleAlignment}\\n          aria-label=\\\"text alignment\\\"\\n        >\\n          <ToggleButton value=\\\"left\\\" aria-label=\\\"left aligned\\\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"center\\\" aria-label=\\\"centered\\\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"right\\\" aria-label=\\\"right aligned\\\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"justify\\\" aria-label=\\\"justified\\\" disabled>\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </StyledToggleButtonGroup>\\n        <Divider flexItem orientation=\\\"vertical\\\" className={classes.divider} />\\n        <StyledToggleButtonGroup\\n          size=\\\"small\\\"\\n          value={formats}\\n          onChange={handleFormat}\\n          aria-label=\\\"text formatting\\\"\\n        >\\n          <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\n            <FormatBoldIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\n            <FormatItalicIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\n            <FormatUnderlinedIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\n            <FormatColorFillIcon />\\n            <ArrowDropDownIcon />\\n          </ToggleButton>\\n        </StyledToggleButtonGroup>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\"},ScAB:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\"}),\"Laptop\")},TYJ9:function(n,e){n.exports='import React from \\'react\\';\\nimport { makeStyles } from \\'@material-ui/core/styles\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport LaptopIcon from \\'@material-ui/icons/Laptop\\';\\nimport TvIcon from \\'@material-ui/icons/Tv\\';\\nimport PhoneAndroidIcon from \\'@material-ui/icons/PhoneAndroid\\';\\nimport Grid from \\'@material-ui/core/Grid\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  toggleContainer: {\\n    margin: theme.spacing(2, 0),\\n  },\\n}));\\n\\nexport default function ToggleButtonNotEmpty() {\\n  const [alignment, setAlignment] = React.useState(\\'left\\');\\n  const [formats, setFormats] = React.useState(() => [\\'phone\\']);\\n\\n  const handleFormat = (event, newFormats) => {\\n    if (newFormats.length) {\\n      setFormats(newFormats);\\n    }\\n  };\\n\\n  const handleAlignment = (event, newAlignment) => {\\n    if (newAlignment !== null) {\\n      setAlignment(newAlignment);\\n    }\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container spacing={2}>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            value={alignment}\\n            exclusive\\n            onChange={handleAlignment}\\n            aria-label=\"text alignment\"\\n          >\\n            <ToggleButton value=\"left\" aria-label=\"left aligned\">\\n              <FormatAlignLeftIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"center\" aria-label=\"centered\">\\n              <FormatAlignCenterIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"right\" aria-label=\"right aligned\">\\n              <FormatAlignRightIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\\n              <FormatAlignJustifyIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n      </Grid>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            value={formats}\\n            onChange={handleFormat}\\n            aria-label=\"device\"\\n          >\\n            <ToggleButton value=\"laptop\" aria-label=\"laptop\">\\n              <LaptopIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"tv\" aria-label=\"tv\">\\n              <TvIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"phone\" aria-label=\"phone\">\\n              <PhoneAndroidIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n'},ToJE:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\"}),\"ViewList\")},UQQe:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return s}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"XSg6\"),i=t(\"eou5\"),r=a.a.createElement,u=r(l.a,null);function s(){var n=a.a.useState(!1),e=n[0],t=n[1];return r(i.a,{value:\"check\",selected:e,onChange:function(){t(!e)}},u)}},VUFl:function(n,e){n.exports='---\\ntitle: Toggle Button React component\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# \\u30c8\\u30b0\\u30eb\\u30dc\\u30bf\\u30f3\\n\\n<p class=\"description\">\\u30c8\\u30b0\\u30eb\\u30dc\\u30bf\\u30f3\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001\\u95a2\\u9023\\u3059\\u308b\\u30aa\\u30d7\\u30b7\\u30e7\\u30f3\\u3092\\u30b0\\u30eb\\u30fc\\u30d7\\u5316\\u3067\\u304d\\u307e\\u3059\\u3002</p>\\n\\n\\u95a2\\u9023\\u3059\\u308b [Toggle buttons](https://material.io/components/buttons#toggle-button)\\u306e\\u30b0\\u30eb\\u30fc\\u30d7\\u3092\\u5f37\\u8abf\\u3059\\u308b\\u306b\\u306f\\u3001\\u6b21\\u306e\\u64cd\\u4f5c\\u3092\\u884c\\u3044\\u307e\\u3059\\u3002 \\u30b0\\u30eb\\u30fc\\u30d7\\u306f\\u5171\\u901a\\u306e\\u30b3\\u30f3\\u30c6\\u30ca\\u30fc\\u3092\\u5171\\u7528\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 The `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## \\u30b5\\u30a4\\u30ba\\n\\n\\u5927\\u304d\\u306a\\u30dc\\u30bf\\u30f3\\u3068\\u5c0f\\u3055\\u306a\\u30dc\\u30bf\\u30f3\\u304c\\u3042\\u308a\\u307e\\u3059\\u304b? `size`prop\\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange function.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## \\u30b9\\u30bf\\u30f3\\u30c9\\u30a2\\u30ed\\u30f3\\u306e\\u30c8\\u30b0\\u30eb\\u30dc\\u30bf\\u30f3\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Customized toggle button\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u4f8b\\u3092\\u6b21\\u306b\\u793a\\u3057\\u307e\\u3059\\u3002 \\u8a73\\u7d30\\u306b\\u3064\\u3044\\u3066\\u306f\\u3001 [\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u306e\\u30c9\\u30ad\\u30e5\\u30e1\\u30f3\\u30c8\\u30da\\u30fc\\u30b8](/customization/components/)\\u3092\\u53c2\\u7167\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## \\u30a2\\u30af\\u30bb\\u30b7\\u30d3\\u30ea\\u30c6\\u30a3\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.'},WLtd:function(n,e,t){\"use strict\";function o(n){return n}t.d(e,\"a\",(function(){return o}))},\"X/Cr\":function(n,e,t){var o={\"./CustomizedDividers.js\":\"Rmic\",\"./CustomizedDividers.tsx\":\"KSo+\",\"./StandaloneToggleButton.js\":\"CGDK\",\"./StandaloneToggleButton.tsx\":\"jwSG\",\"./ToggleButtonNotEmpty.js\":\"TYJ9\",\"./ToggleButtonNotEmpty.tsx\":\"vnqq\",\"./ToggleButtonSizes.js\":\"tYdh\",\"./ToggleButtonSizes.tsx\":\"tmyI\",\"./ToggleButtons.js\":\"givr\",\"./ToggleButtons.tsx\":\"NciA\",\"./ToggleButtonsMultiple.js\":\"LUaK\",\"./ToggleButtonsMultiple.tsx\":\"wIXp\",\"./VerticalToggleButtons.js\":\"dv1v\",\"./VerticalToggleButtons.tsx\":\"t/t9\",\"./toggle-button-aa.md\":\"II0w\",\"./toggle-button-de.md\":\"9Y2Q\",\"./toggle-button-es.md\":\"M9Mc\",\"./toggle-button-fr.md\":\"8PaL\",\"./toggle-button-ja.md\":\"VUFl\",\"./toggle-button-pt.md\":\"f5lT\",\"./toggle-button-ru.md\":\"88hk\",\"./toggle-button-zh.md\":\"9Tkg\",\"./toggle-button.md\":\"byW/\"};function a(n){var e=l(n);return t(e)}function l(n){if(!t.o(o,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return o[n]}a.keys=function(){return Object.keys(o)},a.resolve=l,n.exports=a,a.id=\"X/Cr\"},XPlc:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return v}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"NbUR\"),i=t(\"pa6t\"),r=t(\"rXVv\"),u=t(\"hYlH\"),s=t(\"eou5\"),g=t(\"THuk\"),c=a.a.createElement,m=c(s.a,{value:\"left\",\"aria-label\":\"left aligned\"},c(l.a,null)),d=c(s.a,{value:\"center\",\"aria-label\":\"centered\"},c(i.a,null)),p=c(s.a,{value:\"right\",\"aria-label\":\"right aligned\"},c(r.a,null)),f=c(s.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},c(u.a,null));function v(){var n=a.a.useState(\"left\"),e=n[0],t=n[1];return c(g.a,{value:e,exclusive:!0,onChange:function(n,e){t(e)},\"aria-label\":\"text alignment\"},m,d,p,f)}},XSg6:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"}),\"Check\")},YiLH:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return s}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"XSg6\"),i=t(\"eou5\"),r=a.a.createElement,u=r(l.a,null);function s(){var n=a.a.useState(!1),e=n[0],t=n[1];return r(i.a,{value:\"check\",selected:e,onChange:function(){t(!e)}},u)}},YmQZ:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"}),\"FormatItalic\")},aRtR:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return y}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"yZEQ\"),i=t(\"NbUR\"),r=t(\"pa6t\"),u=t(\"rXVv\"),s=t(\"hYlH\"),g=t(\"ScAB\"),c=t(\"dkt1\"),m=t(\"y6lT\"),d=t(\"pQ8Y\"),p=t(\"eou5\"),f=t(\"THuk\"),v=a.a.createElement,b=Object(l.a)((function(n){return{toggleContainer:{margin:n.spacing(2,0)}}})),h=v(p.a,{value:\"left\",\"aria-label\":\"left aligned\"},v(i.a,null)),T=v(p.a,{value:\"center\",\"aria-label\":\"centered\"},v(r.a,null)),B=v(p.a,{value:\"right\",\"aria-label\":\"right aligned\"},v(u.a,null)),w=v(p.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},v(s.a,null)),F=v(p.a,{value:\"laptop\",\"aria-label\":\"laptop\"},v(g.a,null)),A=v(p.a,{value:\"tv\",\"aria-label\":\"tv\"},v(c.a,null)),x=v(p.a,{value:\"phone\",\"aria-label\":\"phone\"},v(m.a,null));function y(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=a.a.useState((function(){return[\"phone\"]})),l=o[0],i=o[1],r=b();return v(d.a,{container:!0,spacing:2},v(d.a,{item:!0,sm:12,md:6},v(\"div\",{className:r.toggleContainer},v(f.a,{value:e,exclusive:!0,onChange:function(n,e){null!==e&&t(e)},\"aria-label\":\"text alignment\"},h,T,B,w))),v(d.a,{item:!0,sm:12,md:6},v(\"div\",{className:r.toggleContainer},v(f.a,{value:l,onChange:function(n,e){e.length&&i(e)},\"aria-label\":\"device\"},F,A,x))))}},\"byW/\":function(n,e){n.exports='---\\ntitle: Toggle Button React component\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Toggle Buttons\\n\\n<p class=\"description\">Toggle buttons can be used to group related options.</p>\\n\\nTo emphasize groups of related [Toggle buttons](https://material.io/components/buttons#toggle-button),\\na group should share a common container.\\nThe `ToggleButtonGroup` controls the selected state of its child buttons when given its own `value` prop.\\n\\n## Exclusive selection\\n\\nText justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time.\\nSelecting one option deselects any other.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Multiple selection\\n\\nLogically-grouped options, like bold, italic, and underline, allow multiple options to be selected.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## Sizes\\n\\nFancy larger or smaller buttons? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Vertical buttons\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## Enforce value set\\n\\nIf you want to enforce at least one button to be active, you can adapt your handleChange\\nfunction.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Standalone toggle button\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Customized toggle button\\n\\nHere is an example of customizing the component. You can learn more about this in the\\n[overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## Accessibility\\n\\n- ToggleButtonGroup has `role=\"group\"`. You should provide an accessible label with `aria-label=\"label\"`, `aria-labelledby=\"id\"` or `<label>`.\\n- ToggleButton sets `aria-pressed=\"<bool>\"` according to the button state. You should label each button with `aria-label`.\\n'},dkt1:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12z\"}),\"Tv\")},dv1v:function(n,e){n.exports=\"import React from 'react';\\nimport ViewListIcon from '@material-ui/icons/ViewList';\\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nexport default function VerticalToggleButtons() {\\n  const [view, setView] = React.useState('list');\\n\\n  const handleChange = (event, nextView) => {\\n    setView(nextView);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      orientation=\\\"vertical\\\"\\n      value={view}\\n      exclusive\\n      onChange={handleChange}\\n    >\\n      <ToggleButton value=\\\"list\\\" aria-label=\\\"list\\\">\\n        <ViewListIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"module\\\" aria-label=\\\"module\\\">\\n        <ViewModuleIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"quilt\\\" aria-label=\\\"quilt\\\">\\n        <ViewQuiltIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n\"},f5lT:function(n,e){n.exports='---\\ntitle: Componente React para Bot\\xf5es de Altern\\xe2ncia\\ncomponents: ToggleButton, ToggleButtonGroup\\n---\\n\\n# Bot\\xf5es de altern\\xe2ncia\\n\\n<p class=\"description\">Os bot\\xf5es de altern\\xe2ncia podem ser usados para agrupar op\\xe7\\xf5es relacionadas.</p>\\n\\nPara enfatizar grupos de [bot\\xf5es de altern\\xe2ncia](https://material.io/components/buttons#toggle-button) relacionados, o grupo deve ter um container em comum. O `ToggleButtonGroup` controla o estado selecionado de seus bot\\xf5es filhos atrav\\xe9s de sua propriedade `value`.\\n\\n## Sele\\xe7\\xe3o exclusiva\\n\\nBot\\xf5es de altern\\xe2ncia para justifica\\xe7\\xe3o ou alinhamento de texto apresentam op\\xe7\\xf5es como esquerda, direita, centro, distribu\\xeddo e justificado, com apenas um item dispon\\xedvel para sele\\xe7\\xe3o por vez. Selecionar uma op\\xe7\\xe3o ir\\xe1 desmarcar qualquer outra.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtons.js\"}}\\n\\n## Sele\\xe7\\xe3o m\\xfaltipla\\n\\nOp\\xe7\\xf5es l\\xf3gicas agrupadas, como negrito, it\\xe1lico e sublinhado, permitem a sele\\xe7\\xe3o de m\\xfaltiplas op\\xe7\\xf5es.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonsMultiple.js\"}}\\n\\n## Tamanhos\\n\\nGosta de bot\\xf5es maiores ou menores? Use a propriedade `size`.\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonSizes.js\"}}\\n\\n## Bot\\xf5es verticais\\n\\n{{\"demo\": \"pages/components/toggle-button/VerticalToggleButtons.js\"}}\\n\\n## For\\xe7ar valor definido\\n\\nSe voc\\xea deseja for\\xe7ar para pelo menos um bot\\xe3o estar ativo, voc\\xea pode adaptar sua fun\\xe7\\xe3o handleChange.\\n\\n```jsx\\nconst handleFormat = (event, newFormats) => {\\n  if (newFormats.length) {\\n    setFormats(newFormats);\\n  }\\n};\\n\\nconst handleAlignment = (event, newAlignment) => {\\n  if (newAlignment !== null) {\\n    setAlignment(newAlignment);\\n  }\\n};\\n```\\n\\n{{\"demo\": \"pages/components/toggle-button/ToggleButtonNotEmpty.js\"}}\\n\\n## Bot\\xe3o de altern\\xe2ncia aut\\xf4nomo\\n\\n{{\"demo\": \"pages/components/toggle-button/StandaloneToggleButton.js\"}}\\n\\n## Bot\\xe3o de altern\\xe2ncia customizado\\n\\nAqui est\\xe1 um exemplo de customiza\\xe7\\xe3o do componente. Voc\\xea pode aprender mais sobre isso na [p\\xe1gina de documenta\\xe7\\xe3o de sobrescritas](/customization/components/).\\n\\n{{\"demo\": \"pages/components/toggle-button/CustomizedDividers.js\", \"bg\": true}}\\n\\n## Acessibilidade\\n\\n- ToggleButtonGroup possui `role=\"group\"`. Voc\\xea deve fornecer um r\\xf3tulo acess\\xedvel com `aria-label=\"label\"`, `aria-labelledby=\"id\"` ou `<label>`.\\n- ToggleButton define `aria-pressed=\"<bool>\"` de acordo com o estado do bot\\xe3o. Voc\\xea deve rotular cada bot\\xe3o com `aria-label`.'},fnJA:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/components/toggle-button\",function(){return t(\"kHxQ\")}])},fyWk:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return S}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"yZEQ\"),i=t(\"XpU0\"),r=t(\"NbUR\"),u=t(\"pa6t\"),s=t(\"rXVv\"),g=t(\"hYlH\"),c=t(\"xi/j\"),m=t(\"YmQZ\"),d=t(\"39hq\"),p=t(\"tu/a\"),f=t(\"J0AO\"),v=t(\"FAXT\"),b=t(\"VPks\"),h=t(\"eou5\"),T=t(\"THuk\"),B=a.a.createElement,w=Object(l.a)((function(n){return{paper:{display:\"flex\",border:\"1px solid \".concat(n.palette.divider),flexWrap:\"wrap\"},divider:{margin:n.spacing(1,.5)}}})),F=Object(i.default)((function(n){return{grouped:{margin:n.spacing(.5),border:\"none\",\"&:not(:first-child)\":{borderRadius:n.shape.borderRadius},\"&:first-child\":{borderRadius:n.shape.borderRadius}}}}))(T.a),A=B(h.a,{value:\"left\",\"aria-label\":\"left aligned\"},B(r.a,null)),x=B(h.a,{value:\"center\",\"aria-label\":\"centered\"},B(u.a,null)),y=B(h.a,{value:\"right\",\"aria-label\":\"right aligned\"},B(s.a,null)),I=B(h.a,{value:\"justify\",\"aria-label\":\"justified\",disabled:!0},B(g.a,null)),G=B(h.a,{value:\"bold\",\"aria-label\":\"bold\"},B(c.a,null)),j=B(h.a,{value:\"italic\",\"aria-label\":\"italic\"},B(m.a,null)),C=B(h.a,{value:\"underlined\",\"aria-label\":\"underlined\"},B(d.a,null)),z=B(h.a,{value:\"color\",\"aria-label\":\"color\",disabled:!0},B(p.a,null),B(f.a,null));function S(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=a.a.useState((function(){return[\"italic\"]})),l=o[0],i=o[1],r=w();return B(\"div\",null,B(b.a,{elevation:0,className:r.paper},B(F,{size:\"small\",value:e,exclusive:!0,onChange:function(n,e){t(e)},\"aria-label\":\"text alignment\"},A,x,y,I),B(v.a,{flexItem:!0,orientation:\"vertical\",className:r.divider}),B(F,{size:\"small\",value:l,onChange:function(n,e){i(e)},\"aria-label\":\"text formatting\"},G,j,C,z)))}},givr:function(n,e){n.exports='import React from \\'react\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nexport default function ToggleButtons() {\\n  const [alignment, setAlignment] = React.useState(\\'left\\');\\n\\n  const handleAlignment = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      value={alignment}\\n      exclusive\\n      onChange={handleAlignment}\\n      aria-label=\"text alignment\"\\n    >\\n      <ToggleButton value=\"left\" aria-label=\"left aligned\">\\n        <FormatAlignLeftIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"center\" aria-label=\"centered\">\\n        <FormatAlignCenterIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"right\" aria-label=\"right aligned\">\\n        <FormatAlignRightIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\\n        <FormatAlignJustifyIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n'},hYlH:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"}),\"FormatAlignJustify\")},jwSG:function(n,e){n.exports=\"import React from 'react';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\n\\nexport default function StandaloneToggleButton() {\\n  const [selected, setSelected] = React.useState(false);\\n\\n  return (\\n    <ToggleButton\\n      value=\\\"check\\\"\\n      selected={selected}\\n      onChange={() => {\\n        setSelected(!selected);\\n      }}\\n    >\\n      <CheckIcon />\\n    </ToggleButton>\\n  );\\n}\\n\"},jwSc:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return b}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"xi/j\"),i=t(\"YmQZ\"),r=t(\"39hq\"),u=t(\"tu/a\"),s=t(\"J0AO\"),g=t(\"eou5\"),c=t(\"THuk\"),m=a.a.createElement,d=m(g.a,{value:\"bold\",\"aria-label\":\"bold\"},m(l.a,null)),p=m(g.a,{value:\"italic\",\"aria-label\":\"italic\"},m(i.a,null)),f=m(g.a,{value:\"underlined\",\"aria-label\":\"underlined\"},m(r.a,null)),v=m(g.a,{value:\"color\",\"aria-label\":\"color\",disabled:!0},m(u.a,null),m(s.a,null));function b(){var n=a.a.useState((function(){return[\"bold\",\"italic\"]})),e=n[0],t=n[1];return m(c.a,{value:e,onChange:function(n,e){t(e)},\"aria-label\":\"text formatting\"},d,p,f,v)}},kHxQ:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return g}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"e+1t\"),i=t(\"kVtE\"),r=a.a.createElement,u=t(\"In0f\"),s=t(\"X/Cr\");function g(n){var e=n.demos,t=n.docs;return r(l.a,{demos:e,docs:t,requireDemo:u})}g.getInitialProps=function(){var n=Object(i.a)({pageFilename:\"components/toggle-button\",requireRaw:s});return{demos:n.demos,docs:n.docs}}},pQ8Y:function(n,e,t){\"use strict\";var o=t(\"2Fjn\"),a=t(\"bZJ2\"),l=t(\"yLsn\"),i=t.n(l),r=t(\"z3IF\"),u=t(\"mXGw\"),s=t(\"PDtE\"),g=t(\"XpU0\"),c=u.createElement,m=[0,1,2,3,4,5,6,7,8,9,10],d=[\"auto\",!0,1,2,3,4,5,6,7,8,9,10,11,12];function p(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=i()(n);return\"\".concat(t/e).concat(String(n).replace(String(t),\"\")||\"px\")}var f=u.forwardRef((function(n,e){var t=n.alignContent,a=void 0===t?\"stretch\":t,l=n.alignItems,i=void 0===l?\"stretch\":l,u=n.classes,g=n.className,m=n.component,d=void 0===m?\"div\":m,p=n.container,f=void 0!==p&&p,v=n.direction,b=void 0===v?\"row\":v,h=n.item,T=void 0!==h&&h,B=n.justify,w=void 0===B?\"flex-start\":B,F=n.lg,A=void 0!==F&&F,x=n.md,y=void 0!==x&&x,I=n.sm,G=void 0!==I&&I,j=n.spacing,C=void 0===j?0:j,z=n.wrap,S=void 0===z?\"wrap\":z,R=n.xl,E=void 0!==R&&R,V=n.xs,M=void 0!==V&&V,H=n.zeroMinWidth,L=void 0!==H&&H,k=Object(o.a)(n,[\"alignContent\",\"alignItems\",\"classes\",\"className\",\"component\",\"container\",\"direction\",\"item\",\"justify\",\"lg\",\"md\",\"sm\",\"spacing\",\"wrap\",\"xl\",\"xs\",\"zeroMinWidth\"]),D=Object(s.a)(u.root,g,f&&[u.container,0!==C&&u[\"spacing-xs-\".concat(String(C))]],T&&u.item,L&&u.zeroMinWidth,\"row\"!==b&&u[\"direction-xs-\".concat(String(b))],\"wrap\"!==S&&u[\"wrap-xs-\".concat(String(S))],\"stretch\"!==i&&u[\"align-items-xs-\".concat(String(i))],\"stretch\"!==a&&u[\"align-content-xs-\".concat(String(a))],\"flex-start\"!==w&&u[\"justify-xs-\".concat(String(w))],!1!==M&&u[\"grid-xs-\".concat(String(M))],!1!==G&&u[\"grid-sm-\".concat(String(G))],!1!==y&&u[\"grid-md-\".concat(String(y))],!1!==A&&u[\"grid-lg-\".concat(String(A))],!1!==E&&u[\"grid-xl-\".concat(String(E))]);return c(d,Object(r.a)({className:D,ref:e},k))})),v=Object(g.default)((function(n){return Object(a.a)(Object(a.a)({root:{},container:{boxSizing:\"border-box\",display:\"flex\",flexWrap:\"wrap\",width:\"100%\"},item:{boxSizing:\"border-box\",margin:\"0\"},zeroMinWidth:{minWidth:0},\"direction-xs-column\":{flexDirection:\"column\"},\"direction-xs-column-reverse\":{flexDirection:\"column-reverse\"},\"direction-xs-row-reverse\":{flexDirection:\"row-reverse\"},\"wrap-xs-nowrap\":{flexWrap:\"nowrap\"},\"wrap-xs-wrap-reverse\":{flexWrap:\"wrap-reverse\"},\"align-items-xs-center\":{alignItems:\"center\"},\"align-items-xs-flex-start\":{alignItems:\"flex-start\"},\"align-items-xs-flex-end\":{alignItems:\"flex-end\"},\"align-items-xs-baseline\":{alignItems:\"baseline\"},\"align-content-xs-center\":{alignContent:\"center\"},\"align-content-xs-flex-start\":{alignContent:\"flex-start\"},\"align-content-xs-flex-end\":{alignContent:\"flex-end\"},\"align-content-xs-space-between\":{alignContent:\"space-between\"},\"align-content-xs-space-around\":{alignContent:\"space-around\"},\"justify-xs-center\":{justifyContent:\"center\"},\"justify-xs-flex-end\":{justifyContent:\"flex-end\"},\"justify-xs-space-between\":{justifyContent:\"space-between\"},\"justify-xs-space-around\":{justifyContent:\"space-around\"},\"justify-xs-space-evenly\":{justifyContent:\"space-evenly\"}},function(n,e){var t={};return m.forEach((function(o){var a=n.spacing(o);0!==a&&(t[\"spacing-\".concat(e,\"-\").concat(o)]={margin:\"-\".concat(p(a,2)),width:\"calc(100% + \".concat(p(a),\")\"),\"& > $item\":{padding:p(a,2)}})})),t}(n,\"xs\")),n.breakpoints.keys.reduce((function(e,t){return function(n,e,t){var o={};d.forEach((function(n){var e=\"grid-\".concat(t,\"-\").concat(n);if(!0!==n)if(\"auto\"!==n){var a=\"\".concat(Math.round(n/12*1e8)/1e6,\"%\");o[e]={flexBasis:a,flexGrow:0,maxWidth:a}}else o[e]={flexBasis:\"auto\",flexGrow:0,maxWidth:\"none\"};else o[e]={flexBasis:0,flexGrow:1,maxWidth:\"100%\"}})),\"xs\"===t?Object(r.a)(n,o):n[e.breakpoints.up(t)]=o}(e,n,t),e}),{}))}),{name:\"MuiGrid\"})(f);e.a=v},pa6t:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"}),\"FormatAlignCenter\")},rXVv:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"}),\"FormatAlignRight\")},\"t/t9\":function(n,e){n.exports=\"import React from 'react';\\nimport ViewListIcon from '@material-ui/icons/ViewList';\\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nexport default function VerticalToggleButtons() {\\n  const [view, setView] = React.useState('list');\\n\\n  const handleChange = (\\n    event: React.MouseEvent<HTMLElement>,\\n    nextView: string,\\n  ) => {\\n    setView(nextView);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      orientation=\\\"vertical\\\"\\n      value={view}\\n      exclusive\\n      onChange={handleChange}\\n    >\\n      <ToggleButton value=\\\"list\\\" aria-label=\\\"list\\\">\\n        <ViewListIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"module\\\" aria-label=\\\"module\\\">\\n        <ViewModuleIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"quilt\\\" aria-label=\\\"quilt\\\">\\n        <ViewQuiltIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n\"},tYdh:function(n,e){n.exports='import React from \\'react\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport Grid from \\'@material-ui/core/Grid\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nexport default function ToggleButtonSizes() {\\n  const [alignment, setAlignment] = React.useState(\\'left\\');\\n\\n  const handleChange = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  return (\\n    <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"small\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon fontSize=\"small\" />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"medium\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"large\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n'},tmyI:function(n,e){n.exports='import React from \\'react\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport Grid from \\'@material-ui/core/Grid\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nexport default function ToggleButtonSizes() {\\n  const [alignment, setAlignment] = React.useState(\\'left\\');\\n\\n  const handleChange = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newAlignment: string,\\n  ) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  return (\\n    <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"small\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon fontSize=\"small\" />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon fontSize=\"small\" />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"medium\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup\\n          size=\"large\"\\n          value={alignment}\\n          exclusive\\n          onChange={handleChange}\\n        >\\n          <ToggleButton value=\"left\">\\n            <FormatAlignLeftIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"center\">\\n            <FormatAlignCenterIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"right\">\\n            <FormatAlignRightIcon />\\n          </ToggleButton>\\n          <ToggleButton value=\"justify\">\\n            <FormatAlignJustifyIcon />\\n          </ToggleButton>\\n        </ToggleButtonGroup>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n'},\"tu/a\":function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t.n(o),l=t(\"vtGe\"),i=a.a.createElement;e.a=Object(l.a)(i(a.a.Fragment,null,i(\"path\",{d:\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"}),i(\"path\",{fillOpacity:\".36\",d:\"M0 20h24v4H0z\"})),\"FormatColorFill\")},vPKl:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return y}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"NbUR\"),i=t(\"pa6t\"),r=t(\"rXVv\"),u=t(\"hYlH\"),s=t(\"pQ8Y\"),g=t(\"eou5\"),c=t(\"THuk\"),m=a.a.createElement,d=m(g.a,{value:\"left\"},m(l.a,{fontSize:\"small\"})),p=m(g.a,{value:\"center\"},m(i.a,{fontSize:\"small\"})),f=m(g.a,{value:\"right\"},m(r.a,{fontSize:\"small\"})),v=m(g.a,{value:\"justify\"},m(u.a,{fontSize:\"small\"})),b=m(g.a,{value:\"left\"},m(l.a,null)),h=m(g.a,{value:\"center\"},m(i.a,null)),T=m(g.a,{value:\"right\"},m(r.a,null)),B=m(g.a,{value:\"justify\"},m(u.a,null)),w=m(g.a,{value:\"left\"},m(l.a,null)),F=m(g.a,{value:\"center\"},m(i.a,null)),A=m(g.a,{value:\"right\"},m(r.a,null)),x=m(g.a,{value:\"justify\"},m(u.a,null));function y(){var n=a.a.useState(\"left\"),e=n[0],t=n[1],o=function(n,e){t(e)};return m(s.a,{container:!0,spacing:2,direction:\"column\",alignItems:\"center\"},m(s.a,{item:!0},m(c.a,{size:\"small\",value:e,exclusive:!0,onChange:o},d,p,f,v)),m(s.a,{item:!0},m(c.a,{size:\"medium\",value:e,exclusive:!0,onChange:o},b,h,T,B)),m(s.a,{item:!0},m(c.a,{size:\"large\",value:e,exclusive:!0,onChange:o},w,F,A,x)))}},vnqq:function(n,e){n.exports='import React from \\'react\\';\\nimport { makeStyles } from \\'@material-ui/core/styles\\';\\nimport FormatAlignLeftIcon from \\'@material-ui/icons/FormatAlignLeft\\';\\nimport FormatAlignCenterIcon from \\'@material-ui/icons/FormatAlignCenter\\';\\nimport FormatAlignRightIcon from \\'@material-ui/icons/FormatAlignRight\\';\\nimport FormatAlignJustifyIcon from \\'@material-ui/icons/FormatAlignJustify\\';\\nimport LaptopIcon from \\'@material-ui/icons/Laptop\\';\\nimport TvIcon from \\'@material-ui/icons/Tv\\';\\nimport PhoneAndroidIcon from \\'@material-ui/icons/PhoneAndroid\\';\\nimport Grid from \\'@material-ui/core/Grid\\';\\nimport ToggleButton from \\'@material-ui/lab/ToggleButton\\';\\nimport ToggleButtonGroup from \\'@material-ui/lab/ToggleButtonGroup\\';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  toggleContainer: {\\n    margin: theme.spacing(2, 0),\\n  },\\n}));\\n\\nexport default function ToggleButtonNotEmpty() {\\n  const [alignment, setAlignment] = React.useState(\\'left\\');\\n  const [formats, setFormats] = React.useState(() => [\\'phone\\']);\\n\\n  const handleFormat = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newFormats: string[],\\n  ) => {\\n    if (newFormats.length) {\\n      setFormats(newFormats);\\n    }\\n  };\\n\\n  const handleAlignment = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newAlignment: string | null,\\n  ) => {\\n    if (newAlignment !== null) {\\n      setAlignment(newAlignment);\\n    }\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container spacing={2}>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            value={alignment}\\n            exclusive\\n            onChange={handleAlignment}\\n            aria-label=\"text alignment\"\\n          >\\n            <ToggleButton value=\"left\" aria-label=\"left aligned\">\\n              <FormatAlignLeftIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"center\" aria-label=\"centered\">\\n              <FormatAlignCenterIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"right\" aria-label=\"right aligned\">\\n              <FormatAlignRightIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\\n              <FormatAlignJustifyIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n      </Grid>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup\\n            value={formats}\\n            onChange={handleFormat}\\n            aria-label=\"device\"\\n          >\\n            <ToggleButton value=\"laptop\" aria-label=\"laptop\">\\n              <LaptopIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"tv\" aria-label=\"tv\">\\n              <TvIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\"phone\" aria-label=\"phone\">\\n              <PhoneAndroidIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n'},vtg3:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return b}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"xi/j\"),i=t(\"YmQZ\"),r=t(\"39hq\"),u=t(\"tu/a\"),s=t(\"J0AO\"),g=t(\"eou5\"),c=t(\"THuk\"),m=a.a.createElement,d=m(g.a,{value:\"bold\",\"aria-label\":\"bold\"},m(l.a,null)),p=m(g.a,{value:\"italic\",\"aria-label\":\"italic\"},m(i.a,null)),f=m(g.a,{value:\"underlined\",\"aria-label\":\"underlined\"},m(r.a,null)),v=m(g.a,{value:\"color\",\"aria-label\":\"color\",disabled:!0},m(u.a,null),m(s.a,null));function b(){var n=a.a.useState((function(){return[\"bold\",\"italic\"]})),e=n[0],t=n[1];return m(c.a,{value:e,onChange:function(n,e){t(e)},\"aria-label\":\"text formatting\"},d,p,f,v)}},wIXp:function(n,e){n.exports=\"import React from 'react';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nexport default function ToggleButtonsMultiple() {\\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\\n\\n  const handleFormat = (\\n    event: React.MouseEvent<HTMLElement>,\\n    newFormats: string[],\\n  ) => {\\n    setFormats(newFormats);\\n  };\\n\\n  return (\\n    <ToggleButtonGroup\\n      value={formats}\\n      onChange={handleFormat}\\n      aria-label=\\\"text formatting\\\"\\n    >\\n      <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\n        <FormatBoldIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\n        <FormatItalicIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\n        <FormatUnderlinedIcon />\\n      </ToggleButton>\\n      <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\n        <FormatColorFillIcon />\\n        <ArrowDropDownIcon />\\n      </ToggleButton>\\n    </ToggleButtonGroup>\\n  );\\n}\\n\"},\"xi/j\":function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"}),\"FormatBold\")},y4lD:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return p}));var o=t(\"mXGw\"),a=t.n(o),l=t(\"ToJE\"),i=t(\"FB/d\"),r=t(\"M8y+\"),u=t(\"eou5\"),s=t(\"THuk\"),g=a.a.createElement,c=g(u.a,{value:\"list\",\"aria-label\":\"list\"},g(l.a,null)),m=g(u.a,{value:\"module\",\"aria-label\":\"module\"},g(i.a,null)),d=g(u.a,{value:\"quilt\",\"aria-label\":\"quilt\"},g(r.a,null));function p(){var n=a.a.useState(\"list\"),e=n[0],t=n[1];return g(s.a,{orientation:\"vertical\",value:e,exclusive:!0,onChange:function(n,e){t(e)}},c,m,d)}},y6lT:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),a=t(\"vtGe\"),l=o.createElement;e.a=Object(a.a)(l(\"path\",{d:\"M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z\"}),\"PhoneAndroid\")}},[[\"fnJA\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}