{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{\"0Nhf\":function(e,n,t){var o={\"./list-item-icon.md\":\"vObd\"};function s(e){var n=i(e);return t(n)}function i(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=i,e.exports=s,s.id=\"0Nhf\"},SuEi:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/list-item-icon\",function(){return t(\"XlS4\")}])},XlS4:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),i=t(\"e+1t\"),a=t(\"kVtE\"),r=s.a.createElement,c=t(\"0Nhf\");function p(e){var n=e.docs;return r(i.a,{docs:n})}p.getInitialProps=function(){var e=Object(a.a)({pageFilename:\"api/list-item-icon\",requireRaw:c});return{demos:e.demos,docs:e.docs}}},vObd:function(e,n){e.exports='---\\nfilename: /packages/material-ui/src/ListItemIcon/ListItemIcon.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# ListItemIcon API\\n\\n<p class=\"description\">The API documentation of the ListItemIcon React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport ListItemIcon from \\'@material-ui/core/ListItemIcon\\';\\n// or\\nimport { ListItemIcon } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\nA simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\\n\\n## Component name\\n\\nThe `MuiListItemIcon` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component, normally `Icon`, `SvgIcon`, or a `@material-ui/icons` SVG icon element. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiListItemIcon-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">alignItemsFlexStart</span> | <span class=\"prop-name\">.MuiListItemIcon-alignItemsFlexStart</span> | Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListItemIcon/ListItemIcon.js) for more detail.\\n\\n## Demos\\n\\n- [Lists](/components/lists/)\\n\\n'}},[[\"SuEi\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}