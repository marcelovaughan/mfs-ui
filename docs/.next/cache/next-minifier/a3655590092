{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{\"/6pG\":function(e,n,o){var t={\"./dialog-title.md\":\"ZjpP\"};function a(e){var n=i(e);return o(n)}function i(e){if(!o.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=i,e.exports=a,a.id=\"/6pG\"},EAAD:function(e,n,o){\"use strict\";o.r(n),o.d(n,\"default\",(function(){return p}));var t=o(\"mXGw\"),a=o.n(t),i=o(\"e+1t\"),s=o(\"kVtE\"),r=a.a.createElement,l=o(\"/6pG\");function p(e){var n=e.docs;return r(i.a,{docs:n})}p.getInitialProps=function(){var e=Object(s.a)({pageFilename:\"api/dialog-title\",requireRaw:l});return{demos:e.demos,docs:e.docs}}},WrjW:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/dialog-title\",function(){return o(\"EAAD\")}])},ZjpP:function(e,n){e.exports='---\\nfilename: /packages/material-ui/src/DialogTitle/DialogTitle.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# DialogTitle API\\n\\n<p class=\"description\">The API documentation of the DialogTitle React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport DialogTitle from \\'@material-ui/core/DialogTitle\\';\\n// or\\nimport { DialogTitle } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiDialogTitle` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">children</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">disableTypography</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the children won\\'t be wrapped by a typography component. For instance, this can be useful to render an h4 instead of the default h2. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiDialogTitle-root</span> | Styles applied to the root element.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/DialogTitle/DialogTitle.js) for more detail.\\n\\n## Demos\\n\\n- [Dialogs](/components/dialogs/)\\n\\n'}},[[\"WrjW\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}