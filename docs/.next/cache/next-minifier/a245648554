{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{\"+vvd\":function(e,n){e.exports=\"# Migration From v0.x to v1\\n\\n<p class=\\\"description\\\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\\n\\n## FAQ\\n\\n### Woah - the API is way different! Does that mean 1.0 is completely different, I\\u2019ll have to learn the basics all over again, and migrating will be practically impossible?\\n\\nI\\u2019m glad you asked! The answer is no. The core concepts haven\\u2019t changed.\\nYou will notice that the API provides more flexibility, but this has a cost \\u2013\\nlower-level components that abstract less complexity.\\n\\n### What motivated such a large change?\\n\\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46).\\nThe ecosystem has evolved a lot since then, we have also learned a lot.\\n[@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up**\\ntaking advantage of this knowledge to address long-standing issues. To name some of the major changes:\\n\\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\\n- New theme handling (nesting, self-supporting, etc.)\\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\\n- Full [server-side rendering](/guides/server-rendering/) support\\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\\n\\n### Where should I start in a migration?\\n\\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\\n\\nWith yarn:\\n\\n```sh\\nyarn add material-ui\\nyarn add @material-ui/core\\n```\\n\\nOr with npm:\\n\\n```sh\\nnpm install material-ui\\nnpm install @material-ui/core\\n```\\n\\nthen\\n\\n```js\\nimport FlatButton from 'material-ui/FlatButton'; // v0.x\\nimport Button from '@material-ui/core/Button'; // v1.x\\n```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n```jsx\\nimport React from 'react';\\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\nconst theme = createMuiTheme({\\n  /* theme for v1.x */\\n});\\nconst themeV0 = getMuiTheme({\\n  /* theme for v0.x */\\n});\\n\\nfunction App() {\\n  return (\\n    <MuiThemeProvider theme={theme}>\\n      <V0MuiThemeProvider muiTheme={themeV0}>\\n        {/*Components*/}\\n      </V0MuiThemeProvider>\\n    </MuiThemeProvider>\\n  );\\n}\\n\\nexport default App;\\n```\\n\\n4. After that, you are free to migrate one component instance at the time.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\n\\nRaisedButton upgrade path:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### To be continued\\u2026\\n\\nHave you successfully migrated your app, and wish to help the community?\\nThere is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed \\ud83d\\ude0a.\\n\"},\"3cjz\":function(e,n){e.exports=\"# Migration From v0.x to v1\\n\\n<p class=\\\"description\\\">\\u0414\\u0430! \\u0420\\u0435\\u043b\\u0438\\u0437 v1 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043b\\u0441\\u044f! Take advantage of 2 years worth of effort.</p>\\n\\n## FAQ\\n\\n### Woah - the API is way different! Does that mean 1.0 is completely different, I\\u2019ll have to learn the basics all over again, and migrating will be practically impossible?\\n\\nI\\u2019m glad you asked! The answer is no. The core concepts haven\\u2019t changed. You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### What motivated such a large change?\\n\\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\\n\\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\\n- New theme handling (nesting, self-supporting, etc.)\\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\\n- Full [server-side rendering](/guides/server-rendering/) support\\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\\n\\n### Where should I start in a migration?\\n\\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\\n    \\n    With yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. After that, you are free to migrate one component instance at the time.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\n\\nRaisedButton upgrade path:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### To be continued\\u2026\\n\\nHave you successfully migrated your app, and wish to help the community? There is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed \\ud83d\\ude0a.\"},EGqx:function(e,n){function t(e){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id=\"EGqx\"},IGXY:function(e,n,t){var o={\"./migration-v0x-aa.md\":\"YyfS\",\"./migration-v0x-de.md\":\"k7JG\",\"./migration-v0x-es.md\":\"IWlW\",\"./migration-v0x-fr.md\":\"jCre\",\"./migration-v0x-ja.md\":\"LlMh\",\"./migration-v0x-pt.md\":\"RhWs\",\"./migration-v0x-ru.md\":\"3cjz\",\"./migration-v0x-zh.md\":\"hz+e\",\"./migration-v0x.md\":\"+vvd\"};function r(e){var n=i(e);return t(n)}function i(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id=\"IGXY\"},IWlW:function(e,n){e.exports=\"# Migration From v0.x to v1\\n\\n<p class=\\\"description\\\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\\n\\n## FAQ\\n\\n### Woah - the API is way different! Does that mean 1.0 is completely different, I\\u2019ll have to learn the basics all over again, and migrating will be practically impossible?\\n\\nI\\u2019m glad you asked! The answer is no. The core concepts haven\\u2019t changed. You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### What motivated such a large change?\\n\\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\\n\\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\\n- New theme handling (nesting, self-supporting, etc.)\\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\\n- Full [server-side rendering](/guides/server-rendering/) support\\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\\n\\n### Where should I start in a migration?\\n\\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\\n    \\n    With yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. After that, you are free to migrate one component instance at the time.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\n\\nRaisedButton upgrade path:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### To be continued\\u2026\\n\\nHave you successfully migrated your app, and wish to help the community? There is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed \\ud83d\\ude0a.\"},LNGQ:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),r=t.n(o),i=t(\"e+1t\"),a=t(\"kVtE\"),m=r.a.createElement,s=t(\"EGqx\"),u=t(\"IGXY\");function l(e){var n=e.demos,t=e.docs;return m(i.a,{demos:n,docs:t,requireDemo:s})}l.getInitialProps=function(){var e=Object(a.a)({pageFilename:\"guides/migration-v0x\",requireRaw:u});return{demos:e.demos,docs:e.docs}}},LlMh:function(e,n){e.exports=\"# Migration From v0.x to v1\\n\\n<p class=\\\"description\\\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\\n\\n## FAQ\\n\\n### Woah - the API is way different! Does that mean 1.0 is completely different, I\\u2019ll have to learn the basics all over again, and migrating will be practically impossible?\\n\\nI\\u2019m glad you asked! The answer is no. The core concepts haven\\u2019t changed. You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### What motivated such a large change?\\n\\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\\n\\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\\n- New theme handling (nesting, self-supporting, etc.)\\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\\n- Full [server-side rendering](/guides/server-rendering/) support\\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\\n\\n### Where should I start in a migration?\\n\\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\\n    \\n    With yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. After that, you are free to migrate one component instance at the time.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\n\\nRaisedButton upgrade path:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### To be continued\\u2026\\n\\nHave you successfully migrated your app, and wish to help the community? There is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed \\ud83d\\ude0a.\"},RhWs:function(e,n){e.exports=\"# Migrando da v0.x para v1\\n\\n<p class=\\\"description\\\">Sim, v1 foi lan\\xe7ada! Tire proveito de 2 anos de esfor\\xe7o.</p>\\n\\n## Perguntas Frequentes\\n\\n### Woah - a API \\xe9 diferente! Isso significa que 1.0 \\xe9 completamente diferente, vou ter que aprender o b\\xe1sico de novo, e a migra\\xe7\\xe3o ser\\xe1 praticamente imposs\\xedvel?\\n\\nEstou feliz que voc\\xea tenha perguntado! A resposta \\xe9 n\\xe3o. Os principais conceitos n\\xe3o mudaram. Voc\\xea vai notar que a API oferece mais flexibilidade, mas isso tem um custo \\u2013 componentes de n\\xedvel inferior que abstraem menos complexidade.\\n\\n### O que motivou uma mudan\\xe7a t\\xe3o grande?\\n\\nMaterial-UI foi iniciado [4 anos atr\\xe1s](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). O ecossistema evoluiu muito desde ent\\xe3o, tamb\\xe9m aprendemos muito. [@nathanmarks](https://github.com/nathanmarks/) iniciou uma tarefa ambiciosa, reconstruindo o Material-UI do **zero**, aproveitando esse conhecimento para resolver problemas de longa data. Para citar algumas das principais mudan\\xe7as:\\n\\n- Nova solu\\xe7\\xe3o de estilo usando CSS-in-JS (melhor poder de [customiza\\xe7\\xe3o](/customization/components/), melhor desempenho)\\n- Novo tratamento de tema (aninhamento, auto-suporte, etc.)\\n- Documenta\\xe7\\xe3o r\\xe1pida e brilhante gra\\xe7as a [Next.js](https://github.com/zeit/next.js)\\n- Melhor [cobertura de teste](/guides/testing/) (99%+, executado em todos os principais navegadores, [testes de regress\\xe3o visual](https://www.argos-ci.com/mui-org/material-ui))\\n- Suporte completo [a renderiza\\xe7\\xe3o do lado do servidor](/guides/server-rendering/)\\n- Vasta gama de [navegadores suportados](/getting-started/supported-platforms/)\\n\\n### Onde devo come\\xe7ar a migra\\xe7\\xe3o?\\n\\n1. Comece instalando a vers\\xe3o v1.x do Material-UI ao lado da vers\\xe3o v0.x.\\n    \\n    utilizando o yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Ou utilizando npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  ent\\xe3o\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Execute [o auxiliar de migra\\xe7\\xe3o](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) em seu projeto.\\n3. `MuiThemeProvider` \\xe9 opcional para v1.x., mas se voc\\xea tem um tema customizado, voc\\xea \\xe9 livre para usar as vers\\xf5es v0.x e v1.x do componente, ao mesmo tempo, como neste exemplo:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* tema para v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* tema para v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. Depois disso, voc\\xea est\\xe1 livre para migrar uma inst\\xe2ncia de componente por vez.\\n\\n## Componentes\\n\\n### Autocompletar\\n\\nMaterial-UI, n\\xe3o fornece uma API de alto n\\xedvel para resolver este problema.\\nRecomendamos que voc\\xea explore [as solu\\xe7\\xf5es que a comunidade construiu](/components/autocomplete/).\\n\\nNo futuro, procuraremos fornecer um componente para resolver as formas de uso mais simples: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nExecute [o auxiliar de migra\\xe7\\xe3o](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) em seu projeto.\\n\\nIsto ir\\xe1 aplicar a seguinte mudan\\xe7a:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Bot\\xe3o liso\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Bot\\xe3o elevado\\n\\nCaminho de atualiza\\xe7\\xe3o do RaisedButton:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subcabe\\xe7alho\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Alternar\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Item de menu\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### \\xcdcone de fonte\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Progresso Circular\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Menu suspenso\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### Continua\\u2026\\n\\nVoc\\xea migrou sua aplica\\xe7\\xe3o com sucesso e deseja ajudar a comunidade? Existe um problema em aberto para concluir este guia de migra\\xe7\\xe3o [#7195](https://github.com/mui-org/material-ui/issues/7195). Qualquer pull request \\xe9 bem-vindo \\ud83d\\ude0a.\"},YyfS:function(e,n){e.exports='# crwdns95782:0crwdne95782:0\\n\\n<p class=\"description\">crwdns95784:0crwdne95784:0 crwdns95786:0crwdne95786:0</p>\\n\\n## crwdns95788:0crwdne95788:0\\n\\n### crwdns95790:0crwdne95790:0 crwdns95792:0crwdne95792:0\\n\\ncrwdns95794:0crwdne95794:0 crwdns95796:0crwdne95796:0 crwdns101272:0crwdne101272:0\\n\\n### crwdns95802:0crwdne95802:0\\n\\ncrwdns95804:0crwdne95804:0 crwdns95806:0crwdne95806:0 crwdns95808:0crwdne95808:0 crwdns95810:0crwdne95810:0\\n\\n- crwdns95812:0crwdne95812:0\\n- crwdns95814:0crwdne95814:0\\n- crwdns95816:0crwdne95816:0\\n- crwdns95818:0crwdne95818:0\\n- crwdns95820:0crwdne95820:0\\n- crwdns95822:0crwdne95822:0\\n\\n### crwdns95824:0crwdne95824:0\\n\\n1. crwdns95826:0crwdne95826:0\\n    \\n    crwdns95828:0crwdne95828:0\\n\\n```sh\\n  crwdns95830:0crwdne95830:0 crwdns95832:0crwdne95832:0\\ncrwdns95834:0crwdne95834:0 crwdns95836:0{ MuiThemeProvider, createMuiTheme }crwdnd95836:0{ MuiThemeProvider as V0MuiThemeProvider}crwdnd95836:0{theme}crwdnd95836:0{themeV0}crwdne95836:0 crwdns95838:0crwdne95838:0\\n\\ncrwdns95840:0crwdne95840:0\\ncrwdns95842:0crwdne95842:0\\n\\ncrwdns95844:0crwdne95844:0\\n\\ncrwdns95846:0crwdne95846:0\\n\\ncrwdns95848:0crwdne95848:0\\n```\\n\\n### crwdns95850:0crwdne95850:0\\n\\n```diff\\ncrwdns95852:0crwdne95852:0\\n```\\n\\n### crwdns95854:0crwdne95854:0\\n\\ncrwdns95856:0crwdne95856:0\\n\\n```diff\\ncrwdns95858:0crwdne95858:0\\n```\\n\\n### crwdns95860:0crwdne95860:0\\n\\n```diff\\ncrwdns95862:0crwdne95862:0\\n```\\n\\n### crwdns95864:0crwdne95864:0\\n\\n```diff\\ncrwdns95866:0{this.state.checkedA}crwdnd95866:0{this.handleToggle}crwdnd95866:0{this.state.checkedA}crwdnd95866:0{this.handleSwitch}crwdne95866:0\\n```\\n\\n### crwdns95868:0crwdne95868:0\\n\\n```diff\\ncrwdns95870:0crwdne95870:0\\n```\\n\\n### crwdns95872:0crwdne95872:0\\n\\n```diff\\ncrwdns95874:0crwdne95874:0\\n```\\n\\n### crwdns95876:0crwdne95876:0\\n\\n```diff\\ncrwdns95878:0crwdne95878:0\\n```\\n\\n### crwdns95880:0crwdne95880:0\\n\\n```diff\\ncrwdns95882:0{this.state.value}crwdne95882:0\\n```\\n\\n### crwdns95884:0crwdne95884:0\\n\\ncrwdns95886:0crwdne95886:0 crwdns101274:0crwdne101274:0 crwdns101276:0crwdne101276:0'},aWzc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/guides/migration-v0x\",function(){return t(\"LNGQ\")}])},\"hz+e\":function(e,n){e.exports=\"# \\u4ecev0.x\\u7248\\u672c\\u8fc1\\u79fb\\u5230v1\\u7248\\u672c\\n\\n<p class=\\\"description\\\">\\u662f\\u7684\\uff0cv1\\u7248\\u672c\\u5df2\\u7ecf\\u53d1\\u5e03\\u4e86\\uff01 \\u6211\\u4eec\\u7528\\u4e86\\u4e24\\u5e74\\u7684\\u52aa\\u529b\\u8fbe\\u5230\\u4e86\\u8fd9\\u4e2a\\u91cc\\u7a0b\\u7891\\u3002</p>\\n\\n## \\u5e38\\u95ee\\u95ee\\u9898\\n\\n### \\u54c7\\u2014\\u2014 API \\u770b\\u8d77\\u6765\\u5b8c\\u5168\\u4e0d\\u4e00\\u6837\\uff01 \\u8fd9\\u662f\\u5426\\u610f\\u5473\\u77401.0\\u5b8c\\u5168\\u4e0d\\u540c\\uff0c\\u800c\\u6211\\u5f97\\u91cd\\u65b0\\u5b66\\u4e60\\u57fa\\u7840\\u77e5\\u8bc6\\uff0c\\u800c\\u8fc1\\u79fb\\u662f\\u51e0\\u4e4e\\u4e0d\\u53ef\\u80fd\\u7684\\uff1f\\n\\n\\u6211\\u5f88\\u9ad8\\u5174\\u4f60\\u95ee\\u4e86\\uff01 \\u7b54\\u6848\\u662f\\u4e0d\\u3002\\u6211\\u4eec\\u7684\\u6838\\u5fc3\\u6982\\u5ff5\\u5e76\\u6ca1\\u6709\\u6539\\u53d8\\u3002 You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### \\u5230\\u5e95\\u662f\\u4ec0\\u4e48\\u5e26\\u6765\\u4e86\\u5982\\u6b64\\u5de8\\u5927\\u7684\\u6539\\u53d8\\u5462\\uff1f\\n\\nMaterial-UI \\u8fd9\\u4e2a\\u9879\\u76ee\\u662f\\u4ece[4\\u5e74\\u524d](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46)\\u5f00\\u59cb\\u7684\\u3002 \\u5728\\u6b64\\u671f\\u95f4\\uff0c\\u6574\\u4e2a\\u4e2a\\u751f\\u6001\\u7cfb\\u7edf\\u53d1\\u5c55\\u4e86\\u5f88\\u591a\\uff0c\\u6211\\u4eec\\u4e5f\\u5b66\\u5230\\u4e86\\u5f88\\u591a\\u4e1c\\u897f\\u3002 [@nathanmarks](https://github.com/nathanmarks/) \\u542f\\u52a8\\u4e86\\u4e00\\u9879\\u96c4\\u5fc3\\u52c3\\u52c3\\u7684\\u4efb\\u52a1\\uff0c\\u5c06 Material-UI **\\u91cd\\u65b0\\u542f\\u52a8**\\uff0c\\u5e76\\u5229\\u7528\\u6211\\u4eec\\u5b66\\u5230\\u7684\\u77e5\\u8bc6\\uff0c\\u6765\\u89e3\\u51b3\\u4e00\\u4e9b\\u957f\\u671f\\u5b58\\u5728\\u7684\\u95ee\\u9898\\u3002 \\u8b6c\\u5982\\u8fd9\\u4e9b\\u4e3b\\u8981\\u7684\\u53d8\\u5316\\uff1a\\n\\n- \\u6211\\u4eec\\u91c7\\u7528 CSS-in-JS \\u8fd9\\u4e2a\\u65b0\\u7684\\u6837\\u5f0f\\u65b9\\u6848\\uff08\\u66f4\\u597d\\u7684[\\u81ea\\u5b9a\\u4e49](/customization/components/)\\u7684\\u80fd\\u529b\\u548c\\u6574\\u4f53\\u6027\\u80fd\\uff09\\n- \\u65b0\\u7684 \\u4e3b\\u9898\\u5904\\u7406 \\uff08\\u6709\\u5d4c\\u5957\\uff0c\\u81ea\\u4e3b\\u652f\\u6491\\u7b49\\u3002\\uff09\\n- \\u611f\\u8c22 [Next.js](https://github.com/zeit/next.js) \\u8d85\\u5feb\\u5730\\u521b\\u5efa\\u6587\\u6863\\n- \\u66f4\\u5bb9\\u6613\\u68c0\\u6d4b [\\u6d4b\\u8bd5\\u8986\\u76d6\\u7387](/guides/testing/) \\uff0899\\uff05\\u4ee5\\u4e0a\\uff0c\\u5728\\u6240\\u6709\\u4e3b\\u6d41\\u6d4f\\u89c8\\u5668\\u4e0a\\u8fd0\\u884c\\uff0c [\\u89c6\\u89c9\\u56de\\u5f52\\u6d4b\\u8bd5](https://www.argos-ci.com/mui-org/material-ui)\\uff09\\n- \\u5b8c\\u5168[\\u670d\\u52a1\\u5668\\u7aef\\u6e32\\u67d3](/guides/server-rendering/)\\u652f\\u6301\\n- \\u5927\\u8303\\u56f4\\u5730[\\u652f\\u6301\\u7684\\u6d4f\\u89c8\\u5668](/getting-started/supported-platforms/)\\n\\n### \\u6211\\u5e94\\u8be5\\u4ece\\u54ea\\u91cc\\u5f00\\u59cb\\u8fc1\\u79fb\\uff1f\\n\\n1. \\u9996\\u5148\\uff0c\\u548cv0.x\\u7248\\u672c\\u4e00\\u8d77\\uff0c\\u5b89\\u88c5v1.x\\u7248\\u672c\\u7684 Material-UI\\u3002\\n    \\n    \\u7528 yarn\\uff1a\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. \\u5728\\u4f60\\u7684\\u9879\\u76ee\\u4e0a\\u8fd0\\u884c [\\u8fc1\\u79fb\\u52a9\\u624b](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) \\n3\\u3002 `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. \\u4e4b\\u540e\\uff0c\\u60a8\\u53ef\\u4ee5\\u81ea\\u7531\\u5730\\u4e00\\u6b21\\u8fc1\\u79fb\\u4e00\\u4e2a\\u7ec4\\u4ef6\\u5b9e\\u4f8b\\u3002\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\n\\u672a\\u6765\\uff0c\\u6211\\u4eec\\u6253\\u7b97\\u63d0\\u4f9b\\u4e00\\u4e2a\\u7b80\\u5355\\u7684\\u7ec4\\u4ef6\\u6765\\u89e3\\u51b3\\u8fd9\\u4e2a\\u7528\\u4f8b\\uff1a[#9997](https://github.com/mui-org/material-ui/issues/9997)\\u3002\\n\\n### Svg \\u56fe\\u6807\\n\\n\\u5728\\u4f60\\u7684\\u9879\\u76ee\\u4e0a\\u8fd0\\u884c [\\u8fc1\\u79fb\\u52a9\\u624b](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) \\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\uff08\\u6241\\u5e73\\u6309\\u94ae\\uff09\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\uff08\\u51f8\\u8d77\\u7684\\u6309\\u94ae\\uff09\\n\\n\\u51f8\\u8d77\\u6309\\u94ae\\u7684\\u5347\\u7ea7\\u7684\\u8def\\u5f84\\uff1a\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\uff08\\u526f\\u6807\\u9898)\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\uff08\\u5207\\u6362\\uff09\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\uff08\\u83dc\\u5355\\u9879\\uff09\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\uff08\\u5b57\\u4f53\\u56fe\\u6807\\uff09\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\uff08\\u73af\\u72b6\\u8fdb\\u5ea6\\u6761\\uff09\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\uff08\\u4e0b\\u62c9\\u5f0f\\u83dc\\u5355\\uff09\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### \\u672a\\u5b8c\\u5f85\\u7eed...\\n\\n\\u60a8\\u662f\\u5426\\u5df2\\u6210\\u529f\\u8fc1\\u79fb\\u60a8\\u7684\\u5e94\\u7528\\uff0c\\u5e76\\u52a9\\u793e\\u533a\\u4e00\\u81c2\\u4e4b\\u529b\\uff1f \\u8981\\u5b8c\\u6210\\u672c\\u8fc1\\u79fb\\u6307\\u5357 [#7195](https://github.com/mui-org/material-ui/issues/7195)\\uff0c\\u8fd8\\u5b58\\u5728\\u4e00\\u4e2a\\u672a\\u51b3\\u95ee\\u9898\\u3002 \\u6211\\u4eec\\u6b22\\u8fce\\u4efb\\u4f55 pull request\\u3002\"},jCre:function(e,n){e.exports=\"# Migration de v0.x vers v1\\n\\n<p class=\\\"description\\\">Yeah, la v1 est sortie! Take advantage of 2 years worth of effort.</p>\\n\\n## FAQ\\n\\n### Woah - the API is way different! Does that mean 1.0 is completely different, I\\u2019ll have to learn the basics all over again, and migrating will be practically impossible?\\n\\nJe suis content que vous ayez demand\\xe9! La r\\xe9ponse est non. Les concepts de base n'ont pas chang\\xe9. You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### What motivated such a large change?\\n\\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\\n\\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\\n- New theme handling (nesting, self-supporting, etc.)\\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\\n- Full [server-side rendering](/guides/server-rendering/) support\\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\\n\\n### Where should I start in a migration?\\n\\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\\n    \\n    With yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. After that, you are free to migrate one component instance at the time.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flat Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Raised Button\\n\\nRaisedButton upgrade path:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Subheader\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Toggle\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Menu Item\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Font Icon\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Circular Progress\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Drop Down Menu\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### To be continued\\u2026\\n\\nHave you successfully migrated your app, and wish to help the community? There is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed \\ud83d\\ude0a.\"},k7JG:function(e,n){e.exports=\"# Migration von v0.x zu v1\\n\\n<p class=\\\"description\\\">Ja, v1 wurde ver\\xf6ffentlicht! Profitieren Sie von 2 Jahren Arbeit.</p>\\n\\n## H\\xe4ufig gestellte Fragen\\n\\n### Woah - die API ist anders! Bedeutet das, dass 1.0 v\\xf6llig anders ist und ich die Grundlagen noch einmal erlernen muss, und eine Migration wird praktisch unm\\xf6glich sein?\\n\\nGute Frage! Die Antwort ist nein. Die Kernkonzepte haben sich nicht ge\\xe4ndert. You will notice that the API provides more flexibility, but this has a cost \\u2013 lower-level components that abstract less complexity.\\n\\n### Was hat zu einer so gro\\xdfen Ver\\xe4nderung gef\\xfchrt?\\n\\nDie Material-UI wurde vor [4 Jahren gestartet](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). Das \\xd6kosystem hat sich seitdem stark ver\\xe4ndert, wir haben auch viel gelernt. [@nathanmarks](https://github.com/nathanmarks/) begann eine ehrgeizige Aufgabe, Material-UI **von Grund auf ** neu zu erstellen unter Ausnutzung seines Wissen seit langem bestehende Probleme zu l\\xf6sen. Um einige der wichtigsten \\xc4nderungen zu nennen:\\n\\n- Neue Styling-L\\xf6sung mit CSS-in-JS (bessere[ Anpassungsm\\xf6glichkeiten](/customization/components/), bessere Leistung)\\n- Neues Theming (Schachteln, selbsttragend usw.)\\n- Schnelle Dokumentation dank [Next.js](https://github.com/zeit/next.js)\\n- Viel bessere [Testabdeckung](/guides/testing/) (99%+, l\\xe4uft auf allen g\\xe4ngigen Browsern, [visuelle Regressionstests](https://www.argos-ci.com/mui-org/material-ui))\\n- Vollst\\xe4ndige [serverseitiges Rendern](/guides/server-rendering/) Unterst\\xfctzung\\n- Gro\\xdfe Auswahl an [ unterst\\xfctzten Browsern](/getting-started/supported-platforms/)\\n\\n### Wo soll ich bei einer Migration anfangen?\\n\\n1. Beginnen Sie mit der Installation der v1.x-Version von Material-UI neben der v0.x-Version.\\n    \\n    Mit yarn:\\n\\n```sh\\n  yarn add material-ui\\n  yarn add @material-ui/core\\n  ```\\n\\n  Or with npm:\\n  ```sh\\n  npm install material-ui\\n  npm install @material-ui/core\\n  ```\\n\\n  then\\n\\n  ```js\\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\\n  import Button from '@material-ui/core/Button'; // v1.x\\n  ```\\n\\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\\n\\n  ```jsx\\n  import React from 'react';\\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\\n\\n  const theme = createMuiTheme({\\n    /* theme for v1.x */\\n  });\\n  const themeV0 = getMuiTheme({\\n    /* theme for v0.x */\\n  });\\n\\n  function App() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <V0MuiThemeProvider muiTheme={themeV0}>\\n          {/*Components*/}\\n        </V0MuiThemeProvider>\\n      </MuiThemeProvider>\\n    );\\n  }\\n\\n  export default App;\\n  ```\\n\\n4. Danach k\\xf6nnen Sie jeweils eine Komponenteninstanz migrieren.\\n\\n## Components\\n\\n### Autocomplete\\n\\nMaterial-UI doesn't provide a high-level API for solving this problem.\\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\\n\\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\\n\\n### Svg Icon\\n\\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\\n\\nThis will apply a change such as the following:\\n\\n```diff\\n-import AddIcon from 'material-ui/svg-icons/Add';\\n+import AddIcon from '@material-ui/icons/Add';\\n\\n<AddIcon />\\n```\\n\\n### Flacher Button\\n\\n```diff\\n-import FlatButton from 'material-ui/FlatButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<FlatButton />\\n+<Button />\\n```\\n\\n### Erh\\xf6hter Button\\n\\nErh\\xf6hter Button-Aktualisierungspfad:\\n\\n```diff\\n-import RaisedButton from 'material-ui/RaisedButton';\\n+import Button from '@material-ui/core/Button';\\n\\n-<RaisedButton />\\n+<Button variant=\\\"contained\\\" />\\n```\\n\\n### Untertitel\\n\\n```diff\\n-import Subheader from 'material-ui/Subheader';\\n+import ListSubheader from '@material-ui/core/ListSubheader';\\n\\n-<Subheader>Sub Heading</Subheader>\\n+<ListSubheader>Sub Heading</ListSubheader>\\n```\\n\\n### Umschalten\\n\\n```diff\\n-import Toggle from 'material-ui/Toggle';\\n+import Switch from '@material-ui/core/Switch';\\n\\n-<Toggle\\n\\n-  toggled={this.state.checkedA}\\n-  onToggle={this.handleToggle}\\n-/>\\n+<Switch\\n+  checked={this.state.checkedA}\\n+  onChange={this.handleSwitch}\\n+/>\\n```\\n\\n### Men\\xfcelemente\\n\\n```diff\\n-import MenuItem from 'material-ui/MenuItem';\\n+import MenuItem from '@material-ui/core/MenuItem';\\n\\n-<MenuItem primaryText=\\\"Profile\\\" />\\n+<MenuItem>Profile</MenuItem>\\n```\\n\\n### Schriftarten-Icons\\n\\n```diff\\n-import FontIcon from 'material-ui/FontIcon';\\n+import Icon from '@material-ui/core/Icon';\\n\\n-<FontIcon>home</FontIcon>\\n+<Icon>home</Icon>\\n```\\n\\n### Zirkul\\xe4rer Fortschritt\\n\\n```diff\\n-import CircularProgress from 'material-ui/CircularProgress';\\n+import CircularProgress from '@material-ui/core/CircularProgress';\\n\\n-<CircularProgress mode=\\\"indeterminate\\\" />\\n+<CircularProgress variant=\\\"indeterminate\\\" />\\n```\\n\\n### Dropdownmen\\xfc\\n\\n```diff\\n-import DropDownMenu from 'material-ui/DropDownMenu';\\n+import Select from '@material-ui/core/Select';\\n\\n-<DropDownMenu></DropDownMenu>\\n+<Select value={this.state.value}></Select>\\n```\\n\\n### Fortsetzung folgt\\u2026\\n\\nHaben Sie Ihre App erfolgreich migriert und m\\xf6chten der Community helfen? There is an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Jede Pull-Anfrage wird begr\\xfc\\xdft \\ud83d\\ude0a.\"}},[[\"aWzc\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}