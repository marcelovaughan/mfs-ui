{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{\"/N2O\":function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">Voc\\xea pode usar a solu\\xe7\\xe3o de estilo do Material-UI na sua aplica\\xe7\\xe3o, esteja ou n\\xe3o usando componentes de Material-UI.</p>\\n\\nMaterial-UI, tem como objetivo fornecer uma base s\\xf3lida para a cria\\xe7\\xe3o de interfaces de usu\\xe1rio din\\xe2micas. Por uma quest\\xe3o de simplicidade, **expomos a solu\\xe7\\xe3o de estilo usada nos componentes de Material-UI** como pacote, `@material-ui/styles`. Voc\\xea pode us\\xe1-lo, mas voc\\xea n\\xe3o precisa, j\\xe1 que Material-UI tamb\\xe9m \\xe9 [ interoper\\xe1vel com](/guides/interoperability/) todas as outras solu\\xe7\\xf5es de estilo principais.\\n\\n## Por que usar a solu\\xe7\\xe3o de estilo do Material-UI?\\n\\nNas vers\\xf5es anteriores, o Material-UI usava o LESS, e em seguida, uma solu\\xe7\\xe3o customizada no estilo inline para escrever os estilos dos componentes, mas essas abordagens provaram ser limitadas. [Uma solu\\xe7\\xe3o *CSS-em-JS*](https://github.com/oliviertassinari/a-journey-toward-better-style) supera muitas destas limita\\xe7\\xf5es, e ** libera excelentes funcionalidades** (aninhamento de temas, estilos din\\xe2micos, auto-suporte etc.).\\n\\nA solu\\xe7\\xe3o de estilo do Material-UI \\xe9 inspirada em muitas outras bibliotecas de estilo, como [styled-components](https://www.styled-components.com/) e [emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 Voc\\xea pode esperar [as mesmas vantagens](https://www.styled-components.com/docs/basics#motivation) que styled-components.\\n- \\ud83d\\ude80 Est\\xe1 [super r\\xe1pida](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 \\xc9 extens\\xedvel atrav\\xe9s de uma API de [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md).\\n- \\u26a1\\ufe0fEla usa [JSS](https://github.com/cssinjs/jss) em seu n\\xfacleo \\u2013 um [alto desempenho](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript para o compilador CSS, que funciona em tempo de execu\\xe7\\xe3o e no lado do servidor.\\n- \\ud83d\\udce6 Menor que [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); e nenhum aumento no tamanho do pacote se usado juntamente com o Material-UI.\\n\\n## Instala\\xe7\\xe3o\\n\\n> `@material-ui/styles` \\xe9 re-exportado como `@material-ui/core/styles` - voc\\xea s\\xf3 precisa instal\\xe1-lo se desejar us\\xe1-lo independentemente do Material-UI.\\n\\nPara instalar e salvar em suas depend\\xeancias do `package.json`, execute:\\n\\n```sh\\n// utilizando o npm\\nnpm install @material-ui/styles\\n\\n// utilizando o yarn\\nyarn add @material-ui/styles\\n```\\n\\n## Primeiros passos\\n\\nExistem 3 APIs poss\\xedveis que voc\\xea pode usar para gerar e aplicar estilos, no entanto, todas elas compartilham a mesma l\\xf3gica subjacente.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\nNota: isso se aplica somente para a sintaxe de chamada \\u2013 defini\\xe7\\xf5es de estilo de ainda usam um objeto JSS. Voc\\xea tamb\\xe9m pode [alterar esse comportamento](/styles/advanced/#string-templates), com algumas limita\\xe7\\xf5es.\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Aninhamento de seletores\\n\\nVoc\\xea pode aninhar seletores para segmentar elementos dentro da classe ou componente atual. O exemplo a seguir usa a Hook API, mas funciona da mesma maneira com as outras APIs.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Adaptando com base em propriedades\\n\\nVoc\\xea pode passar uma fun\\xe7\\xe3o para `makeStyles` (\\\"interpola\\xe7\\xe3o\\\") a fim de adaptar o valor gerado com base nas propriedades do componente. A fun\\xe7\\xe3o pode ser fornecida no n\\xedvel de regra de estilo ou no n\\xedvel da propriedade CSS:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // regra de estilo\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // propriedade CSS\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Propriedades simuladas para fins de exemplo\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Passe as propriedades como primeiro argumento do useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\nEste componente bot\\xe3o tem uma propriedade de cor que modifica sua cor:\\n\\n### Adaptando a hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Adaptando a styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### Adaptando a higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### Teste de estresse\\n\\nNo teste de estresse a seguir, voc\\xea pode atualizar *a cor do tema* e a *propriedade background-color* de forma interativa:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles vs @material-ui/styles\\n\\nOs estilos do Material-UI s\\xe3o disponibilizados no pacote [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) (constru\\xeddo com JSS). Esta solu\\xe7\\xe3o est\\xe1 [isolada](https://bundlephobia.com/result?p=@material-ui/styles). Ela n\\xe3o tem um tema padr\\xe3o e pode ser usada para estilizar aplica\\xe7\\xf5es React que n\\xe3o est\\xe3o usando componentes Material-UI.\\n\\nPara reduzir o n\\xfamero de pacotes a instalar quando usando o Material-UI, e para simplificar as importa\\xe7\\xf5es, os m\\xf3dulos de `@material-ui/styles` s\\xe3o reexportados em `@material-ui/core/styles`.\\n\\nPara remover a necessidade de fornecer sistematicamente um tema, o tema padr\\xe3o do Material-UI \\xe9 aplicado aos m\\xf3dulos reexportados `makeStyles`, `styled`, `withTheme`, `useTheme`, e `withStyles`.\\n\\nPor exemplo:\\n\\n```js\\n// Reexporta\\xe7\\xe3o com um tema padr\\xe3o\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// M\\xf3dulo original sem um tema padr\\xe3o\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},\"/eYM\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=t(\"O8uh\"),i=s.a.createElement,l=Object(r.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}});function c(){var e=l();return i(a.a,{className:e.root},\"Styled with Hook API\")}},\"2CYP\":function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">\\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432 \\u0441\\u0432\\u043e\\u0435\\u043c \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0438 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0432\\u043e\\u0435 \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0435 Material-UI \\u043d\\u0435\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e \\u043e\\u0442 \\u0442\\u043e\\u0433\\u043e, \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0435 \\u043b\\u0438 \\u0432\\u044b \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u044b Material-UI \\u0438\\u043b\\u0438 \\u043d\\u0435\\u0442.</p>\\n\\nMaterial-UI \\u0441\\u0442\\u0440\\u0435\\u043c\\u0438\\u0442\\u0441\\u044f \\u043e\\u0431\\u0435\\u0441\\u043f\\u0435\\u0447\\u0438\\u0442\\u044c \\u043f\\u0440\\u043e\\u0447\\u043d\\u0443\\u044e \\u043e\\u0441\\u043d\\u043e\\u0432\\u0443 \\u0434\\u043b\\u044f \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044f \\u0434\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0445 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441\\u043e\\u0432. \\u0414\\u043b\\u044f \\u043f\\u0440\\u043e\\u0441\\u0442\\u043e\\u0442\\u044b, ** \\u043c\\u044b \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u043c \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0441\\u0442\\u0438\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438, \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c\\u043e\\u0435 \\u0432 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430\\u0445 Material-UI ** \\u0432 \\u0432\\u0438\\u0434\\u0435 \\u043f\\u0430\\u043a\\u0435\\u0442\\u0430 ` @ material-ui /styles `. \\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0438\\u043c, \\u043d\\u043e \\u0432\\u044b \\u043d\\u0435 \\u043e\\u0431\\u044f\\u0437\\u0430\\u043d\\u044b \\u0437\\u0430\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u043e\\u0432\\u0430\\u0442\\u044c \\u0438\\u043c\\u0435\\u043d\\u043d\\u043e \\u0435\\u0433\\u043e, \\u043f\\u043e\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0443 Material-UI \\u0442\\u0430\\u043a\\u0436\\u0435 [ \\u0441\\u043e\\u0432\\u043c\\u0435\\u0441\\u0442\\u0438\\u043c](/guides/interoperability/) \\u0441\\u043e \\u0432\\u0441\\u0435\\u043c\\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438 \\u043e\\u0441\\u043d\\u043e\\u0432\\u043d\\u044b\\u043c\\u0438 \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u044f\\u043c\\u0438 \\u0434\\u043b\\u044f \\u0441\\u0442\\u0438\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438.\\n\\n## \\u0417\\u0430\\u0447\\u0435\\u043c \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 Material-UI?\\n\\n\\u0412 \\u043f\\u0440\\u0435\\u0434\\u044b\\u0434\\u0443\\u0449\\u0438\\u0445 \\u0432\\u0435\\u0440\\u0441\\u0438\\u044f\\u0445 Material-UI \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043b LESS, \\u0430 \\u0437\\u0430\\u0442\\u0435\\u043c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0435 inline-\\u0441\\u0442\\u0438\\u043b\\u0438 \\u0434\\u043b\\u044f \\u043d\\u0430\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442, \\u043d\\u043e \\u044d\\u0442\\u0438 \\u043f\\u043e\\u0434\\u0445\\u043e\\u0434\\u044b \\u043e\\u043a\\u0430\\u0437\\u0430\\u043b\\u0438\\u0441\\u044c \\u043e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u043d\\u044b\\u043c\\u0438. [ \\u041f\\u043e\\u0434\\u0445\\u043e\\u0434 * CSS-in-JS * ](https://github.com/oliviertassinari/a-journey-toward-better-style) \\u043f\\u0440\\u0435\\u043e\\u0434\\u043e\\u043b\\u0435\\u0432\\u0430\\u0435\\u0442 \\u043c\\u043d\\u043e\\u0433\\u0438\\u0435 \\u0438\\u0437 \\u044d\\u0442\\u0438\\u0445 \\u043e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u0438\\u0439, \\u0438 ** \\u043e\\u0442\\u043a\\u0440\\u044b\\u0432\\u0430\\u044e\\u0442 \\u043c\\u043d\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u043e \\u0437\\u0430\\u043c\\u0435\\u0447\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0445 \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e\\u0441\\u0442\\u0435\\u0439** (\\u0432\\u043b\\u043e\\u0436\\u0435\\u043d\\u043d\\u043e\\u0441\\u0442\\u044c \\u0442\\u0435\\u043c, \\u0434\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0435 \\u0441\\u0442\\u0438\\u043b\\u0438, \\u0441\\u0430\\u043c\\u043e\\u0441\\u0442\\u043e\\u044f\\u0442\\u0435\\u043b\\u044c\\u043d\\u0430\\u044f \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u043a\\u0430 \\u0438 \\u0442. \\u0434.).\\n\\n\\u041f\\u043e\\u0434\\u0445\\u043e\\u0434 \\u043a \\u0441\\u0442\\u0438\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 Material-UI \\u0432\\u0434\\u043e\\u0445\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d \\u043c\\u043d\\u043e\\u0433\\u0438\\u043c\\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438 \\u0431\\u0438\\u0431\\u043b\\u0438\\u043e\\u0442\\u0435\\u043a\\u0430\\u043c\\u0438 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439, \\u0442\\u0430\\u043a\\u0438\\u043c\\u0438 \\u043a\\u0430\\u043a [ styled-components ](https://www.styled-components.com/) \\u0438 [ emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 \\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043e\\u0436\\u0438\\u0434\\u0430\\u0442\\u044c [\\u0432\\u0441\\u0435\\u0445 \\u043f\\u0440\\u0435\\u0438\\u043c\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432](https://www.styled-components.com/docs/basics#motivation), \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0438\\u043c\\u0435\\u044e\\u0442\\u0441\\u044f \\u0432 styled-components.\\n- \\ud83d\\ude80 [\\u043d\\u0435\\u0432\\u0435\\u0440\\u043e\\u044f\\u0442\\u043d\\u043e \\u0431\\u044b\\u0441\\u0442\\u0440\\u043e](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles) ,\\n- \\ud83e\\udde9 \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e\\u0441\\u0442\\u044c \\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043d\\u0438\\u044f \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e [\\u043f\\u043b\\u0430\\u0433\\u0438\\u043d\\u0430](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442 [ JSS ](https://github.com/cssinjs/jss) \\u0432 \\u0441\\u0432\\u043e\\u0435\\u0439 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 - [ \\u0432\\u044b\\u0441\\u043e\\u043a\\u0430\\u044f \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u0434\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u044c ](https://github.com/cssinjs/jss/blob/master/docs/performance.md) \\u043a\\u043e\\u043c\\u043f\\u0438\\u043b\\u044f\\u0442\\u043e\\u0440\\u0430 JavaScript \\u0432 CSS, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0435\\u0442 \\u0438 \\u0432\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0438 \\u043d\\u0430 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430.\\n- \\ud83d\\udce6 \\u041c\\u0435\\u043d\\u0435\\u0435 [ 15 \\u041a\\u0411 \\u0432 \\u0430\\u0440\\u0445\\u0438\\u0432\\u0435 ](https://bundlephobia.com/result?p=@material-ui/styles) ; \\u0438 \\u043d\\u0435 \\u0443\\u0432\\u0435\\u043b\\u0438\\u0447\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0440\\u0430\\u0437\\u043c\\u0435\\u0440 \\u043f\\u0430\\u043a\\u0435\\u0442\\u0430, \\u0435\\u0441\\u043b\\u0438 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0432\\u043c\\u0435\\u0441\\u0442\\u0435 \\u0441 Material-UI.\\n\\n## \\u0418\\u043d\\u0441\\u0442\\u0440\\u0443\\u043a\\u0446\\u0438\\u044f \\u043f\\u043e \\u0443\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u043a\\u0435\\n\\n> `@material-ui/styles` is re-exported as `@material-ui/core/styles` - you only need to install it if you wish to use it independently from Material-UI.\\n\\n\\u0414\\u043b\\u044f \\u0443\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u043a\\u0438 \\u0438 \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u0435\\u043d\\u0438\\u044f \\u0432 \\u0432\\u0430\\u0448\\u0435\\u043c ` package.json ` \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e\\u0441\\u0442\\u0438, \\u0437\\u0430\\u043f\\u0443\\u0441\\u0442\\u0438\\u0442\\u0435:\\n\\n```sh\\n// with npm\\nnpm install @material-ui/styles\\n\\n// with yarn\\nyarn add @material-ui/styles\\n```\\n\\n## \\u041d\\u0430\\u0447\\u0430\\u043b\\u043e \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b\\n\\n\\u041c\\u044b \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u043c 3 \\u0440\\u0430\\u0437\\u043d\\u044b\\u0445 API \\u0434\\u043b\\u044f \\u0433\\u0435\\u043d\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0438 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439, \\u043d\\u043e \\u0432\\u0441\\u0435 \\u043e\\u043d\\u0438 \\u0438\\u043c\\u0435\\u044e\\u0442 \\u043e\\u0434\\u0438\\u043d\\u0430\\u043a\\u043e\\u0432\\u0443\\u044e \\u0431\\u0430\\u0437\\u043e\\u0432\\u0443\\u044e \\u043b\\u043e\\u0433\\u0438\\u043a\\u0443.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\n\\u041f\\u0440\\u0438\\u043c\\u0435\\u0447\\u0430\\u043d\\u0438\\u0435: \\u044d\\u0442\\u043e \\u043e\\u0442\\u043d\\u043e\\u0441\\u0438\\u0442\\u0441\\u044f \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u043a \\u0441\\u0438\\u043d\\u0442\\u0430\\u043a\\u0441\\u0438\\u0441\\u0443 \\u0432\\u044b\\u0437\\u043e\\u0432\\u0430. \\u0414\\u043b\\u044f \\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u043f\\u043e-\\u043f\\u0440\\u0435\\u0436\\u043d\\u0435\\u043c\\u0443 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442 JSS. \\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 [ \\u0438\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u044d\\u0442\\u043e \\u043f\\u043e\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0435 ](/styles/advanced/#string-templates) (\\u0441 \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u043c\\u0438 \\u043e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u0438\\u044f\\u043c\\u0438).\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## \\u0412\\u043b\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0441\\u0435\\u043b\\u0435\\u043a\\u0442\\u043e\\u0440\\u044b\\n\\n\\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043a\\u043b\\u0430\\u0434\\u044b\\u0432\\u0430\\u0442\\u044c \\u0441\\u0435\\u043b\\u0435\\u043a\\u0442\\u043e\\u0440\\u044b \\u0432 \\u0446\\u0435\\u043b\\u0435\\u0432\\u044b\\u0435 \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442\\u044b \\u0432\\u043d\\u0443\\u0442\\u0440\\u0438 \\u0442\\u0435\\u043a\\u0443\\u0449\\u0435\\u0433\\u043e \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430 \\u0438\\u043b\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430. \\u0412 \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0435\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f Hook API, \\u043d\\u043e \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0430\\u043d\\u0430\\u043b\\u043e\\u0433\\u0438\\u0447\\u043d\\u043e \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0442\\u044c \\u0438 \\u0441 \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438 API.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## \\u0410\\u0434\\u0430\\u043f\\u0442\\u0430\\u0446\\u0438\\u044f \\u043d\\u0430 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 props\\n\\nYou can pass a function to `makeStyles` (\\\"interpolation\\\") in order to adapt the generated value based on the component's props. \\u0424\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u043c\\u043e\\u0436\\u0435\\u0442 \\u0431\\u044b\\u0442\\u044c \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0430 \\u043d\\u0430 \\u0443\\u0440\\u043e\\u0432\\u043d\\u0435 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430 \\u0441\\u0442\\u0438\\u043b\\u044f \\u0438\\u043b\\u0438 \\u043d\\u0430 \\u0443\\u0440\\u043e\\u0432\\u043d\\u0435 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430 CSS:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulated props for the purpose of the example\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Pass the props as the first argument of useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\n\\u042d\\u0442\\u043e\\u0442 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u043a\\u043d\\u043e\\u043f\\u043a\\u0438 \\u0438\\u043c\\u0435\\u0435\\u0442 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e \\u0446\\u0432\\u0435\\u0442, \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u044f\\u0435\\u0442 \\u0435\\u0433\\u043e \\u0446\\u0432\\u0435\\u0442:\\n\\n### \\u0410\\u0434\\u0430\\u043f\\u0442\\u0430\\u0446\\u0438\\u044f \\u0445\\u0443\\u043a\\u0430 API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### \\u0410\\u0434\\u0430\\u043f\\u0442\\u0430\\u0446\\u0438\\u044f styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### \\u0410\\u0434\\u0430\\u043f\\u0442\\u0430\\u0446\\u0438\\u044f API \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0432\\u044b\\u0441\\u0448\\u0435\\u0433\\u043e \\u043f\\u043e\\u0440\\u044f\\u0434\\u043a\\u0430 (HOC)\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### \\u0421\\u0442\\u0440\\u0435\\u0441\\u0441-\\u0442\\u0435\\u0441\\u0442\\n\\n\\u0412 \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0435\\u043c \\u0441\\u0442\\u0440\\u0435\\u0441\\u0441-\\u0442\\u0435\\u0441\\u0442\\u0435 \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043e\\u0431\\u043d\\u043e\\u0432\\u0438\\u0442\\u044c *\\u0446\\u0432\\u0435\\u0442 \\u0442\\u0435\\u043c\\u044b* \\u0438 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e * background-color *:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## \\u041e\\u0442\\u043b\\u0438\\u0447\\u0438\\u0435 @material-ui/core/styles \\u043e\\u0442 @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS). This solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). \\u041e\\u043d \\u043d\\u0435 \\u0438\\u043c\\u0435\\u0435\\u0442 \\u0442\\u0435\\u043c\\u044b \\u043f\\u043e \\u0443\\u043c\\u043e\\u043b\\u0447\\u0430\\u043d\\u0438\\u044e \\u0438 \\u043c\\u043e\\u0436\\u0435\\u0442 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0434\\u043b\\u044f \\u0441\\u0442\\u0438\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0439 React, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043d\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u044e\\u0442 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u044b Material-UI.\\n\\n\\u0427\\u0442\\u043e\\u0431\\u044b \\u0443\\u043c\\u0435\\u043d\\u044c\\u0448\\u0438\\u0442\\u044c \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043f\\u0430\\u043a\\u0435\\u0442\\u043e\\u0432, \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0445 \\u043f\\u0440\\u0438 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u0438 Material-UI, \\u0438 \\u0443\\u043f\\u0440\\u043e\\u0441\\u0442\\u0438\\u0442\\u044c \\u0438\\u043c\\u043f\\u043e\\u0440\\u0442, \\u043c\\u043e\\u0434\\u0443\\u043b\\u0438 `@material-ui/styles` \\u0440\\u0435\\u044d\\u043a\\u0441\\u043f\\u043e\\u0440\\u0442\\u0438\\u0440\\u0443\\u044e\\u0442\\u0441\\u044f \\u0438\\u0437 `@material-ui/core/styles` ,\\n\\n\\u0427\\u0442\\u043e\\u0431\\u044b \\u0443\\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c \\u043d\\u0435\\u043e\\u0431\\u0445\\u043e\\u0434\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c \\u043f\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u043d\\u043e\\u0433\\u043e \\u043f\\u043e\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0438\\u044f \\u0442\\u0435\\u043c\\u044b, \\u043a \\u0440\\u0435\\u044d\\u043a\\u0441\\u043f\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u043c \\u043c\\u043e\\u0434\\u0443\\u043b\\u044f\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u044f\\u0435\\u0442\\u0441\\u044f \\u0434\\u0435\\u0444\\u043e\\u043b\\u0442\\u043d\\u0430\\u044f \\u0442\\u0435\\u043c\\u0430 Material-UI. \\u042d\\u0442\\u043e \\u043e\\u0442\\u043d\\u043e\\u0441\\u0438\\u0442\\u0441\\u044f \\u043a \\u043c\\u043e\\u0434\\u0443\\u043b\\u044f\\u043c: `makeStyles`, `styled`, `withTheme`, `useTheme` \\u0438 `withStyles` \\n\\n\\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},\"5Eir\":function(e,n){e.exports='import React from \\'react\\';\\nimport {\\n  ThemeProvider,\\n  useTheme,\\n  makeStyles,\\n  createStyles,\\n} from \\'@material-ui/core/styles\\';\\n\\ninterface MyTheme {\\n  color: string;\\n}\\n\\ninterface ComponentProps {\\n  backgroundColor: string;\\n}\\n\\nconst useStyles = makeStyles((theme: MyTheme) =>\\n  createStyles({\\n    root: (props: ComponentProps) => ({\\n      backgroundColor: props.backgroundColor,\\n      color: theme.color,\\n    }),\\n  }),\\n);\\n\\nconst Component = React.memo((props: ComponentProps) => {\\n  const classes = useStyles(props);\\n  const theme = useTheme<MyTheme>();\\n\\n  const rendered = React.useRef(1);\\n  React.useEffect(() => {\\n    rendered.current += 1;\\n  });\\n\\n  return (\\n    <div className={classes.root}>\\n      rendered {rendered.current} times\\n      <br />\\n      color: {theme.color}\\n      <br />\\n      backgroundColor: {props.backgroundColor}\\n    </div>\\n  );\\n});\\n\\nexport default function StressTest() {\\n  const [backgroundColor, setBackgroundColor] = React.useState(\\'#2196f3\\');\\n  const handleBackgroundColorChange = (\\n    event: React.ChangeEvent<HTMLInputElement>,\\n  ) => {\\n    setBackgroundColor(event.target.value);\\n  };\\n\\n  const [color, setColor] = React.useState(\\'#ffffff\\');\\n  const handleColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.value);\\n  };\\n\\n  const theme = React.useMemo(() => ({ color }), [color]);\\n\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <div>\\n        <fieldset>\\n          <div>\\n            <label htmlFor=\"color\">theme color: </label>\\n            <input\\n              id=\"color\"\\n              type=\"color\"\\n              onChange={handleColorChange}\\n              value={color}\\n            />\\n          </div>\\n          <div>\\n            <label htmlFor=\"background-color\">\\n              background-color property:{\\' \\'}\\n            </label>\\n            <input\\n              id=\"background-color\"\\n              type=\"color\"\\n              onChange={handleBackgroundColorChange}\\n              value={backgroundColor}\\n            />\\n          </div>\\n        </fieldset>\\n        <Component backgroundColor={backgroundColor} />\\n      </div>\\n    </ThemeProvider>\\n  );\\n}\\n'},\"61Qr\":function(e,n){e.exports=\"import React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled with styled-components API</MyButton>;\\n}\\n\"},\"7UDI\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"Ol6c\"),a=t(\"O8uh\"),i=(0,s.a.createElement)(Object(r.a)(a.a)({background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}),null,\"Styled with styled-components API\");function l(){return i}},\"7YK0\":function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button, {\\n  ButtonProps as MuiButtonProps,\\n} from '@material-ui/core/Button';\\nimport { Omit } from '@material-ui/types';\\n\\ninterface Props {\\n  color: 'red' | 'blue';\\n}\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: (props: Props) =>\\n      props.color === 'red'\\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: (props: Props) =>\\n      props.color === 'red'\\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    margin: 8,\\n  },\\n});\\n\\nfunction MyButton(props: Props & Omit<MuiButtonProps, keyof Props>) {\\n  const { color, ...other } = props;\\n  const classes = useStyles(props);\\n  return <Button className={classes.root} {...other} />;\\n}\\n\\nexport default function AdaptingHook() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},AQpT:function(e,n){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction UnstyledComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Styled with HOC API</Button>;\\n}\\n\\nUnstyledComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(UnstyledComponent);\\n\"},Argf:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return y}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=t(\"LMpM\"),i=t(\"h7Hf\"),l=s.a.createElement,c=Object(r.a)((function(e){return{root:function(n){return{backgroundColor:n.backgroundColor,color:e.color}}}})),p=l(\"br\",null),d=l(\"br\",null),u=s.a.memo((function(e){var n=c(e),t=Object(a.a)(),o=s.a.useRef(1);return s.a.useEffect((function(){o.current+=1})),l(\"div\",{className:n.root},\"rendered \",o.current,\" times\",p,\"color: \",t.color,d,\"backgroundColor: \",e.backgroundColor)})),m=l(\"label\",{htmlFor:\"color\"},\"theme color: \"),h=l(\"label\",{htmlFor:\"background-color\"},\"background-color property:\",\" \");function y(){var e=s.a.useState(\"#2196f3\"),n=e[0],t=e[1],o=s.a.useState(\"#ffffff\"),r=o[0],a=o[1],c=s.a.useMemo((function(){return{color:r}}),[r]);return l(i.a,{theme:c},l(\"div\",null,l(\"fieldset\",null,l(\"div\",null,m,l(\"input\",{id:\"color\",type:\"color\",onChange:function(e){a(e.target.value)},value:r})),l(\"div\",null,h,l(\"input\",{id:\"background-color\",type:\"color\",onChange:function(e){t(e.target.value)},value:n}))),l(u,{backgroundColor:n})))}},B0fJ:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">Material-UI\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3044\\u306a\\u304f\\u3066\\u3082\\u4f7f\\u3046\\u4e8b\\u304c\\u51fa\\u6765\\u307e\\u3059\\u3002</p>\\n\\nMaterial-UI\\u306f\\u3001\\u52d5\\u7684\\u306aUI\\u3092\\u69cb\\u7bc9\\u3059\\u308b\\u305f\\u3081\\u306e\\u5f37\\u56fa\\u306a\\u57fa\\u76e4\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u3053\\u3068\\u3092\\u76ee\\u6307\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002 \\u30b7\\u30f3\\u30d7\\u30eb\\u306b\\u3059\\u308b\\u305f\\u3081\\u3001**Material-UI\\u3067\\u4f7f\\u308f\\u308c\\u3066\\u3044\\u308b\\u30b9\\u30bf\\u30a4\\u30ea\\u30f3\\u30b0\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3\\u3092`@material-ui/styles`\\u3067\\u516c\\u958b\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002** \\u3053\\u308c\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059\\u304c\\u3001Material-UI\\u306f\\u4ed6\\u306e\\u4e3b\\u8981\\u306a\\u30b9\\u30bf\\u30a4\\u30ea\\u30f3\\u30b0\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3\\u5168\\u3066\\u3068[\\u76f8\\u4e92\\u904b\\u7528\\u304c\\u53ef\\u80fd](/guides/interoperability/)\\u306a\\u306e\\u3067\\u3001\\u5fc5\\u8981\\u3068\\u3044\\u3046\\u308f\\u3051\\u3067\\u306f\\u3042\\u308a\\u307e\\u305b\\u3093\\u3002\\n\\n## Material-UI\\u306e\\u30b9\\u30bf\\u30a4\\u30ea\\u30f3\\u30b0\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u7406\\u7531\\n\\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. [A *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style) overcomes many of those limitations, and **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\\n\\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\\n- \\ud83d\\ude80 It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f It uses [JSS](https://github.com/cssinjs/jss) at its core \\u2013 a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\\n- \\ud83d\\udce6 Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\\n\\n## \\u30a4\\u30f3\\u30b9\\u30c8\\u30fc\\u30eb\\n\\n> `@material-ui/styles`\\u306f`@material-ui/core/styles`\\u3092\\u5207\\u308a\\u51fa\\u3057\\u305f\\u3082\\u306e\\u3067\\u3059\\u3002Material-UI\\u3092\\u4f7f\\u308f\\u306a\\u3044\\u5834\\u5408\\u306e\\u307f\\u30a4\\u30f3\\u30b9\\u30c8\\u30fc\\u30eb\\u306e\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n\\u30a4\\u30f3\\u30b9\\u30c8\\u30fc\\u30eb\\u3057\\u3066`package.json` \\u306edependencies\\u306b\\u4fdd\\u5b58\\u3057\\u307e\\u3059\\u3002\\u6b21\\u3092\\u5b9f\\u884c\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n```sh\\n// with npm\\nnpm install @material-ui/styles\\n\\n// with yarn\\nyarn add @material-ui/styles\\n```\\n\\n## \\u3055\\u3042\\u3001\\u306f\\u3058\\u3081\\u3088\\u3046\\n\\n\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u751f\\u6210\\u30fb\\u9069\\u7528\\u3059\\u308b\\u305f\\u3081\\u306eAPI\\u306f3\\u7a2e\\u985e\\u3042\\u308a\\u307e\\u3059\\u304c\\u3001\\u3059\\u3079\\u3066\\u540c\\u3058\\u57fa\\u672c\\u30ed\\u30b8\\u30c3\\u30af\\u3092\\u5171\\u6709\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\n\\u6ce8\\uff1a\\u3053\\u308c\\u306f\\u547c\\u3073\\u51fa\\u3057\\u69cb\\u6587\\u306b\\u306e\\u307f\\u9069\\u7528\\u3055\\u308c\\u307e\\u3059\\u3002\\u30b9\\u30bf\\u30a4\\u30eb\\u5b9a\\u7fa9\\u306f\\u5f15\\u304d\\u7d9a\\u304dJSS\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\u3002 [\\u3053\\u306e\\u52d5\\u4f5c\\u3092\\u5909\\u66f4\\u3059\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059](/styles/advanced/#string-templates) \\u304c\\u3001\\u3044\\u304f\\u3064\\u304b\\u306e\\u5236\\u9650\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Nesting selectors\\n\\n\\u73fe\\u5728\\u306e\\u30af\\u30e9\\u30b9\\u3084\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u5185\\u306e\\u30bf\\u30fc\\u30b2\\u30c3\\u30c8\\u8981\\u7d20\\u306b\\u3001\\u30bb\\u30ec\\u30af\\u30bf\\u30fc\\u3092\\u5165\\u308c\\u5b50\\u306b\\u3059\\u308b\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u3059\\u3002 \\u4ee5\\u4e0b\\u306e\\u4f8b\\u306fHook API\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3044\\u307e\\u3059\\u304c\\u3001\\u4ed6\\u306eAPI\\u3067\\u3082\\u540c\\u69d8\\u306b\\u6a5f\\u80fd\\u3057\\u307e\\u3059\\u3002\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Adapting based on props\\n\\nYou can pass a function to `makeStyles` (\\\"interpolation\\\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulated props for the purpose of the example\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Pass the props as the first argument of useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\nThis button component has a color property that changes its color:\\n\\n### Adapting the hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Adapting the styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### Adapting the higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### \\u30b9\\u30c8\\u30ec\\u30b9\\u30c6\\u30b9\\u30c8\\n\\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles \\u3068 @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS). This solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). It doesn't have a default theme, and can be used to style React applications that are not using Material-UI components.\\n\\nTo reduce the number of packages to install when using Material-UI, and to simplify the imports, `@material-ui/styles` modules are re-exported from `@material-ui/core/styles`.\\n\\nTo remove the need to systematically supply a theme, the default Material-UI theme is applied to the re-exported `makeStyles`, `styled`, `withTheme`, `useTheme`, and `withStyles` modules.\\n\\n\\u4f8b\\u3048\\u3070\\uff1a\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},BATJ:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=t(\"O8uh\"),i=s.a.createElement,l=Object(r.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}});function c(){var e=l();return i(a.a,{className:e.root},\"Styled with Hook API\")}},Dd4o:function(e,n,t){\"use strict\";t.r(n);var o=t(\"mXGw\"),s=t.n(o),r=t(\"XpU0\"),a=t(\"O8uh\"),i=s.a.createElement;n.default=Object(r.default)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}})((function(e){var n=e.classes;return i(a.a,{className:n.root},\"Styled with HOC API\")}))},DkRs:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=s.a.createElement,i=Object(r.a)({root:{color:\"red\",\"& p\":{margin:0,color:\"green\",\"& span\":{color:\"blue\"}}}}),l=a(\"p\",null,\"This is green since it is inside the paragraph\",\" \",a(\"span\",null,\"and this is blue since it is inside the span\"));function c(){var e=i();return a(\"div\",{className:e.root},\"This is red since it is inside the root.\",l)}},Eujb:function(e,n,t){\"use strict\";t.r(n);var o=t(\"mXGw\"),s=t.n(o),r=t(\"WLtd\"),a=t(\"XpU0\"),i=t(\"O8uh\"),l=s.a.createElement,c=Object(r.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}});n.default=Object(a.default)(c)((function(e){var n=e.classes;return l(i.a,{className:n.root},\"Styled with HOC API\")}))},FFgG:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\\n\\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\\n\\n## Why use Material-UI's styling solution?\\n\\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. [A *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style) overcomes many of those limitations, and **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\\n\\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\\n- \\ud83d\\ude80 It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f It uses [JSS](https://github.com/cssinjs/jss) at its core \\u2013 a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\\n- \\ud83d\\udce6 Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\\n\\n## Instalaci\\xf3n\\n\\n> `@material-ui/styles` is re-exported as `@material-ui/core/styles` - you only need to install it if you wish to use it independently from Material-UI.\\n\\nPara instalarlo y guardarlo en las dependencias de tu ` package.json `, ejecuta:\\n\\n```sh\\n// with npm\\nnpm install @material-ui/styles\\n\\n// with yarn\\nyarn add @material-ui/styles\\n```\\n\\n## Getting started\\n\\nThere are 3 possible APIs you can use to generate and apply styles, however they all share the same underlying logic.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\nNote: this only applies to the calling syntax \\u2013 style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Nesting selectors\\n\\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Adapting based on props\\n\\nYou can pass a function to `makeStyles` (\\\"interpolation\\\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulated props for the purpose of the example\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Pass the props as the first argument of useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\nThis button component has a color property that changes its color:\\n\\n### Adapting the hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Adapting the styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### Adapting the higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### Stress test\\n\\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles vs @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS). This solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). It doesn't have a default theme, and can be used to style React applications that are not using Material-UI components.\\n\\nTo reduce the number of packages to install when using Material-UI, and to simplify the imports, `@material-ui/styles` modules are re-exported from `@material-ui/core/styles`.\\n\\nTo remove the need to systematically supply a theme, the default Material-UI theme is applied to the re-exported `makeStyles`, `styled`, `withTheme`, `useTheme`, and `withStyles` modules.\\n\\nPor ejemplo:\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},FqWo:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return g}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=t(\"WLtd\"),i=t(\"LMpM\"),l=t(\"h7Hf\"),c=s.a.createElement,p=Object(r.a)((function(e){return Object(a.a)({root:function(n){return{backgroundColor:n.backgroundColor,color:e.color}}})})),d=c(\"br\",null),u=c(\"br\",null),m=s.a.memo((function(e){var n=p(e),t=Object(i.a)(),o=s.a.useRef(1);return s.a.useEffect((function(){o.current+=1})),c(\"div\",{className:n.root},\"rendered \",o.current,\" times\",d,\"color: \",t.color,u,\"backgroundColor: \",e.backgroundColor)})),h=c(\"label\",{htmlFor:\"color\"},\"theme color: \"),y=c(\"label\",{htmlFor:\"background-color\"},\"background-color property:\",\" \");function g(){var e=s.a.useState(\"#2196f3\"),n=e[0],t=e[1],o=s.a.useState(\"#ffffff\"),r=o[0],a=o[1],i=s.a.useMemo((function(){return{color:r}}),[r]);return c(l.a,{theme:i},c(\"div\",null,c(\"fieldset\",null,c(\"div\",null,h,c(\"input\",{id:\"color\",type:\"color\",onChange:function(e){a(e.target.value)},value:r})),c(\"div\",null,y,c(\"input\",{id:\"background-color\",type:\"color\",onChange:function(e){t(e.target.value)},value:n}))),c(m,{backgroundColor:n})))}},KRP6:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\\n\\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\\n\\n## Why use Material-UI's styling solution?\\n\\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. [A *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style) overcomes many of those limitations, and **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\\n\\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\\n- \\ud83d\\ude80 It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f It uses [JSS](https://github.com/cssinjs/jss) at its core \\u2013 a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\\n- \\ud83d\\udce6 Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\\n\\n## Installation\\n\\n> `@material-ui/styles` is re-exported as `@material-ui/core/styles` - you only need to install it if you wish to use it independently from Material-UI.\\n\\nPour installer et enregistrer dans vos d\\xe9pendances `package.json` , ex\\xe9cutez:\\n\\n```sh\\n// with npm\\nnpm install @material-ui/styles\\n\\n// with yarn\\nyarn add @material-ui/styles\\n```\\n\\n## Getting started\\n\\nThere are 3 possible APIs you can use to generate and apply styles, however they all share the same underlying logic.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\nNote: this only applies to the calling syntax \\u2013 style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Nesting selectors\\n\\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Adapting based on props\\n\\nYou can pass a function to `makeStyles` (\\\"interpolation\\\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulated props for the purpose of the example\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Pass the props as the first argument of useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\nThis button component has a color property that changes its color:\\n\\n### Adapting the hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Adapting the styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### Adapting the higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### Stress test\\n\\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles vs @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS). This solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). It doesn't have a default theme, and can be used to style React applications that are not using Material-UI components.\\n\\nTo reduce the number of packages to install when using Material-UI, and to simplify the imports, `@material-ui/styles` modules are re-exported from `@material-ui/core/styles`.\\n\\nTo remove the need to systematically supply a theme, the default Material-UI theme is applied to the re-exported `makeStyles`, `styled`, `withTheme`, `useTheme`, and `withStyles` modules.\\n\\nPar exemple:\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},M66j:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">\\u65e0\\u8bba\\u60a8\\u662f\\u5426\\u4f7f\\u7528\\u4e86 Material-UI \\u7ec4\\u4ef6\\uff0c\\u90fd\\u53ef\\u4ee5\\u5728\\u5e94\\u7528\\u4e2d\\u4f7f\\u7528 Material-UI \\u7684\\u6837\\u5f0f\\u65b9\\u6848\\u3002</p>\\n\\nMaterial-UI \\u65e8\\u5728\\u4e3a\\u6784\\u5efa\\u52a8\\u6001\\u7684 UI \\u63d0\\u4f9b\\u624e\\u5b9e\\u7684\\u57fa\\u7840\\u3002 \\u4e3a\\u4e86\\u6784\\u9020\\u66f4\\u52a0\\u6e05\\u6670\\u7684\\u7ed3\\u6784\\uff0c**\\u6211\\u4eec\\u5355\\u72ec\\u53d1\\u5e03\\u4e86 Material-UI \\u7ec4\\u4ef6\\u4e2d\\u4f7f\\u7528\\u7684\\u6837\\u5f0f\\u65b9\\u6848**\\uff0c\\u5b83\\u5c06\\u4f5c\\u4e3a\\u4e00\\u4e2a `@material-ui/styles` \\u7684\\u4f9d\\u8d56\\u5305\\u5b58\\u5728\\u3002 @material-ui/styles \\u5e76\\u4e0d\\u662f\\u4f60\\u552f\\u4e00\\u7684\\u9009\\u62e9\\uff0cMaterial-UI \\u4e5f\\u53ef\\u4ee5\\u4e0e\\u5176\\u4ed6\\u4e3b\\u6d41\\u6837\\u5f0f\\u65b9\\u6848[\\u5f7c\\u6b64\\u534f\\u4f5c](/guides/interoperability/)\\u3002\\n\\n## \\u4e3a\\u4ec0\\u4e48\\u8981\\u4f7f\\u7528 Material-UI \\u7684\\u6837\\u5f0f\\u65b9\\u6848\\u5462\\uff1f\\n\\n\\u5728\\u4ee5\\u524d\\u7684\\u7248\\u672c\\u4e2d\\uff0cMaterial-UI \\u66fe\\u4f7f\\u7528\\u8fc7 LESS\\uff0c\\u4ee5\\u53ca\\u800c\\u540e\\u7684\\u81ea\\u5b9a\\u4e49\\u5185\\u5d4c\\u5f0f\\u6837\\u5f0f\\u8868\\u6765\\u7f16\\u5199\\u7ec4\\u4ef6\\u7684\\u6837\\u5f0f\\uff0c\\u4f46\\u662f\\u8fd9\\u4e9b\\u65b9\\u6cd5\\u90fd\\u6709\\u5176\\u5c40\\u9650\\u6027\\u3002 [\\u4e00\\u4e2a*CSS-in-JS* \\u7684\\u65b9\\u6848](https://github.com/oliviertassinari/a-journey-toward-better-style)\\u7a81\\u7834\\u4e86\\u90a3\\u4e9b\\u9650\\u5236\\uff0c\\u5e76**\\u5f00\\u542f\\u4e86\\u5f88\\u591a\\u5f3a\\u5927\\u7684\\u529f\\u80fd**\\uff08\\u4e3b\\u9898\\u5d4c\\u5957\\u3001\\u52a8\\u6001\\u6837\\u5f0f\\u3001\\u81ea\\u6211\\u652f\\u6301\\u7b49\\u7b49\\uff09\\u3002\\n\\nMaterial-UI \\u7684\\u6837\\u5f0f\\u65b9\\u6848\\u6765\\u81ea\\u4e8e\\u8bb8\\u591a\\u5176\\u4ed6 CSS-in-JS \\u5e93\\u7684\\u542f\\u53d1\\uff0c\\u4f8b\\u5982 [styled-components](https://www.styled-components.com/) \\u548c [emotion](https://emotion.sh/)\\u3002\\n\\n- \\ud83d\\udc85\\u4f60\\u53ef\\u4ee5\\u671f\\u5f85\\u548c styled-components [\\u4e00\\u6837\\u7684\\u4f18\\u52bf](https://www.styled-components.com/docs/basics#motivation)\\u3002\\n- \\ud83d\\ude80\\u5b83\\u7684\\u8fd0\\u884c[\\u8d85\\u5feb\\u7684](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles)\\u3002\\n- \\ud83e\\udde9\\u4f60\\u53ef\\u4ee5\\u901a\\u8fc7\\u4e00\\u4e2a[\\u63d2\\u4ef6](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API \\u6765\\u6269\\u5c55\\u3002\\n- \\u26a1\\ufe0f\\u5b83\\u4f7f\\u7528 [JSS](https://github.com/cssinjs/jss) \\u4e3a\\u5176\\u6838\\u5fc3 \\u2014\\u2014 \\u4e00\\u4e2a [\\u9ad8\\u6027\\u80fd\\u7684](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript \\u5230 CSS \\u7684\\u7f16\\u8bd1\\u5668\\uff0c\\u5b83\\u5728\\u8fd0\\u884c\\u65f6\\u548c\\u670d\\u52a1\\u5668\\u7aef\\u7f16\\u8bd1\\u3002\\n- \\ud83d\\udce6\\u4f4e\\u4e8e[15KB\\u538b\\u7f29](https://bundlephobia.com/result?p=@material-ui/styles)\\uff1b\\u82e5\\u548c Material-UI \\u4e00\\u8d77\\u4f7f\\u7528\\uff0c\\u5c06\\u4e0d\\u4f1a\\u6709\\u6346\\u7ed1\\u7684\\u5c3a\\u5bf8\\u589e\\u52a0\\u3002\\n\\n## \\u5b89\\u88c5\\n\\n> \\u6211\\u4eec\\u5c06 `@material-ui/styles` \\u5bfc\\u51fa\\u4e3a `@material-ui/core/styles` \\u2014\\u2014\\u82e5\\u4f60\\u60f3\\u548c Material-UI \\u5206\\u5f00\\u4f7f\\u7528\\uff0c\\u53ea\\u9700\\u5355\\u72ec\\u5b89\\u88c5\\u5b83\\u3002\\n\\n\\u4e0b\\u8f7d\\u5e76\\u4fdd\\u5b58\\u5230\\u4f60\\u7684 `package.json` \\u4f9d\\u8d56\\u5305\\u91cc\\uff0c\\u8bf7\\u8fd0\\u884c:\\n\\n```sh\\n// \\u7528 npm \\u5b89\\u88c5\\nnpm install @material-ui/styles\\n\\n// \\u7528 yarn \\u5b89\\u88c5\\nyarn add @material-ui/styles\\n```\\n\\n## \\u5feb\\u901f\\u5f00\\u59cb\\n\\n\\u67093\\u79cd\\u53ef\\u80fd\\u7684 API \\u6765\\u751f\\u6210\\u5e76\\u5e94\\u7528\\u6837\\u5f0f\\uff0c\\u4f46\\u662f\\u5b83\\u4eec\\u90fd\\u6709\\u7740\\u76f8\\u540c\\u7684\\u5e95\\u5c42\\u903b\\u8f91\\u3002\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\n\\u6ce8\\u610f\\uff1a\\u5728\\u53ea\\u662f\\u7528\\u8c03\\u7528\\u8bed\\u6cd5\\u2014\\u2014 \\u60a8\\u4ecd\\u9700\\u4f7f\\u7528\\u4e00\\u4e2a JSS \\u5bf9\\u8c61\\u6765\\u5b9a\\u4e49\\u4f60\\u7684\\u6837\\u5f0f\\u3002 \\u4f60\\u53ef\\u4ee5[\\u6539\\u53d8\\u8fd9\\u6837\\u7684\\u884c\\u4e3a](/styles/advanced/#string-templates)\\uff0c\\u4f46\\u8fd8\\u662f\\u5b58\\u5728\\u4e00\\u4e9b\\u9650\\u5236\\u3002\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## \\u5d4c\\u5957\\u9009\\u62e9\\u5668\\n\\n\\u60a8\\u53ef\\u4ee5\\u5728\\u5f53\\u524d\\u7684 class \\u6216\\u7ec4\\u4ef6\\u5185\\u7684\\u4e00\\u4e2a\\u76ee\\u6807\\u5143\\u7d20\\u91cc\\u5d4c\\u5957\\u6837\\u5f0f\\u9009\\u62e9\\u5668\\u3002 \\u4ee5\\u4e0b\\u793a\\u4f8b\\u4f7f\\u7528 Hook API\\uff0c\\u4f46\\u548c\\u5176\\u4ed6 API \\u5927\\u540c\\u5c0f\\u5f02\\u3002\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## \\u6839\\u636e\\u5c5e\\u6027\\u6765\\u8c03\\u8282\\n\\n\\u60a8\\u53ef\\u4ee5\\u5c06\\u4e00\\u4e2a\\u51fd\\u6570\\u4f20\\u9012\\u7ed9`makeStyles` (\\u201c\\u63d2\\u503c\\u201d)\\uff0c\\u8fd9\\u6837\\u4e00\\u6765\\u6839\\u636e\\u7ec4\\u4ef6\\u7684\\u5c5e\\u6027\\u53ef\\u4ee5\\u53d8\\u6362\\u751f\\u6210\\u7684\\u6837\\u5f0f\\u7684\\u503c\\u3002 \\u6b64\\u51fd\\u6570\\u53ef\\u4ee5\\u8fd0\\u7528\\u4e8e\\u6837\\u5f0f\\u89c4\\u8303\\u7684\\u7ea7\\u522b\\uff0c\\u4e5f\\u53ef\\u4ee5\\u5b89\\u7f6e\\u4e8e CSS \\u5c5e\\u6027\\u7ea7\\u522b\\uff1a\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // \\u4e3a\\u4e86\\u793a\\u4f8b\\uff0c\\u6211\\u4eec\\u6a21\\u62df\\u4e86\\u8fd9\\u4e2a\\u5c5e\\u6027\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // \\u5c06 props \\u4f5c\\u4e3a useStyles() \\u7684\\u7b2c\\u4e00\\u4e2a\\u5c5e\\u6027\\u4f20\\u5165\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\n\\u6b64\\u6309\\u94ae\\u7ec4\\u4ef6\\u6709\\u4e00\\u4e2a\\u989c\\u8272\\u5c5e\\u6027\\uff0c\\u901a\\u8fc7\\u5b83\\u53ef\\u4ee5\\u6539\\u53d8\\u989c\\u8272\\uff1a\\n\\n### \\u91c7\\u7528 hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### \\u91c7\\u7528 styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### \\u91c7\\u7528 higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### \\u538b\\u529b\\u6d4b\\u8bd5\\n\\n\\u5728\\u4ee5\\u4e0b\\u538b\\u529b\\u6d4b\\u8bd5\\u4e2d\\uff0c\\u60a8\\u53ef\\u4ee5\\u5b9e\\u65f6\\u66f4\\u65b0*\\u4e3b\\u9898\\u989c\\u8272*\\u548c *background-color \\u5c5e\\u6027*\\uff1a\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles \\u4e0e @material-ui/styles\\n\\nMaterial-UI \\u7684\\u6837\\u5f0f\\u662f\\u7531 [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) \\u5305\\u52a0\\u8f7d\\u7684\\uff0c\\uff08\\u7531 JSS \\u6784\\u5efa\\uff09\\u3002 \\u8fd9\\u4e2a\\u89e3\\u51b3\\u65b9\\u6848\\u662f[\\u72ec\\u7acb](https://bundlephobia.com/result?p=@material-ui/styles)\\u7684\\u3002 \\u5b83\\u6ca1\\u6709\\u4e00\\u4e2a\\u9ed8\\u8ba4\\u7684\\u4e3b\\u9898\\uff0c\\u800c\\u5bf9\\u90a3\\u4e9b\\u4e0d\\u4f7f\\u7528 Material-UI \\u7ec4\\u4ef6\\u7684 React \\u5e94\\u7528\\uff0c\\u4f60\\u4e5f\\u53ef\\u4ee5\\u7528\\u4e8e\\u8bbe\\u7f6e\\u5b83\\u4eec\\u7684\\u6837\\u5f0f\\u3002\\n\\n\\u4e3a\\u4e86\\u51cf\\u5c11\\u5728\\u4f7f\\u7528 Material-UI \\u65f6\\u8981\\u5b89\\u88c5\\u7684\\u5305\\u7684\\u6570\\u91cf\\uff0c\\u5e76\\u4e14\\u7b80\\u5316\\u5bfc\\u5165\\u7684\\u6b65\\u9aa4\\uff0c\\u6211\\u4eec\\u5c06 `@material-ui/styles` \\u6a21\\u5757\\u4ece `@material-ui/core/styles` \\u4e2d\\u91cd\\u65b0\\u5bfc\\u51fa\\u3002\\n\\n\\u8fd9\\u6837\\u4e00\\u6765\\uff0c\\u65e0\\u9700\\u7cfb\\u7edf\\u6027\\u7684\\u63d0\\u4f9b\\u4e00\\u4e2a\\u4e3b\\u9898\\uff0c\\u9ed8\\u8ba4\\u7684 Material-UI \\u4e3b\\u9898\\u88ab\\u5e94\\u7528\\u5230\\u91cd\\u65b0\\u5bfc\\u51fa\\u7684 `makeStyles`\\uff0c`styled`\\uff0c`withTheme`\\uff0c`useTheme`\\uff0c\\u548c `withStyles` \\u6a21\\u5757\\u5f53\\u4e2d\\u3002\\n\\n\\u5c31\\u50cf\\u8fd9\\u6837\\uff1a\\n\\n```js\\n// \\u91cd\\u65b0\\u4e0e\\u9ed8\\u8ba4\\u7684\\u4e3b\\u9898\\u5bfc\\u51fa\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// \\u539f\\u6709\\u7684\\u4e0d\\u5e26\\u4e3b\\u9898\\u7684\\u6a21\\u5757\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},MbM7:function(e,n,t){var o={\"./AdaptingHOC.js\":\"ab95\",\"./AdaptingHOC.tsx\":\"psws\",\"./AdaptingHook.js\":\"uosA\",\"./AdaptingHook.tsx\":\"rfgx\",\"./AdaptingStyledComponents.js\":\"Nv3j\",\"./AdaptingStyledComponents.tsx\":\"emvy\",\"./HigherOrderComponent.js\":\"Dd4o\",\"./HigherOrderComponent.tsx\":\"Eujb\",\"./Hook.js\":\"BATJ\",\"./Hook.tsx\":\"/eYM\",\"./NestedStylesHook.js\":\"DkRs\",\"./NestedStylesHook.tsx\":\"uffU\",\"./StressTest.js\":\"Argf\",\"./StressTest.tsx\":\"FqWo\",\"./StyledComponents.js\":\"sbHQ\",\"./StyledComponents.tsx\":\"7UDI\"};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=r,e.exports=s,s.id=\"MbM7\"},Nv3j:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return d}));var o=t(\"2Fjn\"),s=t(\"mXGw\"),r=t.n(s),a=t(\"Ol6c\"),i=t(\"O8uh\"),l=r.a.createElement,c=Object(a.a)((function(e){e.color;var n=Object(o.a)(e,[\"color\"]);return l(i.a,n)}))({background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}),p=l(r.a.Fragment,null,l(c,{color:\"red\"},\"Red\"),l(c,{color:\"blue\"},\"Blue\"));function d(){return p}},RDk1:function(e,n){e.exports=\"import React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled with styled-components API</MyButton>;\\n}\\n\"},WLtd:function(e,n,t){\"use strict\";function o(e){return e}t.d(n,\"a\",(function(){return o}))},WnPn:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"e+1t\"),a=t(\"kVtE\"),i=s.a.createElement,l=t(\"MbM7\"),c=t(\"g63/\");function p(e){var n=e.demos,t=e.docs;return i(r.a,{demos:n,docs:t,requireDemo:l})}p.getInitialProps=function(){var e=Object(a.a)({pageFilename:\"styles/basics\",requireRaw:c});return{demos:e.demos,docs:e.docs}}},Y5lq:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles, WithStyles, createStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = createStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nfunction UnstyledComponent(props: WithStyles<typeof styles>) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Styled with HOC API</Button>;\\n}\\n\\nexport default withStyles(styles)(UnstyledComponent);\\n\"},ab95:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),r=t(\"mXGw\"),a=t.n(r),i=t(\"XpU0\"),l=t(\"O8uh\"),c=a.a.createElement;var p=Object(i.default)({root:{background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}})((function(e){var n=e.classes,t=(e.color,Object(s.a)(e,[\"classes\",\"color\"]));return c(l.a,Object(o.a)({className:n.root},t))})),d=c(a.a.Fragment,null,c(p,{color:\"red\"},\"Red\"),c(p,{color:\"blue\"},\"Blue\"));function u(){return d}},bpPo:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">Sie k\\xf6nnen die Styling-L\\xf6sung von Material-UI in Ihrer App verwenden, unabh\\xe4ngig davon, ob Sie Material-UI-Komponenten verwenden.</p>\\n\\nMaterial-UI hat das Ziel, solide Grundlagen f\\xfcr dynamische UIs zu schaffen. Der Einfachheit halber **stellen wir die in Material-UI-Komponenten verwendete Styling-L\\xf6sung** als `@material-ui/styles ` Paket zur Verf\\xfcgung. Sie k\\xf6nnen es verwenden, m\\xfcssen aber nicht, da Material-UI auch mit allen anderen wichtigen Styling-L\\xf6sungen [verwendbar ist](/guides/interoperability/).\\n\\n## Wieso die Styling-L\\xf6sung von Material-UI benutzten?\\n\\nIn fr\\xfcheren Versionen hat Material-UI LESS verwendet, eine benutzerdefinierte Inline-L\\xf6sung zum Schreiben der Stile der Komponenten. Diese Ans\\xe4tze erwiesen sich jedoch als begrenzt Einsetzbar. [Eine *CSS-in-JS* L\\xf6sung](https://github.com/oliviertassinari/a-journey-toward-better-style) \\xfcberwindet viele dieser Einschr\\xe4nkungen, und **schaltet viele gro\\xdfartige Funktionen frei** (Theme-Verschachtelung, dynamische Stile, Selbsthilfe, etc.).\\n\\nDie Styling-L\\xf6sung von Material-UI ist von vielen anderen Styling-Bibliotheken wie [styled-components](https://www.styled-components.com/) und [emotion](https://emotion.sh/) inspiriert.\\n\\n- \\ud83d\\udc85 Sie k\\xf6nnen [die gleichen Vorteile](https://www.styled-components.com/docs/basics#motivation) wie bei styled-components erwarten.\\n- \\ud83d\\ude80 Es ist [blitzschnell](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 Es ist erweiterbar \\xfcber eine [Plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f Es verwednet [JSS](https://github.com/cssinjs/jss) im Kern - ein JavaScript zum CSS-Compiler mit [hohe Leistung](https://github.com/cssinjs/jss/blob/master/docs/performance.md), der zur Laufzeit und serverseitig arbeitet.\\n- \\ud83d\\udce6 Weniger als [15 KB komprimiert](https://bundlephobia.com/result?p=@material-ui/styles); und keine Erh\\xf6hung der B\\xfcndelgr\\xf6\\xdfe, wenn es zusammen mit der Material-UI verwendet wird.\\n\\n## Installation\\n\\n> `@material-ui/styles` wird erneut exportiert als `@material-ui/core/styles` - Sie m\\xfcssen es nur installieren, wenn Sie es unabh\\xe4ngig von Material-UI verwenden m\\xf6chten.\\n\\nUm die Abh\\xe4ngigkeit zu ihrer `package.json` hinzuzuf\\xfcgen, f\\xfchren Sie folgenden Befehl aus:\\n\\n```sh\\n// mit npm\\nnpm install @material-ui/styles\\n\\n// mit yarn\\nyarn add @material-ui/styles\\n```\\n\\n## Erste Schritte\\n\\nEs gibt 3 m\\xf6gliche APIs, die Sie verwenden k\\xf6nnen, um Stile zu generieren und anzuwenden, aber sie alle teilen die gleiche zugrunde liegende Logik.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\nHinweis: Dies gilt nur f\\xfcr aufrufende Syntax-Stil-Definitionen, die noch ein JSS-Objekt verwenden. Sie k\\xf6nnen dieses Verhalten auch mit einigen Einschr\\xe4nkungen [\\xe4ndern](/styles/advanced/#string-templates).\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Verschachteln von Selektoren\\n\\nSie k\\xf6nnen Selektoren verschachteln, um Elemente innerhalb der aktuellen Klasse oder Komponente anzuvisieren. Das folgende Beispiel benutzt die Hook-API, aber es funktioniert genauso wie die anderen APIs.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue'\\n      }\\n    }\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Anpassung basierend auf Eigenschaften\\n\\nSie k\\xf6nnen eine Funktion an `makeStyles` (\\\"Interpolation\\\") \\xfcbergeben, um den generierten Wert basierend auf den Eigenschaften der Komponente anzupassen. Die Funktion kann auf Stilregelebene oder auf CSS-Eigenschaftsebene bereitgestellt werden:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // Stilregel\\n  foo: props => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS Eigenschaft\\n    color: props => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulierte Eigenschaften f\\xfcr dieses Beispiel\\n  const props = { backgroundColor: 'black', color: 'white' };\\n  // Leite die Eigenschaften als erstes Argument an useStyles() weiter\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />\\n}\\n```\\n\\nDiese Buttonkomponente hat eine Farbeigenschaft, die ihre Farbe \\xe4ndert:\\n\\n### Hook-API anpassen\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Gestylte Komponenten-API anpassen\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### API f\\xfcr Komponenten h\\xf6herer Ordnung anpassen\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### Stresstest\\n\\nIm folgenden Stresstest k\\xf6nnen Sie die *Themefarbe* und *background-color property* live aktualisieren:\\n\\n```js\\nconst useStyles = makeStyles(theme => ({\\n  root: props => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles vs @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS). This solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). Es hat kein Standard-Theme und kann verwendet werden, um React-Anwendungen zu entwerfen, die keine Material-UI-Komponenten verwenden.\\n\\nUm die Anzahl der zu installierenden Pakete zu reduzieren und um die Importe zu vereinfachen, werden `@material-ui/styles` Module von `@material-ui/core/styles` erneut exportiert.\\n\\nUm die Notwendigkeit einer systematischen Bereitstellung eines Themes zu entfernen, wird das Standard-Material-UI-Theme auf die neu exportierten `makeStyles`, `styled`, `withTheme`, `useTheme`, und `withStyles` Module angewendet.\\n\\nZum Beispiel:\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\"},\"c/Jx\":function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Styled with Hook API</Button>;\\n}\\n\"},djCt:function(e,n){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: (props) =>\\n      props.color === 'red'\\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: (props) =>\\n      props.color === 'red'\\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    margin: 8,\\n  },\\n});\\n\\nfunction MyButton(props) {\\n  const { color, ...other } = props;\\n  const classes = useStyles(props);\\n  return <Button className={classes.root} {...other} />;\\n}\\n\\nMyButton.propTypes = {\\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\\n};\\n\\nexport default function AdaptingHook() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},eFui:function(e,n){e.exports=\"# @material-ui/styles\\n\\n<p class=\\\"description\\\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\\n\\nMaterial-UI aims to provide a strong foundation for building dynamic UIs.\\nFor the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package.\\nYou can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\\n\\n## Why use Material-UI's styling solution?\\n\\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited.\\n[A _CSS-in-JS_ solution](https://github.com/oliviertassinari/a-journey-toward-better-style) overcomes many of those limitations,\\nand **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\\n\\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\\n\\n- \\ud83d\\udc85 You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\\n- \\ud83d\\ude80 It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\\n- \\ud83e\\udde9 It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\\n- \\u26a1\\ufe0f It uses [JSS](https://github.com/cssinjs/jss) at its core \\u2013 a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\\n- \\ud83d\\udce6 Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\\n\\n## Installation\\n\\n> `@material-ui/styles` is re-exported as `@material-ui/core/styles` - you only need to install it if you wish to use it independently from Material-UI.\\n\\nTo install and save in your `package.json` dependencies, run:\\n\\n```sh\\n// with npm\\nnpm install @material-ui/styles\\n\\n// with yarn\\nyarn add @material-ui/styles\\n```\\n\\n## Getting started\\n\\nThere are 3 possible APIs you can use to generate and apply styles, however they all share the same underlying logic.\\n\\n### Hook API\\n\\n```jsx\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Hook</Button>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/Hook.js\\\"}}\\n\\n### Styled components API\\n\\nNote: this only applies to the calling syntax \\u2013 style definitions still use a JSS object.\\nYou can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\\n\\n```jsx\\nimport React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(Button)({\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n});\\n\\nexport default function StyledComponents() {\\n  return <MyButton>Styled Components</MyButton>;\\n}\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StyledComponents.js\\\"}}\\n\\n### Higher-order component API\\n\\n```jsx\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n};\\n\\nfunction HigherOrderComponent(props) {\\n  const { classes } = props;\\n  return <Button className={classes.root}>Higher-order component</Button>;\\n}\\n\\nHigherOrderComponent.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(HigherOrderComponent);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/HigherOrderComponent.js\\\"}}\\n\\n## Nesting selectors\\n\\nYou can nest selectors to target elements inside the current class or component.\\nThe following example uses the Hook API, but it works the same way with the other APIs.\\n\\n```js\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      color: 'green',\\n      '& span': {\\n        color: 'blue',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/NestedStylesHook.js\\\", \\\"defaultCodeOpen\\\": false}}\\n\\n## Adapting based on props\\n\\nYou can pass a function to `makeStyles` (\\\"interpolation\\\")\\nin order to adapt the generated value based on the component's props.\\nThe function can be provided at the style rule level, or at the CSS property level:\\n\\n```jsx\\nconst useStyles = makeStyles({\\n  // style rule\\n  foo: (props) => ({\\n    backgroundColor: props.backgroundColor,\\n  }),\\n  bar: {\\n    // CSS property\\n    color: (props) => props.color,\\n  },\\n});\\n\\nfunction MyComponent() {\\n  // Simulated props for the purpose of the example\\n  const props = {\\n    backgroundColor: 'black',\\n    color: 'white',\\n  };\\n  // Pass the props as the first argument of useStyles()\\n  const classes = useStyles(props);\\n\\n  return <div className={`${classes.foo} ${classes.bar}`} />;\\n}\\n```\\n\\nThis button component has a color property that changes its color:\\n\\n### Adapting the hook API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHook.js\\\", \\\"react\\\":\\\"next\\\"}}\\n\\n### Adapting the styled components API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingStyledComponents.js\\\"}}\\n\\n### Adapting the higher-order component API\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/AdaptingHOC.js\\\"}}\\n\\n### Stress test\\n\\nIn the following stress test, you can update the _theme color_ and the _background-color property_ live:\\n\\n```js\\nconst useStyles = makeStyles((theme) => ({\\n  root: (props) => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n```\\n\\n{{\\\"demo\\\": \\\"pages/styles/basics/StressTest.js\\\"}}\\n\\n## @material-ui/core/styles vs @material-ui/styles\\n\\nMaterial-UI's styles are powered by the [@material-ui/styles](https://www.npmjs.com/package/@material-ui/styles) package, (built with JSS).\\nThis solution is [isolated](https://bundlephobia.com/result?p=@material-ui/styles). It doesn't have a default theme, and can be used to style React applications that are not using Material-UI components.\\n\\nTo reduce the number of packages to install when using Material-UI, and to simplify the imports, `@material-ui/styles` modules are re-exported from `@material-ui/core/styles`.\\n\\nTo remove the need to systematically supply a theme, the default Material-UI theme is applied to the re-exported `makeStyles`, `styled`, `withTheme`, `useTheme`, and `withStyles` modules.\\n\\nFor instance:\\n\\n```js\\n// Re-export with a default theme\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// Original module with no default theme\\nimport { makeStyles } from '@material-ui/styles';\\n```\\n\"},emvy:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return d}));var o=t(\"2Fjn\"),s=t(\"mXGw\"),r=t.n(s),a=t(\"Ol6c\"),i=t(\"O8uh\"),l=r.a.createElement,c=Object(a.a)((function(e){e.color;var n=Object(o.a)(e,[\"color\"]);return l(i.a,n)}))({background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}),p=l(r.a.Fragment,null,l(c,{color:\"red\"},\"Red\"),l(c,{color:\"blue\"},\"Blue\"));function d(){return p}},fRXc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/styles/basics\",function(){return t(\"WnPn\")}])},\"g63/\":function(e,n,t){var o={\"./AdaptingHOC.js\":\"ohWz\",\"./AdaptingHOC.tsx\":\"tHPu\",\"./AdaptingHook.js\":\"djCt\",\"./AdaptingHook.tsx\":\"7YK0\",\"./AdaptingStyledComponents.js\":\"v2iX\",\"./AdaptingStyledComponents.tsx\":\"mKPn\",\"./HigherOrderComponent.js\":\"AQpT\",\"./HigherOrderComponent.tsx\":\"Y5lq\",\"./Hook.js\":\"zksH\",\"./Hook.tsx\":\"c/Jx\",\"./NestedStylesHook.js\":\"v6uo\",\"./NestedStylesHook.tsx\":\"ibfl\",\"./StressTest.js\":\"vY63\",\"./StressTest.tsx\":\"5Eir\",\"./StyledComponents.js\":\"RDk1\",\"./StyledComponents.tsx\":\"61Qr\",\"./basics-aa.md\":\"uWUy\",\"./basics-de.md\":\"bpPo\",\"./basics-es.md\":\"FFgG\",\"./basics-fr.md\":\"KRP6\",\"./basics-ja.md\":\"B0fJ\",\"./basics-pt.md\":\"/N2O\",\"./basics-ru.md\":\"2CYP\",\"./basics-zh.md\":\"M66j\",\"./basics.md\":\"eFui\"};function s(e){var n=r(e);return t(n)}function r(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=r,e.exports=s,s.id=\"g63/\"},ibfl:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      margin: 0,\\n      color: 'green',\\n      '& span': {\\n        color: 'blue',\\n      },\\n    },\\n  },\\n});\\n\\nexport default function NestedStylesHook() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      This is red since it is inside the root.\\n      <p>\\n        This is green since it is inside the paragraph{' '}\\n        <span>and this is blue since it is inside the span</span>\\n      </p>\\n    </div>\\n  );\\n}\\n\"},mKPn:function(e,n){e.exports=\"import React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button, { ButtonProps } from '@material-ui/core/Button';\\nimport { Omit } from '@material-ui/types';\\n\\ninterface MyButtonProps {\\n  color: 'red' | 'blue';\\n}\\n\\nconst MyButton = styled(\\n  ({\\n    color,\\n    ...other\\n  }: MyButtonProps & Omit<ButtonProps, keyof MyButtonProps>) => (\\n    <Button {...other} />\\n  ),\\n)({\\n  background: (props: MyButtonProps) =>\\n    props.color === 'red'\\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: (props: MyButtonProps) =>\\n    props.color === 'red'\\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n  margin: 8,\\n});\\n\\nexport default function AdaptingStyledComponents() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},ohWz:function(e,n){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = {\\n  root: {\\n    background: (props) =>\\n      props.color === 'red'\\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: (props) =>\\n      props.color === 'red'\\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    margin: 8,\\n  },\\n};\\n\\nfunction MyButtonRaw(props) {\\n  const { classes, color, ...other } = props;\\n  return <Button className={classes.root} {...other} />;\\n}\\n\\nMyButtonRaw.propTypes = {\\n  /**\\n   * Override or extend the styles applied to the component.\\n   */\\n  classes: PropTypes.object.isRequired,\\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\\n};\\n\\nconst MyButton = withStyles(styles)(MyButtonRaw);\\n\\nexport default function AdaptingHOC() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},psws:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return h}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),r=t(\"mXGw\"),a=t.n(r),i=t(\"WLtd\"),l=t(\"XpU0\"),c=t(\"O8uh\"),p=a.a.createElement,d=Object(i.a)({root:{background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}});var u=Object(l.default)(d)((function(e){var n=e.classes,t=(e.color,Object(s.a)(e,[\"classes\",\"color\"]));return p(c.a,Object(o.a)({className:n.root},t))})),m=p(a.a.Fragment,null,p(u,{color:\"red\"},\"Red\"),p(u,{color:\"blue\"},\"Blue\"));function h(){return m}},rfgx:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return m}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),r=t(\"mXGw\"),a=t.n(r),i=t(\"yZEQ\"),l=t(\"O8uh\"),c=a.a.createElement,p=Object(i.a)({root:{background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}});function d(e){e.color;var n=Object(s.a)(e,[\"color\"]),t=p(e);return c(l.a,Object(o.a)({className:t.root},n))}var u=c(a.a.Fragment,null,c(d,{color:\"red\"},\"Red\"),c(d,{color:\"blue\"},\"Blue\"));function m(){return u}},sbHQ:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"Ol6c\"),a=t(\"O8uh\"),i=(0,s.a.createElement)(Object(r.a)(a.a)({background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",border:0,borderRadius:3,boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",color:\"white\",height:48,padding:\"0 30px\"}),null,\"Styled with styled-components API\");function l(){return i}},tHPu:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles, createStyles, WithStyles } from '@material-ui/core/styles';\\nimport Button, { ButtonProps } from '@material-ui/core/Button';\\nimport { Omit } from '@material-ui/types';\\n\\nconst styles = createStyles({\\n  root: {\\n    background: (props: MyButtonRawProps) =>\\n      props.color === 'red'\\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: (props: MyButtonRawProps) =>\\n      props.color === 'red'\\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    margin: 8,\\n  },\\n});\\n\\ninterface MyButtonRawProps {\\n  color: 'red' | 'blue';\\n}\\n\\nfunction MyButtonRaw(\\n  props: WithStyles<typeof styles> &\\n    Omit<ButtonProps, keyof MyButtonRawProps> &\\n    MyButtonRawProps,\\n) {\\n  const { classes, color, ...other } = props;\\n  return <Button className={classes.root} {...other} />;\\n}\\n\\nconst MyButton = withStyles(styles)(MyButtonRaw);\\n\\nexport default function AdaptingHOC() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},uWUy:function(e,n){e.exports=\"# crwdns97612:0crwdne97612:0\\n\\n<p class=\\\"description\\\">crwdns97614:0crwdne97614:0</p>\\n\\ncrwdns97616:0crwdne97616:0 crwdns97618:0crwdne97618:0 crwdns97620:0crwdne97620:0\\n\\n## crwdns97622:0crwdne97622:0\\n\\ncrwdns97624:0crwdne97624:0 crwdns101422:0crwdne101422:0\\n\\ncrwdns97640:0crwdne97640:0\\n\\n- crwdns101424:0crwdne101424:0\\n- crwdns101426:0crwdne101426:0\\n- crwdns101428:0crwdne101428:0\\n- crwdns101430:0crwdne101430:0\\n- crwdns101432:0crwdne101432:0\\n\\n## crwdns97652:0crwdne97652:0\\n\\n> crwdns106093:0crwdne106093:0\\n\\ncrwdns97654:0crwdne97654:0\\n\\n```sh\\ncrwdns97656:0crwdne97656:0\\n```\\n\\n## crwdns97658:0crwdne97658:0\\n\\ncrwdns101434:0crwdne101434:0\\n\\n### crwdns97662:0crwdne97662:0\\n\\n```jsx\\ncrwdns103142:0{ makeStyles }crwdnd103142:0{classes.root}crwdne103142:0\\n```\\n\\ncrwdns97666:0crwdne97666:0\\n\\n### crwdns97668:0crwdne97668:0\\n\\ncrwdns97670:0crwdne97670:0 crwdns97672:0crwdne97672:0\\n\\n```jsx\\ncrwdns103144:0{ styled }crwdne103144:0\\n```\\n\\ncrwdns97676:0crwdne97676:0\\n\\n### crwdns97678:0crwdne97678:0\\n\\n```jsx\\ncrwdns103146:0{ withStyles }crwdnd103146:0{ classes }crwdnd103146:0{classes.root}crwdne103146:0\\n```\\n\\ncrwdns97682:0crwdne97682:0\\n\\n## crwdns97684:0crwdne97684:0\\n\\ncrwdns97686:0crwdne97686:0 crwdns97688:0crwdne97688:0\\n\\n```js\\ncrwdns105871:0{\\n        color: 'blue'\\n      }crwdne105871:0\\n```\\n\\ncrwdns105873:0crwdne105873:0\\n\\n## crwdns97694:0crwdne97694:0\\n\\ncrwdns97696:0crwdne97696:0 crwdns97698:0crwdne97698:0\\n\\n```jsx\\ncrwdns97700:0{\\n    backgroundColor: props.backgroundColor,\\n  }crwdnd97700:0{ backgroundColor: 'black', color: 'white' }crwdnd97700:0${classes.foo}crwdnd97700:0${classes.bar}crwdne97700:0\\n```\\n\\ncrwdns97702:0crwdne97702:0\\n\\n### crwdns97704:0crwdne97704:0\\n\\ncrwdns97706:0crwdne97706:0\\n\\n### crwdns97708:0crwdne97708:0\\n\\ncrwdns97710:0crwdne97710:0\\n\\n### crwdns97712:0crwdne97712:0\\n\\ncrwdns97714:0crwdne97714:0\\n\\n### crwdns103148:0crwdne103148:0\\n\\ncrwdns97718:0crwdne97718:0\\n\\n```js\\ncrwdns97720:0{\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }crwdne97720:0\\n```\\n\\ncrwdns97722:0crwdne97722:0\\n\\n## crwdns103150:0crwdne103150:0\\n\\ncrwdns103152:0crwdne103152:0 crwdns103154:0crwdne103154:0 crwdns103156:0crwdne103156:0\\n\\ncrwdns103158:0crwdne103158:0\\n\\ncrwdns103160:0crwdne103160:0\\n\\ncrwdns103162:0crwdne103162:0\\n\\n```js\\ncrwdns103164:0{ makeStyles }crwdnd103164:0{ makeStyles }crwdne103164:0\\n```\"},uffU:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),r=t(\"yZEQ\"),a=s.a.createElement,i=Object(r.a)({root:{color:\"red\",\"& p\":{margin:0,color:\"green\",\"& span\":{color:\"blue\"}}}}),l=a(\"p\",null,\"This is green since it is inside the paragraph\",\" \",a(\"span\",null,\"and this is blue since it is inside the span\"));function c(){var e=i();return a(\"div\",{className:e.root},\"This is red since it is inside the root.\",l)}},uosA:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return m}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),r=t(\"mXGw\"),a=t.n(r),i=t(\"yZEQ\"),l=t(\"O8uh\"),c=a.a.createElement,p=Object(i.a)({root:{background:function(e){return\"red\"===e.color?\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\":\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"},border:0,borderRadius:3,boxShadow:function(e){return\"red\"===e.color?\"0 3px 5px 2px rgba(255, 105, 135, .3)\":\"0 3px 5px 2px rgba(33, 203, 243, .3)\"},color:\"white\",height:48,padding:\"0 30px\",margin:8}});function d(e){e.color;var n=Object(s.a)(e,[\"color\"]),t=p(e);return c(l.a,Object(o.a)({className:t.root},n))}var u=c(a.a.Fragment,null,c(d,{color:\"red\"},\"Red\"),c(d,{color:\"blue\"},\"Blue\"));function m(){return u}},v2iX:function(e,n){e.exports=\"import React from 'react';\\nimport { styled } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)({\\n  background: (props) =>\\n    props.color === 'red'\\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n  border: 0,\\n  borderRadius: 3,\\n  boxShadow: (props) =>\\n    props.color === 'red'\\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n  margin: 8,\\n});\\n\\nexport default function AdaptingStyledComponents() {\\n  return (\\n    <React.Fragment>\\n      <MyButton color=\\\"red\\\">Red</MyButton>\\n      <MyButton color=\\\"blue\\\">Blue</MyButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},v6uo:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    color: 'red',\\n    '& p': {\\n      margin: 0,\\n      color: 'green',\\n      '& span': {\\n        color: 'blue',\\n      },\\n    },\\n  },\\n});\\n\\nexport default function NestedStylesHook() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      This is red since it is inside the root.\\n      <p>\\n        This is green since it is inside the paragraph{' '}\\n        <span>and this is blue since it is inside the span</span>\\n      </p>\\n    </div>\\n  );\\n}\\n\"},vY63:function(e,n){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ThemeProvider, useTheme, makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: (props) => ({\\n    backgroundColor: props.backgroundColor,\\n    color: theme.color,\\n  }),\\n}));\\n\\nconst Component = React.memo((props) => {\\n  const classes = useStyles(props);\\n  const theme = useTheme();\\n\\n  const rendered = React.useRef(1);\\n  React.useEffect(() => {\\n    rendered.current += 1;\\n  });\\n\\n  return (\\n    <div className={classes.root}>\\n      rendered {rendered.current} times\\n      <br />\\n      color: {theme.color}\\n      <br />\\n      backgroundColor: {props.backgroundColor}\\n    </div>\\n  );\\n});\\n\\nComponent.propTypes = {\\n  backgroundColor: PropTypes.string.isRequired,\\n};\\n\\nexport default function StressTest() {\\n  const [backgroundColor, setBackgroundColor] = React.useState('#2196f3');\\n  const handleBackgroundColorChange = (event) => {\\n    setBackgroundColor(event.target.value);\\n  };\\n\\n  const [color, setColor] = React.useState('#ffffff');\\n  const handleColorChange = (event) => {\\n    setColor(event.target.value);\\n  };\\n\\n  const theme = React.useMemo(() => ({ color }), [color]);\\n\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <div>\\n        <fieldset>\\n          <div>\\n            <label htmlFor=\\\"color\\\">theme color: </label>\\n            <input\\n              id=\\\"color\\\"\\n              type=\\\"color\\\"\\n              onChange={handleColorChange}\\n              value={color}\\n            />\\n          </div>\\n          <div>\\n            <label htmlFor=\\\"background-color\\\">\\n              background-color property:{' '}\\n            </label>\\n            <input\\n              id=\\\"background-color\\\"\\n              type=\\\"color\\\"\\n              onChange={handleBackgroundColorChange}\\n              value={backgroundColor}\\n            />\\n          </div>\\n        </fieldset>\\n        <Component backgroundColor={backgroundColor} />\\n      </div>\\n    </ThemeProvider>\\n  );\\n}\\n\"},zksH:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    border: 0,\\n    borderRadius: 3,\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n  },\\n});\\n\\nexport default function Hook() {\\n  const classes = useStyles();\\n  return <Button className={classes.root}>Styled with Hook API</Button>;\\n}\\n\"}},[[\"fRXc\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}