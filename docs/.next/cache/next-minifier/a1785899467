{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{\"14rl\":function(e,s,n){\"use strict\";n.r(s),n.d(s,\"default\",(function(){return c}));var a=n(\"mXGw\"),r=n.n(a),t=n(\"e+1t\"),o=n(\"kVtE\"),p=r.a.createElement,i=n(\"gWg/\");function c(e){var s=e.docs;return p(t.a,{docs:s})}c.getInitialProps=function(){var e=Object(o.a)({pageFilename:\"api/circular-progress\",requireRaw:i});return{demos:e.demos,docs:e.docs}}},U2ac:function(e,s){e.exports='---\\nfilename: /packages/material-ui/src/CircularProgress/CircularProgress.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# CircularProgress API\\n\\n<p class=\"description\">The API documentation of the CircularProgress React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport CircularProgress from \\'@material-ui/core/CircularProgress\\';\\n// or\\nimport { CircularProgress } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n## ARIA\\n\\nIf the progress bar is describing the loading progress of a particular region of a page,\\nyou should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\\nattribute to `true` on that region until it has finished loading.\\n\\n## Component name\\n\\nThe `MuiCircularProgress` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">color</span> | <span class=\"prop-type\">\\'inherit\\'<br>&#124;&nbsp;\\'primary\\'<br>&#124;&nbsp;\\'secondary\\'</span> | <span class=\"prop-default\">\\'primary\\'</span> | The color of the component. It supports those theme colors that make sense for this component. |\\n| <span class=\"prop-name\">disableShrink</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, the shrink animation is disabled. This only works if variant is `indeterminate`. |\\n| <span class=\"prop-name\">size</span> | <span class=\"prop-type\">number<br>&#124;&nbsp;string</span> | <span class=\"prop-default\">40</span> | The size of the circle. If using a number, the pixel unit is assumed. If using a string, you need to provide the CSS unit, e.g \\'3rem\\'. |\\n| <span class=\"prop-name\">thickness</span> | <span class=\"prop-type\">number</span> | <span class=\"prop-default\">3.6</span> | The thickness of the circle. |\\n| <span class=\"prop-name\">value</span> | <span class=\"prop-type\">number</span> | <span class=\"prop-default\">0</span> | The value of the progress indicator for the determinate and static variants. Value between 0 and 100. |\\n| <span class=\"prop-name\">variant</span> | <span class=\"prop-type\">\\'determinate\\'<br>&#124;&nbsp;\\'indeterminate\\'<br>&#124;&nbsp;\\'static\\'</span> | <span class=\"prop-default\">\\'indeterminate\\'</span> | The variant to use. Use indeterminate when there is no progress value. |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiCircularProgress-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">static</span> | <span class=\"prop-name\">.MuiCircularProgress-static</span> | Styles applied to the root element if `variant=\"static\"`.\\n| <span class=\"prop-name\">indeterminate</span> | <span class=\"prop-name\">.MuiCircularProgress-indeterminate</span> | Styles applied to the root element if `variant=\"indeterminate\"`.\\n| <span class=\"prop-name\">colorPrimary</span> | <span class=\"prop-name\">.MuiCircularProgress-colorPrimary</span> | Styles applied to the root element if `color=\"primary\"`.\\n| <span class=\"prop-name\">colorSecondary</span> | <span class=\"prop-name\">.MuiCircularProgress-colorSecondary</span> | Styles applied to the root element if `color=\"secondary\"`.\\n| <span class=\"prop-name\">svg</span> | <span class=\"prop-name\">.MuiCircularProgress-svg</span> | Styles applied to the `svg` element.\\n| <span class=\"prop-name\">circle</span> | <span class=\"prop-name\">.MuiCircularProgress-circle</span> | Styles applied to the `circle` svg path.\\n| <span class=\"prop-name\">circleStatic</span> | <span class=\"prop-name\">.MuiCircularProgress-circleStatic</span> | Styles applied to the `circle` svg path if `variant=\"static\"`.\\n| <span class=\"prop-name\">circleIndeterminate</span> | <span class=\"prop-name\">.MuiCircularProgress-circleIndeterminate</span> | Styles applied to the `circle` svg path if `variant=\"indeterminate\"`.\\n| <span class=\"prop-name\">circleDisableShrink</span> | <span class=\"prop-name\">.MuiCircularProgress-circleDisableShrink</span> | Styles applied to the `circle` svg path if `disableShrink={true}`.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/CircularProgress/CircularProgress.js) for more detail.\\n\\n## Demos\\n\\n- [Progress](/components/progress/)\\n\\n'},\"gWg/\":function(e,s,n){var a={\"./circular-progress.md\":\"U2ac\"};function r(e){var s=t(e);return n(s)}function t(e){if(!n.o(a,e)){var s=new Error(\"Cannot find module '\"+e+\"'\");throw s.code=\"MODULE_NOT_FOUND\",s}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=t,e.exports=r,r.id=\"gWg/\"},tJew:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/circular-progress\",function(){return n(\"14rl\")}])}},[[\"tJew\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}