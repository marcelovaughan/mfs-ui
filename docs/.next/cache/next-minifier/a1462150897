{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{\"+H/W\":function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  '@global': {\\n    // You should target [class*=\\\"MuiButton-root\\\"] instead if you nest themes.\\n    '.MuiButton-root': {\\n      fontSize: '1rem',\\n    },\\n  },\\n})(() => null);\\n\\nexport default function GlobalCssOverride() {\\n  return (\\n    <React.Fragment>\\n      <GlobalCss />\\n      <Button>font-size: 1rem</Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},\"/QYg\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"bZJ2\"),s=t(\"mXGw\"),a=t.n(s),i=t(\"O8uh\"),r=t(\"Lqxv\"),c=t(\"uU96\"),l=a.a.createElement,d={button:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},buttonBlue:{background:\"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",boxShadow:\"0 3px 5px 2px rgba(33, 203, 243, .30)\"}};function u(){var e=a.a.useState(\"default\"),n=e[0],t=e[1];return l(a.a.Fragment,null,l(r.a,{control:l(c.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),l(i.a,{style:Object(o.a)(Object(o.a)({},d.button),\"blue\"===n?d.buttonBlue:{})},\"dynamic inline-style\"))}},\"0NmG\":function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\n\\n// We can use inline-style\\nconst style = {\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  borderRadius: 3,\\n  border: 0,\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n};\\n\\nexport default function InlineStyle() {\\n  return <Button style={style}>inline-style</Button>;\\n}\\n\"},\"16do\":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/customization/components\",function(){return t(\"K32J\")}])},\"2i58\":function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  '@global': {\\n    // You should target [class*=\\\"MuiButton-root\\\"] instead if you nest themes.\\n    '.MuiButton-root': {\\n      fontSize: '1rem',\\n    },\\n  },\\n})(() => null);\\n\\nexport default function GlobalCssOverride() {\\n  return (\\n    <React.Fragment>\\n      <GlobalCss />\\n      <Button>font-size: 1rem</Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},\"2wew\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mKyP\"),i=t(\"h7Hf\"),r=t(\"O8uh\"),c=s.a.createElement,l=Object(a.a)({typography:{button:{fontSize:\"1rem\"}}}),d=c(i.a,{theme:l},c(r.a,null,\"font-size: 1rem\"));function u(){return d}},\"4+jR\":function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    // $disabled is a reference to the local disabled\\n    // rule within the same style sheet.\\n    // By using &, we increase the specificity.\\n    '&$disabled': {\\n      background: 'rgba(0, 0, 0, 0.12)',\\n      color: 'white',\\n      boxShadow: 'none',\\n    },\\n  },\\n  disabled: {},\\n});\\n\\nexport default function ClassesState() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Button\\n      disabled\\n      classes={{\\n        root: classes.root, // class name, e.g. `root-x`\\n        disabled: classes.disabled, // class name, e.g. `disabled-x`\\n      }}\\n    >\\n      classes state\\n    </Button>\\n  );\\n}\\n\"},\"4CHE\":function(e,n){e.exports='# Personnaliser les composants\\n\\n<p class=\"description\">Vous pouvez facilement personnaliser l\\'apparence d\\'un composant Material-UI.</p>\\n\\nAs components can be used in different contexts, there are several approaches to this. Du plus \\xe9troit cas d\\'utilisation au plus large, il s\\'agit des suivants :\\n\\n1. [Variation sp\\xe9cifique pour une situation ponctuelle](#1-specific-variation-for-a-one-time-situation)\\n2. [Variation dynamique pour une situation ponctuelle](#2-dynamic-variation-for-a-one-time-situation)\\n3. [Variation sp\\xe9cifique d\\'un composant](#3-specific-variation-of-a-component) r\\xe9utilis\\xe9 dans diff\\xe9rents contextes\\n4. [Variations de Material Design](#4-material-design-variations) comme avec le composant bouton\\n5. [Variation globale du th\\xe8me](#5-global-theme-variation)\\n\\n## 1. Variation sp\\xe9cifique pour une situation ponctuelle\\n\\nVous devrez peut-\\xeatre modifier le style d\\'un composant pour un cas particulier. Vous disposez des solutions suivantes :\\n\\n### Remplacement de styles avec des noms de classe\\n\\nLa premi\\xe8re fa\\xe7on de remplacer le style d\\'un composant consiste \\xe0 utiliser des **noms de classes** . Chaque composant fournit une propri\\xe9t\\xe9 `className` qui est toujours appliqu\\xe9e \\xe0 l\\'\\xe9l\\xe9ment racine.\\n\\nThis example uses the [`withStyles()`](/styles/basics/#higher-order-component-api) higher-order component to inject custom styles into the DOM, and to pass the class name to the `ClassNames` component via its `classes` property. You can choose [any other styling solution](/guides/interoperability/), or even plain CSS to create the styles, but be sure to consider the [CSS injection order](/styles/advanced/#css-injection-order), as the CSS injected into the DOM by Material-UI to style a component has the highest specificity possible, since the `<link>` is injected at the bottom of the `<head />` to ensure the components always render correctly.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### Overriding styles with classes\\n\\nWhen the `className` property isn\\'t enough, and you need to access deeper elements, you can take advantage of the `classes` object property to customize all the CSS injected by Material-UI for a given component.\\n\\nThe list of classes for each component is documented in the component API page, you should refer to the **CSS section** and **rule name column**. For instance, you can have a look at the [Button CSS API](/api/button/#css). Alternatively, you can use the [browser dev tools](#using-the-dev-tools).\\n\\nThis example also uses `withStyles()` (see above), but here, `ClassesNesting` is using `Button`\\'s `classes` prop to provide an object that maps the **names of classes to override** (style rules) to the **CSS class names to apply** (values). The component\\'s existing classes will continue to be injected, so it is only necessary to provide the specific styles you wish to add or override.\\n\\nNotice that in addition to the button styling, the button label\\'s capitalization has been changed:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### Overriding styles with global class names\\n\\n[Follow this section](/styles/advanced/#with-material-ui-core).\\n\\n### Utiliser les outils de d\\xe9veloppement\\n\\nThe browser dev tools can save you a lot of time. Material-UI\\'s class names [follow a simple pattern](/styles/advanced/#class-names) in development mode: `Mui[component name]-[style rule name]-[UUID]`.\\n\\nLet\\'s go back to the above demo. How can you override the button label?\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\nUsing the dev tools, you know that you need to target the `Button` component and the `label` style rule:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### Shorthand\\n\\nThe above code example can be condensed by using **the same CSS API** as the child component. In this example, the `withStyles()` higher-order component is injecting a `classes` property that is used by the [`Button` component](/api/button/#css).\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudo-classes\\n\\nThe components special states, like *hover*, *focus*, *disabled* and *selected*, are styled with a higher CSS specificity. [Specificity is a weight](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) that is applied to a given CSS declaration.\\n\\nIn order to override the components special states, **you need to increase specificity**. Here is an example with the *disable* state and the button component using a **pseudo-class** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\nSometimes, you can\\'t use a **pseudo-class** as the state doesn\\'t exist in the platform. Let\\'s take the menu item component and the *selected* state as an example. Aside from accessing nested elements, the `classes` property can be used to customize the special states of Material-UI components:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### Why do I need to increase specificity to override one component state?\\n\\nBy design, the CSS specification makes the pseudo-classes increase the specificity. For consistency, Material-UI increases the specificity of its custom pseudo-classes. This has one important advantage, it allows you to cherry-pick the state you want to customize.\\n\\n#### Can I use a different API that requires fewer boilerplate?\\n\\nInstead of providing values to the `classes` prop API, you can rely on [the global class names](/styles/advanced/#with-material-ui-core) generated by Material-UI. It implements all these custom pseudo-classes:\\n\\n| classes key  | Global class name |\\n|:------------ |:----------------- |\\n| checked      | Mui-checked       |\\n| disabled     | Mui-disabled      |\\n| error        | Mui-error         |\\n| focused      | Mui-focused       |\\n| focusVisible | Mui-focusVisible  |\\n| required     | Mui-required      |\\n| expanded     | Mui-expanded      |\\n| selected     | Mui-selected      |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### Use `$ruleName` to reference a local rule within the same style sheet\\n\\nThe [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) plugin (available by default) can make the process of increasing specificity easier.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\ncompile vers :\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f You need to apply the two generated class names (`root` & `disabled`) to the DOM to make it work.\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### Overriding with inline-styles\\n\\nThe second way to override the style of a component is to use the **inline-style** approach. Every component provides a `style` property. These properties are always applied to the root element.\\n\\nYou don\\'t have to worry about CSS specificity as the inline-style takes precedence over the regular CSS.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[When should I use inline-style vs classes?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. Variation dynamique pour une situation ponctuelle\\n\\nYou have learned how to override the style of a Material-UI component in the previous section. Now, let\\'s see how we can make these overrides dynamic. Here are five alternatives; each has its pros and cons.\\n\\n### Dynamic CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### Class name branch\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS variables\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Inline-styles\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### Theme nesting\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. Specific variation of a component\\n\\nYou might need to create a variation of a component and use it in different contexts, for instance a colorful button on your product page, however you probably want to keep your code [*DRY*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).\\n\\nThe best approach is to follow option 1 and then take advantage of the composition power of React by exporting your customized component to use wherever you need it.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design variations\\n\\nThe Material Design specification documents different variations of certain components, such as how buttons come in different shapes: [text](https://material.io/design/components/buttons.html#text-button) (formerly \"flat\"), [contained](https://material.io/design/components/buttons.html#contained-button) (formerly \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) and more.\\n\\nMaterial-UI attempts to implement all of these variations. Please refer to the [Supported Components](/getting-started/supported-components/) documentation to find out the current status of all supported Material Design components.\\n\\n## 5. Variation globale du th\\xe8me\\n\\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes.\\n\\nThe demos of this section covers how to the change the button\\'s font size.\\n\\n### Theme variables\\n\\nYou can adjust the [theme configuration variables](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### Global CSS override\\n\\nYou can also customize all instances of a component with CSS. Components expose [global class names](/styles/advanced/#with-material-ui-core) to enable this. It\\'s very similar to how you would customize Bootstrap.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### Global theme override\\n\\nYou can take advantage of the `overrides` key of the `theme` to potentially change every single style injected by Material-UI into the DOM. Learn more about it in the [themes section](/customization/globals/#css) of the documentation.\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},\"4Q5C\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",\"&$disabled\":{background:\"rgba(0, 0, 0, 0.12)\",color:\"white\",boxShadow:\"none\"}},disabled:{}});function l(){var e=c();return r(i.a,{disabled:!0,classes:{root:e.root,disabled:e.disabled}},\"classes state\")}},\"4wj9\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"bZJ2\"),s=t(\"mXGw\"),a=t.n(s),i=t(\"O8uh\"),r=t(\"Lqxv\"),c=t(\"uU96\"),l=a.a.createElement,d={button:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},buttonBlue:{background:\"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",boxShadow:\"0 3px 5px 2px rgba(33, 203, 243, .30)\"}};function u(){var e=a.a.useState(\"default\"),n=e[0],t=e[1];return l(a.a.Fragment,null,l(r.a,{control:l(c.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),l(i.a,{style:Object(o.a)(Object(o.a)({},d.button),\"blue\"===n?d.buttonBlue:{})},\"dynamic inline-style\"))}},\"5ll3\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return r}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"O8uh\"),i=(0,s.a.createElement)(a.a,{style:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"}},\"inline-style\");function r(){return i}},\"5wJ4\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",\"&$disabled\":{background:\"rgba(0, 0, 0, 0.12)\",color:\"white\",boxShadow:\"none\"}},disabled:{}});function l(){var e=c();return r(i.a,{disabled:!0,classes:{root:e.root,disabled:e.disabled}},\"classes state\")}},\"7n5B\":function(e,n){e.exports=\"import React from 'react';\\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: '1rem',\\n      },\\n    },\\n  },\\n});\\n\\nexport default function GlobalThemeOverride() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Button>font-size: 1rem</Button>\\n    </ThemeProvider>\\n  );\\n}\\n\"},\"8z9n\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return b}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t.n(a),r=t(\"XpU0\"),c=t(\"O8uh\"),l=t(\"Lqxv\"),d=t(\"uU96\"),u=i.a.createElement,m=function(e,n){return function(t){return n[t[e]]}},p={root:{background:m(\"color\",{default:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",blue:\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"}),borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:m(\"color\",{default:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",blue:\"0 3px 5px 2px rgba(33, 203, 243, .3)\"})}},h=Object(r.default)(p)((function(e){var n=e.classes,t=(e.color,Object(s.a)(e,[\"classes\",\"color\"]));return u(c.a,Object(o.a)({className:n.root},t))}));function b(){var e=i.a.useState(\"default\"),n=e[0],t=e[1];return u(i.a.Fragment,null,u(l.a,{control:u(d.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),u(h,{color:n},\"Dynamic CSS\"))}},\"9K9j\":function(e,n){e.exports=\"import React from 'react';\\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: '1rem',\\n    },\\n  },\\n});\\n\\nexport default function ThemeVariables() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Button>font-size: 1rem</Button>\\n    </ThemeProvider>\\n  );\\n}\\n\"},\"9OVH\":function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\n\\n// We can use inline-style\\nconst style = {\\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n  borderRadius: 3,\\n  border: 0,\\n  color: 'white',\\n  height: 48,\\n  padding: '0 30px',\\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n};\\n\\nexport default function InlineStyle() {\\n  return <Button style={style}>inline-style</Button>;\\n}\\n\"},A4sh:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return d}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"XpU0\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.default)({\"@global\":{\".MuiButton-root\":{fontSize:\"1rem\"}}})((function(){return null})),l=r(s.a.Fragment,null,r(c,null),r(i.a,null,\"font-size: 1rem\"));function d(){return l}},BRs4:function(e,n){e.exports='# Customizando componentes\\n\\n<p class=\"description\">Voc\\xea pode customizar facilmente a apar\\xeancia de um componente do Material-UI.</p>\\n\\nComo os componentes podem ser usados em diferentes contextos, existem v\\xe1rias abordagens para isso. Indo da abordagem mais estrita a mais abrangente, s\\xe3o elas:\\n\\n1. [Varia\\xe7\\xe3o espec\\xedfica para uma situa\\xe7\\xe3o \\xfanica](#1-specific-variation-for-a-one-time-situation)\\n2. [Varia\\xe7\\xe3o din\\xe2mica para uma situa\\xe7\\xe3o \\xfanica](#2-dynamic-variation-for-a-one-time-situation)\\n3. [Varia\\xe7\\xe3o espec\\xedfica de um componente](#3-specific-variation-of-a-component) reutilizado em contextos diferentes\\n4. [Varia\\xe7\\xf5es do Material Design](#4-material-design-variations) tal como com o componente bot\\xe3o\\n5. [Varia\\xe7\\xe3o do tema global](#5-global-theme-variation)\\n\\n## 1. Varia\\xe7\\xe3o espec\\xedfica para uma situa\\xe7\\xe3o \\xfanica\\n\\nPode ser necess\\xe1rio alterar o estilo de um componente em alguma implementa\\xe7\\xe3o espec\\xedfica, para a qual voc\\xea tem as seguintes solu\\xe7\\xf5es dispon\\xedveis:\\n\\n### Sobrescrevendo estilos com nomes de classe\\n\\nA primeira maneira de sobrescrever o estilo de um componente \\xe9 usar **nomes de classe**. Cada componente prov\\xea uma propriedade `className` no qual \\xe9 sempre aplicada ao elemento raiz.\\n\\nEste exemplo usa o [`withStyles()`](/styles/basics/#higher-order-component-api) high-order componente para injetar estilos customizados no DOM, e passar o nome da classe para o componente `ClassNames` atrav\\xe9s da propriedade `classes`. Voc\\xea pode escolher [qualquer outra solu\\xe7\\xe3o de estilo](/guides/interoperability/), ou at\\xe9 mesmo CSS puro para criar os estilos, mas certifique-se de considerar a [ordem de inje\\xe7\\xe3o do CSS](/styles/advanced/#css-injection-order), como o CSS \\xe9 injetado no DOM pelo Material-UI para estilizar o componente, ele tem a maior especificidade poss\\xedvel, uma vez que o `<link>` \\xe9 injetado na parte inferior do `<head />` para garantir que os componentes sejam sempre renderizados.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### Sobrescrevendo estilos com classes\\n\\nQuando a propriedade `className` n\\xe3o \\xe9 suficiente, e voc\\xea precisa acessar elementos mais profundos, voc\\xea pode tirar proveito da propriedade do tipo objeto `classes`, com ela podemos customizar todo o CSS injetado pelo Material-UI para um determinado componente.\\n\\nA lista de classes para cada componente est\\xe1 documentada na p\\xe1gina da API do componente, voc\\xea deve consultar a coluna **se\\xe7\\xe3o CSS** e **coluna rule name**. Por exemplo, voc\\xea pode dar uma olhada na [API CSS do bot\\xe3o](/api/button/#css). Como alternativa, voc\\xea pode usar as [ferramentas de desenvolvimento do navegador](#using-the-dev-tools).\\n\\nEste exemplo tamb\\xe9m usa `withStyles()` (como acima), mas aqui, `ClassesNesting` est\\xe1 usando a propriedade `classes` do `Bot\\xe3o` para fornecer um objeto que mapeia os **nomes das classes para sobrescrever** (regras de estilo) para **os nomes de classes CSS a serem aplicados** (valores). As classes existentes do componente continuar\\xe3o a ser injetadas, portanto, \\xe9 necess\\xe1rio apenas fornecer os estilos espec\\xedficos que voc\\xea deseja adicionar ou sobrescrever.\\n\\nObserve que, al\\xe9m do estilo do bot\\xe3o, a capitaliza\\xe7\\xe3o do r\\xf3tulo do bot\\xe3o foi alterada:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### Sobrescrevendo estilos por nomes de classes globais\\n\\n[Siga esta se\\xe7\\xe3o](/styles/advanced/#with-material-ui-core).\\n\\n### Usando as ferramentas de desenvolvimento\\n\\nAs ferramentas de desenvolvimento do navegador podem poupar muito tempo. Os nomes das classes do Material-UI\\'s [seguem um padr\\xe3o simples](/styles/advanced/#class-names) no modo de desenvolvimento: `Mui[component name]-[style rule name]-[UUID]`.\\n\\nVamos voltar para a demonstra\\xe7\\xe3o acima. Como voc\\xea pode substituir o r\\xf3tulo do bot\\xe3o?\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\nUsando as ferramentas de desenvolvimento, voc\\xea sabe que precisa direcionar a regra de estilo do componente `Button` e `label`:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### Forma abreviada\\n\\nO exemplo acima pode ser condensado usando **a mesma API CSS** com o componente filho. Neste exemplo, o componente de ordem superior `withStyles()` est\\xe1 injetando a propriedade `classes` que \\xe9 usada pelo [componente `Button`](/api/button/#css).\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudo-classes\\n\\nOs estados especiais dos componentes, como *hover*, *focus*, *disabled* e *selected*, s\\xe3o estilizados com uma especificidade CSS mais alta. [Especificidade \\xe9 um peso](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) que \\xe9 aplicado a uma determinada declara\\xe7\\xe3o CSS.\\n\\nPara sobrescrever os estados especiais dos componentes, **voc\\xea precisa aumentar a especificidade**. Aqui est\\xe1 um exemplo com o estado *disable* e o componente bot\\xe3o est\\xe1 usando uma **pseudo-class** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Aumenta a especificidade */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\n\\xc0s vezes, voc\\xea n\\xe3o pode usar uma **pseudo-classe** pois o estado n\\xe3o existe na plataforma. Vamos pegar o componente menu item e o estado *selected* como exemplo. Al\\xe9m de acesssar os elementos aninhados, a propriedade `classes` pode ser usada para customizar os estados especiais dos componentes do Material-UI:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Aumenta a especificidade */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### Por que preciso aumentar a especificidade para substituir um estado do componente?\\n\\nPor padr\\xe3o, a especifica\\xe7\\xe3o CSS faz com que as pseudo-classes aumentem a especificidade. Para consist\\xeancia, o Material-UI aumenta a especificidade de suas pseudo-classes customizadas. Isso tem uma vantagem importante, permitir que voc\\xea escolha o estado que deseja customizar.\\n\\n#### Posso usar uma API diferente que requer menos configura\\xe7\\xe3o?\\n\\nEm vez de fornecer valores para a propriedade `classes` da API, voc\\xea pode utilizar os [nomes de classes globais](/styles/advanced/#with-material-ui-core) gerados pelo Material-UI. Ele implementa todas essas pseudo-classes personalizadas:\\n\\n| Chave classes | Nome da classe global |\\n|:------------- |:--------------------- |\\n| checked       | Mui-checked           |\\n| disabled      | Mui-disabled          |\\n| error         | Mui-error             |\\n| focused       | Mui-focused           |\\n| focusVisible  | Mui-focusVisible      |\\n| required      | Mui-required          |\\n| expanded      | Mui-expanded          |\\n| selected      | Mui-selected          |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Aumenta a especificidade */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### Use `$ruleName` para referenciar uma regra local dentro da mesma folha de estilo\\n\\nO plugin [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) (dispon\\xedvel por padr\\xe3o) pode facilitar o processo de aumento da especificidade.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\ncompila para:\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f Voc\\xea precisa aplicar os dois nomes de classes gerados (`root` & `disabled`) no DOM, para que funcione corretamente.\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // nome da classe, p.ex. `root-x`\\n    disabled: classes.disabled, // nome da classe, p.ex. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### Sobrescrevendo com estilos em linha\\n\\nA segunda maneira de sobrescrever o estilo de um componente \\xe9 usar a abordagem de estilo **inline**. Cada componente fornece uma propriedade `style`. Essas propriedades s\\xe3o sempre aplicadas ao elemento raiz.\\n\\nVoc\\xea n\\xe3o precisa se preocupar com a especificidade do CSS, pois o estilo em linha tem preced\\xeancia sobre o CSS regular.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[Quando devo usar o estilo inline vs classes?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. Varia\\xe7\\xe3o din\\xe2mica para uma situa\\xe7\\xe3o \\xfanica\\n\\nVoc\\xea aprendeu como sobrescrever o estilo dos componentes do Material-UI nas se\\xe7\\xf5es anteriores. Agora, vamos ver como podemos tornar essas sobrescritas din\\xe2micas. Aqui est\\xe3o cinco alternativas; Cada um tem os seus pr\\xf3s e contras.\\n\\n### CSS Din\\xe2mico\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### Nome de classe - branch\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### Vari\\xe1veis CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Estilos em linha\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### Aninhamento de tema\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. Varia\\xe7\\xe3o espec\\xedfica de um componente\\n\\nPode ser necess\\xe1rio criar uma varia\\xe7\\xe3o de um componente e us\\xe1-lo em diferentes contextos, por exemplo, um bot\\xe3o colorido na p\\xe1gina do produto, no entanto, voc\\xea provavelmente desejar\\xe1 manter seu c\\xf3digo sem duplica\\xe7\\xf5es ([*DRY*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)).\\n\\nA melhor abordagem \\xe9 seguir a op\\xe7\\xe3o 1 e, em seguida, aproveitar o poder de composi\\xe7\\xe3o do React exportando seu componente customizado para usar onde quer que voc\\xea precise.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Varia\\xe7\\xf5es do Material Design\\n\\nA especifica\\xe7\\xe3o do Material Design documenta diferentes varia\\xe7\\xf5es de determinados componentes, como a forma na qual os bot\\xf5es s\\xe3o exibidos em diferentes formas: [texto](https://material.io/design/components/buttons.html#text-button) (anteriormente \"flat\"), [contido](https://material.io/design/components/buttons.html#contained-button) (anteriormente \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) e mais.\\n\\nMaterial-UI tenta implementar todas essas varia\\xe7\\xf5es. Por favor, consulte a documenta\\xe7\\xe3o de [Componentes Suportados](/getting-started/supported-components/), para descobrir o status atual de todos os componentes de Material Design suportados.\\n\\n## 5. Varia\\xe7\\xe3o do tema global\\n\\nA fim de promover a consist\\xeancia entre os componentes e gerenciar a apar\\xeancia da interface do usu\\xe1rio como um todo, o Material-UI fornece um mecanismo para aplicar mudan\\xe7as globais.\\n\\nAs demonstra\\xe7\\xf5es desta se\\xe7\\xe3o abordam como alterar o tamanho da fonte do bot\\xe3o.\\n\\n### Vari\\xe1veis de tema\\n\\nVoc\\xea pode ajustar [as vari\\xe1veis de configura\\xe7\\xe3o do tema](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### Sobrescrita do CSS Global\\n\\nVoc\\xea tamb\\xe9m pode customizar todas as inst\\xe2ncias de um componente com CSS. Componentes exp\\xf5e [nomes de classe globais](/styles/advanced/#with-material-ui-core) para habilitar isso. \\xc9 muito semelhante a como voc\\xea customizaria o Bootstrap.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global \\xe9 manipulado pelo jss-plugin-global.\\n  \\'@global\\': {\\n    // Voc\\xea deve direcionar [class*=\"MuiButton-root\"] em vez de aninhar temas.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### Sobrescrita do tema Global\\n\\nVoc\\xea pode aproveitar as vantagens de `sobrescrita` da chave do `tema` para potencialmente alterar cada estilo injetado pelo Material-UI no DOM. Saiba mais sobre isso na se\\xe7\\xe3o [de temas](/customization/globals/#css) da documenta\\xe7\\xe3o.\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},Bw8i:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\n// The `withStyles()` higher-order component is injecting a `classes`\\n// prop that is used by the `Button` component.\\nconst StyledButton = withStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  label: {\\n    textTransform: 'capitalize',\\n  },\\n})(Button);\\n\\nexport default function ClassesShorthand() {\\n  return <StyledButton>classes shorthand</StyledButton>;\\n}\\n\"},DQyw:function(e,n){e.exports='# \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\n\\n<p class=\"description\">Material-UI\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u5916\\u89b3\\u3092\\u7c21\\u5358\\u306b\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3067\\u304d\\u307e\\u3059\\u3002</p>\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f\\u3055\\u307e\\u3056\\u307e\\u306a\\u30b3\\u30f3\\u30c6\\u30ad\\u30b9\\u30c8\\u3067\\u4f7f\\u7528\\u3067\\u304d\\u308b\\u305f\\u3081\\u3001\\u3053\\u308c\\u306b\\u306f\\u3044\\u304f\\u3064\\u304b\\u306e\\u30a2\\u30d7\\u30ed\\u30fc\\u30c1\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u6700\\u5c0f\\u306e\\u30e6\\u30fc\\u30b9\\u30b1\\u30fc\\u30b9\\u304b\\u3089\\u6700\\u5927\\u306e\\u30e6\\u30fc\\u30b9\\u30b1\\u30fc\\u30b9\\u307e\\u3067\\u3001\\u6b21\\u3092\\u3054\\u89a7\\u304f\\u3060\\u3055\\u3044\\n\\n1. [\\u4e00\\u6642\\u7684\\u306a\\u72b6\\u6cc1\\u306e\\u7279\\u5b9a\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3](#1-specific-variation-for-a-one-time-situation)\\n2. [1\\u56de\\u306e\\u72b6\\u6cc1\\u306b\\u5bfe\\u3059\\u308b\\u52d5\\u7684\\u5909\\u5316](#2-dynamic-variation-for-a-one-time-situation)\\n3. \\u7570\\u306a\\u308b\\u30b3\\u30f3\\u30c6\\u30ad\\u30b9\\u30c8\\u3067\\u518d\\u4f7f\\u7528\\u3055\\u308c\\u308b[\\u7279\\u5b9a\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8](#3-specific-variation-of-a-component)\\n4. [Material Design variations](#4-material-design-variations)\\u306e\\u30dc\\u30bf\\u30f3\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306a\\u3069\\n5. [\\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u30c6\\u30fc\\u30de\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3](#5-global-theme-variation)\\n\\n## 1. \\u4e00\\u6642\\u7684\\u306a\\u72b6\\u6cc1\\u306e\\u7279\\u5b9a\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\n\\n\\u6b21\\u306e\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3\\u3092\\u4f7f\\u7528\\u3067\\u304d\\u308b\\u7279\\u5b9a\\u306e\\u5b9f\\u88c5\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u5909\\u66f4\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u5834\\u5408\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n### \\u30af\\u30e9\\u30b9\\u540d\\u3067\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u6700\\u521d\\u306e\\u65b9\\u6cd5\\u306f\\u3001**class names**\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002 \\u3059\\u3079\\u3066\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u306f\\u3001\\u5e38\\u306b\\u30eb\\u30fc\\u30c8\\u8981\\u7d20\\u306b\\u9069\\u7528\\u3055\\u308c\\u308b`className`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n\\u3053\\u306e\\u4f8b\\u3067\\u306f\\u3001[`withStyles()`](/styles/basics/#higher-order-component-api)\\u306e\\u9ad8\\u6b21(higher-order) \\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\u3002 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e`classes`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001\\u30ab\\u30b9\\u30bf\\u30e0\\u30b9\\u30bf\\u30a4\\u30eb\\u3092DOM\\u306b\\u633f\\u5165\\u3057\\u3001\\u30af\\u30e9\\u30b9\\u540d\\u3092`ClassNames`\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u6e21\\u3057\\u307e\\u3059\\u3002 \\u4ed6\\u306e\\u30b9\\u30bf\\u30a4\\u30ea\\u30f3\\u30b0\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3</a>\\u3001\\u307e\\u305f\\u306f\\u30d7\\u30ec\\u30fc\\u30f3CSS\\u3092\\u9078\\u629e\\u3057\\u3066\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u4f5c\\u6210\\u3059\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059\\u304c\\u3001\\u5fc5\\u305a CSS\\u304cDOM\\u306b\\u6ce8\\u5165\\u3055\\u308c\\u308b\\u3068\\u304d\\u306e[CSS\\u6ce8\\u5165\\u9806\\u5e8f](/styles/advanced/#css-injection-order)\\u3092\\u8003\\u3048\\u3066\\u307f\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002 Material-UI\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u30b9\\u30bf\\u30a4\\u30eb\\u8a2d\\u5b9a\\u3059\\u308b\\u3068\\u3001`<link>`\\u304c\\u4e0b\\u306b\\u633f\\u5165\\u3055\\u308c\\u308b\\u305f\\u3081\\u3001\\u9ad8\\u3044\\u7279\\u7570\\u6027\\u304c\\u5f97\\u3089\\u308c\\u307e\\u3059\\u3002 \\u306e`<head />`\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u304c\\u5e38\\u306b\\u6b63\\u3057\\u304f\\u30ec\\u30f3\\u30c0\\u30ea\\u30f3\\u30b0\\u3055\\u308c\\u308b\\u3088\\u3046\\u306b\\u3057\\u307e\\u3059\\u3002\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### \\u30af\\u30e9\\u30b9\\u3067\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\n\\n`className`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3067\\u306f\\u4e0d\\u5341\\u5206\\u3067\\u3001\\u3088\\u308a\\u6df1\\u3044\\u8981\\u7d20\\u306b\\u30a2\\u30af\\u30bb\\u30b9\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u5834\\u5408\\u306f\\u3001`classes`\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u5229\\u7528\\u3057\\u3066\\u3001\\u7279\\u5b9a\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u5bfe\\u3057\\u3066Material-UI\\u306b\\u3088\\u3063\\u3066\\u6ce8\\u5165\\u3055\\u308c\\u308b\\u3059\\u3079\\u3066\\u306eCSS\\u3092\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\n\\u305d\\u308c\\u305e\\u308c\\u306e\\u30af\\u30e9\\u30b9\\u306e\\u30ea\\u30b9\\u30c8 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u3064\\u3044\\u3066\\u306f\\u3001\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8API\\u30da\\u30fc\\u30b8\\u306e**CSS section**\\u304a\\u3088\\u3073**rule name column**\\u3092\\u53c2\\u7167\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002 \\u4f8b\\u3048\\u3070\\u3001[Button CSS API](/api/button/#css)\\u3067\\u898b\\u308b\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u3059\\u3002 \\u6587 \\u307e\\u305f\\u306f\\u3001[browser dev tools](#using-the-dev-tools)\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\n\\u3053\\u306e\\u4f8b\\u3067\\u306f\\u3001`withStyles()`\\u3082\\u4f7f\\u7528\\u3057\\u3066\\u3044\\u307e\\u3059\\u304c\\u3001\\u3053\\u3053\\u3067\\u306f\\u3001`ClassesNesting`(\\u4e0a\\u8a18\\u53c2\\u7167) \\u306f`Button`\\u306e`classes` prop \\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001 \\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u30af\\u30e9\\u30b9\\u306e**\\u540d**\\u3092\\u9069\\u7528\\u3059\\u308bCSS\\u30af\\u30e9\\u30b9\\u540d(\\u30b9\\u30bf\\u30a4\\u30eb\\u30eb\\u30fc\\u30eb) \\u306b\\u30de\\u30c3\\u30d7\\u3059\\u308b\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u3092\\u63d0\\u4f9b\\u3057\\u307e\\u3059(values)\\u3002 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u65e2\\u5b58\\u306e\\u30af\\u30e9\\u30b9\\u306f\\u5f15\\u304d\\u7d9a\\u304d\\u6ce8\\u5165\\u3055\\u308c\\u308b\\u305f\\u3081\\u3001\\u5fc5\\u8981\\u306a\\u306e\\u306f\\u7279\\u5b9a\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u6307\\u5b9a\\u3059\\u308b\\u3053\\u3068\\u3060\\u3051\\u3067\\u3059\\u3002 \\u8ffd\\u52a0\\u307e\\u305f\\u306f\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3057\\u307e\\u3059\\u3002\\n\\nNotice that in addition to the button styling, the button label\\'s capitalization has been changed:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### \\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u30af\\u30e9\\u30b9\\u540d\\u3067\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\n\\n[\\u3053\\u306e\\u30bb\\u30af\\u30b7\\u30e7\\u30f3\\u306b\\u5f93\\u3063\\u3066\\u304f\\u3060\\u3055\\u3044](/styles/advanced/#with-material-ui-core) \\u3002\\n\\n### \\u958b\\u767a\\u30c4\\u30fc\\u30eb(dev tools) \\u3092\\u4f7f\\u7528\\u3059\\u308b\\n\\n\\u30d6\\u30e9\\u30a6\\u30b6\\u958b\\u767a\\u30c4\\u30fc\\u30eb\\u3092\\u4f7f\\u3048\\u3070\\u3001\\u6642\\u9593\\u3092\\u5927\\u5e45\\u306b\\u7bc0\\u7d04\\u3067\\u304d\\u307e\\u3059\\u3002 Material-UI\\u306e\\u30af\\u30e9\\u30b9\\u540d\\u306f\\u3001\\u958b\\u767a\\u30e2\\u30fc\\u30c9\\u3067\\u306f[ a simple pattern\\u306b\\u5f93\\u3044\\u307e\\u3059](/styles/advanced/#class-names)\\u3002 `Mui[component name]-[style rule name]-[UUID]`\\u3002\\n\\n\\u4e0a\\u8a18\\u306e\\u30c7\\u30e2\\u306b\\u623b\\u308a\\u307e\\u3057\\u3087\\u3046\\u3002 \\u30dc\\u30bf\\u30f3\\u30fb\\u30e9\\u30d9\\u30eb\\u3092\\u4e0a\\u66f8\\u304d\\u3059\\u308b\\u65b9\\u6cd5\\u306f?\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\n\\u958b\\u767a\\u30c4\\u30fc\\u30eb\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001`Button`\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3068`label`\\u30b9\\u30bf\\u30a4\\u30eb\\u30eb\\u30fc\\u30eb\\u3092\\u30bf\\u30fc\\u30b2\\u30c3\\u30c8\\u306b\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u3053\\u3068\\u304c\\u308f\\u304b\\u308a\\u307e\\u3059\\u3002\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### \\u30b7\\u30e7\\u30fc\\u30c8\\u30cf\\u30f3\\u30c9\\n\\n\\u4e0a\\u8a18\\u306e\\u30b3\\u30fc\\u30c9\\u4f8b\\u306f\\u3001\\u5b50\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3068\\u3057\\u3066**\\u540c\\u3058CSS API**\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3067\\u8981\\u7d04\\u3067\\u304d\\u307e\\u3059\\u3002 \\u3053\\u306e\\u4f8b\\u3067\\u306f\\u3001`withStyles()`\\u306e\\u4e0a\\u4f4d(\\u9ad8\\u6b21) \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f\\u3001[`Button`\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8](/api/button/#css)\\u304c\\u4f7f\\u7528\\u3059\\u308b`classes`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u30fc\\u3092\\u6ce8\\u5165\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### \\u64ec\\u4f3c\\u30af\\u30e9\\u30b9\\n\\n*hover*\\u3001*focus*\\u3001*disabled*\\u3001*selected*\\u306a\\u3069\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u7279\\u6b8a\\u72b6\\u614b\\u306f\\u3001\\u3088\\u308a\\u9ad8\\u3044CSS \\u7279\\u7570\\u6027(specificity) \\u304c\\u8a2d\\u5b9a\\u3055\\u308c\\u3066\\u3044\\u307e\\u3059\\u3002 [Specificity\\u306f\\u3001\\u7279\\u5b9a\\u306eCSS\\u5ba3\\u8a00\\u306b\\u9069\\u7528\\u3055\\u308c\\u308b\\u30a6\\u30a7\\u30a4\\u30c8](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity)\\u3067\\u3059\\u3002\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u7279\\u5225\\u306a\\u72b6\\u614b\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u306b\\u306f\\u3001**\\u7279\\u7570\\u6027\\u3092\\u9ad8\\u3081\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059** \\u3002 *disable*\\u72b6\\u614b\\u3068\\u3001 **pseudo-class**(`:disabled`)\\u3092\\u4f7f\\u7528\\u3057\\u305f\\u30dc\\u30bf\\u30f3\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u4f8b\\u3092\\u793a\\u3057\\u307e\\u3059\\u3002\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\n\\u6642\\u306b\\u306f\\u3053\\u306e\\u30d7\\u30e9\\u30c3\\u30c8\\u30d5\\u30a9\\u30fc\\u30e0\\u3067\\u306fstate\\u3068\\u3057\\u3066**pseudo-class**\\u306f\\u4f7f\\u3046\\u3053\\u3068\\u304c\\u3067\\u304d\\u306a\\u3044\\u3002 \\u30e1\\u30cb\\u30e5\\u30fc\\u9805\\u76ee\\u306e\\u69cb\\u6210\\u8981\\u7d20\\u3068*\\u9078\\u3070\\u308c\\u305f*\\u4f8b\\u3068\\u3057\\u3066\\u8ff0\\u3079\\u308b\\u3002 \\u30cd\\u30b9\\u30c8\\u3055\\u308c\\u305f\\u8981\\u7d20\\u306b\\u30a2\\u30af\\u30bb\\u30b9\\u3059\\u308b\\u4ee5\\u5916\\u306b\\u3082\\u3001`classes`\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001Material-UI\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u7279\\u6b8a\\u306a\\u72b6\\u614b\\u3092\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### 1\\u3064\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u72b6\\u614b\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u305f\\u3081\\u306b\\u3001\\u7279\\u7570\\u6027\\u3092\\u9ad8\\u3081\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u306e\\u306f\\u306a\\u305c\\u3067\\u3059\\u304b\\u3002\\n\\n\\u8a2d\\u8a08\\u4e0a\\u3001CSS\\u4ed5\\u69d8\\u3067\\u306f\\u7591\\u4f3c\\u30af\\u30e9\\u30b9\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3067\\u3001\\u7279\\u5b9a\\u6027\\u3092\\u9ad8\\u3081\\u3066\\u3044\\u307e\\u3059\\u3002 \\u4e00\\u8cab\\u6027\\u3092\\u4fdd\\u3064\\u305f\\u3081\\u306b\\u3001Material-UI\\u306f\\u305d\\u306e\\u30ab\\u30b9\\u30bf\\u30e0\\u64ec\\u4f3c\\u30af\\u30e9\\u30b9\\u306e\\u7279\\u7570\\u6027\\u3092\\u9ad8\\u3081\\u307e\\u3059\\u3002 \\u3053\\u308c\\u306b\\u306f\\u91cd\\u8981\\u306a\\u5229\\u70b9\\u304c1\\u3064\\u3042\\u308a\\u3001\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3057\\u305f\\u3044\\u72b6\\u614b\\u3092\\u9078\\u629e\\u3059\\u308b\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\n#### \\u3088\\u308a\\u5c11\\u306a\\u3044\\u5b9a\\u578b\\u6587\\u3092\\u5fc5\\u8981\\u3068\\u3059\\u308b\\u5225\\u306eAPI\\u3092\\u4f7f\\u7528\\u3067\\u304d\\u307e\\u3059\\u304b?\\n\\n`classes` prop API\\u306b\\u5024\\u3092\\u6307\\u5b9a\\u3059\\u308b\\u4ee3\\u308f\\u308a\\u306b\\u3001Material-UI\\u306b\\u3088\\u3063\\u3066\\u751f\\u6210\\u3055\\u308c\\u308b[the global class names](/styles/advanced/#with-material-ui-core) \\u3092\\u4f7f\\u7528\\u3067\\u304d\\u307e\\u3059\\u3002 \\u3053\\u308c\\u3089\\u3059\\u3079\\u3066\\u306e\\u30ab\\u30b9\\u30bf\\u30e0\\u64ec\\u4f3c\\u30af\\u30e9\\u30b9\\u3092\\u5b9f\\u88c5\\u3057\\u307e\\u3059\\u3002\\n\\n| \\u30af\\u30e9\\u30b9\\u30ad\\u30fc        | \\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u30af\\u30e9\\u30b9\\u540d        |\\n|:------------ |:---------------- |\\n| \\u30c1\\u30a7\\u30c3\\u30af\\u6e08\\u307f       | Mui-checked      |\\n| \\u7121\\u52b9           | Mui-disabled     |\\n| \\u30a8\\u30e9\\u30fc          | Mui-error        |\\n| focused      | Mui-focused      |\\n| focusVisible | Mui-focusVisible |\\n| \\u5fc5\\u9808           | Mui-required     |\\n| \\u5c55\\u958b\\u6e08\\u307f         | Mui-expanded     |\\n| \\u9078\\u629e\\u6e08\\u307f         | Mui-selected     |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### \\u540c\\u3058\\u30b9\\u30bf\\u30a4\\u30eb\\u30b7\\u30fc\\u30c8\\u5185\\u306e\\u30ed\\u30fc\\u30ab\\u30eb\\u30eb\\u30fc\\u30eb\\u3092\\u53c2\\u7167\\u3059\\u308b\\u306b\\u306f\\u3001`$ruleName`\\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\n\\n[jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested)\\u30d7\\u30e9\\u30b0\\u30a4\\u30f3(\\u30c7\\u30d5\\u30a9\\u30eb\\u30c8\\u3067\\u4f7f\\u7528\\u53ef\\u80fd) \\u306f\\u3001\\u7279\\u7570\\u6027\\u3092\\u9ad8\\u3081\\u308b\\u30d7\\u30ed\\u30bb\\u30b9\\u3092\\u5bb9\\u6613\\u306b\\u3057\\u307e\\u3059\\u3002\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\n\\u30b3\\u30f3\\u30d1\\u30a4\\u30eb\\uff1a\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0fDOM\\u3092\\u6a5f\\u80fd\\u3055\\u305b\\u308b\\u306b\\u306f\\u3001\\u751f\\u6210\\u3055\\u308c\\u305f\\u4e8c\\u3064\\u306e\\u30af\\u30e9\\u30b9\\u540d(`root`&`disabled`) \\u3092\\u9069\\u7528\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### \\u30a4\\u30f3\\u30e9\\u30a4\\u30f3\\u30b9\\u30bf\\u30a4\\u30eb\\u3067\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u3082\\u3046\\u4e00\\u3064\\u306e\\u65b9\\u6cd5\\u306f\\u3001 **inline-style**\\u30a2\\u30d7\\u30ed\\u30fc\\u30c1\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002 \\u3059\\u3079\\u3066\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u306f\\u3001`style` \\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u3053\\u308c\\u3089\\u306e\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u306f\\u5e38\\u306b\\u30eb\\u30fc\\u30c8\\u8981\\u7d20\\u306b\\u9069\\u7528\\u3055\\u308c\\u307e\\u3059\\u3002\\n\\n\\u30a4\\u30f3\\u30e9\\u30a4\\u30f3\\u30b9\\u30bf\\u30a4\\u30eb\\u306f\\u901a\\u5e38\\u306eCSS\\u3088\\u308a\\u3082\\u512a\\u5148\\u3055\\u308c\\u308b\\u305f\\u3081\\u3001CSS\\u306e\\u7279\\u7570\\u6027\\u306b\\u3064\\u3044\\u3066\\u5fc3\\u914d\\u3059\\u308b\\u5fc5\\u8981\\u306f\\u3042\\u308a\\u307e\\u305b\\u3093\\u3002\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[inline-style\\u3082\\u3057\\u304f\\u306fclasses\\u3069\\u3061\\u3089\\u3092\\u4f7f\\u3046\\u3079\\u304d\\u3067\\u3059\\u304b\\uff1f](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. 1\\u56de\\u306e\\u72b6\\u6cc1\\u306b\\u5bfe\\u3059\\u308b\\u52d5\\u7684\\u5909\\u5316\\n\\n\\u524d\\u306e\\u30bb\\u30af\\u30b7\\u30e7\\u30f3\\u3067Material-UI\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3059\\u308b\\u65b9\\u6cd5\\u3092\\u5b66\\u7fd2\\u3057\\u307e\\u3057\\u305f\\u3002 \\u3067\\u306f\\u3001\\u3053\\u308c\\u3089\\u306e\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u3092\\u52d5\\u7684\\u306b\\u3059\\u308b\\u65b9\\u6cd5\\u3092\\u898b\\u3066\\u307f\\u307e\\u3057\\u3087\\u3046\\u3002 Here are five alternatives; each has its pros and cons.\\n\\n### \\u52d5\\u7684CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### \\u30af\\u30e9\\u30b9\\u540d\\u306e\\u30d6\\u30e9\\u30f3\\u30c1\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS\\u5909\\u6570\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### \\u30a4\\u30f3\\u30e9\\u30a4\\u30f3\\u30b9\\u30bf\\u30a4\\u30eb\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### \\u30cd\\u30b9\\u30c8\\u30c6\\u30fc\\u30de\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u7279\\u5b9a\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\u3092\\u4f5c\\u6210\\u3057\\u3001\\u88fd\\u54c1\\u30da\\u30fc\\u30b8\\u306e\\u30ab\\u30e9\\u30d5\\u30eb\\u306a\\u30dc\\u30bf\\u30f3\\u306a\\u3069\\u3001\\u3055\\u307e\\u3056\\u307e\\u306a\\u30b3\\u30f3\\u30c6\\u30ad\\u30b9\\u30c8\\u3067\\u4f7f\\u7528\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\u3082\\u3057\\u308c\\u307e\\u305b\\u3093\\u304c\\u3001\\u30b3\\u30fc\\u30c9\\u306f[*DRY\\u306b\\u3057\\u3066\\u304a\\u3044\\u305f\\u65b9\\u304c\\u3088\\u3044\\u3067\\u3057\\u3087\\u3046*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)\\u3002\\n\\n\\u6700\\u3082\\u826f\\u3044\\u65b9\\u6cd5\\u306f\\u3001\\u30aa\\u30d7\\u30b7\\u30e7\\u30f31\\u3092\\u5b9f\\u884c\\u3057\\u3001\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3057\\u305f\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u30a8\\u30af\\u30b9\\u30dd\\u30fc\\u30c8\\u3057\\u3066\\u5fc5\\u8981\\u306a\\u5834\\u6240\\u3067\\u4f7f\\u7528\\u3059\\u308b\\u3053\\u3068\\u306b\\u3088\\u308a\\u3001React\\u306e\\u5408\\u6210\\u80fd\\u529b\\u3092\\u6d3b\\u7528\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\n\\nMaterial Design\\u4ed5\\u69d8\\u306b\\u306f\\u3001\\u30dc\\u30bf\\u30f3\\u306e\\u5f62\\u72b6\\u304c\\u7570\\u306a\\u308b\\u306a\\u3069\\u3001\\u7279\\u5b9a\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u3055\\u307e\\u3056\\u307e\\u306a\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\u304c\\u8a18\\u8f09\\u3055\\u308c\\u3066\\u3044\\u307e\\u3059\\u3002\\u305f\\u3068\\u3048\\u3070\\u3001[text](https://material.io/design/components/buttons.html#text-button)(\\u4ee5\\u524d\\u306e\"flat\")\\u3001[contained](https://material.io/design/components/buttons.html#contained-button)(\\u4ee5\\u524d\\u306e \"raised\")\\u3001[FAB](https://material.io/design/components/buttons-floating-action-button.html)\\u306a\\u3069\\u3067\\u3059\\u3002\\n\\nMaterial-UI\\u306f\\u3001\\u3053\\u308c\\u3089\\u3059\\u3079\\u3066\\u306e\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\u3092\\u5b9f\\u88c5\\u3057\\u3088\\u3046\\u3068\\u3057\\u307e\\u3059\\u3002 \\u30b5\\u30dd\\u30fc\\u30c8\\u3055\\u308c\\u3066\\u3044\\u308bMaterial Design \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u73fe\\u5728\\u306e\\u30b9\\u30c6\\u30fc\\u30bf\\u30b9\\u306b\\u3064\\u3044\\u3066\\u306f\\u3001[Supported Components](/getting-started/supported-components/)\\u306e\\u30de\\u30cb\\u30e5\\u30a2\\u30eb\\u3092\\u53c2\\u7167\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n## 5. \\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u30c6\\u30fc\\u30de\\u30d0\\u30ea\\u30a8\\u30fc\\u30b7\\u30e7\\u30f3\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u9593\\u306e\\u4e00\\u8cab\\u6027\\u3092\\u4fc3\\u9032\\u3057\\u3001\\u30e6\\u30fc\\u30b6\\u30fc\\u30a4\\u30f3\\u30bf\\u30fc\\u30d5\\u30a7\\u30a4\\u30b9\\u306e\\u5916\\u89b3\\u5168\\u4f53\\u3092\\u7ba1\\u7406\\u3059\\u308b\\u305f\\u3081\\u306b\\u3001Material-UI\\u306f\\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u306a\\u5909\\u66f4\\u3092\\u9069\\u7528\\u3059\\u308b\\u30e1\\u30ab\\u30cb\\u30ba\\u30e0\\u3092\\u63d0\\u4f9b\\u3057\\u307e\\u3059\\u3002\\n\\n\\u3053\\u306e\\u30bb\\u30af\\u30b7\\u30e7\\u30f3\\u306e\\u30c7\\u30e2\\u3067\\u306f\\u3001\\u30dc\\u30bf\\u30f3\\u306e\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u3092\\u5909\\u66f4\\u3059\\u308b\\u65b9\\u6cd5\\u306b\\u3064\\u3044\\u3066\\u8aac\\u660e\\u3057\\u307e\\u3059\\u3002\\n\\n### \\u30c6\\u30fc\\u30de\\u5909\\u6570\\n\\n[\\u30c6\\u30fc\\u30de\\u8a2d\\u5b9a\\u5909\\u6570\\u3092\\u8abf\\u6574\\u3067\\u304d\\u307e\\u3059](/customization/theming/#theme-configuration-variables) \\u3002\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### \\u30b0\\u30ed\\u30fc\\u30d0\\u30ebCSS\\u306e\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\n\\nCSS\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u3059\\u3079\\u3066\\u306e\\u30a4\\u30f3\\u30b9\\u30bf\\u30f3\\u30b9\\u3092\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3059\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059\\u3002 Components expose [global class names](/styles/advanced/#with-material-ui-core) to enable this. Bootstrap\\u3092\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3059\\u308b\\u65b9\\u6cd5\\u3068\\u975e\\u5e38\\u306b\\u3088\\u304f\\u4f3c\\u3066\\u3044\\u307e\\u3059\\u3002\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### \\u30b0\\u30ed\\u30fc\\u30d0\\u30eb\\u30c6\\u30fc\\u30de\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\n\\n`theme`\\u306e`overrides`\\u30ad\\u30fc\\u3092\\u5229\\u7528\\u3059\\u308b\\u3068\\u3001Material-UI\\u306b\\u3088\\u3063\\u3066DOM\\u306b\\u6ce8\\u5165\\u3055\\u308c\\u308b\\u3059\\u3079\\u3066\\u306e\\u30b9\\u30bf\\u30a4\\u30eb\\u3092\\u6f5c\\u5728\\u7684\\u306b\\u5909\\u66f4\\u3067\\u304d\\u307e\\u3059\\u3002 \\u8a73\\u7d30\\u306b\\u3064\\u3044\\u3066\\u306f\\u3001\\u30c9\\u30ad\\u30e5\\u30e1\\u30f3\\u30c8\\u306e[\\u30c6\\u30fc\\u30de\\u30bb\\u30af\\u30b7\\u30e7\\u30f3\\u3092\\u3054\\u89a7\\u304f\\u3060\\u3055\\u3044](/customization/globals/#css)\\u3002\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},ES0Y:function(e,n,t){var o={\"./ClassNames.js\":\"YQ+F\",\"./ClassNames.tsx\":\"mC55\",\"./ClassesNesting.js\":\"rq69\",\"./ClassesNesting.tsx\":\"mTXA\",\"./ClassesShorthand.js\":\"mHiz\",\"./ClassesShorthand.tsx\":\"Z7t4\",\"./ClassesState.js\":\"4Q5C\",\"./ClassesState.tsx\":\"5wJ4\",\"./Component.js\":\"iXJI\",\"./Component.tsx\":\"y9Xa\",\"./DynamicCSS.js\":\"8z9n\",\"./DynamicCSS.tsx\":\"VgLK\",\"./DynamicCSSVariables.js\":\"xhQ0\",\"./DynamicCSSVariables.tsx\":\"qFY3\",\"./DynamicClassName.js\":\"FYOs\",\"./DynamicClassName.tsx\":\"boQA\",\"./DynamicInlineStyle.js\":\"/QYg\",\"./DynamicInlineStyle.tsx\":\"4wj9\",\"./DynamicThemeNesting.js\":\"vI8u\",\"./DynamicThemeNesting.tsx\":\"G6xv\",\"./GlobalCssOverride.js\":\"A4sh\",\"./GlobalCssOverride.tsx\":\"xAth\",\"./GlobalThemeOverride.js\":\"mYoX\",\"./GlobalThemeOverride.tsx\":\"h4Y4\",\"./InlineStyle.js\":\"5ll3\",\"./InlineStyle.tsx\":\"aW6l\",\"./ThemeVariables.js\":\"2wew\",\"./ThemeVariables.tsx\":\"Gp3B\"};function s(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=a,e.exports=s,s.id=\"ES0Y\"},FYOs:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return m}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"PDtE\"),i=t(\"yZEQ\"),r=t(\"O8uh\"),c=t(\"Lqxv\"),l=t(\"uU96\"),d=s.a.createElement,u=Object(i.a)({button:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},buttonBlue:{background:\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",boxShadow:\"0 3px 5px 2px rgba(33, 203, 243, .3)\"}});function m(){var e=u(),n=s.a.useState(\"default\"),t=n[0],o=n[1];return d(s.a.Fragment,null,d(c.a,{control:d(l.a,{checked:\"blue\"===t,onChange:function(e){o(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),d(r.a,{className:Object(a.a)(e.button,\"blue\"===t&&e.buttonBlue)},\"Class name branch\"))}},FnB2:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles, WithStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\ninterface Styles {\\n  color: string;\\n  children: React.ReactNode;\\n  [key: string]: any;\\n}\\n\\ninterface ColorsMapping {\\n  default: string;\\n  blue: string;\\n  [key: string]: any;\\n}\\n\\ninterface ButtonStyles extends WithStyles<typeof styles> {\\n  color: string;\\n}\\n\\n// Like https://github.com/brunobertolini/styled-by\\nconst styledBy = (property: string, mapping: ColorsMapping) => (\\n  props: Styles,\\n) => mapping[props[property]];\\n\\nconst styles = {\\n  root: {\\n    background: styledBy('color', {\\n      default: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    }),\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: styledBy('color', {\\n      default: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    }),\\n  },\\n};\\n\\nconst StyledButton = withStyles(\\n  styles,\\n)(({ classes, color, ...other }: ButtonStyles) => (\\n  <Button className={classes.root} {...other} />\\n));\\n\\nexport default function DynamicCSS() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <StyledButton color={color}>Dynamic CSS</StyledButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},G6xv:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"O8uh\"),i=t(\"mKyP\"),r=t(\"h7Hf\"),c=t(\"Lqxv\"),l=t(\"GeB9\"),d=t(\"uU96\"),u=s.a.createElement,m=u(a.a,{variant:\"contained\",color:\"secondary\"},\"Theme nesting\");function p(){var e=s.a.useState(\"default\"),n=e[0],t=e[1],o=s.a.useMemo((function(){return\"blue\"===n?Object(i.a)({palette:{secondary:{main:l.a[500],contrastText:\"#fff\"}}}):Object(i.a)()}),[n]);return u(s.a.Fragment,null,u(c.a,{control:u(d.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),u(r.a,{theme:o},m))}},\"GS+a\":function(e,n){e.exports='# \\u81ea\\u5b9a\\u4e49\\u7684\\u7ec4\\u4ef6\\n\\n<p class=\"description\">\\u60a8\\u53ef\\u4ee5\\u8f7b\\u677e\\u5730\\u81ea\\u5b9a\\u4e49\\u4e00\\u4e2a Material-UI \\u7ec4\\u4ef6\\u7684\\u5916\\u89c2\\u3002</p>\\n\\n\\u7531\\u4e8e\\u7ec4\\u4ef6\\u53ef\\u4ee5\\u5728\\u4e0d\\u540c\\u7684\\u4e0a\\u4e0b\\u6587\\u73af\\u5883\\u4e2d\\u4f7f\\u7528\\uff0c\\u56e0\\u6b64\\u6709\\u51e0\\u79cd\\u65b9\\u6cd5\\u3002 \\u4ece\\u6700\\u72ed\\u7a84\\u5230\\u6700\\u5e7f\\u6cdb\\u7684\\u7528\\u4f8b\\uff0c\\u8fd9\\u4e9b\\u662f\\uff1a\\n\\n1. [\\u4e00\\u6b21\\u6027\\u4f7f\\u7528\\u7684\\u7279\\u5b9a\\u53d8\\u4f53](#1-specific-variation-for-a-one-time-situation)\\n2. [\\u4e00\\u6b21\\u6027\\u4f7f\\u7528\\u7684\\u52a8\\u6001\\u53d8\\u4f53](#2-dynamic-variation-for-a-one-time-situation)\\n3. \\u5728\\u4e0d\\u540c\\u73af\\u5883\\u4e2d\\u91cd\\u590d\\u4f7f\\u7528\\u7684[\\u7279\\u5b9a\\u7ec4\\u4ef6\\u7684\\u53d8\\u4f53](#3-specific-variation-of-a-component) \\n4. [Material Design \\u7684\\u53d8\\u4f53](#4-material-design-variations)\\uff0c\\u4f8b\\u5982\\u6309\\u94ae\\u7ec4\\u4ef6\\n5. [\\u5168\\u5c40\\u5316\\u4e3b\\u9898\\u53d8\\u4f53](#5-global-theme-variation)\\n\\n## 1\\u3001 \\u4e00\\u6b21\\u6027\\u4f7f\\u7528\\u7684\\u7279\\u5b9a\\u53d8\\u4f53\\n\\n\\u60a8\\u53ef\\u80fd\\u9700\\u8981\\u4e3a\\u5b9e\\u73b0\\u7279\\u5b9a\\u7684\\u7ec4\\u4ef6\\u800c\\u66f4\\u6539\\u6837\\u5f0f\\uff0c\\u4ee5\\u4e0b\\u6709\\u51e0\\u79cd\\u89e3\\u51b3\\u65b9\\u6848\\uff1a\\n\\n### \\u7528\\u7c7b\\u540d\\uff08class names\\uff09\\u8986\\u76d6\\u6837\\u5f0f\\n\\n\\u8986\\u76d6\\u7ec4\\u4ef6\\u6837\\u5f0f\\u7684\\u7b2c\\u4e00\\u79cd\\u65b9\\u6cd5\\u662f\\u4f7f\\u7528**\\u7c7b\\u540d\\uff08class names\\uff09** \\u3002 \\u6bcf\\u4e2a\\u7ec4\\u4ef6\\u90fd\\u63d0\\u4f9b\\u4e00\\u4e2a` className `\\u5c5e\\u6027\\uff0c\\u5b83\\u901a\\u5e38\\u4f5c\\u7528\\u4e8e root \\u5143\\u7d20\\u3002\\n\\n\\u6b64\\u793a\\u4f8b\\u4f7f\\u7528\\u4e00\\u4e2a\\u9ad8\\u9636\\u7ec4\\u4ef6[` withStyles() `](/styles/basics/#higher-order-component-api)\\u5c06\\u81ea\\u5b9a\\u4e49\\u6837\\u5f0f\\u6ce8\\u5165 DOM \\u4e4b\\u4e2d\\uff0c\\u5e76\\u901a\\u8fc7\\u5b83\\u7684` classes `\\u5c5e\\u6027\\u5c06\\u7c7b\\u540d\\u4f20\\u9012\\u7ed9 `ClassNames` \\u7ec4\\u4ef6\\u3002 \\u60a8\\u53ef\\u4ee5\\u9009\\u62e9[\\u4efb\\u4f55\\u5176\\u4ed6\\u7684\\u6837\\u5f0f\\u89e3\\u51b3\\u65b9\\u6848](/guides/interoperability/)\\uff0c\\u6216\\u4f7f\\u7528\\u7eaf CSS \\u6765\\u521b\\u5efa\\u6837\\u5f0f\\uff0c\\u4f46\\u4e00\\u5b9a\\u8981 \\u8003\\u8651[ CSS \\u7684\\u6ce8\\u5165\\u987a\\u5e8f](/styles/advanced/#css-injection-order) \\uff0c\\u5f53\\u901a\\u8fc7 Material-UI \\u5c06 CSS \\u6ce8\\u5165 DOM \\u4e2d\\u800c\\u6765\\u5b9e\\u73b0\\u7ec4\\u4ef6\\u7684\\u6837\\u5f0f\\u65f6\\uff0c\\u8fd9\\u4e9b CSS \\u5c06\\u5177\\u6709\\u6700\\u9ad8\\u7684\\u4f18\\u5148\\u7ea7\\uff0c\\u56e0\\u4e3a`<link>`\\u88ab\\u6ce8\\u5165\\u5230` <head />` \\u7684\\u5e95\\u90e8\\uff0c\\u8fd9\\u6837\\u7684\\u8bdd\\u59cb\\u7ec8\\u6b63\\u786e\\u5730\\u6e32\\u67d3\\u7ec4\\u4ef6\\u3002\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### \\u7528\\u7c7b\\u8986\\u76d6\\u6837\\u5f0f\\n\\n\\u5f53 `className` \\u5c5e\\u6027\\u4e0d\\u8db3\\u591f\\u65f6\\uff0c\\u4f60\\u9700\\u8981\\u8bbf\\u95ee\\u66f4\\u6df1\\u5c42\\u7684\\u5143\\u7d20\\uff0c\\u8fd9\\u65f6\\u5219\\u53ef\\u4f7f\\u7528`classes` \\u5bf9\\u8c61\\u5c5e\\u6027\\uff0c\\u8fd9\\u6837\\u5c31\\u80fd\\u591f\\u81ea\\u5b9a\\u4e49\\u8be5\\u7ec4\\u4ef6\\u4e2d\\u6240\\u6709\\u7531 Material-UI \\u6ce8\\u5165\\u7684 CSS\\u3002\\n\\n\\u6bcf\\u4e00\\u4e2a\\u7ec4\\u4ef6\\u7684\\u7c7b\\u5217\\u8868\\u5df2\\u8bb0\\u5f55\\u5728\\u7ec4\\u4ef6 API \\u9875\\u9762\\u4e2d\\uff0c \\u8bf7\\u53c2\\u9605 **CSS \\u90e8\\u5206**\\u4ee5\\u53ca**\\u89c4\\u5219\\u540d\\u79f0\\u680f**\\u6765\\u83b7\\u53d6\\u66f4\\u591a\\u4fe1\\u606f\\u3002 \\u4f8b\\u5982\\uff0c\\u60a8\\u53ef\\u4ee5\\u67e5\\u770b [Button CSS API](/api/button/#css)\\u3002 \\u6216\\u8005\\uff0c\\u60a8\\u4e5f\\u53ef\\u4ee5\\u4f7f\\u7528[\\u6d4f\\u89c8\\u5668\\u7684 dev tools](#using-the-dev-tools)\\u3002\\n\\n\\u8fd9\\u4e2a\\u4f8b\\u5b50\\u4e5f\\u4f7f\\u7528\\u4e86 `withStyles()` \\uff08\\u89c1\\u4e0a\\u6587\\uff09\\uff0c\\u4f46\\u5728\\u8fd9\\u91cc\\uff0c `ClassesNesting` \\u4f7f\\u7528 `Button` \\u7684 `classes` \\u5c5e\\u6027\\u6765\\u63d0\\u4f9b\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff0c\\u8be5\\u5bf9\\u8c61\\u5c06 **\\u8981\\u8986\\u76d6\\u7684 classes \\u5b50\\u9879\\u540d** \\uff08\\u6837\\u5f0f\\u89c4\\u5219\\uff09\\u6620\\u5c04\\u5230 **\\u5bf9\\u5e94\\u7684CSS\\u5c5e\\u6027\\u540d\\u79f0** \\uff08\\u503c\\uff09\\u5f53\\u4e2d\\u3002 \\u7ec4\\u4ef6\\u7684\\u73b0\\u6709\\u7c7b\\u5c06\\u7ee7\\u7eed\\u88ab\\u6ce8\\u5165\\uff0c\\u56e0\\u6b64\\u53ea\\u9700\\u8981\\u63d0\\u4f9b\\u4f60\\u60f3\\u8981\\u6dfb\\u52a0\\u6216\\u8986\\u76d6\\u7684\\u7279\\u5b9a\\u6837\\u5f0f\\u3002\\n\\n\\u8bf7\\u6ce8\\u610f\\uff0c\\u9664\\u6309\\u94ae\\u6837\\u5f0f\\u5916\\uff0c\\u6309\\u94ae\\u6807\\u7b7e\\u7684\\u5927\\u5c0f\\u5199\\u4e5f\\u5df2\\u66f4\\u6539\\uff1a\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### \\u4f7f\\u7528\\u5168\\u5c40\\u7684\\u7c7b\\u540d\\uff08 global class names\\uff09\\u8986\\u76d6\\u6837\\u5f0f\\n\\n[\\u8bf7\\u53c2\\u8003\\u8fd9\\u4e2a\\u7ae0\\u8282](/styles/advanced/#with-material-ui-core)\\u3002\\n\\n### \\u4f7f\\u7528\\u5f00\\u53d1\\u5de5\\u5177\\uff08dev tools\\uff09\\n\\n\\u4f7f\\u7528\\u6d4f\\u89c8\\u5668\\u4e2d\\u7684 dev tools\\uff0c\\u60a8\\u53ef\\u4ee5\\u8282\\u7701\\u5927\\u91cf\\u7684\\u65f6\\u95f4\\u3002 \\u5728\\u5f00\\u53d1\\u73af\\u5883\\u4e2d\\uff1aMaterial-UI \\u7684 class \\u540d\\u79f0[\\u9075\\u5faa\\u4e00\\u4e2a\\u7b80\\u5355\\u7684\\u6a21\\u5f0f](/styles/advanced/#class-names)\\uff1a`Mui[\\u7ec4\\u4ef6\\u540d\\u79f0]-[\\u6837\\u5f0f\\u89c4\\u5219\\u540d\\u79f0]-[UUID]` \\u3002\\n\\n\\u8ba9\\u6211\\u4eec\\u56de\\u5230\\u4e0a\\u9762\\u7684\\u6f14\\u793a\\u3002 \\u4f60\\u662f\\u5982\\u4f55\\u80fd\\u8986\\u76d6\\u6309\\u94ae\\u6807\\u7b7e\\u7684\\u6837\\u5f0f\\uff1f\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\n\\u4f7f\\u7528\\u5f00\\u53d1\\u5de5\\u5177\\uff0c\\u60a8\\u5219\\u77e5\\u9053\\u60a8\\u9700\\u8981\\u5b9a\\u4f4d\\u5230`\\u6309\\u94ae`\\u7ec4\\u4ef6\\u4ee5\\u53ca\\u5176`\\u6807\\u7b7e`\\u6837\\u5f0f\\u89c4\\u5219\\uff1a\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### \\u7b80\\u800c\\u8a00\\u4e4b\\n\\n\\u4e0a\\u9762\\u7684\\u4ee3\\u7801\\u793a\\u4f8b\\u53ef\\u4ee5\\u901a\\u8fc7\\u4f7f\\u7528**\\u76f8\\u540c\\u7684 CSS API** \\u4f5c\\u4e3a\\u5b50\\u7ec4\\u4ef6\\u88ab\\u56fa\\u5b9a\\u3002 \\u5728\\u6b64\\u793a\\u4f8b\\u4e2d\\uff0c `withStyles()` \\u9ad8\\u9636\\u7ec4\\u4ef6\\u6b63\\u5728\\u6ce8\\u5165\\u4e00\\u4e2a `classes` \\u5c5e\\u6027\\uff0c\\u800c\\u6b64\\u5c5e\\u6027\\u5728 [`Button` \\u7ec4\\u4ef6](/api/button/#css)\\u7528\\u5230 \\u3002\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### CSS \\u4f2a\\u7c7b\\uff08Pseudo-classes\\uff09\\n\\n\\u7ec4\\u4ef6\\u4f1a\\u6709\\u4e00\\u4e9b\\u7279\\u6b8a\\u7684\\u72b6\\u6001\\uff0c\\u5982 *hover* \\uff0c*focus* \\uff0c*disabled* \\u548c *selected* \\uff0c\\u5b83\\u4eec\\u88ab\\u4e00\\u4e9b\\u66f4\\u9ad8\\u7684 CSS \\u7279\\u5f02\\u6027\\u6240\\u88c5\\u9970\\u3002 [\\u7279\\u5f02\\u6027\\u662f\\u4e00\\u79cd\\u52a0\\u6743](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity)\\uff0c\\u5b83\\u9002\\u7528\\u4e8e\\u7ed9\\u5b9a\\u7684 CSS \\u58f0\\u660e\\u3002\\n\\n\\u4e3a\\u4e86\\u8986\\u76d6\\u7ec4\\u4ef6\\u7684\\u7279\\u6b8a\\u72b6\\u6001\\uff0c**\\u4f60\\u4f1a\\u9700\\u8981\\u63d0\\u9ad8\\u7279\\u6b8a\\u6027** \\u3002 \\u4e0b\\u9762\\u662f\\u4e00\\u4e2a\\u793a\\u4f8b\\uff0c\\u5b83\\u5c55\\u793a\\u4e86 *disabled* \\u72b6\\u6001\\uff0c\\u4ee5\\u53ca\\u4e00\\u4e2a\\u4f7f\\u7528**\\u4f2a\\u7c7b**\\u7684\\u6309\\u94ae\\u7ec4\\u4ef6\\uff08`disabled`\\uff09\\uff1a\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\n\\u6709\\u4e9b\\u65f6\\u5019\\uff0c\\u9274\\u4e8e\\u5e73\\u53f0\\u4e2d\\u4e0d\\u5b58\\u5728\\u8be5\\u72b6\\u6001\\uff0c\\u60a8\\u4e0d\\u80fd\\u4f7f\\u7528**\\u4f2a\\u7c7b**\\u3002 \\u6211\\u4eec\\u4ee5\\u83dc\\u5355\\u9879\\uff08menu item\\uff09\\u7ec4\\u4ef6\\u548c *selected* \\u72b6\\u6001\\u4e3a\\u4f8b\\u3002 \\u9664\\u4e86\\u8bbf\\u95ee\\u5d4c\\u5957\\u5143\\u7d20\\u4e4b\\u5916\\uff0c\\u8fd8\\u6709`classes` \\u5c5e\\u6027\\u53ef\\u7528\\u4e8e\\u81ea\\u5b9a\\u4e49 Material-UI \\u7ec4\\u4ef6\\u7684\\u7279\\u6b8a\\u72b6\\u6001\\uff1a\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### \\u4e3a\\u4ec0\\u4e48\\u6211\\u9700\\u8981\\u589e\\u52a0\\u7279\\u6b8a\\u6027\\u6765\\u8986\\u76d6\\u4e00\\u4e2a\\u7ec4\\u4ef6\\u7684\\u72b6\\u6001\\u5462\\uff1f\\n\\n\\u901a\\u8fc7\\u4e00\\u4e9b\\u8bbe\\u8ba1\\uff0cCSS \\u7684\\u4e00\\u4e9b\\u7279\\u6b8a\\u8981\\u6c42\\u8ba9\\u4f2a\\u7c7b\\u589e\\u52a0\\u4e86\\u7279\\u5f02\\u6027\\u3002 \\u4e3a\\u4e86\\u4fdd\\u6301\\u4e00\\u81f4\\u6027\\uff0c\\u901a\\u8fc7\\u4e00\\u4e9b\\u5176\\u81ea\\u5b9a\\u4e49\\u7684\\u4f2a\\u7c7b\\uff0cMaterial-UI \\u63d0\\u9ad8\\u4e86\\u7279\\u6b8a\\u6027\\u3002 \\u8fd9\\u6709\\u4e00\\u4e2a\\u91cd\\u8981\\u7684\\u4f18\\u70b9\\uff0c\\u60a8\\u53ef\\u4ee5\\u81ea\\u7531\\u6311\\u9009\\u90a3\\u4e9b\\u60f3\\u8981\\u81ea\\u5b9a\\u4e49\\u72b6\\u6001\\u3002\\n\\n#### \\u6211\\u53ef\\u4ee5\\u4f7f\\u7528\\u90a3\\u4e9b\\u9700\\u8981\\u66f4\\u5c11\\u6837\\u677f\\u7684\\u4e0d\\u540c API \\u5417\\uff1f\\n\\n\\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 Material-UI \\u751f\\u6210\\u7684[\\u5168\\u5c40\\u7c7b\\u540d](/styles/advanced/#with-material-ui-core)\\uff0c\\u800c\\u4e0d\\u662f\\u5411 `classes` props API \\u4f20\\u8fbe\\u503c\\u3002 \\u5b83\\u5b9e\\u73b0\\u4e86\\u6240\\u6709\\u8fd9\\u4e9b\\u81ea\\u5b9a\\u4e49\\u4f2a\\u7c7b\\uff1a\\n\\n| classes \\u952e    | \\u5168\\u5c40\\u7c7b\\u540d             |\\n|:------------ |:---------------- |\\n| checked      | Mui-checked      |\\n| disabled     | Mui-disabled     |\\n| error        | Mui-error        |\\n| focused      | Mui-focused      |\\n| focusVisible | Mui-focusVisible |\\n| required     | Mui-required     |\\n| expanded     | Mui-expanded     |\\n| selected     | Mui-selected     |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### \\u5728\\u540c\\u4e00\\u6837\\u5f0f\\u8868\\u4e2d\\uff0c\\u53ef\\u4ee5\\u4f7f\\u7528 `$ruleName` \\u6765\\u5f15\\u7528\\u5f53\\u524d\\u7684\\u89c4\\u5219\\n\\n[jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) \\u63d2\\u4ef6 (\\u9ed8\\u8ba4\\u60c5\\u51b5\\u4e0b\\u53ef\\u7528) \\u7b80\\u5316\\u4e86\\u589e\\u52a0\\u7279\\u5f02\\u6027\\u7684\\u8fc7\\u7a0b\\u3002\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\n\\u7f16\\u8bd1\\u6210\\uff1a\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f\\u60a8\\u9700\\u8981\\u5c06\\u4e24\\u4e2a\\u751f\\u6210\\u7684\\u7c7b\\u540d\\u79f0\\uff08`root` & `disabled`\\uff09\\u5e94\\u7528\\u4e8e DOM\\uff0c\\u8fd9\\u6837\\u624d\\u80fd\\u8fbe\\u5230\\u9884\\u671f\\u6548\\u679c\\u3002\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### \\u8986\\u76d6\\u5185\\u8054\\u6837\\u5f0f\\u8868\\n\\n\\u7b2c\\u4e8c\\u79cd\\u8986\\u76d6\\u7ec4\\u4ef6\\u6837\\u5f0f\\u7684\\u65b9\\u6cd5\\u662f\\u4f7f\\u7528 **inline-style**\\u3002 \\u6bcf\\u4e2a\\u7ec4\\u4ef6\\u90fd\\u4f1a\\u63d0\\u4f9b\\u4e00\\u4e2a `style` \\u5c5e\\u6027\\u3002 \\u8fd9\\u4e9b\\u5c5e\\u6027\\u59cb\\u7ec8\\u5e94\\u7528\\u4e8e\\u6839\\u5143\\u7d20\\u3002\\n\\n\\u60a8\\u4e0d\\u5fc5\\u62c5\\u5fc3 CSS \\u7279\\u6b8a\\u6027\\uff0c\\u56e0\\u4e3a\\u5185\\u8054\\u6837\\u5f0f\\u5c06\\u4f18\\u5148\\u4e8e\\u5e38\\u89c4 CSS\\u3002\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[\\u548c classes \\u6bd4\\u8d77\\u6765\\uff0c\\u6211\\u4ec0\\u4e48\\u65f6\\u5019\\u5e94\\u8be5\\u4f7f\\u7528\\u5185\\u5d4c\\u6837\\u5f0f\\uff1f](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2\\u3002 \\u4e00\\u6b21\\u6027\\u4f7f\\u7528\\u7684\\u52a8\\u6001\\u53d8\\u4f53\\n\\n\\u60a8\\u5728\\u4e0a\\u4e00\\u8282\\u4e2d\\uff0c\\u5df2\\u7ecf\\u5b66\\u4e60\\u4e86\\u5982\\u4f55\\u8986\\u76d6 Material-UI \\u7ec4\\u4ef6\\u7684\\u6837\\u5f0f\\u3002 \\u73b0\\u5728\\uff0c\\u8ba9\\u6211\\u4eec\\u770b\\u770b\\u6211\\u4eec\\u5982\\u4f55\\u4f7f\\u52a8\\u6001\\u5730\\u5e94\\u7528\\u8fd9\\u4e2a\\u8986\\u76d6\\u3002 \\u4ee5\\u4e0b\\u662f\\u4e94\\u79cd\\u9009\\u62e9\\uff0c\\u5404\\u6709\\u5229\\u5f0a\\u3002\\n\\n### \\u52a8\\u6001 CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### \\u7c7b\\u540d\\u79f0\\u5206\\u652f\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS \\u53d8\\u91cf\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### \\u5185\\u8054\\u6837\\u5f0f\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### \\u8986\\u76d6\\u4e3b\\u9898\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3\\u3002 \\u5728\\u4e0d\\u540c\\u73af\\u5883\\u4e2d\\u4f7f\\u7528\\u7ec4\\u4ef6\\u7684\\u7279\\u5b9a\\u53d8\\u4f53\\n\\n\\u60a8\\u53ef\\u80fd\\u9700\\u8981\\u521b\\u5efa\\u7ec4\\u4ef6\\u7684\\u53d8\\u4f53\\uff0c\\u5e76\\u4e14\\u5728\\u4e0d\\u540c\\u7684\\u4e0a\\u4e0b\\u6587\\u4e2d\\u4f7f\\u7528\\u5b83\\uff0c\\u4f8b\\u5982\\u60a8\\u60f3\\u5728\\u4ea7\\u54c1\\u9875\\u9762\\u4e0a\\u5c55\\u793a\\u4e00\\u4e2a\\u5f69\\u8272\\u6309\\u94ae\\uff0c\\u4f46\\u60a8\\u5e0c\\u671b\\u5c3d\\u53ef\\u80fd\\u4fdd\\u6301\\u4ee3\\u7801 [*DRY*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) \\u3002\\n\\n\\u6700\\u597d\\u7684\\u65b9\\u6cd5\\u662f\\u9075\\u5faa\\u9009\\u98791\\uff0c\\u7136\\u540e\\u5229\\u7528 React \\u7684\\u7ec4\\u5408\\u529f\\u80fd\\uff0c\\u5bfc\\u51fa\\u81ea\\u5b9a\\u4e49\\u7684\\u7ec4\\u4ef6\\u6765\\uff0c\\u4ee5\\u4fbf\\u5728\\u4efb\\u4f55\\u9700\\u8981\\u7684\\u5730\\u65b9\\u4f7f\\u7528\\u3002\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4\\u3001 Material Design \\u53d8\\u4f53\\n\\nMaterial Design \\u89c4\\u8303\\u8bb0\\u5f55\\u4e86\\u67d0\\u4e9b\\u7ec4\\u4ef6\\u7684\\u4e0d\\u540c\\u53d8\\u4f53\\uff0c\\u4f8b\\u5982\\u6309\\u94ae\\u7684\\u5f62\\u72b6\\u5982\\u4f55\\u4e0d\\u540c\\uff1a[text](https://material.io/design/components/buttons.html#text-button) (\\u4ee5\\u524d\\u79f0\\u4e3a\\u201cflat\\u201d)\\uff0c[contained](https://material.io/design/components/buttons.html#contained-button) (\\u4ee5\\u524d\\u79f0\\u4e3a\\u201craised\\u201d)\\uff0c[ FAB ](https://material.io/design/components/buttons-floating-action-button.html)\\u7b49\\u7b49\\u3002\\n\\nMaterial-UI \\u4f1a\\u5c1d\\u8bd5\\u5b9e\\u73b0\\u6240\\u6709\\u8fd9\\u4e9b\\u53d8\\u4f53\\u3002 \\u8bf7\\u53c2\\u9605[\\u652f\\u6301\\u7684\\u7ec4\\u4ef6](/getting-started/supported-components/)\\u6587\\u6863\\uff0c\\u627e\\u51fa\\u60a8\\u60f3\\u8981\\u7684\\u6240\\u6709\\u652f\\u6301\\u7684 Material Design \\u7ec4\\u4ef6\\u7684\\u5f53\\u524d\\u72b6\\u6001\\u3002\\n\\n## 5\\u3001 \\u5168\\u5c40\\u5316\\u4e3b\\u9898\\u53d8\\u4f53\\n\\n\\u4e3a\\u4e86\\u63d0\\u9ad8\\u7ec4\\u4ef6\\u4e4b\\u95f4\\u7684\\u4e00\\u81f4\\u6027\\uff0c\\u5e76\\u6574\\u4f53\\u5316\\u7ba1\\u7406\\u7528\\u6237\\u754c\\u9762\\u5916\\u89c2\\uff0cMaterial-UI \\u63d0\\u4f9b\\u4e86\\u4e00\\u79cd\\u80fd\\u591f\\u5e94\\u7528\\u5168\\u5c40\\u53d8\\u66f4\\u7684\\u673a\\u5236\\u3002\\n\\n\\u672c\\u8282\\u7684\\u793a\\u4f8b\\u4ecb\\u7ecd\\u4e86\\u5982\\u4f55\\u66f4\\u6539\\u6309\\u94ae\\u7684\\u5b57\\u4f53\\u5927\\u5c0f\\u3002\\n\\n### \\u4e3b\\u9898\\u53d8\\u91cf\\n\\n\\u4f60\\u53ef\\u4ee5\\u8c03\\u6574[\\u4e3b\\u9898\\u914d\\u7f6e\\u4e2d\\u7684\\u53d8\\u91cf](/customization/theming/#theme-configuration-variables)\\u3002\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### \\u5168\\u5c40 CSS \\u8986\\u76d6\\n\\n\\u60a8\\u4e5f\\u53ef\\u4ee5\\u81ea\\u5b9a\\u4e49\\u5e26\\u6709 CSS \\u7684\\u6240\\u6709\\u7ec4\\u4ef6\\u7684\\u5b9e\\u4f8b\\u3002 \\u7ec4\\u4ef6\\u4f1a\\u516c\\u5f00[\\u5168\\u5c40\\u7c7b\\u540d\\u79f0](/styles/advanced/#with-material-ui-core)\\u4ee5\\u542f\\u7528\\u6b64\\u529f\\u80fd\\u3002 \\u5b83\\u4e0e\\u60a8\\u81ea\\u5b9a\\u4e49\\u7684 Bootstrap \\u7684\\u65b9\\u5f0f\\u975e\\u5e38\\u76f8\\u4f3c\\u3002\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global \\u7531 jss-plugin-global \\u5904\\u7406\\u3002\\n  \\'@global\\': {\\n    // \\u5982\\u679c\\u60f3\\u5d4c\\u5957\\u4e3b\\u9898\\uff0c\\u60a8\\u5e94\\u8be5\\u9488\\u5bf9 [class * =\\u201cMuiButton-root\\u201d]\\u3002\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### \\u5168\\u5c40\\u4e3b\\u9898\\u8986\\u76d6\\n\\n\\u5229\\u7528`\\u53ef\\u88ab\\u8986\\u76d6`\\u7684`\\u4e3b\\u9898`\\u7684\\u952e\\uff0c\\u60a8\\u5f88\\u6709\\u53ef\\u80fd\\u6539\\u53d8\\u7531 Material-UI \\u6ce8\\u5165 DOM \\u7684\\u6bcf\\u4e2a\\u5355\\u72ec\\u6837\\u5f0f\\u3002 \\u5728[\\u4e3b\\u9898\\u90e8\\u5206](/customization/globals/#css)\\u53ef\\u4ee5\\u4e86\\u89e3\\u6709\\u5173\\u5b83\\u7684\\u66f4\\u591a\\u4fe1\\u606f\\u3002\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},Gp3B:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mKyP\"),i=t(\"h7Hf\"),r=t(\"O8uh\"),c=s.a.createElement,l=Object(a.a)({typography:{button:{fontSize:\"1rem\"}}}),d=c(i.a,{theme:l},c(r.a,null,\"font-size: 1rem\"));function u(){return d}},Hg0Q:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return a}));var o=t(\"mXGw\"),s=t(\"zpLS\");function a(){return o.useContext(s.a)}},JkKn:function(e,n){e.exports=\"import React from 'react';\\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: '1rem',\\n    },\\n  },\\n});\\n\\nexport default function ThemeVariables() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Button>font-size: 1rem</Button>\\n    </ThemeProvider>\\n  );\\n}\\n\"},K32J:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return d}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"e+1t\"),i=t(\"kVtE\"),r=s.a.createElement,c=t(\"ES0Y\"),l=t(\"Lwve\");function d(e){var n=e.demos,t=e.docs;return r(a.a,{demos:n,docs:t,requireDemo:c})}d.getInitialProps=function(){var e=Object(i.a)({pageFilename:\"customization/components\",requireRaw:l});return{demos:e.demos,docs:e.docs}}},Lqxv:function(e,n,t){\"use strict\";var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t(\"PDtE\"),r=t(\"Hg0Q\"),c=t(\"XpU0\"),l=t(\"Oy88\"),d=t(\"rKPb\"),u=a.createElement,m=a.forwardRef((function(e,n){e.checked;var t=e.classes,c=e.className,m=e.control,p=e.disabled,h=(e.inputRef,e.label),b=e.labelPlacement,g=void 0===b?\"end\":b,f=(e.name,e.onChange,e.value,Object(s.a)(e,[\"checked\",\"classes\",\"className\",\"control\",\"disabled\",\"inputRef\",\"label\",\"labelPlacement\",\"name\",\"onChange\",\"value\"])),y=Object(r.a)(),w=p;\"undefined\"===typeof w&&\"undefined\"!==typeof m.props.disabled&&(w=m.props.disabled),\"undefined\"===typeof w&&y&&(w=y.disabled);var S={disabled:w};return[\"checked\",\"name\",\"onChange\",\"value\",\"inputRef\"].forEach((function(n){\"undefined\"===typeof m.props[n]&&\"undefined\"!==typeof e[n]&&(S[n]=e[n])})),u(\"label\",Object(o.a)({className:Object(i.a)(t.root,c,\"end\"!==g&&t[\"labelPlacement\".concat(Object(d.a)(g))],w&&t.disabled),ref:n},f),a.cloneElement(m,S),u(l.a,{component:\"span\",className:Object(i.a)(t.label,w&&t.disabled)},h))}));n.a=Object(c.default)((function(e){return{root:{display:\"inline-flex\",alignItems:\"center\",cursor:\"pointer\",verticalAlign:\"middle\",WebkitTapHighlightColor:\"transparent\",marginLeft:-11,marginRight:16,\"&$disabled\":{cursor:\"default\"}},labelPlacementStart:{flexDirection:\"row-reverse\",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:\"column-reverse\",marginLeft:16},labelPlacementBottom:{flexDirection:\"column\",marginLeft:16},disabled:{},label:{\"&$disabled\":{color:e.palette.text.disabled}}}}),{name:\"MuiFormControlLabel\"})(m)},Lwve:function(e,n,t){var o={\"./ClassNames.js\":\"qnj5\",\"./ClassNames.tsx\":\"i4ig\",\"./ClassesNesting.js\":\"WobD\",\"./ClassesNesting.tsx\":\"Pbgk\",\"./ClassesShorthand.js\":\"Twdu\",\"./ClassesShorthand.tsx\":\"Bw8i\",\"./ClassesState.js\":\"4+jR\",\"./ClassesState.tsx\":\"ijYl\",\"./Component.js\":\"hmMg\",\"./Component.tsx\":\"x9xE\",\"./DynamicCSS.js\":\"jhIm\",\"./DynamicCSS.tsx\":\"FnB2\",\"./DynamicCSSVariables.js\":\"T7CW\",\"./DynamicCSSVariables.tsx\":\"aJBY\",\"./DynamicClassName.js\":\"wTtT\",\"./DynamicClassName.tsx\":\"l6MS\",\"./DynamicInlineStyle.js\":\"ZjFZ\",\"./DynamicInlineStyle.tsx\":\"r5BQ\",\"./DynamicThemeNesting.js\":\"pDV1\",\"./DynamicThemeNesting.tsx\":\"Y00d\",\"./GlobalCssOverride.js\":\"+H/W\",\"./GlobalCssOverride.tsx\":\"2i58\",\"./GlobalThemeOverride.js\":\"7n5B\",\"./GlobalThemeOverride.tsx\":\"SFA2\",\"./InlineStyle.js\":\"0NmG\",\"./InlineStyle.tsx\":\"9OVH\",\"./ThemeVariables.js\":\"9K9j\",\"./ThemeVariables.tsx\":\"JkKn\",\"./components-aa.md\":\"qtym\",\"./components-de.md\":\"aPkq\",\"./components-es.md\":\"XqgK\",\"./components-fr.md\":\"4CHE\",\"./components-ja.md\":\"DQyw\",\"./components-pt.md\":\"BRs4\",\"./components-ru.md\":\"xlwe\",\"./components-zh.md\":\"GS+a\",\"./components.md\":\"klWL\"};function s(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=a,e.exports=s,s.id=\"Lwve\"},Pbgk:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  label: {\\n    textTransform: 'capitalize',\\n  },\\n});\\n\\nexport default function ClassesNesting() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Button\\n      classes={{\\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\\n        label: classes.label, // class name, e.g. `classes-nesting-label-x`\\n      }}\\n    >\\n      classes nesting\\n    </Button>\\n  );\\n}\\n\"},SFA2:function(e,n){e.exports=\"import React from 'react';\\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: '1rem',\\n      },\\n    },\\n  },\\n});\\n\\nexport default function GlobalThemeOverride() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Button>font-size: 1rem</Button>\\n    </ThemeProvider>\\n  );\\n}\\n\"},T7CW:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst useStyles = makeStyles({\\n  button: {\\n    background:\\n      'linear-gradient(45deg, var(--background-start) 30%, var(--background-end) 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px var(--box-shadow)',\\n  },\\n});\\n\\nconst blue = {\\n  '--background-start': '#2196F3',\\n  '--background-end': '#21CBF3',\\n  '--box-shadow': 'rgba(33, 203, 243, .3)',\\n};\\n\\nconst defaultColor = {\\n  '--background-start': '#FE6B8B',\\n  '--background-end': '#FF8E53',\\n  '--box-shadow': 'rgba(255, 105, 135, .3)',\\n};\\n\\nexport default function DynamicCSSVariables() {\\n  const classes = useStyles();\\n  const [color, setColor] = React.useState(defaultColor);\\n\\n  const handleChange = (event) => {\\n    setColor(event.target.checked ? blue : defaultColor);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === blue}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button className={classes.button} style={color}>\\n        {'CSS variables'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},Twdu:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\n// The `withStyles()` higher-order component is injecting a `classes`\\n// prop that is used by the `Button` component.\\nconst StyledButton = withStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  label: {\\n    textTransform: 'capitalize',\\n  },\\n})(Button);\\n\\nexport default function ClassesShorthand() {\\n  return <StyledButton>classes shorthand</StyledButton>;\\n}\\n\"},VgLK:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return b}));var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t.n(a),r=t(\"XpU0\"),c=t(\"O8uh\"),l=t(\"Lqxv\"),d=t(\"uU96\"),u=i.a.createElement,m=function(e,n){return function(t){return n[t[e]]}},p={root:{background:m(\"color\",{default:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",blue:\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\"}),borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:m(\"color\",{default:\"0 3px 5px 2px rgba(255, 105, 135, .3)\",blue:\"0 3px 5px 2px rgba(33, 203, 243, .3)\"})}},h=Object(r.default)(p)((function(e){var n=e.classes,t=(e.color,Object(s.a)(e,[\"classes\",\"color\"]));return u(c.a,Object(o.a)({className:n.root},t))}));function b(){var e=i.a.useState(\"default\"),n=e[0],t=e[1];return u(i.a.Fragment,null,u(l.a,{control:u(d.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),u(h,{color:n},\"Dynamic CSS\"))}},WH4S:function(e,n,t){\"use strict\";var o=t(\"z3IF\"),s=t(\"hDBU\"),a=t(\"2Fjn\"),i=t(\"mXGw\"),r=t(\"PDtE\"),c=t(\"rbxJ\"),l=t(\"Hg0Q\"),d=t(\"XpU0\"),u=t(\"l/nz\"),m=i.createElement,p=i.forwardRef((function(e,n){var t=e.autoFocus,i=e.checked,d=e.checkedIcon,p=e.classes,h=e.className,b=e.defaultChecked,g=e.disabled,f=e.icon,y=e.id,w=e.inputProps,S=e.inputRef,v=e.name,x=e.onBlur,C=e.onChange,B=e.onFocus,j=e.readOnly,M=e.required,k=e.tabIndex,z=e.type,I=e.value,F=Object(a.a)(e,[\"autoFocus\",\"checked\",\"checkedIcon\",\"classes\",\"className\",\"defaultChecked\",\"disabled\",\"icon\",\"id\",\"inputProps\",\"inputRef\",\"name\",\"onBlur\",\"onChange\",\"onFocus\",\"readOnly\",\"required\",\"tabIndex\",\"type\",\"value\"]),D=Object(c.a)({controlled:i,default:Boolean(b),name:\"SwitchBase\",state:\"checked\"}),T=Object(s.a)(D,2),E=T[0],O=T[1],N=Object(l.a)(),R=g;N&&\"undefined\"===typeof R&&(R=N.disabled);var U=\"checkbox\"===z||\"radio\"===z;return m(u.a,Object(o.a)({component:\"span\",className:Object(r.a)(p.root,h,E&&p.checked,R&&p.disabled),disabled:R,tabIndex:null,role:void 0,onFocus:function(e){B&&B(e),N&&N.onFocus&&N.onFocus(e)},onBlur:function(e){x&&x(e),N&&N.onBlur&&N.onBlur(e)},ref:n},F),m(\"input\",Object(o.a)({autoFocus:t,checked:i,defaultChecked:b,className:p.input,disabled:R,id:U&&y,name:v,onChange:function(e){var n=e.target.checked;O(n),C&&C(e,n)},readOnly:j,ref:S,required:M,tabIndex:k,type:z,value:I},w)),E?d:f)}));n.a=Object(d.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:\"inherit\",position:\"absolute\",opacity:0,width:\"100%\",height:\"100%\",top:0,left:0,margin:0,padding:0,zIndex:1}},{name:\"PrivateSwitchBase\"})(p)},WobD:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  label: {\\n    textTransform: 'capitalize',\\n  },\\n});\\n\\nexport default function ClassesNesting() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Button\\n      classes={{\\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\\n        label: classes.label, // class name, e.g. `classes-nesting-label-x`\\n      }}\\n    >\\n      classes nesting\\n    </Button>\\n  );\\n}\\n\"},XqgK:function(e,n){e.exports='# Personalizando componentes\\n\\n<p class=\"description\">Los componentes Material-UI pueden ser personalizados de forma sencilla. </p>\\n\\nComo los componentes pueden ser utilizados en diferentes contextos, hay varios enfoques acerca de esto. Yendo desde el caso de uso m\\xe1s especifico hasta aquellos m\\xe1s amplios, tenemos:\\n\\n1. [Variaci\\xf3n espec\\xedfica para una situaci\\xf3n \\xfanica](#1-specific-variation-for-a-one-time-situation)\\n2. [Variaci\\xf3n din\\xe1mica para una situaci\\xf3n \\xfanica](#2-dynamic-variation-for-a-one-time-situation)\\n3. [Variaci\\xf3n espec\\xedfica de un componente](#3-specific-variation-of-a-component) reutilizado en diferentes contextos\\n4. [variaciones de Dise\\xf1o Material](#4-material-design-variations) tal como el componente del bot\\xf3n\\n5. [Variaci\\xf3n global del tema](#5-global-theme-variation)\\n\\n## 1. Variaci\\xf3n espec\\xedfica para una situaci\\xf3n \\xfanica\\n\\nTal vez necesitara cambiar el estilo de un componente para una implementaci\\xf3n especifica, para lo cual tendr\\xe1 estas soluciones a su disposici\\xf3n:\\n\\n### Sobre-escribir estilos con class names\\n\\nLa forma mas natural de sobre-escribir el estilo de un componente es usando **class names**. Cada componente proporciona la propiedad `className` la cual es siempre aplicada al elemento ra\\xedz. \\n\\nEl siguiente ejemplo usa [`withStyles`](/styles/basics/#higher-order-component-api) como un componente HOC,(high-order component), para inyectar estilos customizados en el DOM, y para pasar el class name al componente `ClassNames` mediante su propiedad `classes`. You can choose [any other styling solution](/guides/interoperability/), or even plain CSS to create the styles, but be sure to consider the [CSS injection order](/styles/advanced/#css-injection-order), as the CSS injected into the DOM by Material-UI to style a component has the highest specificity possible, since the `<link>` is injected at the bottom of the `<head />` to ensure the components always render correctly.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### Overriding styles with classes\\n\\nWhen the `className` property isn\\'t enough, and you need to access deeper elements, you can take advantage of the `classes` object property to customize all the CSS injected by Material-UI for a given component.\\n\\nThe list of classes for each component is documented in the component API page, you should refer to the **CSS section** and **rule name column**. Por ejemplo, puedes echar un vistazo a la [API CSS de Button](/api/button/#css). Como alternativa, puedes utilizar las [herramientas de desarrollo del navegador](#using-the-dev-tools).\\n\\nThis example also uses `withStyles()` (see above), but here, `ClassesNesting` is using `Button`\\'s `classes` prop to provide an object that maps the **names of classes to override** (style rules) to the **CSS class names to apply** (values). The component\\'s existing classes will continue to be injected, so it is only necessary to provide the specific styles you wish to add or override.\\n\\nNotice that in addition to the button styling, the button label\\'s capitalization has been changed:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### Overriding styles with global class names\\n\\n[Follow this section](/styles/advanced/#with-material-ui-core).\\n\\n### Usando las herramientas de dev\\n\\nLas herramientas de desarrollo del navegador pueden ahorrarte mucho tiempo. Material-UI\\'s class names [follow a simple pattern](/styles/advanced/#class-names) in development mode: `Mui[component name]-[style rule name]-[UUID]`.\\n\\nVolvamos a la demo anterior. \\xbfC\\xf3mo puedes reemplazar la etiqueta del bot\\xf3n?\\n\\n![herramientas de desarrollo](/static/images/customization/dev-tools.png)\\n\\nUsing the dev tools, you know that you need to target the `Button` component and the `label` style rule:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### Shorthand\\n\\nThe above code example can be condensed by using **the same CSS API** as the child component. In this example, the `withStyles()` higher-order component is injecting a `classes` property that is used by the [`Button` component](/api/button/#css).\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudo-classes\\n\\nThe components special states, like *hover*, *focus*, *disabled* and *selected*, are styled with a higher CSS specificity. [Specificity is a weight](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) that is applied to a given CSS declaration.\\n\\nIn order to override the components special states, **you need to increase specificity**. Here is an example with the *disable* state and the button component using a **pseudo-class** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\nA veces, no puedes usar **pseudo-class** ya que el estado no existe en la plataforma. Let\\'s take the menu item component and the *selected* state as an example. Aside from accessing nested elements, the `classes` property can be used to customize the special states of Material-UI components:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### Why do I need to increase specificity to override one component state?\\n\\nBy design, the CSS specification makes the pseudo-classes increase the specificity. For consistency, Material-UI increases the specificity of its custom pseudo-classes. This has one important advantage, it allows you to cherry-pick the state you want to customize.\\n\\n#### Can I use a different API that requires fewer boilerplate?\\n\\nInstead of providing values to the `classes` prop API, you can rely on [the global class names](/styles/advanced/#with-material-ui-core) generated by Material-UI. It implements all these custom pseudo-classes:\\n\\n| classes key  | Global class name |\\n|:------------ |:----------------- |\\n| checked      | Mui-checked       |\\n| disabled     | Mui-disabled      |\\n| error        | Mui-error         |\\n| focused      | Mui-focused       |\\n| focusVisible | Mui-focusVisible  |\\n| required     | Mui-required      |\\n| expanded     | Mui-expanded      |\\n| selected     | Mui-selected      |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### Use `$ruleName` to reference a local rule within the same style sheet\\n\\nThe [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) plugin (available by default) can make the process of increasing specificity easier.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\ncompiles to:\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f You need to apply the two generated class names (`root` & `disabled`) to the DOM to make it work.\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### Overriding with inline-styles\\n\\nThe second way to override the style of a component is to use the **inline-style** approach. Every component provides a `style` property. These properties are always applied to the root element.\\n\\nYou don\\'t have to worry about CSS specificity as the inline-style takes precedence over the regular CSS.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[When should I use inline-style vs classes?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. Variaci\\xf3n din\\xe1mica para una situaci\\xf3n \\xfanica\\n\\nYou have learned how to override the style of a Material-UI component in the previous section. Now, let\\'s see how we can make these overrides dynamic. Here are five alternatives; each has its pros and cons.\\n\\n### Dynamic CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### Class name branch\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS variables\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Inline-styles\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### Theme nesting\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. Specific variation of a component\\n\\nYou might need to create a variation of a component and use it in different contexts, for instance a colorful button on your product page, however you probably want to keep your code [*DRY*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).\\n\\nThe best approach is to follow option 1 and then take advantage of the composition power of React by exporting your customized component to use wherever you need it.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design variations\\n\\nThe Material Design specification documents different variations of certain components, such as how buttons come in different shapes: [text](https://material.io/design/components/buttons.html#text-button) (formerly \"flat\"), [contained](https://material.io/design/components/buttons.html#contained-button) (formerly \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) and more.\\n\\nMaterial-UI attempts to implement all of these variations. Please refer to the [Supported Components](/getting-started/supported-components/) documentation to find out the current status of all supported Material Design components.\\n\\n## 5. Variaci\\xf3n global del tema\\n\\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes.\\n\\nThe demos of this section covers how to the change the button\\'s font size.\\n\\n### Theme variables\\n\\nYou can adjust the [theme configuration variables](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### Global CSS override\\n\\nYou can also customize all instances of a component with CSS. Components expose [global class names](/styles/advanced/#with-material-ui-core) to enable this. It\\'s very similar to how you would customize Bootstrap.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### Global theme override\\n\\nYou can take advantage of the `overrides` key of the `theme` to potentially change every single style injected by Material-UI into the DOM. Learn more about it in the [themes section](/customization/globals/#css) of the documentation.\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},Y00d:function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport { createMuiTheme, ThemeProvider, Theme } from '@material-ui/core/styles';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport { blue } from '@material-ui/core/colors';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function DynamicThemeNesting() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  const theme = React.useMemo(() => {\\n    if (color === 'blue') {\\n      return createMuiTheme({\\n        palette: {\\n          secondary: {\\n            main: blue[500],\\n            contrastText: '#fff',\\n          },\\n        },\\n      });\\n    }\\n    return createMuiTheme();\\n  }, [color]);\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <ThemeProvider<Theme> theme={theme}>\\n        <Button variant=\\\"contained\\\" color=\\\"secondary\\\">\\n          {'Theme nesting'}\\n        </Button>\\n      </ThemeProvider>\\n    </React.Fragment>\\n  );\\n}\\n\"},\"YQ+F\":function(e,n,t){\"use strict\";t.r(n);var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t.n(a),r=t(\"PDtE\"),c=t(\"O8uh\"),l=t(\"XpU0\"),d=i.a.createElement;n.default=Object(l.default)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"}})((function(e){var n=e.classes,t=e.children,a=e.className,i=Object(s.a)(e,[\"classes\",\"children\",\"className\"]);return d(c.a,Object(o.a)({className:Object(r.a)(n.root,a)},i),t||\"class names\")}))},Z7t4:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"XpU0\"),i=t(\"O8uh\"),r=(0,s.a.createElement)(Object(a.default)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},label:{textTransform:\"capitalize\"}})(i.a),null,\"classes shorthand\");function c(){return r}},ZjFZ:function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst styles = {\\n  button: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  buttonBlue: {\\n    background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\\n  },\\n};\\n\\nexport default function DynamicInlineStyle() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button\\n        style={{\\n          ...styles.button,\\n          ...(color === 'blue' ? styles.buttonBlue : {}),\\n        }}\\n      >\\n        {'dynamic inline-style'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},aJBY:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst useStyles = makeStyles({\\n  button: {\\n    background:\\n      'linear-gradient(45deg, var(--background-start) 30%, var(--background-end) 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px var(--box-shadow)',\\n  },\\n});\\n\\nconst blue = {\\n  '--background-start': '#2196F3',\\n  '--background-end': '#21CBF3',\\n  '--box-shadow': 'rgba(33, 203, 243, .3)',\\n} as React.CSSProperties;\\n\\nconst defaultColor = {\\n  '--background-start': '#FE6B8B',\\n  '--background-end': '#FF8E53',\\n  '--box-shadow': 'rgba(255, 105, 135, .3)',\\n} as React.CSSProperties;\\n\\nexport default function DynamicCSSVariables() {\\n  const classes = useStyles();\\n  const [color, setColor] = React.useState(defaultColor);\\n\\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.checked ? blue : defaultColor);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === blue}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button className={classes.button} style={color}>\\n        {'CSS variables'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},aPkq:function(e,n){e.exports='# Anpassen von Komponenten\\n\\n<p class=\"description\">Sie k\\xf6nnen das Erscheinungsbild einer Material-UI-Komponente einfach anpassen.</p>\\n\\nDa Komponenten in unterschiedlichen Kontexten eingesetzt werden k\\xf6nnen, gibt es verschiedene Ans\\xe4tze. Vom engsten Anwendungsfall bis zum umfassendsten sind dies:\\n\\n1. [Spezifische Abweichung f\\xfcr eine einmalige Situation](#1-specific-variation-for-a-one-time-situation)\\n2. [Dynamische Variation f\\xfcr eine einmalige Situation](#2-dynamic-variation-for-a-one-time-situation)\\n3. [ Spezifische Variation einer Komponente ](#3-specific-variation-of-a-component) wiederverwendet in verschiedenen Kontexten\\n4. [ Variationen des Materialdesigns ](#4-material-design-variations) wie mit der Button-Komponente\\n5. [Global theme variation](#5-global-theme-variation)\\n\\n## 1. Spezifische Abweichung f\\xfcr eine einmalige Situation\\n\\nM\\xf6glicherweise m\\xfcssen Sie den Stil einer Komponente f\\xfcr eine bestimmte Implementierung \\xe4ndern, f\\xfcr die Sie die folgenden L\\xf6sungen zur Verf\\xfcgung haben:\\n\\n### \\xdcberschreiben des styles mit Klassennamen\\n\\nDie erste M\\xf6glichkeit, den Stil einer Komponente zu \\xfcberschreiben, besteht in der Verwendung von **Klassennamen**. Jede Komponente stellt eine `Klassennamen` Eigenschaft bereit, die immer auf das unterste Element angewendet wird.\\n\\nIn diesem Beispiel wird die [`withStyles()`](/styles/basics/#higher-order-component-api) h\\xf6herer Ordnung Komponente verwendet um benutzerdefinierte Stile in den DOM einzuf\\xfcgen und den Klassennamen mittels ihre `classes` Eigenschaftan die ` ClassNames` Komponente zu \\xfcbergeben. Sie k\\xf6nnen sich [f\\xfcr jede andere Styling-L\\xf6sung](/guides/interoperability/) entscheiden oder sogar Standard CSS benutzen, um die Stile zu schaffen. Stellen Sie aber sicher, die [CSS - Injektionsreihenfolge](/styles/advanced/#css-injection-order) zu pr\\xfcfen, da das CSS, welches durch die Material UI-Komponente in den DOM injiziert wird, die h\\xf6chste Spezifit\\xe4t hat, da der `<link>` am Ende des `<4 />` injiziert wird, um sicherzustellen, dass die Komponenten immer richtig gerendert werden.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### \\xdcberschreiben des styles mit Klassennamen\\n\\nWenn die ` Klassennamen`-Eigenschaft nicht genug ist, und Sie auf tiefere Elemente zugreifen m\\xfcssen, k\\xf6nnen Sie die ` classes`-Eigenschaft nutzen, um alle von Material-UI f\\xfcr eine bestimmte Komponente eingef\\xfcgtes CSS anzupassen.\\n\\nThe list of classes for each component is documented in the component API page, you should refer to the **CSS section** and **rule name column**. Zum Beispiel k\\xf6nnen Sie sich die [ Button CSS-API](/api/button/#css) anschauen. Alternativ k\\xf6nnen Sie die [Browser-Entwicklungswerkzeuge](#using-the-dev-tools) verwenden.\\n\\nIn diesem Beispiel wird auch `withStyles()` verwendet (siehe oben), aber hier verwendet `ClassesNesting` die `Button` `classes` Eigenschaft, welche ein Objekt liefert, das die **Namen der zu \\xfcberschreibenden Klassen** (Stilregeln) auf die anzuwendenden **CSS-Klassennamen ** (Werte) abbildet. Die vorhandenen Klassen der Komponente werden weiterhin eingef\\xfcgt. Daher m\\xfcssen nur die spezifischen Styles gesetzt werden die Sie hinzuf\\xfcgen oder \\xfcberschreiben m\\xf6chten.\\n\\nBeachten Sie, dass zus\\xe4tzlich zum Buttonstil die Gro\\xdfschreibung der Buttonbeschriftung ge\\xe4ndert wurde:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### Overriding styles with global class names\\n\\n[Follow this section](/styles/advanced/#with-material-ui-core).\\n\\n### Verwenden der Dev-Tools\\n\\nMit den Browser-Entwicklertools k\\xf6nnen Sie viel Zeit sparen. Die Klassennamen der Material-UI im Entwicklungsmodus [folgen einem einfachen Muster](/styles/advanced/#class-names): `Mui[Komponentenname]-[Stilregelname]-[UUID]`.\\n\\nGehen wir zur\\xfcck zur obigen Demo. Wie k\\xf6nnen Sie die Beschriftung des Buttons \\xfcberschreiben?\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\nMit den Entwicklungswerkzeugen wissen Sie, dass Sie die `Button` Komponente und die `label` Stilregel als Ziel festlegen m\\xfcssen:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### Kurzform\\n\\nDas obige Codebeispiel kann durch Verwendung **derselben CSS-API** als untergeordnete Komponente komprimiert werden. In diesem Beispiel injiziert die `withStyles()` h\\xf6herer Ordnung Komponente eine `classes` Eigenschaft, die von der [`Button` Komponente](/api/button/#css) verwendet wird.\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudoklassen\\n\\nThe components special states, like *hover*, *focus*, *disabled* and *selected*, are styled with a higher CSS specificity. [Spezifit\\xe4t ist ein Gewicht](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) das f\\xfcr eine gegebene CSS-Deklaration gilt.\\n\\nUm die internen Zust\\xe4nde der Komponenten zu \\xfcberschreiben, **m\\xfcssen Sie die Spezifit\\xe4t erh\\xf6hen **. Hier ist ein Beispiel mit dem *disable* Zustand und einer Button Komponente mittels einer **pseudo-class** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\nManchmal k\\xf6nnen Sie keine **Pseudoklasse** verwenden, da der Zustand nicht in der Plattform existiert. Nehmen wir die Men\\xfcpunkt Komponente und den *selected* Zustand als Beispiel. Aside from accessing nested elements, the `classes` property can be used to customize the special states of Material-UI components:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### Warum muss ich die Spezifit\\xe4t erh\\xf6hen, um einen Komponentenzustand au\\xdfer Kraft zu setzen?\\n\\nDie CSS-Spezifikation bewirkt, dass die Pseudoklassen die Spezifit\\xe4t erh\\xf6hen. Aus Gr\\xfcnden der Konsistanz erh\\xf6ht die Material-UI die Spezifit\\xe4t ihrer benutzerdefinierten Zust\\xe4nde. This has one important advantage, it allows you to cherry-pick the state you want to customize.\\n\\n#### Can I use a different API that requires fewer boilerplate?\\n\\nInstead of providing values to the `classes` prop API, you can rely on [the global class names](/styles/advanced/#with-material-ui-core) generated by Material-UI. It implements all these custom pseudo-classes:\\n\\n| classes key  | Globaler Klassenname |\\n|:------------ |:-------------------- |\\n| checked      | Mui-checked          |\\n| deaktiviert  | Mui-disabled         |\\n| Fehler       | Mui-error            |\\n| fokussiert   | Mui-focused          |\\n| focusVisible | Mui-focusVisible     |\\n| erforderlich | Mui-required         |\\n| expanded     | Mui-expanded         |\\n| ausgew\\xe4hlt   | Mui-selected         |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### Verwenden Sie `$ruleName` um eine lokale Regel innerhalb desselben Stylesheets referenzieren\\n\\nDas [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) Plugin (standardm\\xe4\\xdfig verf\\xfcgbar) macht es einfach, die Spezifit\\xe4t verbessern.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\nkompiliert zu:\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f Sie m\\xfcssen die beiden generierten Klassennamen (`root` & `disabled`) an das DOM \\xfcbergeben, damit es funktioniert.\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### Overriding with inline-styles\\n\\nDie zweite M\\xf6glichkeit, den Stil einer Komponente zu \\xfcberschreiben, ist die Verwendung des **Inline-Stils** Ansatzes. Jede Komponente bietet eine `style` Eigenschaft. Diese Eigenschaft werden immer auf das unterste Element angewendet.\\n\\nSie m\\xfcssen sich keine Gedanken \\xfcber die CSS-Spezifit\\xe4t machen, da der Inline-Stil Vorrang vor dem regul\\xe4ren CSS hat.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[Wann sollte ich Inline-Styles und wann Klassen verwenden?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. Dynamische Variation f\\xfcr eine einmalige Situation\\n\\nIn den vorherigen Abschnitten haben Sie gelernt, wie Sie den Stil der Material-UI-Komponenten \\xfcberschreiben. Nun wollen wir mal sehen, wie wir diese \\xdcberschreibungen dynamisch machen k\\xf6nnen. Here are five alternatives; each has its pros and cons.\\n\\n### Dynamisches CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### Klassenname Branch\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS-Variablen\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Inline-styles\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### Verschachtelung des Themes\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. Spezifische Variation einer Komponente\\n\\nM\\xf6glicherweise m\\xfcssen Sie eine Variation einer Komponente erstellen und in verschiedenen Kontexten verwenden, beispielsweise auf einer farbigen Button auf Ihrer Produktseite. Allerdings m\\xf6chten Sie wahrscheinlich, dass Ihr Code [*DRY*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) bleibt.\\n\\nDer beste Ansatz ist, Option 1 zu folgen und dann die Kompositionskraft von React zu nutzen, indem Sie Ihre benutzerdefinierte Komponente exportieren, um sie dort zu verwenden, wo Sie sie ben\\xf6tigen.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design Variationen\\n\\nIn der Material Design-Spezifikation werden verschiedene Variationen bestimmter Komponenten dokumentiert, z. B. wie Buttons in unterschiedlichen Formen erscheinen:[text](https://material.io/design/components/buttons.html#text-button) (fr\\xfcher \"flat\"), [contained](https://material.io/design/components/buttons.html#contained-button) (fr\\xfcher \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) und mehr.\\n\\nDie Material-UI versucht, alle diese Variationen zu implementieren. Bitte beachten Sie die [Unterst\\xfctzte Komponente ](/getting-started/supported-components/) Dokumentation, um den aktuellen Status aller unterst\\xfctzten Material Design-Komponenten herauszufinden.\\n\\n## 5. Global theme variation\\n\\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes.\\n\\nThe demos of this section covers how to the change the button\\'s font size.\\n\\n### Theme-Variablen\\n\\nYou can adjust the [theme configuration variables](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### Globales CSS \\xfcberschreiben\\n\\nSie k\\xf6nnen auch alle Instanzen einer Komponente mit CSS anpassen. Components expose [global class names](/styles/advanced/#with-material-ui-core) to enable this. Es ist sehr \\xe4hnlich, wie Sie Bootstrap anpassen w\\xfcrden.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### Globales Theme \\xfcberschreiben\\n\\nWenn die Konfigurationsvariablen nicht ausreichen, k\\xf6nnen Sie die Vorteile der `overrides` Schl\\xfcssel des `Theme` verwenden, um potenziell jeden einzelnen von Material-UI in den DOM eingef\\xfcgten Stil zu \\xe4ndern. Weitere Informationen dazu finden Sie im [Themen](/customization/globals/#css) Abschnitt der Dokumentation.\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},aW6l:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return r}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"O8uh\"),i=(0,s.a.createElement)(a.a,{style:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"}},\"inline-style\");function r(){return i}},boQA:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return m}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"PDtE\"),i=t(\"yZEQ\"),r=t(\"O8uh\"),c=t(\"Lqxv\"),l=t(\"uU96\"),d=s.a.createElement,u=Object(i.a)({button:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},buttonBlue:{background:\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",boxShadow:\"0 3px 5px 2px rgba(33, 203, 243, .3)\"}});function m(){var e=u(),n=s.a.useState(\"default\"),t=n[0],o=n[1];return d(s.a.Fragment,null,d(c.a,{control:d(l.a,{checked:\"blue\"===t,onChange:function(e){o(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),d(r.a,{className:Object(a.a)(e.button,\"blue\"===t&&e.buttonBlue)},\"Class name branch\"))}},h4Y4:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mKyP\"),i=t(\"h7Hf\"),r=t(\"O8uh\"),c=s.a.createElement,l=Object(a.a)({overrides:{MuiButton:{root:{fontSize:\"1rem\"}}}}),d=c(i.a,{theme:l},c(r.a,null,\"font-size: 1rem\"));function u(){return d}},hmMg:function(e,n){e.exports=\"import React from 'react';\\nimport ClassNames from 'docs/src/pages/customization/components/ClassNames';\\n\\n// We can use ClassNames over and over.\\nexport default function Component() {\\n  return <ClassNames>Component</ClassNames>;\\n}\\n\"},i4ig:function(e,n){e.exports=\"import React from 'react';\\nimport clsx from 'clsx';\\nimport Button from '@material-ui/core/Button';\\nimport { withStyles, WithStyles } from '@material-ui/core/styles';\\n\\ninterface Props extends WithStyles<typeof styles> {\\n  children?: React.ReactNode;\\n  className?: string;\\n}\\n\\n// We can inject some CSS into the DOM.\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n};\\n\\nfunction ClassNames(props: Props) {\\n  const { classes, children, className, ...other } = props;\\n\\n  return (\\n    <Button className={clsx(classes.root, className)} {...other}>\\n      {children || 'class names'}\\n    </Button>\\n  );\\n}\\n\\nexport default withStyles(styles)(ClassNames);\\n\"},iXJI:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return r}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mC55\"),i=(0,s.a.createElement)(a.default,null,\"Component\");function r(){return i}},ijYl:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n    // $disabled is a reference to the local disabled\\n    // rule within the same style sheet.\\n    // By using &, we increase the specificity.\\n    '&$disabled': {\\n      background: 'rgba(0, 0, 0, 0.12)',\\n      color: 'white',\\n      boxShadow: 'none',\\n    },\\n  },\\n  disabled: {},\\n});\\n\\nexport default function ClassesState() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Button\\n      disabled\\n      classes={{\\n        root: classes.root, // class name, e.g. `root-x`\\n        disabled: classes.disabled, // class name, e.g. `disabled-x`\\n      }}\\n    >\\n      classes state\\n    </Button>\\n  );\\n}\\n\"},jhIm:function(e,n){e.exports=\"import React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\n// Like https://github.com/brunobertolini/styled-by\\nconst styledBy = (property, mapping) => (props) => mapping[props[property]];\\n\\nconst styles = {\\n  root: {\\n    background: styledBy('color', {\\n      default: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    }),\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: styledBy('color', {\\n      default: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n    }),\\n  },\\n};\\n\\nconst StyledButton = withStyles(styles)(({ classes, color, ...other }) => (\\n  <Button className={classes.root} {...other} />\\n));\\n\\nexport default function DynamicCSS() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <StyledButton color={color}>Dynamic CSS</StyledButton>\\n    </React.Fragment>\\n  );\\n}\\n\"},klWL:function(e,n){e.exports='# Customizing components\\n\\n<p class=\"description\">You can easily customize the appearance of a Material-UI component.</p>\\n\\nAs components can be used in different contexts, there are several approaches to this. Going from the narrowest use-case to the broadest, these are:\\n\\n1. [Specific variation for a one-time situation](#1-specific-variation-for-a-one-time-situation)\\n1. [Dynamic variation for a one-time situation](#2-dynamic-variation-for-a-one-time-situation)\\n1. [Specific variation of a component](#3-specific-variation-of-a-component) re-used in different contexts\\n1. [Material Design variations](#4-material-design-variations) such as with the button component\\n1. [Global theme variation](#5-global-theme-variation)\\n\\n## 1. Specific variation for a one-time situation\\n\\nYou might need to change the style of a component for a specific implementation, for which you have the following solutions available:\\n\\n### Overriding styles with class names\\n\\nThe first way to override the style of a component is to use **class names**.\\nEvery component provides a `className` property which is always applied to the root element.\\n\\nThis example uses the [`withStyles()`](/styles/basics/#higher-order-component-api) higher-order\\ncomponent to inject custom styles into the DOM, and to pass the class name to the `ClassNames` component via its `classes` property.\\nYou can choose [any other styling solution](/guides/interoperability/), or even plain CSS to create the styles, but be sure to\\nconsider the [CSS injection order](/styles/advanced/#css-injection-order), as the CSS injected into the DOM\\nby Material-UI to style a component has the highest specificity possible, since the `<link>` is injected at the bottom\\nof the `<head />` to ensure the components always render correctly.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### Overriding styles with classes\\n\\nWhen the `className` property isn\\'t enough, and you need to access deeper elements, you can take advantage of the `classes` object property to customize all the CSS injected by Material-UI for a given component.\\n\\nThe list of classes for each\\ncomponent is documented in the component API page, you should refer to the **CSS section** and **rule name column**.\\nFor instance, you can have a look at the [Button CSS API](/api/button/#css).\\nAlternatively, you can use the [browser dev tools](#using-the-dev-tools).\\n\\nThis example also uses `withStyles()` (see above), but here, `ClassesNesting` is using `Button`\\'s `classes` prop to\\nprovide an object that maps the **names of classes to override** (style rules) to the **CSS class names to apply** (values).\\nThe component\\'s existing classes will continue to be injected, so it is only necessary to provide the specific styles\\nyou wish to add or override.\\n\\nNotice that in addition to the button styling, the button label\\'s capitalization has been changed:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### Overriding styles with global class names\\n\\n[Follow this section](/styles/advanced/#with-material-ui-core).\\n\\n### Using the dev tools\\n\\nThe browser dev tools can save you a lot of time.\\nMaterial-UI\\'s class names [follow a simple pattern](/styles/advanced/#class-names) in development mode:\\n`Mui[component name]-[style rule name]-[UUID]`.\\n\\nLet\\'s go back to the above demo. How can you override the button label?\\n\\n![dev-tools](/static/images/customization/dev-tools.png)\\n\\nUsing the dev tools, you know that you need to target the `Button` component and the `label` style rule:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### Shorthand\\n\\nThe above code example can be condensed by using **the same CSS API** as the child component.\\nIn this example, the `withStyles()` higher-order component is injecting a `classes` property that is used by the [`Button` component](/api/button/#css).\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudo-classes\\n\\nThe components special states, like _hover_, _focus_, _disabled_ and _selected_, are styled with a higher CSS specificity.\\n[Specificity is a weight](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) that is applied to a given CSS declaration.\\n\\nIn order to override the components special states, **you need to increase specificity**.\\nHere is an example with the _disable_ state and the button component using a **pseudo-class** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n/* Increase the specificity */\\n.Button:disabled {\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\nSometimes, you can\\'t use a **pseudo-class** as the state doesn\\'t exist in the platform.\\nLet\\'s take the menu item component and the _selected_ state as an example.\\nAside from accessing nested elements, the `classes` property can be used to customize the special states of Material-UI components:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n/* Increase the specificity */\\n.MenuItem.selected {\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### Why do I need to increase specificity to override one component state?\\n\\nBy design, the CSS specification makes the pseudo-classes increase the specificity.\\nFor consistency, Material-UI increases the specificity of its custom pseudo-classes.\\nThis has one important advantage, it allows you to cherry-pick the state you want to customize.\\n\\n#### Can I use a different API that requires fewer boilerplate?\\n\\nInstead of providing values to the `classes` prop API, you can rely on [the global class names](/styles/advanced/#with-material-ui-core) generated by Material-UI.\\nIt implements all these custom pseudo-classes:\\n\\n| classes key  | Global class name |\\n| :----------- | :---------------- |\\n| checked      | Mui-checked       |\\n| disabled     | Mui-disabled      |\\n| error        | Mui-error         |\\n| focused      | Mui-focused       |\\n| focusVisible | Mui-focusVisible  |\\n| required     | Mui-required      |\\n| expanded     | Mui-expanded      |\\n| selected     | Mui-selected      |\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected {\\n  /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### Use `$ruleName` to reference a local rule within the same style sheet\\n\\nThe [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) plugin (available by default) can make the process of increasing specificity easier.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\ncompiles to:\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f You need to apply the two generated class names (`root` & `disabled`) to the DOM to make it work.\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### Overriding with inline-styles\\n\\nThe second way to override the style of a component is to use the **inline-style** approach.\\nEvery component provides a `style` property.\\nThese properties are always applied to the root element.\\n\\nYou don\\'t have to worry about CSS specificity as the inline-style takes precedence over the regular CSS.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[When should I use inline-style vs classes?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. Dynamic variation for a one-time situation\\n\\nYou have learned how to override the style of a Material-UI component in the previous section.\\nNow, let\\'s see how we can make these overrides dynamic.\\nHere are five alternatives; each has its pros and cons.\\n\\n### Dynamic CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### Class name branch\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS variables\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Inline-styles\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### Theme nesting\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. Specific variation of a component\\n\\nYou might need to create a variation of a component and use it in different contexts, for instance a colorful button on your product page, however you probably want to keep your code [_DRY_](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).\\n\\nThe best approach is to follow option 1 and then take advantage of the composition power of React by exporting your customized component to use wherever you need it.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design variations\\n\\nThe Material Design specification documents different variations of certain components, such as how buttons come in different shapes: [text](https://material.io/design/components/buttons.html#text-button) (formerly \"flat\"), [contained](https://material.io/design/components/buttons.html#contained-button) (formerly \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) and more.\\n\\nMaterial-UI attempts to implement all of these variations. Please refer to the [Supported Components](/getting-started/supported-components/) documentation to find out the current status of all supported Material Design components.\\n\\n## 5. Global theme variation\\n\\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes.\\n\\nThe demos of this section covers how to the change the button\\'s font size.\\n\\n### Theme variables\\n\\nYou can adjust the [theme configuration variables](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### Global CSS override\\n\\nYou can also customize all instances of a component with CSS.\\nComponents expose [global class names](/styles/advanced/#with-material-ui-core) to enable this.\\nIt\\'s very similar to how you would customize Bootstrap.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />;\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### Global theme override\\n\\nYou can take advantage of the `overrides` key of the `theme` to potentially change every single style injected by Material-UI into the DOM.\\nLearn more about it in the [themes section](/customization/globals/#css) of the documentation.\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}\\n'},l6MS:function(e,n){e.exports=\"import React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst useStyles = makeStyles({\\n  button: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  buttonBlue: {\\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n  },\\n});\\n\\nexport default function DynamicClassName() {\\n  const classes = useStyles();\\n  const [color, setColor] = React.useState<string>('default');\\n\\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button\\n        className={clsx(classes.button, {\\n          [classes.buttonBlue]: color === 'blue',\\n        })}\\n      >\\n        {'Class name branch'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},mC55:function(e,n,t){\"use strict\";t.r(n);var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t.n(a),r=t(\"PDtE\"),c=t(\"O8uh\"),l=t(\"XpU0\"),d=i.a.createElement;n.default=Object(l.default)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"}})((function(e){var n=e.classes,t=e.children,a=e.className,i=Object(s.a)(e,[\"classes\",\"children\",\"className\"]);return d(c.a,Object(o.a)({className:Object(r.a)(n.root,a)},i),t||\"class names\")}))},mHiz:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"XpU0\"),i=t(\"O8uh\"),r=(0,s.a.createElement)(Object(a.default)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},label:{textTransform:\"capitalize\"}})(i.a),null,\"classes shorthand\");function c(){return r}},mTXA:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},label:{textTransform:\"capitalize\"}});function l(){var e=c();return r(i.a,{classes:{root:e.root,label:e.label}},\"classes nesting\")}},mYoX:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return u}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mKyP\"),i=t(\"h7Hf\"),r=t(\"O8uh\"),c=s.a.createElement,l=Object(a.a)({overrides:{MuiButton:{root:{fontSize:\"1rem\"}}}}),d=c(i.a,{theme:l},c(r.a,null,\"font-size: 1rem\"));function u(){return d}},pDV1:function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport { blue } from '@material-ui/core/colors';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function DynamicThemeNesting() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  const theme = React.useMemo(() => {\\n    if (color === 'blue') {\\n      return createMuiTheme({\\n        palette: {\\n          secondary: {\\n            main: blue[500],\\n            contrastText: '#fff',\\n          },\\n        },\\n      });\\n    }\\n    return createMuiTheme();\\n  }, [color]);\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <ThemeProvider theme={theme}>\\n        <Button variant=\\\"contained\\\" color=\\\"secondary\\\">\\n          {'Theme nesting'}\\n        </Button>\\n      </ThemeProvider>\\n    </React.Fragment>\\n  );\\n}\\n\"},qFY3:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=t(\"Lqxv\"),c=t(\"uU96\"),l=s.a.createElement,d=Object(a.a)({button:{background:\"linear-gradient(45deg, var(--background-start) 30%, var(--background-end) 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px var(--box-shadow)\"}}),u={\"--background-start\":\"#2196F3\",\"--background-end\":\"#21CBF3\",\"--box-shadow\":\"rgba(33, 203, 243, .3)\"},m={\"--background-start\":\"#FE6B8B\",\"--background-end\":\"#FF8E53\",\"--box-shadow\":\"rgba(255, 105, 135, .3)\"};function p(){var e=d(),n=s.a.useState(m),t=n[0],o=n[1];return l(s.a.Fragment,null,l(r.a,{control:l(c.a,{checked:t===u,onChange:function(e){o(e.target.checked?u:m)},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),l(i.a,{className:e.button,style:t},\"CSS variables\"))}},qnj5:function(e,n){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport clsx from 'clsx';\\nimport Button from '@material-ui/core/Button';\\nimport { withStyles } from '@material-ui/core/styles';\\n\\n// We can inject some CSS into the DOM.\\nconst styles = {\\n  root: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n};\\n\\nfunction ClassNames(props) {\\n  const { classes, children, className, ...other } = props;\\n\\n  return (\\n    <Button className={clsx(classes.root, className)} {...other}>\\n      {children || 'class names'}\\n    </Button>\\n  );\\n}\\n\\nClassNames.propTypes = {\\n  children: PropTypes.node,\\n  classes: PropTypes.object.isRequired,\\n  className: PropTypes.string,\\n};\\n\\nexport default withStyles(styles)(ClassNames);\\n\"},qtym:function(e,n){e.exports=\"# crwdns93132:0crwdne93132:0\\n\\n<p class=\\\"description\\\">crwdns93134:0crwdne93134:0</p>\\n\\ncrwdns93136:0crwdne93136:0 crwdns93138:0crwdne93138:0\\n\\n1. [crwdns93142:0crwdne93142:0](crwdns93140:0crwdne93140:0)\\n2. [crwdns93146:0crwdne93146:0](crwdns93144:0crwdne93144:0)\\n3. crwdns93148:0crwdne93148:0\\n4. crwdns93150:0crwdne93150:0\\n5. [crwdns93154:0crwdne93154:0](crwdns93152:0crwdne93152:0)\\n\\n## crwdns93156:0crwdne93156:0 crwdns93158:0crwdne93158:0\\n\\ncrwdns93160:0crwdne93160:0\\n\\n### crwdns93162:0crwdne93162:0\\n\\ncrwdns93164:0crwdne93164:0 crwdns93166:0crwdne93166:0\\n\\ncrwdns93168:0crwdne93168:0 crwdns93170:0crwdne93170:0\\n\\ncrwdns93172:0crwdne93172:0\\n\\n### crwdns93174:0crwdne93174:0\\n\\ncrwdns93176:0crwdne93176:0\\n\\ncrwdns93178:0crwdne93178:0 crwdns93180:0crwdne93180:0 crwdns93182:0crwdne93182:0\\n\\ncrwdns93184:0crwdne93184:0 crwdns93186:0crwdne93186:0\\n\\ncrwdns93188:0crwdne93188:0\\n\\ncrwdns93190:0crwdne93190:0\\n\\n### crwdns93192:0crwdne93192:0\\n\\ncrwdns93194:0crwdne93194:0\\n\\n### crwdns93196:0crwdne93196:0\\n\\ncrwdns93198:0crwdne93198:0 crwdns93200:0[UUID]crwdne93200:0\\n\\ncrwdns93202:0crwdne93202:0 crwdns93204:0crwdne93204:0\\n\\n![crwdns93208:0crwdne93208:0](crwdns93206:0crwdne93206:0)\\n\\ncrwdns93210:0crwdne93210:0\\n\\n```jsx\\ncrwdns93212:0{{ label: 'my-class-name' }}crwdne93212:0\\n```\\n\\n### crwdns93214:0crwdne93214:0\\n\\ncrwdns93216:0crwdne93216:0 crwdns93218:0crwdne93218:0\\n\\n```jsx\\ncrwdns93220:0{\\n    textTransform: 'capitalize',\\n  }crwdne93220:0\\n```\\n\\ncrwdns93222:0crwdne93222:0\\n\\n### crwdns93224:0crwdne93224:0\\n\\ncrwdns93226:0crwdne93226:0 crwdns93228:0crwdne93228:0\\n\\ncrwdns93230:0crwdne93230:0 crwdns93232:0crwdne93232:0\\n\\n```css\\ncrwdns101164:0crwdne101164:0\\n```\\n\\n```jsx\\ncrwdns93236:0crwdne93236:0\\n```\\n\\ncrwdns93238:0crwdne93238:0 crwdns93240:0crwdne93240:0 crwdns93242:0crwdne93242:0\\n\\n```css\\ncrwdns101166:0crwdne101166:0\\n```\\n\\n```jsx\\ncrwdns93246:0{{ root: 'MenuItem', selected: 'selected' }}crwdne93246:0\\n```\\n\\n#### crwdns93248:0crwdne93248:0\\n\\ncrwdns93250:0crwdne93250:0 crwdns93252:0crwdne93252:0 crwdns93254:0crwdne93254:0\\n\\n#### crwdns93256:0crwdne93256:0\\n\\ncrwdns93258:0crwdne93258:0 crwdns93260:0crwdne93260:0\\n\\n| crwdns93262:0crwdne93262:0 | crwdns93264:0crwdne93264:0 |\\n|:-------------------------- |:-------------------------- |\\n| crwdns93266:0crwdne93266:0 | crwdns93268:0crwdne93268:0 |\\n| crwdns93270:0crwdne93270:0 | crwdns93272:0crwdne93272:0 |\\n| crwdns93274:0crwdne93274:0 | crwdns93276:0crwdne93276:0 |\\n| crwdns93278:0crwdne93278:0 | crwdns93280:0crwdne93280:0 |\\n| crwdns93282:0crwdne93282:0 | crwdns93284:0crwdne93284:0 |\\n| crwdns93286:0crwdne93286:0 | crwdns93288:0crwdne93288:0 |\\n| crwdns93290:0crwdne93290:0 | crwdns93292:0crwdne93292:0 |\\n| crwdns93294:0crwdne93294:0 | crwdns93296:0crwdne93296:0 |\\n\\n\\n```css\\ncrwdns101168:0crwdne101168:0\\n```\\n\\n```jsx\\ncrwdns93300:0crwdne93300:0\\n```\\n\\n### crwdns93302:0$ruleNamecrwdne93302:0\\n\\ncrwdns130122:0crwdne130122:0\\n\\n```js\\ncrwdns93306:0$disabledcrwdnd93306:0{\\n      color: 'white',\\n    }crwdne93306:0\\n```\\n\\ncrwdns93308:0crwdne93308:0\\n\\n```css\\ncrwdns93310:0crwdne93310:0\\n```\\n\\ncrwdns93312:0crwdne93312:0\\n\\n```jsx\\ncrwdns93314:0crwdne93314:0\\n```\\n\\ncrwdns93316:0crwdne93316:0\\n\\n### crwdns93318:0crwdne93318:0\\n\\ncrwdns93320:0crwdne93320:0 crwdns93322:0crwdne93322:0 crwdns93324:0crwdne93324:0\\n\\ncrwdns93326:0crwdne93326:0\\n\\ncrwdns93328:0crwdne93328:0\\n\\n[crwdns93332:0crwdne93332:0](crwdns132822:0crwdne132822:0)\\n\\n## crwdns93334:0crwdne93334:0 crwdns93336:0crwdne93336:0\\n\\ncrwdns93338:0crwdne93338:0 crwdns93340:0crwdne93340:0 crwdns132860:0crwdne132860:0\\n\\n### crwdns93344:0crwdne93344:0\\n\\ncrwdns93346:0crwdne93346:0\\n\\n### crwdns93348:0crwdne93348:0\\n\\ncrwdns93350:0crwdne93350:0\\n\\n### crwdns93352:0crwdne93352:0\\n\\ncrwdns93354:0crwdne93354:0\\n\\n### crwdns93356:0crwdne93356:0\\n\\ncrwdns93358:0crwdne93358:0\\n\\n### crwdns93360:0crwdne93360:0\\n\\ncrwdns93362:0crwdne93362:0\\n\\n## crwdns93364:0crwdne93364:0 crwdns93366:0crwdne93366:0\\n\\ncrwdns93368:0%27crwdne93368:0\\n\\ncrwdns93370:0crwdne93370:0\\n\\ncrwdns93372:0crwdne93372:0\\n\\n## crwdns93374:0crwdne93374:0 crwdns93376:0crwdne93376:0\\n\\ncrwdns93378:0crwdne93378:0\\n\\ncrwdns93380:0crwdne93380:0 crwdns93382:0crwdne93382:0\\n\\n## crwdns93384:0crwdne93384:0 crwdns93386:0crwdne93386:0\\n\\ncrwdns93388:0crwdne93388:0\\n\\ncrwdns93390:0crwdne93390:0\\n\\n### crwdns93392:0crwdne93392:0\\n\\ncrwdns93394:0crwdne93394:0\\n\\n```jsx\\ncrwdns93396:0{\\n      fontSize: '1rem',\\n    }crwdne93396:0\\n```\\n\\ncrwdns93398:0crwdne93398:0\\n\\n### crwdns93400:0crwdne93400:0\\n\\ncrwdns93402:0crwdne93402:0 crwdns101170:0crwdne101170:0 crwdns93406:0crwdne93406:0\\n\\n```jsx\\ncrwdns93408:0crwdne93408:0\\n  crwdns93410:0crwdne93410:0\\n    crwdns93412:0{\\n      fontSize: '1rem',\\n    }crwdne93412:0\\n```\\n\\ncrwdns93414:0crwdne93414:0\\n\\n### crwdns93416:0crwdne93416:0\\n\\ncrwdns93418:0crwdne93418:0 crwdns93420:0crwdne93420:0\\n\\n```jsx\\ncrwdns93422:0{\\n        fontSize: '1rem',\\n      }crwdne93422:0\\n```\\n\\ncrwdns93424:0crwdne93424:0\"},r5BQ:function(e,n){e.exports=\"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst styles: Record<'button' | 'buttonBlue', React.CSSProperties> = {\\n  button: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  buttonBlue: {\\n    background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\\n  },\\n};\\n\\nexport default function DynamicInlineStyle() {\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button\\n        style={{\\n          ...styles.button,\\n          ...(color === 'blue' ? styles.buttonBlue : {}),\\n        }}\\n      >\\n        {'dynamic inline-style'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},rq69:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.a)({root:{background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px rgba(255, 105, 135, .3)\"},label:{textTransform:\"capitalize\"}});function l(){var e=c();return r(i.a,{classes:{root:e.root,label:e.label}},\"classes nesting\")}},uU96:function(e,n,t){\"use strict\";var o=t(\"z3IF\"),s=t(\"2Fjn\"),a=t(\"mXGw\"),i=t(\"PDtE\"),r=t(\"XpU0\"),c=t(\"cYeA\"),l=t(\"rKPb\"),d=t(\"WH4S\"),u=a.createElement,m=a.forwardRef((function(e,n){var t=e.classes,a=e.className,r=e.color,c=void 0===r?\"secondary\":r,m=e.edge,p=void 0!==m&&m,h=e.size,b=void 0===h?\"medium\":h,g=Object(s.a)(e,[\"classes\",\"className\",\"color\",\"edge\",\"size\"]),f=u(\"span\",{className:t.thumb});return u(\"span\",{className:Object(i.a)(t.root,a,{start:t.edgeStart,end:t.edgeEnd}[p],\"small\"===b&&t[\"size\".concat(Object(l.a)(b))])},u(d.a,Object(o.a)({type:\"checkbox\",icon:f,checkedIcon:f,classes:{root:Object(i.a)(t.switchBase,t[\"color\".concat(Object(l.a)(c))]),input:t.input,checked:t.checked,disabled:t.disabled},ref:n},g)),u(\"span\",{className:t.track}))}));n.a=Object(r.default)((function(e){return{root:{display:\"inline-flex\",width:58,height:38,overflow:\"hidden\",padding:12,boxSizing:\"border-box\",position:\"relative\",flexShrink:0,zIndex:0,verticalAlign:\"middle\",\"@media print\":{colorAdjust:\"exact\"}},edgeStart:{marginLeft:-8},edgeEnd:{marginRight:-8},switchBase:{position:\"absolute\",top:0,left:0,zIndex:1,color:\"light\"===e.palette.type?e.palette.grey[50]:e.palette.grey[400],transition:e.transitions.create([\"left\",\"transform\"],{duration:e.transitions.duration.shortest}),\"&$checked\":{transform:\"translateX(20px)\"},\"&$disabled\":{color:\"light\"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},\"&$checked + $track\":{opacity:.5},\"&$disabled + $track\":{opacity:\"light\"===e.palette.type?.12:.1}},colorPrimary:{\"&$checked\":{color:e.palette.primary.main,\"&:hover\":{backgroundColor:Object(c.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),\"@media (hover: none)\":{backgroundColor:\"transparent\"}}},\"&$disabled\":{color:\"light\"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},\"&$checked + $track\":{backgroundColor:e.palette.primary.main},\"&$disabled + $track\":{backgroundColor:\"light\"===e.palette.type?e.palette.common.black:e.palette.common.white}},colorSecondary:{\"&$checked\":{color:e.palette.secondary.main,\"&:hover\":{backgroundColor:Object(c.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),\"@media (hover: none)\":{backgroundColor:\"transparent\"}}},\"&$disabled\":{color:\"light\"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},\"&$checked + $track\":{backgroundColor:e.palette.secondary.main},\"&$disabled + $track\":{backgroundColor:\"light\"===e.palette.type?e.palette.common.black:e.palette.common.white}},sizeSmall:{width:40,height:24,padding:7,\"& $thumb\":{width:16,height:16},\"& $switchBase\":{padding:4,\"&$checked\":{transform:\"translateX(16px)\"}}},checked:{},disabled:{},input:{left:\"-100%\",width:\"300%\"},thumb:{boxShadow:e.shadows[1],backgroundColor:\"currentColor\",width:20,height:20,borderRadius:\"50%\"},track:{height:\"100%\",width:\"100%\",borderRadius:7,zIndex:-1,transition:e.transitions.create([\"opacity\",\"background-color\"],{duration:e.transitions.duration.shortest}),backgroundColor:\"light\"===e.palette.type?e.palette.common.black:e.palette.common.white,opacity:\"light\"===e.palette.type?.38:.3}}}),{name:\"MuiSwitch\"})(m)},vI8u:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"O8uh\"),i=t(\"mKyP\"),r=t(\"h7Hf\"),c=t(\"Lqxv\"),l=t(\"GeB9\"),d=t(\"uU96\"),u=s.a.createElement,m=u(a.a,{variant:\"contained\",color:\"secondary\"},\"Theme nesting\");function p(){var e=s.a.useState(\"default\"),n=e[0],t=e[1],o=s.a.useMemo((function(){return\"blue\"===n?Object(i.a)({palette:{secondary:{main:l.a[500],contrastText:\"#fff\"}}}):Object(i.a)()}),[n]);return u(s.a.Fragment,null,u(c.a,{control:u(d.a,{checked:\"blue\"===n,onChange:function(e){t(e.target.checked?\"blue\":\"default\")},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),u(r.a,{theme:o},m))}},wTtT:function(e,n){e.exports=\"import React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst useStyles = makeStyles({\\n  button: {\\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\\n    borderRadius: 3,\\n    border: 0,\\n    color: 'white',\\n    height: 48,\\n    padding: '0 30px',\\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\\n  },\\n  buttonBlue: {\\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\\n  },\\n});\\n\\nexport default function DynamicClassName() {\\n  const classes = useStyles();\\n  const [color, setColor] = React.useState('default');\\n\\n  const handleChange = (event) => {\\n    setColor(event.target.checked ? 'blue' : 'default');\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={color === 'blue'}\\n            onChange={handleChange}\\n            color=\\\"primary\\\"\\n            value=\\\"dynamic-class-name\\\"\\n          />\\n        }\\n        label=\\\"Blue\\\"\\n      />\\n      <Button\\n        className={clsx(classes.button, {\\n          [classes.buttonBlue]: color === 'blue',\\n        })}\\n      >\\n        {'Class name branch'}\\n      </Button>\\n    </React.Fragment>\\n  );\\n}\\n\"},x9xE:function(e,n){e.exports=\"import React from 'react';\\nimport ClassNames from 'docs/src/pages/customization/components/ClassNames';\\n\\n// We can use ClassNames over and over.\\nexport default function Component() {\\n  return <ClassNames>Component</ClassNames>;\\n}\\n\"},xAth:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return d}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"XpU0\"),i=t(\"O8uh\"),r=s.a.createElement,c=Object(a.default)({\"@global\":{\".MuiButton-root\":{fontSize:\"1rem\"}}})((function(){return null})),l=r(s.a.Fragment,null,r(c,null),r(i.a,null,\"font-size: 1rem\"));function d(){return l}},xhQ0:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return p}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"yZEQ\"),i=t(\"O8uh\"),r=t(\"Lqxv\"),c=t(\"uU96\"),l=s.a.createElement,d=Object(a.a)({button:{background:\"linear-gradient(45deg, var(--background-start) 30%, var(--background-end) 90%)\",borderRadius:3,border:0,color:\"white\",height:48,padding:\"0 30px\",boxShadow:\"0 3px 5px 2px var(--box-shadow)\"}}),u={\"--background-start\":\"#2196F3\",\"--background-end\":\"#21CBF3\",\"--box-shadow\":\"rgba(33, 203, 243, .3)\"},m={\"--background-start\":\"#FE6B8B\",\"--background-end\":\"#FF8E53\",\"--box-shadow\":\"rgba(255, 105, 135, .3)\"};function p(){var e=d(),n=s.a.useState(m),t=n[0],o=n[1];return l(s.a.Fragment,null,l(r.a,{control:l(c.a,{checked:t===u,onChange:function(e){o(e.target.checked?u:m)},color:\"primary\",value:\"dynamic-class-name\"}),label:\"Blue\"}),l(i.a,{className:e.button,style:t},\"CSS variables\"))}},xlwe:function(e,n){e.exports='# Customizing components\\n\\n<p class=\"description\">\\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043b\\u0435\\u0433\\u043a\\u043e \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0438\\u0442\\u044c \\u0432\\u043d\\u0435\\u0448\\u043d\\u0438\\u0439 \\u0432\\u0438\\u0434 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 Material-UI.</p>\\n\\n\\u041f\\u043e\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0443 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u044b \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0432 \\u0440\\u0430\\u0437\\u043d\\u044b\\u0445 \\u043a\\u043e\\u043d\\u0442\\u0435\\u043a\\u0441\\u0442\\u0430\\u0445, \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u043d\\u0435\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u043f\\u043e\\u0434\\u0445\\u043e\\u0434\\u043e\\u0432 \\u043a \\u044d\\u0442\\u043e\\u043c\\u0443. \\u041f\\u0435\\u0440\\u0435\\u0445\\u043e\\u0434\\u044f \\u043e\\u0442 \\u0441\\u0430\\u043c\\u043e\\u0433\\u043e \\u043d\\u0435\\u0440\\u0430\\u0441\\u043f\\u0440\\u043e\\u0441\\u0442\\u0440\\u0430\\u043d\\u0451\\u043d\\u043d\\u043e\\u0433\\u043e \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u0430 \\u043a \\u0441\\u0430\\u043c\\u043e\\u043c\\u0443 \\u0448\\u0438\\u0440\\u043e\\u043a\\u043e \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c\\u043e\\u043c\\u0443, \\u044d\\u0442\\u043e:\\n\\n1. [\\u041a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0434\\u0438\\u043d\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0441\\u043b\\u0443\\u0447\\u0430\\u044f](#1-specific-variation-for-a-one-time-situation)\\n2. [\\u0414\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0434\\u0438\\u043d\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0441\\u043b\\u0443\\u0447\\u0430\\u044f](#2-dynamic-variation-for-a-one-time-situation)\\n3. [\\u041e\\u0441\\u043e\\u0431\\u044b\\u0439 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430](#3-specific-variation-of-a-component) \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u043c\\u044b\\u0439 \\u0432 \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 \\u043a\\u043e\\u043d\\u0442\\u0435\\u043a\\u0441\\u0442\\u0430\\u0445\\n4. [Material Design \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u044b](#4-material-design-variations) \\u043a\\u0430\\u043a \\u0443 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u043a\\u043d\\u043e\\u043f\\u043a\\u0430\\n5. [\\u0413\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043c\\u044b](#5-global-theme-variation)\\n\\n## 1. \\u041a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0434\\u0438\\u043d\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0441\\u043b\\u0443\\u0447\\u0430\\u044f\\n\\n\\u0412\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e, \\u0432\\u0430\\u043c \\u043f\\u0440\\u0438\\u0434\\u0435\\u0442\\u0441\\u044f \\u0438\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u0441\\u0442\\u0438\\u043b\\u044c \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0432 \\u043a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u043e\\u043c \\u043c\\u0435\\u0441\\u0442\\u0435. \\u0414\\u043b\\u044f \\u044d\\u0442\\u043e\\u0433\\u043e \\u0432\\u0430\\u043c \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u044e\\u0442\\u0441\\u044f \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0438\\u0435 \\u043c\\u0435\\u0442\\u043e\\u0434\\u044b:\\n\\n### \\u041f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432\\n\\n\\u041f\\u0435\\u0440\\u0432\\u044b\\u0439 \\u0441\\u043f\\u043e\\u0441\\u043e\\u0431 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044f \\u0441\\u0442\\u0438\\u043b\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 - \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c **\\u0438\\u043c\\u0435\\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432**. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e `className` \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0435 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u044f\\u0435\\u0442\\u0441\\u044f \\u043a \\u043a\\u043e\\u0440\\u043d\\u0435\\u0432\\u043e\\u043c\\u0443 \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442\\u0443.\\n\\n\\u0412 \\u044d\\u0442\\u043e\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0435 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u0432\\u044b\\u0441\\u0448\\u0435\\u0433\\u043e-\\u043f\\u043e\\u0440\\u044f\\u0434\\u043a\\u0430 [`withStyles()`](/styles/basics/#higher-order-component-api) \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0434\\u043b\\u044f \\u0432\\u043d\\u0435\\u0434\\u0440\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0445 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u0432 DOM \\u0438 \\u043f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0447\\u0438 \\u0438\\u043c\\u0435\\u043d\\u0438 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0443 `ClassNames` \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0435\\u0433\\u043e \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e `classes`. \\u0414\\u043b\\u044f \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043e\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f [\\u043b\\u044e\\u0431\\u044b\\u043c \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u044b\\u043c \\u0441\\u0442\\u0438\\u043b\\u0435\\u0432\\u044b\\u043c \\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0435\\u043c](/guides/interoperability/), \\u0432\\u043f\\u043b\\u043e\\u0442\\u044c \\u0434\\u043e \\u043e\\u0431\\u044b\\u0447\\u043d\\u043e\\u0433\\u043e CSS, \\u043d\\u043e \\u0432\\u044b \\u043e\\u0431\\u044f\\u0437\\u0430\\u043d\\u044b \\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u0442\\u044c \\u0432\\u043e \\u0432\\u043d\\u0438\\u043c\\u0430\\u043d\\u0438\\u0435 [\\u043f\\u043e\\u0440\\u044f\\u0434\\u043e\\u043a \\u0432\\u043d\\u0435\\u0434\\u0440\\u0435\\u043d\\u0438\\u044f CSS](/styles/advanced/#css-injection-order), \\u043f\\u043e\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0443 CSS \\u0432\\u043d\\u0435\\u0434\\u0440\\u0435\\u043d\\u043d\\u044b\\u0439 \\u0432 DOM \\u0447\\u0435\\u0440\\u0435\\u0437 Material-UI \\u0438\\u043c\\u0435\\u0435\\u0442 \\u043c\\u0430\\u043a\\u0441\\u0438\\u043c\\u0430\\u043b\\u044c\\u043d\\u043e \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u0443\\u044e \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c, \\u0442\\u0430\\u043a \\u043a\\u0430\\u043a `<link>` \\u0432\\u043d\\u0435\\u0434\\u0440\\u044f\\u0435\\u0442\\u0441\\u044f \\u0432 \\u0441\\u0430\\u043c\\u043e\\u043c \\u043a\\u043e\\u043d\\u0446\\u0435 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u0430 `<head />` \\u0434\\u043b\\u044f \\u0433\\u0430\\u0440\\u0430\\u043d\\u0442\\u0438\\u0438 \\u043a\\u043e\\u0440\\u0440\\u0435\\u043a\\u0442\\u043d\\u043e\\u0433\\u043e \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u0432.\\n\\n{{\"demo\": \"pages/customization/components/ClassNames.js\"}}\\n\\n### Overriding styles with classes\\n\\n\\u041a\\u043e\\u0433\\u0434\\u0430 ` className ` \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430 \\u043d\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0442\\u043e\\u0447\\u043d\\u043e, \\u0438 \\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u0435\\u043d \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f \\u043a\\u043e \\u0432\\u043b\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u043c \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442\\u0430\\u043c, \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043e\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e\\u043c \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430 `classes` \\u0434\\u043b\\u044f \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0438 \\u0432\\u0441\\u0435\\u0445 CSS, \\u0432\\u043d\\u0435\\u0434\\u0440\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0447\\u0435\\u0440\\u0435\\u0437 Material-UI \\u0434\\u043b\\u044f \\u0434\\u0430\\u043d\\u043d\\u043e\\u0433\\u043e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430.\\n\\n\\u0421\\u043f\\u0438\\u0441\\u043e\\u043a \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432, \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u044b\\u0445 \\u0434\\u043b\\u044f \\u043a\\u0430\\u0436\\u0434\\u043e\\u0433\\u043e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d \\u043d\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0435 API-\\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430\\u0446\\u0438\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430. \\u041e\\u0431\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435\\u0441\\u044c \\u043a \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u0443 ** CSS ** \\u0438 \\u0438\\u0449\\u0438\\u0442\\u0435 \\u0432 **\\u0441\\u0442\\u043e\\u043b\\u0431\\u0446\\u0435 \\u0441 \\u0438\\u043c\\u0435\\u043d\\u0435\\u043c \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430**. \\u0414\\u043b\\u044f \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0430 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u0437\\u0433\\u043b\\u044f\\u043d\\u0443\\u0442\\u044c \\u043d\\u0430 [Button CSS API](/api/button/#css). \\u041a\\u0440\\u043e\\u043c\\u0435 \\u0442\\u043e\\u0433\\u043e, \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043e\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f [\\u0432\\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u043d\\u044b\\u043c\\u0438 \\u0432 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440 \\u0438\\u043d\\u0441\\u0442\\u0440\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430\\u043c\\u0438 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\\u0430](#using-the-dev-tools).\\n\\n\\u0412 \\u044d\\u0442\\u043e\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0435 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f ` withStyles() ` (\\u0441\\u043c. \\u0432\\u044b\\u0448\\u0435), \\u043d\\u043e \\u0442\\u0435\\u043f\\u0435\\u0440\\u044c ` ClassesNesting ` \\u043f\\u0440\\u0438\\u0441\\u0432\\u0430\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0443 `classes` \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u0442\\u0430 `Button` \\u043e\\u0431\\u044c\\u0435\\u043a\\u0442 \\u0441\\u043e\\u043f\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u044e\\u0449\\u0438\\u0439 **\\u0438\\u043c\\u0435\\u043d\\u0430 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u044f\\u0435\\u043c\\u044b\\u0445 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432** (\\u0441\\u0442\\u0438\\u043b\\u0435\\u0432\\u044b\\u0435 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430) \\u0441 **\\u0438\\u043c\\u0435\\u043d\\u0430\\u043c \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u043c\\u044b\\u0445 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432 CSS ** (\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f\\u043c\\u0438). \\u0421\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u044e\\u0449\\u0438\\u0435 \\u043a\\u043b\\u0430\\u0441\\u0441\\u044b \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u043f\\u043e \\u043f\\u0440\\u0435\\u0436\\u043d\\u0435\\u043c\\u0443 \\u0432\\u043d\\u0435\\u0434\\u0440\\u044f\\u0442\\u044c\\u0441\\u044f, \\u043f\\u043e\\u044d\\u0442\\u043e\\u043c\\u0443 \\u043d\\u0435\\u043e\\u0431\\u0445\\u043e\\u0434\\u0438\\u043c\\u043e \\u0443\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u0442\\u0435 \\u0441\\u0442\\u0438\\u043b\\u0438, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0432\\u044b \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0434\\u043e\\u0431\\u0430\\u0432\\u0438\\u0442\\u044c \\u0438\\u043b\\u0438 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0438\\u0442\\u044c.\\n\\n\\u041e\\u0431\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435 \\u0432\\u043d\\u0438\\u043c\\u0430\\u043d\\u0438\\u0435, \\u0447\\u0442\\u043e \\u0432 \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u043a \\u0441\\u0442\\u0438\\u043b\\u044e \\u043a\\u043d\\u043e\\u043f\\u043a\\u0438, \\u0441\\u0442\\u0438\\u043b\\u044c \\u0442\\u0435\\u043a\\u0441\\u0442\\u0430 \\u043a\\u043d\\u043e\\u043f\\u043a\\u0438 \\u0431\\u044b\\u043b \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d \\u043d\\u0430 \\u0441\\u0442\\u0438\\u043b\\u044c \\u0441 \\u0437\\u0430\\u0433\\u043b\\u0430\\u0432\\u043d\\u044b\\u043c\\u0438 \\u0431\\u0443\\u043a\\u0432\\u0430\\u043c\\u0438:\\n\\n{{\"demo\": \"pages/customization/components/ClassesNesting.js\"}}\\n\\n### \\u041f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0433\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432\\n\\n[\\u041f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0438 \\u0432 \\u044d\\u0442\\u043e\\u043c \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u0435](/styles/advanced/#with-material-ui-core).\\n\\n### \\u0418\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0438\\u043d\\u0441\\u0442\\u0440\\u0443\\u043c\\u0435\\u043d\\u0442\\u043e\\u0432 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\\u0430\\n\\n\\u0418\\u043d\\u0441\\u0442\\u0440\\u0443\\u043c\\u0435\\u043d\\u0442\\u044b \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\\u0430 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0441\\u044d\\u043a\\u043e\\u043d\\u043e\\u043c\\u0438\\u0442\\u044c \\u0432\\u0430\\u043c \\u043c\\u043d\\u043e\\u0433\\u043e \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438. \\u0412 \\u0440\\u0435\\u0436\\u0438\\u043c\\u0435 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u043a\\u0438 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432 Material-UI [\\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0442 \\u043f\\u0440\\u043e\\u0441\\u0442\\u043e\\u043c\\u0443 \\u0448\\u0430\\u0431\\u043b\\u043e\\u043d\\u0443](/styles/advanced/#class-names): ` Mui[\\u0438\\u043c\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430]-[\\u0438\\u043c\\u044f \\u0441\\u0442\\u0438\\u043b\\u0435\\u0432\\u043e\\u0433\\u043e \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430]-[UUID]`.\\n\\n\\u0412\\u0435\\u0440\\u043d\\u0435\\u043c\\u0441\\u044f \\u043a \\u0443\\u043f\\u043e\\u043c\\u044f\\u043d\\u0443\\u0442\\u043e\\u043c\\u0443 \\u0432\\u044b\\u0448\\u0435 \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0443. \\u041a\\u0430\\u043a \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0438\\u0442\\u044c \\u0442\\u0435\\u043a\\u0441\\u0442 \\u043a\\u043d\\u043e\\u043f\\u043a\\u0438?\\n\\n![\\u0418\\u043d\\u0441\\u0442\\u0440\\u0443\\u043c\\u0435\\u043d\\u0442\\u044b \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\\u0430](/static/images/customization/dev-tools.png)\\n\\n\\u0418\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u044f \\u0438\\u043d\\u0441\\u0442\\u0440\\u0443\\u043c\\u0435\\u043d\\u0442\\u044b \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\\u0430, \\u0432\\u044b \\u0437\\u043d\\u0430\\u0435\\u0442\\u0435, \\u0447\\u0442\\u043e \\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u043d\\u043e \\u043d\\u0430\\u0446\\u0435\\u043b\\u0438\\u0442\\u044c\\u0441\\u044f \\u043d\\u0430 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 `Button` \\u0438 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0432\\u043e\\u0435 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e `label`:\\n\\n```jsx\\n<Button classes={{ label: \\'my-class-name\\' }} />\\n```\\n\\n### \\u041a\\u0440\\u0430\\u0442\\u043a\\u0430\\u044f \\u0437\\u0430\\u043f\\u0438\\u0441\\u044c\\n\\n\\u041f\\u0440\\u0438\\u0432\\u0435\\u0434\\u0435\\u043d\\u043d\\u044b\\u0439 \\u0432\\u044b\\u0448\\u0435 \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440 \\u043a\\u043e\\u0434\\u0430 \\u043c\\u043e\\u0436\\u0435\\u0442 \\u0431\\u044b\\u0442\\u044c \\u0441\\u043e\\u043a\\u0440\\u0430\\u0449\\u0435\\u043d \\u0437\\u0430 \\u0441\\u0447\\u0435\\u0442 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f **\\u0442\\u043e\\u0433\\u043e \\u0436\\u0435 CSS API ** \\u0432 \\u043a\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435 \\u0434\\u043e\\u0447\\u0435\\u0440\\u043d\\u0435\\u0433\\u043e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430. \\u0412 \\u044d\\u0442\\u043e\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0435 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u0432\\u044b\\u0441\\u0448\\u0435\\u0433\\u043e \\u043f\\u043e\\u0440\\u044f\\u0434\\u043a\\u0430 `withStyles()` \\u0432\\u043d\\u0435\\u0434\\u0440\\u044f\\u0435\\u0442 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e `classes`, \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c\\u043e\\u0435 \\u0437\\u0430\\u0442\\u0435\\u043c [\\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u043c `Button` ](/api/button/#css).\\n\\n```jsx\\nconst StyledButton = withStyles({\\n  root: {\\n    background: \\'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\\',\\n    borderRadius: 3,\\n    border: 0,\\n    color: \\'white\\',\\n    height: 48,\\n    padding: \\'0 30px\\',\\n    boxShadow: \\'0 3px 5px 2px rgba(255, 105, 135, .3)\\',\\n  },\\n  label: {\\n    textTransform: \\'capitalize\\',\\n  },\\n})(Button);\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesShorthand.js\"}}\\n\\n### Pseudo-classes\\n\\n\\u041e\\u0441\\u043e\\u0431\\u044b\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442, \\u0442\\u0430\\u043a\\u0438\\u0435 \\u043a\\u0430\\u043a * \\u043d\\u0430\\u0432\\u0435\\u0434\\u0435\\u043d\\u0438\\u0435 (hover)*, * \\u0444\\u043e\\u043a\\u0443\\u0441 *, *disabled* \\u0438 *selected*, \\u0441\\u0442\\u0438\\u043b\\u0438\\u0437\\u043e\\u0432\\u0430\\u043d\\u044b \\u043f\\u0440\\u0438 \\u043f\\u043e\\u043c\\u043e\\u0449\\u0438 CSS \\u0441 \\u0431\\u043e\\u043b\\u0435\\u0435 \\u0432\\u044b\\u0441\\u043e\\u043a\\u043e\\u0439 \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c\\u044e. [\\u0421\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c - \\u044d\\u0442\\u043e \\u0432\\u0435\\u0441\\u043e\\u0432\\u043e\\u0439 \\u043a\\u043e\\u044d\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043d\\u0442](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity) \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u044f\\u0435\\u043c\\u044b\\u0439 \\u043a \\u0434\\u0430\\u043d\\u043d\\u043e\\u0439 \\u0434\\u0435\\u043a\\u043b\\u0430\\u0440\\u0430\\u0446\\u0438\\u0438 CSS.\\n\\n\\u0427\\u0442\\u043e\\u0431\\u044b \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0438\\u0442\\u044c \\u043e\\u0441\\u043e\\u0431\\u044b\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u0432, **\\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u043d\\u043e \\u0443\\u0432\\u0435\\u043b\\u0438\\u0447\\u0438\\u0442\\u044c \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c**. \\u0412\\u043e\\u0442 \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440 \\u0441 *disable* \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435\\u043c \\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u043c \\u043a\\u043d\\u043e\\u043f\\u043a\\u0430 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u044e\\u0449\\u0438\\u043c **\\u043f\\u0441\\u0435\\u0432\\u0434\\u043e\\u043a\\u043b\\u0430\\u0441\\u0441** (`:disabled`):\\n\\n```css\\n.Button {\\n  color: black;\\n}\\n.Button:disabled { /* Increase the specificity */\\n  color: white;\\n}\\n```\\n\\n```jsx\\n<Button disabled className=\"Button\">\\n```\\n\\n\\u0418\\u043d\\u043e\\u0433\\u0434\\u0430 \\u0432\\u044b \\u043d\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c **\\u043f\\u0441\\u0435\\u0432\\u0434\\u043e-\\u043a\\u043b\\u0430\\u0441\\u0441**, \\u0442\\u0430\\u043a \\u043a\\u0430\\u043a \\u044d\\u0442\\u043e \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435 \\u0432 \\u043f\\u043b\\u0430\\u0442\\u0444\\u043e\\u0440\\u043c\\u0435 \\u043e\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442. \\u0412 \\u043a\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435 \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0430 \\u043c\\u043e\\u0436\\u043d\\u043e \\u043f\\u0440\\u0438\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u043f\\u0443\\u043d\\u043a\\u0442 \\u043c\\u0435\\u043d\\u044e \\u0438 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435 *\\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043e*. \\u041f\\u043e\\u043c\\u0438\\u043c\\u043e \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u0430 \\u043a \\u0432\\u043b\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u043c \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442\\u0430\\u043c, \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e `classes` \\u043c\\u043e\\u0436\\u043d\\u043e \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0434\\u043b\\u044f \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0438 \\u0441\\u043f\\u0435\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0445 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u0432 Material-UI:\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected classes={{ root: \\'MenuItem\\', selected: \\'selected\\' }}>\\n```\\n\\n#### \\u041f\\u043e\\u0447\\u0435\\u043c\\u0443 \\u044f \\u0434\\u043e\\u043b\\u0436\\u0435\\u043d \\u043f\\u043e\\u0432\\u044b\\u0448\\u0430\\u0442\\u044c \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c \\u0434\\u043b\\u044f \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044f \\u043e\\u0442\\u0434\\u0435\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u044f \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430?\\n\\n\\u0421\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u043a\\u0430\\u0446\\u0438\\u044f CSS, \\u043f\\u043e \\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044e, \\u043e\\u0431\\u044f\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442 \\u043f\\u0441\\u0435\\u0432\\u0434\\u043e\\u043a\\u043b\\u0430\\u0441\\u0441\\u044b \\u043f\\u043e\\u0432\\u044b\\u0448\\u0430\\u0442\\u044c \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c. \\u0414\\u043b\\u044f \\u0441\\u043e\\u0433\\u043b\\u0430\\u0441\\u043e\\u0432\\u0430\\u043d\\u043d\\u043e\\u0441\\u0442\\u0438 Material-UI \\u043f\\u043e\\u0432\\u044b\\u0448\\u0430\\u0435\\u0442 \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u044c \\u0441\\u0432\\u043e\\u0438\\u0445 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0445 \\u043f\\u0441\\u0435\\u0432\\u0434\\u043e\\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432. \\u042d\\u0442\\u043e \\u0438\\u043c\\u0435\\u0435\\u0442 \\u043e\\u0434\\u043d\\u043e \\u0432\\u0430\\u0436\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0435\\u0438\\u043c\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043e: \\u043e\\u043d\\u043e \\u043f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u0435\\u0442 \\u0432\\u044b\\u0431\\u0440\\u0430\\u0442\\u044c \\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0451\\u043d\\u043d\\u043e\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435, \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0435 \\u0432\\u044b \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c.\\n\\n#### \\u041c\\u043e\\u0433\\u0443 \\u043b\\u0438 \\u044f \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0434\\u0440\\u0443\\u0433\\u043e\\u0435 API, \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0435 \\u0442\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442 \\u043c\\u0435\\u043d\\u044c\\u0448\\u0435 \\u0448\\u0430\\u0431\\u043b\\u043e\\u043d\\u043e\\u0432?\\n\\n\\u0412\\u043c\\u0435\\u0441\\u0442\\u043e \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u044f \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0439 API \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430 `classes`, \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043f\\u043e\\u043b\\u043e\\u0436\\u0438\\u0442\\u044c\\u0441\\u044f \\u043d\\u0430 [ \\u0433\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0438\\u043c\\u0435\\u043d\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u043e\\u0432 ](/styles/advanced/#with-material-ui-core) \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u0443\\u0435\\u0442\\u0441\\u044f Material-UI. \\u041e\\u043d\\u043e \\u0440\\u0435\\u0430\\u043b\\u0438\\u0437\\u0443\\u0435\\u0442 \\u0432\\u0441\\u0435 \\u044d\\u0442\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0435 \\u043f\\u0441\\u0435\\u0432\\u0434\\u043e\\u043a\\u043b\\u0430\\u0441\\u0441\\u044b:\\n\\n| classes key  | Global class name |\\n|:------------ |:----------------- |\\n| checked      | Mui-checked       |\\n| disabled     | Mui-disabled      |\\n| error        | Mui-error         |\\n| focused      | Mui-focused       |\\n| focusVisible | Mui-focusVisible  |\\n| required     | Mui-required      |\\n| expanded     | Mui-expanded      |\\n| selected     | Mui-selected      |\\n\\n\\n```css\\n.MenuItem {\\n  color: black;\\n}\\n.MenuItem.Mui-selected { /* Increase the specificity */\\n  color: blue;\\n}\\n```\\n\\n```jsx\\n<MenuItem selected className=\"MenuItem\">\\n```\\n\\n### \\u0418\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 `$ruleName` \\u0434\\u043b\\u044f \\u0441\\u0441\\u044b\\u043b\\u043a\\u0438 \\u043d\\u0430 \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e \\u0432 \\u0442\\u043e\\u0439 \\u0436\\u0435 \\u0442\\u0430\\u0431\\u043b\\u0438\\u0446\\u0435 \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439\\n\\n\\u041f\\u043b\\u0430\\u0433\\u0438\\u043d [jss-nested](https://github.com/cssinjs/jss/tree/master/packages/jss-plugin-nested) (\\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u044b\\u0439 \\u043f\\u043e \\u0443\\u043c\\u043e\\u043b\\u0447\\u0430\\u043d\\u0438\\u044e) \\u043f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u0435\\u0442 \\u0443\\u043f\\u0440\\u043e\\u0441\\u0442\\u0438\\u0442\\u044c \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441 \\u043f\\u043e\\u0432\\u044b\\u0448\\u0435\\u043d\\u0438\\u044f \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438.\\n\\n```js\\nconst styles = {\\n  root: {\\n    \\'&$disabled\\': {\\n      color: \\'white\\',\\n    },\\n  },\\n  disabled: {},\\n};\\n```\\n\\n\\u043a\\u043e\\u043c\\u043f\\u0438\\u043b\\u0438\\u0440\\u0443\\u0435\\u0442\\u0441\\u044f \\u0432:\\n\\n```css\\n.root-x.disable-x {\\n  color: white;\\n}\\n```\\n\\n\\u26a0\\ufe0f \\ufe0f \\u0427\\u0442\\u043e\\u0431\\u044b \\u044d\\u0442\\u043e \\u0441\\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u043b\\u043e, \\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u043d\\u043e \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043a DOM \\u043e\\u0431\\u0430 \\u0441\\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0445 \\u0438\\u043c\\u0435\\u043d\\u0438 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430 (`root` & `disabled`).\\n\\n```jsx\\n<Button\\n  disabled\\n  classes={{\\n    root: classes.root, // class name, e.g. `root-x`\\n    disabled: classes.disabled, // class name, e.g. `disabled-x`\\n  }}\\n>\\n```\\n\\n{{\"demo\": \"pages/customization/components/ClassesState.js\"}}\\n\\n### \\u041f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e \\u0432\\u0441\\u0442\\u0440\\u0430\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0445 (inline) \\u0441\\u0442\\u0438\\u043b\\u0435\\u0439\\n\\n\\u0412\\u0442\\u043e\\u0440\\u043e\\u0439 \\u0441\\u043f\\u043e\\u0441\\u043e\\u0431 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0438\\u0442\\u044c \\u0441\\u0442\\u0438\\u043b\\u044c \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u2013 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u043f\\u043e\\u0434\\u0445\\u043e\\u0434 **\\u0432\\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u0441\\u0442\\u0438\\u043b\\u044f**. \\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u043e `style`. \\u042d\\u0442\\u0438 \\u0441\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u044f\\u044e\\u0442\\u0441\\u044f \\u043a \\u043a\\u043e\\u0440\\u043d\\u0435\\u0432\\u043e\\u043c\\u0443 \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442\\u0443.\\n\\n\\u0412\\u0430\\u043c \\u043d\\u0435 \\u043d\\u0443\\u0436\\u043d\\u043e \\u0431\\u0435\\u0441\\u043f\\u043e\\u043a\\u043e\\u0438\\u0442\\u044c\\u0441\\u044f \\u043e \\u0441\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u0447\\u043d\\u043e\\u0441\\u0442\\u0438 CSS, \\u0442\\u0430\\u043a \\u043a\\u0430\\u043a \\u0432\\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u043d\\u044b\\u0439 \\u0441\\u0442\\u0438\\u043b\\u044c \\u0438\\u043c\\u0435\\u0435\\u0442 \\u043f\\u0440\\u0438\\u043e\\u0440\\u0438\\u0442\\u0435\\u0442 \\u043d\\u0430\\u0434 \\u043e\\u0431\\u044b\\u0447\\u043d\\u044b\\u043c CSS.\\n\\n{{\"demo\": \"pages/customization/components/InlineStyle.js\"}}\\n\\n[\\u041a\\u043e\\u0433\\u0434\\u0430 \\u044f \\u0434\\u043e\\u043b\\u0436\\u0435\\u043d \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u0441\\u0442\\u0440\\u0430\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0439 \\u0441\\u0442\\u0438\\u043b\\u044c, \\u0430 \\u043a\\u043e\\u0433\\u0434\\u0430 \\u043a\\u043b\\u0430\\u0441\\u0441\\u044b?](/getting-started/faq/#when-should-i-use-inline-style-vs-css)\\n\\n## 2. \\u0414\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0435\\u0434\\u0438\\u043d\\u0438\\u0447\\u043d\\u043e\\u0433\\u043e \\u0441\\u043b\\u0443\\u0447\\u0430\\u044f\\n\\nYou have learned how to override the style of a Material-UI component in the previous section. \\u0422\\u0435\\u043f\\u0435\\u0440\\u044c \\u0434\\u0430\\u0432\\u0430\\u0439\\u0442\\u0435 \\u043f\\u043e\\u0441\\u043c\\u043e\\u0442\\u0440\\u0438\\u043c, \\u043a\\u0430\\u043a \\u043c\\u044b \\u043c\\u043e\\u0436\\u0435\\u043c \\u0441\\u0434\\u0435\\u043b\\u0430\\u0442\\u044c \\u044d\\u0442\\u0438 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044f \\u0434\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u043c\\u0438. Here are five alternatives; each has its pros and cons.\\n\\n### \\u0414\\u0438\\u043d\\u0430\\u043c\\u0438\\u0447\\u0435\\u0441\\u043a\\u0438\\u0439 CSS\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSS.js\"}}\\n\\n### \\u041e\\u0442\\u0432\\u0435\\u0442\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0438\\u043c\\u0435\\u043d\\u0438 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0430\\n\\n{{\"demo\": \"pages/customization/components/DynamicClassName.js\"}}\\n\\n### CSS \\u043f\\u0435\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435\\n\\n{{\"demo\": \"pages/customization/components/DynamicCSSVariables.js\"}}\\n\\n### Inline-styles\\n\\n{{\"demo\": \"pages/customization/components/DynamicInlineStyle.js\"}}\\n\\n### \\u0412\\u043b\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0442\\u0435\\u043c\\u044b\\n\\n{{\"demo\": \"pages/customization/components/DynamicThemeNesting.js\"}}\\n\\n## 3. \\u041e\\u0441\\u043e\\u0431\\u044b\\u0439 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430\\n\\n\\u0412\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u0430\\u043c \\u043f\\u043e\\u0442\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442\\u0441\\u044f \\u0441\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0438 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0435\\u0433\\u043e \\u0432 \\u0440\\u0430\\u0437\\u043d\\u044b\\u0445 \\u043a\\u043e\\u043d\\u0442\\u0435\\u043a\\u0441\\u0442\\u0430\\u0445, \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440 \\u0440\\u0430\\u0441\\u043a\\u0440\\u0430\\u0448\\u0435\\u043d\\u043d\\u0443\\u044e \\u043a\\u043d\\u043e\\u043f\\u043a\\u0443 \\u043d\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043e \\u0442\\u043e\\u0432\\u0430\\u0440\\u0430, \\u043d\\u043e \\u0432\\u044b, \\u0432\\u0435\\u0440\\u043e\\u044f\\u0442\\u043d\\u043e, \\u0437\\u0430\\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c \\u0441\\u0432\\u043e\\u0439 \\u043a\\u043e\\u0434 [*\\u043a\\u043e\\u043c\\u043f\\u0430\\u043a\\u0442\\u043d\\u044b\\u043c*](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).\\n\\n\\u041d\\u0430\\u0438\\u043b\\u0443\\u0447\\u0448\\u0438\\u0439 \\u043f\\u043e\\u0434\\u0445\\u043e\\u0434 \\u0441\\u043e\\u0441\\u0442\\u043e\\u0438\\u0442 \\u0432 \\u0442\\u043e\\u043c, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0441\\u043b\\u0435\\u0434\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u0443 1, \\u0430 \\u0437\\u0430\\u0442\\u0435\\u043c \\u0432\\u043e\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f \\u043f\\u0440\\u0435\\u0438\\u043c\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0430\\u043c\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u0437\\u0438\\u0446\\u0438\\u0438 React, \\u044d\\u043a\\u0441\\u043f\\u043e\\u0440\\u0442\\u0438\\u0440\\u0443\\u044f \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u0434\\u043b\\u044f \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f \\u0442\\u0430\\u043c, \\u0433\\u0434\\u0435 \\u043e\\u043d \\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u0435\\u043d.\\n\\n{{\"demo\": \"pages/customization/components/Component.js\", \"hideEditButton\": true}}\\n\\n## 4. Material Design \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u044b\\n\\n\\u0421\\u043f\\u0435\\u0446\\u0438\\u0444\\u0438\\u043a\\u0430\\u0446\\u0438\\u044f Material Design \\u0434\\u043e\\u043f\\u0443\\u0441\\u043a\\u0430\\u0435\\u0442 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u0432 \\u0432 \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0445 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u0430\\u0445. \\u0422\\u0430\\u043a, \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u043a\\u043d\\u043e\\u043f\\u043a\\u0438 \\u0440\\u0435\\u0430\\u043b\\u0438\\u0437\\u043e\\u0432\\u0430\\u043d\\u044b \\u0432 \\u0440\\u0430\\u0437\\u043d\\u044b\\u0445 \\u0444\\u043e\\u0440\\u043c\\u0430\\u0445: [text](https://material.io/design/components/buttons.html#text-button) (\\u043f\\u0440\\u0435\\u0436\\u0434\\u0435 \"flat\"), [contained](https://material.io/design/components/buttons.html#contained-button) (\\u043f\\u0440\\u0435\\u0436\\u0434\\u0435 \"raised\"), [FAB](https://material.io/design/components/buttons-floating-action-button.html) \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435.\\n\\nMaterial-UI \\u0441\\u0442\\u0430\\u0440\\u0430\\u0435\\u0442\\u0441\\u044f \\u0440\\u0435\\u0430\\u043b\\u0438\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u0441\\u0435 \\u044d\\u0442\\u0438 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u044b. \\u041f\\u043e\\u0436\\u0430\\u043b\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043e\\u0431\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435\\u0441\\u044c \\u043a \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u0443 \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430\\u0446\\u0438\\u0438 [\\u041f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0435 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u044b](/getting-started/supported-components/), \\u0447\\u0442\\u043e\\u0431\\u044b \\u0443\\u0437\\u043d\\u0430\\u0442\\u044c \\u0442\\u0435\\u043a\\u0443\\u0449\\u0435\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u0432\\u0441\\u0435\\u0445 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u043e\\u0432 Material Design.\\n\\n## 5. \\u0413\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043c\\u044b\\n\\nIn order to promote consistency between components, and manage the user interface appearance as a whole, Material-UI provides a mechanism to apply global changes.\\n\\nThe demos of this section covers how to the change the button\\'s font size.\\n\\n### \\u041d\\u0430\\u0441\\u0442\\u0440\\u0430\\u0438\\u0432\\u0430\\u0435\\u043c\\u044b\\u0435 \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u044b \\u0442\\u0435\\u043c\\u044b\\n\\nYou can adjust the [theme configuration variables](/customization/theming/#theme-configuration-variables).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    button: {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/ThemeVariables.js\"}}\\n\\n### \\u0413\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 CSS\\n\\n\\u0412\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0438\\u0442\\u044c \\u0432\\u0441\\u0435 \\u044d\\u043a\\u0437\\u0435\\u043c\\u043f\\u043b\\u044f\\u0440\\u044b \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e CSS. Components expose [global class names](/styles/advanced/#with-material-ui-core) to enable this. \\u042d\\u0442\\u043e \\u043e\\u0447\\u0435\\u043d\\u044c \\u043f\\u043e\\u0445\\u043e\\u0436\\u0435 \\u043d\\u0430 \\u043d\\u0430\\u0441\\u0442\\u0440\\u043e\\u0439\\u043a\\u0443 Bootstrap.\\n\\n```jsx\\nconst GlobalCss = withStyles({\\n  // @global is handled by jss-plugin-global.\\n  \\'@global\\': {\\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\\n    \\'.MuiButton-root\\': {\\n      fontSize: \\'1rem\\',\\n    },\\n  },\\n})(() => null);\\n\\n// \\u2026\\n\\n<GlobalCss />\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalCssOverride.js\", \"iframe\": true, \"height\": 70}}\\n\\n### \\u0413\\u043b\\u043e\\u0431\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043c\\u044b\\n\\n\\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043e\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c\\u0441\\u044f `\\u043f\\u0435\\u0440\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435\\u043c` \\u043a\\u043b\\u044e\\u0447\\u0435\\u0432\\u044b\\u0445 \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u043e\\u0432 `\\u0442\\u0435\\u043c\\u044b`, \\u0447\\u0442\\u043e\\u0431\\u044b \\u043f\\u043e\\u0442\\u0435\\u043d\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u043e \\u0438\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043b\\u044e\\u0431\\u043e\\u0439 \\u0441\\u0442\\u0438\\u043b\\u044c, \\u0432\\u043d\\u0435\\u0434\\u0440\\u0435\\u043d\\u043d\\u044b\\u0439 Material-UI \\u0432 DOM. \\u0414\\u0430\\u043b\\u044c\\u043d\\u0435\\u0439\\u0448\\u0438\\u0435 \\u043f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0438 \\u043e\\u0431 \\u044d\\u0442\\u043e\\u043c \\u0432 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043b\\u0435 \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430\\u0446\\u0438\\u0438 [\\u0442\\u0435\\u043c\\u044b](/customization/globals/#css).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  overrides: {\\n    MuiButton: {\\n      root: {\\n        fontSize: \\'1rem\\',\\n      },\\n    },\\n  },\\n});\\n```\\n\\n{{\"demo\": \"pages/customization/components/GlobalThemeOverride.js\"}}'},y9Xa:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return r}));var o=t(\"mXGw\"),s=t.n(o),a=t(\"mC55\"),i=(0,s.a.createElement)(a.default,null,\"Component\");function r(){return i}},zpLS:function(e,n,t){\"use strict\";t.d(n,\"b\",(function(){return a}));var o=t(\"mXGw\"),s=o.createContext();function a(){return o.useContext(s)}n.a=s}},[[\"16do\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}