{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{\"9oqA\":function(e,a,n){\"use strict\";n.r(a),n.d(a,\"default\",(function(){return l}));var s=n(\"mXGw\"),t=n.n(s),o=n(\"e+1t\"),p=n(\"kVtE\"),r=t.a.createElement,i=n(\"bUD7\");function l(e){var a=e.docs;return r(o.a,{docs:a})}l.getInitialProps=function(){var e=Object(p.a)({pageFilename:\"api/card-header\",requireRaw:i});return{demos:e.demos,docs:e.docs}}},bUD7:function(e,a,n){var s={\"./card-header.md\":\"dpe4\"};function t(e){var a=o(e);return n(a)}function o(e){if(!n.o(s,e)){var a=new Error(\"Cannot find module '\"+e+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}return s[e]}t.keys=function(){return Object.keys(s)},t.resolve=o,e.exports=t,t.id=\"bUD7\"},dpe4:function(e,a){e.exports='---\\nfilename: /packages/material-ui/src/CardHeader/CardHeader.js\\n---\\n\\n\\x3c!--- This documentation is automatically generated, do not try to edit it. --\\x3e\\n\\n# CardHeader API\\n\\n<p class=\"description\">The API documentation of the CardHeader React component. Learn more about the props and the CSS customization points.</p>\\n\\n## Import\\n\\n```js\\nimport CardHeader from \\'@material-ui/core/CardHeader\\';\\n// or\\nimport { CardHeader } from \\'@material-ui/core\\';\\n```\\n\\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\\n\\n\\n\\n## Component name\\n\\nThe `MuiCardHeader` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\\n\\n## Props\\n\\n| Name | Type | Default | Description |\\n|:-----|:-----|:--------|:------------|\\n| <span class=\"prop-name\">action</span> | <span class=\"prop-type\">node</span> |  | The action to display in the card header. |\\n| <span class=\"prop-name\">avatar</span> | <span class=\"prop-type\">node</span> |  | The Avatar for the Card Header. |\\n| <span class=\"prop-name\">classes</span> | <span class=\"prop-type\">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\\n| <span class=\"prop-name\">component</span> | <span class=\"prop-type\">elementType</span> | <span class=\"prop-default\">\\'div\\'</span> | The component used for the root node. Either a string to use a HTML element or a component. |\\n| <span class=\"prop-name\">disableTypography</span> | <span class=\"prop-type\">bool</span> | <span class=\"prop-default\">false</span> | If `true`, `subheader` and `title` won\\'t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the `title` text, and optional `subheader` text with the Typography component. |\\n| <span class=\"prop-name\">subheader</span> | <span class=\"prop-type\">node</span> |  | The content of the component. |\\n| <span class=\"prop-name\">subheaderTypographyProps</span> | <span class=\"prop-type\">object</span> |  | These props will be forwarded to the subheader (as long as disableTypography is not `true`). |\\n| <span class=\"prop-name\">title</span> | <span class=\"prop-type\">node</span> |  | The content of the Card Title. |\\n| <span class=\"prop-name\">titleTypographyProps</span> | <span class=\"prop-type\">object</span> |  | These props will be forwarded to the title (as long as disableTypography is not `true`). |\\n\\nThe `ref` is forwarded to the root element.\\n\\nAny other props supplied will be provided to the root element (native element).\\n\\n## CSS\\n\\n| Rule name | Global class | Description |\\n|:-----|:-------------|:------------|\\n| <span class=\"prop-name\">root</span> | <span class=\"prop-name\">.MuiCardHeader-root</span> | Styles applied to the root element.\\n| <span class=\"prop-name\">avatar</span> | <span class=\"prop-name\">.MuiCardHeader-avatar</span> | Styles applied to the avatar element.\\n| <span class=\"prop-name\">action</span> | <span class=\"prop-name\">.MuiCardHeader-action</span> | Styles applied to the action element.\\n| <span class=\"prop-name\">content</span> | <span class=\"prop-name\">.MuiCardHeader-content</span> | Styles applied to the content wrapper element.\\n| <span class=\"prop-name\">title</span> | <span class=\"prop-name\">.MuiCardHeader-title</span> | Styles applied to the title Typography element.\\n| <span class=\"prop-name\">subheader</span> | <span class=\"prop-name\">.MuiCardHeader-subheader</span> | Styles applied to the subheader Typography element.\\n\\nYou can override the style of the component thanks to one of these customization points:\\n\\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\\n- With a theme and an [`overrides` property](/customization/globals/#css).\\n\\nIf that\\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/CardHeader/CardHeader.js) for more detail.\\n\\n## Demos\\n\\n- [Cards](/components/cards/)\\n\\n'},\"jX+f\":function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/api-docs/card-header\",function(){return n(\"9oqA\")}])}},[[\"jX+f\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18]]]);"}