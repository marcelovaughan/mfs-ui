{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{\"+EqP\":function(e,t){e.exports=\"import React from 'react';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nconst options = ['Option 1', 'Option 2'];\\n\\nexport default function CustomInputAutocomplete() {\\n  return (\\n    <Autocomplete\\n      id=\\\"custom-input-demo\\\"\\n      options={options}\\n      renderInput={(params) => (\\n        <div ref={params.InputProps.ref}>\\n          <input style={{ width: 200 }} type=\\\"text\\\" {...params.inputProps} />\\n        </div>\\n      )}\\n    />\\n  );\\n}\\n\"},\"/Y1t\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return u}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"F7gL\"),l=n(\"UiZO\"),s=n(\"yZEQ\"),c=n(\"nx5Z\"),d=o.a.createElement,p=Object(s.a)((function(e){return{root:{width:500,\"& > * + *\":{marginTop:e.spacing(3)}}}}));function u(){var e=p();return d(\"div\",{className:e.root},d(l.a,{multiple:!0,id:\"tags-standard\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13]],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"standard\",label:\"Multiple values\",placeholder:\"Favorites\"}))}}),d(l.a,{multiple:!0,id:\"tags-outlined\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13]],filterSelectedOptions:!0,renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"outlined\",label:\"filterSelectedOptions\",placeholder:\"Favorites\"}))}}),d(l.a,{multiple:!0,id:\"tags-filled\",options:y.map((function(e){return e.title})),defaultValue:[y[13].title],freeSolo:!0,renderTags:function(e,t){return e.map((function(e,n){return d(r.a,Object(a.a)({variant:\"outlined\",label:e},t({index:n})))}))},renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"filled\",label:\"freeSolo\",placeholder:\"Favorites\"}))}}))}var y=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"/ZHH\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"0tNF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"F7gL\"),s=n(\"nx5Z\"),c=n(\"UiZO\"),d=r.a.createElement;function p(){var e=[u[6]],t=r.a.useState([].concat(e,[u[13]])),n=t[0],o=t[1];return d(c.a,{multiple:!0,id:\"fixed-tags-demo\",value:n,onChange:function(t,n){o([].concat(e,Object(i.a)(n.filter((function(t){return-1===e.indexOf(t)})))))},options:u,getOptionLabel:function(e){return e.title},renderTags:function(t,n){return t.map((function(t,i){return d(l.a,Object(a.a)({label:t.title},n({index:i}),{disabled:-1!==e.indexOf(t)}))}))},style:{width:500},renderInput:function(e){return d(s.a,Object(a.a)({},e,{label:\"Fixed tag\",variant:\"outlined\",placeholder:\"Favorites\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"/lVO\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    label: {\\n      display: 'block',\\n    },\\n    input: {\\n      width: 200,\\n    },\\n    listbox: {\\n      width: 200,\\n      margin: 0,\\n      padding: 0,\\n      zIndex: 1,\\n      position: 'absolute',\\n      listStyle: 'none',\\n      backgroundColor: theme.palette.background.paper,\\n      overflow: 'auto',\\n      maxHeight: 200,\\n      border: '1px solid rgba(0,0,0,.25)',\\n      '& li[data-focus=\\\"true\\\"]': {\\n        backgroundColor: '#4a8df6',\\n        color: 'white',\\n        cursor: 'pointer',\\n      },\\n      '& li:active': {\\n        backgroundColor: '#2977f5',\\n        color: 'white',\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function UseAutocomplete() {\\n  const classes = useStyles();\\n  const {\\n    getRootProps,\\n    getInputLabelProps,\\n    getInputProps,\\n    getListboxProps,\\n    getOptionProps,\\n    groupedOptions,\\n  } = useAutocomplete({\\n    id: 'use-autocomplete-demo',\\n    options: top100Films,\\n    getOptionLabel: (option) => option.title,\\n  });\\n\\n  return (\\n    <div>\\n      <div {...getRootProps()}>\\n        <label className={classes.label} {...getInputLabelProps()}>\\n          useAutocomplete\\n        </label>\\n        <input className={classes.input} {...getInputProps()} />\\n      </div>\\n      {groupedOptions.length > 0 ? (\\n        <ul className={classes.listbox} {...getListboxProps()}>\\n          {groupedOptions.map((option, index) => (\\n            <li {...getOptionProps({ option, index })}>{option.title}</li>\\n          ))}\\n        </ul>\\n      ) : null}\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},\"/sXH\":function(e,t){e.exports=\"// *https://www.registers.service.gov.uk/registers/country/use-the-api*\\nimport fetch from 'cross-fetch';\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nfunction sleep(delay = 0) {\\n  return new Promise((resolve) => {\\n    setTimeout(resolve, delay);\\n  });\\n}\\n\\nexport default function Asynchronous() {\\n  const [open, setOpen] = React.useState(false);\\n  const [options, setOptions] = React.useState([]);\\n  const loading = open && options.length === 0;\\n\\n  React.useEffect(() => {\\n    let active = true;\\n\\n    if (!loading) {\\n      return undefined;\\n    }\\n\\n    (async () => {\\n      const response = await fetch(\\n        'https://country.register.gov.uk/records.json?page-size=5000',\\n      );\\n\\n      await sleep(1e3); // For demo purposes.\\n      const countries = await response.json();\\n\\n      if (active) {\\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\\n      }\\n    })();\\n\\n    return () => {\\n      active = false;\\n    };\\n  }, [loading]);\\n\\n  React.useEffect(() => {\\n    if (!open) {\\n      setOptions([]);\\n    }\\n  }, [open]);\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"asynchronous-demo\\\"\\n      style={{ width: 300 }}\\n      open={open}\\n      onOpen={() => {\\n        setOpen(true);\\n      }}\\n      onClose={() => {\\n        setOpen(false);\\n      }}\\n      getOptionSelected={(option, value) => option.name === value.name}\\n      getOptionLabel={(option) => option.name}\\n      options={options}\\n      loading={loading}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Asynchronous\\\"\\n          variant=\\\"outlined\\\"\\n          InputProps={{\\n            ...params.InputProps,\\n            endAdornment: (\\n              <React.Fragment>\\n                {loading ? (\\n                  <CircularProgress color=\\\"inherit\\\" size={20} />\\n                ) : null}\\n                {params.InputProps.endAdornment}\\n              </React.Fragment>\\n            ),\\n          }}\\n        />\\n      )}\\n    />\\n  );\\n}\\n\"},\"0EEt\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function ComboBox() {\\n  return (\\n    <Autocomplete\\n      id=\\\"combo-box-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Combo box\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},\"0USc\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function Playground() {\\n  const defaultProps = {\\n    options: top100Films,\\n    getOptionLabel: (option: FilmOptionType) => option.title,\\n  };\\n  const flatProps = {\\n    options: top100Films.map((option) => option.title),\\n  };\\n  const [value, setValue] = React.useState<FilmOptionType | null>(null);\\n\\n  return (\\n    <div style={{ width: 300 }}>\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"debug\\\"\\n        debug\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"debug\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-close-on-select\\\"\\n        disableCloseOnSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableCloseOnSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"clear-on-escape\\\"\\n        clearOnEscape\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"clearOnEscape\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-clearable\\\"\\n        disableClearable\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableClearable\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"include-input-in-list\\\"\\n        includeInputInList\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"includeInputInList\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...flatProps}\\n        id=\\\"flat-demo\\\"\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"flat\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"controlled-demo\\\"\\n        value={value}\\n        onChange={(event: any, newValue: FilmOptionType | null) => {\\n          setValue(newValue);\\n        }}\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"controlled\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-complete\\\"\\n        autoComplete\\n        includeInputInList\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoComplete\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-list-wrap\\\"\\n        disableListWrap\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableListWrap\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"open-on-focus\\\"\\n        openOnFocus\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"openOnFocus\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-highlight\\\"\\n        autoHighlight\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoHighlight\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-select\\\"\\n        autoSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disabled\\\"\\n        disabled\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disabled\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-portal\\\"\\n        disablePortal\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disablePortal\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"blur-on-select\\\"\\n        blurOnSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"blurOnSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"clear-on-blur\\\"\\n        clearOnBlur\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"clearOnBlur\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"select-on-focus\\\"\\n        selectOnFocus\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"selectOnFocus\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\ninterface FilmOptionType {\\n  title: string;\\n  year: number;\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},\"2oU4\":function(e,t){e.exports='---\\ntitle: Autocomplete React component\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocomplete\\n\\n<p class=\"description\">The autocomplete is a normal text input enhanced by a panel of suggested options.</p>\\n\\nThe widget is useful for setting the value of a single-line textbox in one of two types of scenarios:\\n\\n1. The value for the textbox must be chosen from a predefined set of allowed values, e.g., a location field must contain a valid location name: [combo box](#combo-box).\\n2. The textbox may contain any arbitrary value, but it is advantageous to suggest possible values to the user, e.g., a search field may suggest similar or previous searches to save the user time: [free solo](#free-solo).\\n\\nIt\\'s meant to be an improved version of the \"react-select\" and \"downshift\" packages.\\n\\n## Combo box\\n\\nThe value must be chosen from a predefined set of allowed values.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### Playground\\n\\nEach of the following examples demonstrate one feature of the Autocomplete component.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### Country select\\n\\nChoose one of the 248 countries.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Controllable states\\n\\nThe component has two states that can be controlled:\\n\\n1. the \"value\" state with the `value`/`onChange` props combination. This state represents the value selected by the user, for instance when pressing <kbd>Enter</kbd>.\\n2. the \"input value\" state with the `inputValue`/`onInputChange` props combination. This state represents the value displayed in the textbox.\\n\\n> \\u26a0\\ufe0f These two state are isolated, they should be controlled independently.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nSet `freeSolo` to true so the textbox can contain any arbitrary value.\\n\\n### Search input\\n\\nThe prop is designed to cover the primary use case of a **search input** with suggestions, e.g. Google search or react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nIf you intend to use this mode for a [combo box](#combo-box) like experience (an enhanced version of a select element) we recommend setting:\\n\\n- `selectOnFocus` to helps the user clear the selected value.\\n- `clearOnBlur` to helps the user to enter a new value.\\n- `handleHomeEndKeys` to move focus inside the popup with the <kbd>Home</kbd> and <kbd>End</kbd> keys.\\n- A last option, for instance `Add \"YOUR SEARCH\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nYou could also display a dialog when the user wants to add a new value.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Grouped\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Disabled options\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nFor advanced customization use cases, we expose a `useAutocomplete()` hook.\\nIt accepts almost the same options as the Autocomplete component minus all the props\\nrelated to the rendering of JSX.\\nThe Autocomplete component uses this hook internally.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5 kB gzipped](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Customized hook\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nHead to the [customization](#customization) section for an example with the `Autocomplete` component instead of the hook.\\n\\n## Asynchronous requests\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Google Maps place\\n\\nA customized UI for Google Maps Places Autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nFor this demo, we need to load the [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial) API.\\n\\n> \\u26a0\\ufe0f Before you can start using the Google Maps JavaScript API, you must sign up and create a billing account.\\n\\n## Multiple values\\n\\nAlso known as tags, the user is allowed to enter more than one value.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Fixed options\\n\\nIn the event that you need to lock certain tag so that they can\\'t be removed in the interface, you can set the chips disabled.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Checkboxes\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limit tags\\n\\nYou can use the `limitTags` prop to limit the number of displayed options when not focused.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## Sizes\\n\\nFancy smaller inputs? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customization\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input.\\nThe first argument of this render prop contains props that you need to forward.\\nPay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nThis demo reproduces the GitHub\\'s label picker:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nHead to the [Customized hook](#customized-hook) section for a customization example with the `useAutocomplete` hook instead of the component.\\n\\n## Highlights\\n\\nThe following demo relies on [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Custom filter\\n\\nThe component exposes a factory to create a filter method that can provided to the `filterOptions` prop.\\nYou can use it to change the default option filter behavior.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### Arguments\\n\\n1. `config` (_Object_ [optional]):\\n\\n- `config.ignoreAccents` (_Boolean_ [optional]): Defaults to `true`. Remove diacritics.\\n- `config.ignoreCase` (_Boolean_ [optional]): Defaults to `true`. Lowercase everything.\\n- `config.limit` (_Number_ [optional]): Default to null. Limit the number of suggested options to be shown. For example, if `config.limit` is `100`, only the first `100` matching options are shown. It can be useful if a lot of options match and virtualization wasn\\'t set up.\\n- `config.matchFrom` (_\\'any\\' | \\'start\\'_ [optional]): Defaults to `\\'any\\'`.\\n- `config.stringify` (_Func_ [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.\\n- `config.trim` (_Boolean_ [optional]): Defaults to `false`. Remove trailing spaces.\\n\\n#### Returns\\n\\n`filterOptions`: the returned filter method can be provided directly to the `filterOptions` prop of the `Autocomplete` component, or the parameter of the same name for the hook.\\n\\nIn the following demo, the options need to start with the query prefix:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: (option) => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />;\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### Advanced\\n\\nFor richer filtering mechanisms, like fuzzy matching, it\\'s recommended to look at [match-sorter](https://github.com/kentcdodds/match-sorter). For instance:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />;\\n```\\n\\n## Virtualization\\n\\nSearch within 10,000 randomly generated options. The list is virtualized thanks to [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## Limitations\\n\\n### autocomplete/autofill\\n\\nThe browsers have heuristics to help the users fill the form inputs.\\nHowever, it can harm the UX of the component.\\n\\nBy default, the component disable the **autocomplete** feature (remembering what the user has typed for a given field in a previous session) with the `autoComplete=\"off\"` attribute.\\n\\nHowever, in addition to remembering past entered values, the browser might also propose **autofill** suggestions (saved login, address, or payment details).\\nIn the event you want the avoid autofill, you can try the following:\\n\\n- Name the input without leaking any information the browser can use. e.g. `id=\"field1\"` instead of `id=\"country\"`. If you leave the id empty, the component uses a random id.\\n- Set `autoComplete=\"new-password\"`:\\n  ```jsx\\n  <TextField\\n    {...params}\\n    inputProps={{\\n      ...params.inputProps,\\n      autoComplete: \\'new-password\\',\\n    }}\\n  />\\n  ```\\n\\n### iOS VoiceOver\\n\\nVoiceOver on iOS Safari doesn\\'t support the `aria-owns` attribute very well.\\nYou can work around the issue with the `disablePortal` prop.\\n\\n### ListboxComponent\\n\\nIf you provide a custom `ListboxComponent` prop, you need to make sure that the intended scroll container has the `role` attribute set to `listbox`. This ensures the correct behavior of the scroll, for example when using the keyboard to navigate.\\n\\n## Accessibility\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nWe encourage the usage of a label for the textbox.\\nThe component implements the WAI-ARIA authoring practices.\\n'},\"2pmQ\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"mXGw\"),i=n.n(a),o=n(\"e+1t\"),r=n(\"kVtE\"),l=i.a.createElement,s=n(\"p2Bs\"),c=n(\"AFQV\");function d(e){var t=e.demos,n=e.docs;return l(o.a,{demos:t,docs:n,requireDemo:s})}s.keys().map(s),d.getInitialProps=function(){var e=Object(r.a)({pageFilename:\"components/autocomplete\",requireRaw:c});return{demos:e.demos,docs:e.docs}}},\"2pyj\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\n\\nimport React from 'react';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\\n\\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\\\"small\\\" />;\\nconst checkedIcon = <CheckBoxIcon fontSize=\\\"small\\\" />;\\n\\nexport default function CheckboxesTags() {\\n  return (\\n    <Autocomplete\\n      multiple\\n      id=\\\"checkboxes-tags-demo\\\"\\n      options={top100Films}\\n      disableCloseOnSelect\\n      getOptionLabel={(option) => option.title}\\n      renderOption={(option, { selected }) => (\\n        <React.Fragment>\\n          <Checkbox\\n            icon={icon}\\n            checkedIcon={checkedIcon}\\n            style={{ marginRight: 8 }}\\n            checked={selected}\\n          />\\n          {option.title}\\n        </React.Fragment>\\n      )}\\n      style={{ width: 500 }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          variant=\\\"outlined\\\"\\n          label=\\\"Checkboxes\\\"\\n          placeholder=\\\"Favorites\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n];\\n\"},\"3JPx\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"8ET1\"),i=n.n(a),o=n(\"z3IF\"),r=n(\"mXGw\"),l=n.n(r),s=n(\"nx5Z\"),c=n(\"UiZO\"),d=l.a.createElement;function p(){return d(c.a,{id:\"disabled-options-demo\",options:u,getOptionDisabled:function(e){return e===u[0]||e===u[2]},style:{width:300},renderInput:function(e){return d(s.a,Object(o.a)({},e,{label:\"Disabled options\",variant:\"outlined\"}))}})}var u=i()(new Array(48)).map((function(e,t){return\"\".concat(t<20?\"0\":\"\").concat(Math.floor(t/2),\":\").concat(t%2===0?\"00\":\"30\")}))},\"3M1A\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return v}));var a=n(\"mXGw\"),i=n.n(a),o=n(\"yZEQ\"),r=n(\"WLtd\"),l=n(\"cYeA\"),s=n(\"LMpM\"),c=n(\"oRPM\"),d=n(\"WQxJ\"),p=n(\"DiDJ\"),u=n(\"J6vt\"),y=n(\"UiZO\"),h=n(\"7QLS\"),m=n(\"c3Nm\"),f=i.a.createElement,g=Object(o.a)((function(e){return Object(r.a)({root:{width:221,fontSize:13},button:{fontSize:13,width:\"100%\",textAlign:\"left\",paddingBottom:8,color:\"#586069\",fontWeight:600,\"&:hover,&:focus\":{color:\"#0366d6\"},\"& span\":{width:\"100%\"},\"& svg\":{width:16,height:16}},tag:{marginTop:3,height:20,padding:\".15em 4px\",fontWeight:600,lineHeight:\"15px\",borderRadius:2},popper:{border:\"1px solid rgba(27,31,35,.15)\",boxShadow:\"0 3px 12px rgba(27,31,35,.15)\",borderRadius:3,width:300,zIndex:1,fontSize:13,color:\"#586069\",backgroundColor:\"#f6f8fa\"},header:{borderBottom:\"1px solid #e1e4e8\",padding:\"8px 10px\",fontWeight:600},inputBase:{padding:10,width:\"100%\",borderBottom:\"1px solid #dfe2e5\",\"& input\":{borderRadius:4,backgroundColor:e.palette.common.white,padding:8,transition:e.transitions.create([\"border-color\",\"box-shadow\"]),border:\"1px solid #ced4da\",fontSize:14,\"&:focus\":{boxShadow:\"\".concat(Object(l.fade)(e.palette.primary.main,.25),\" 0 0 0 0.2rem\"),borderColor:e.palette.primary.main}}},paper:{boxShadow:\"none\",margin:0,color:\"#586069\",fontSize:13},option:{minHeight:\"auto\",alignItems:\"flex-start\",padding:8,'&[aria-selected=\"true\"]':{backgroundColor:\"transparent\"},'&[data-focus=\"true\"]':{backgroundColor:e.palette.action.hover}},popperDisablePortal:{position:\"relative\"},iconSelected:{width:17,height:17,marginRight:5,marginLeft:-2},color:{width:14,height:14,flexShrink:0,borderRadius:3,marginRight:8,marginTop:2},text:{flexGrow:1},close:{opacity:.6,width:18,height:18}})})),b=f(\"span\",null,\"Labels\"),T=f(d.a,null),S=f(\"br\",null);function v(){var e=g(),t=i.a.useState(null),n=t[0],a=t[1],o=i.a.useState([w[1],w[11]]),r=o[0],l=o[1],d=i.a.useState([]),v=d[0],A=d[1],O=Object(s.a)(),I=Boolean(n),L=I?\"github-label\":void 0;return f(i.a.Fragment,null,f(\"div\",{className:e.root},f(h.a,{disableRipple:!0,className:e.button,\"aria-describedby\":L,onClick:function(e){A(r),a(e.currentTarget)}},b,T),r.map((function(t){return f(\"div\",{key:t.name,className:e.tag,style:{backgroundColor:t.color,color:O.palette.getContrastText(t.color)}},t.name)}))),f(c.a,{id:L,open:I,anchorEl:n,placement:\"bottom-start\",className:e.popper},f(\"div\",{className:e.header},\"Apply labels to this pull request\"),f(y.a,{open:!0,onClose:function(e,t){\"toggleInput\"!==t&&(l(v),n&&n.focus(),a(null))},multiple:!0,classes:{paper:e.paper,option:e.option,popperDisablePortal:e.popperDisablePortal},value:v,onChange:function(e,t,n){\"keydown\"===e.type&&\"Backspace\"===e.key&&\"remove-option\"===n||A(t)},disableCloseOnSelect:!0,disablePortal:!0,renderTags:function(){return null},noOptionsText:\"No labels\",renderOption:function(t,n){var a=n.selected;return f(i.a.Fragment,null,f(u.a,{className:e.iconSelected,style:{visibility:a?\"visible\":\"hidden\"}}),f(\"span\",{className:e.color,style:{backgroundColor:t.color}}),f(\"div\",{className:e.text},t.name,S,t.description),f(p.a,{className:e.close,style:{visibility:a?\"visible\":\"hidden\"}}))},options:[].concat(w).sort((function(e,t){var n=r.indexOf(e);n=-1===n?r.length+w.indexOf(e):n;var a=r.indexOf(t);return n-(a=-1===a?r.length+w.indexOf(t):a)})),getOptionLabel:function(e){return e.name},renderInput:function(t){return f(m.a,{ref:t.InputProps.ref,inputProps:t.inputProps,autoFocus:!0,className:e.inputBase})}})))}var w=[{name:\"good first issue\",color:\"#7057ff\",description:\"Good for newcomers\"},{name:\"help wanted\",color:\"#008672\",description:\"Extra attention is needed\"},{name:\"priority: critical\",color:\"#b60205\",description:\"\"},{name:\"priority: high\",color:\"#d93f0b\",description:\"\"},{name:\"priority: low\",color:\"#0e8a16\",description:\"\"},{name:\"priority: medium\",color:\"#fbca04\",description:\"\"},{name:\"status: can't reproduce\",color:\"#fec1c1\",description:\"\"},{name:\"status: confirmed\",color:\"#215cea\",description:\"\"},{name:\"status: duplicate\",color:\"#cfd3d7\",description:\"This issue or pull request already exists\"},{name:\"status: needs information\",color:\"#fef2c0\",description:\"\"},{name:\"status: wont do/fix\",color:\"#eeeeee\",description:\"This will not be worked on\"},{name:\"type: bug\",color:\"#d73a4a\",description:\"Something isn't working\"},{name:\"type: discussion\",color:\"#d4c5f9\",description:\"\"},{name:\"type: documentation\",color:\"#006b75\",description:\"\"},{name:\"type: enhancement\",color:\"#84b6eb\",description:\"\"},{name:\"type: epic\",color:\"#3e4b9e\",description:\"A theme of work that contain sub-tasks\"},{name:\"type: feature request\",color:\"#fbca04\",description:\"New feature or request\"},{name:\"type: question\",color:\"#d876e3\",description:\"Further information is requested\"}]},\"4QBA\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport {\\n  useTheme,\\n  fade,\\n  makeStyles,\\n  Theme,\\n  createStyles,\\n} from '@material-ui/core/styles';\\nimport Popper from '@material-ui/core/Popper';\\nimport SettingsIcon from '@material-ui/icons/Settings';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport DoneIcon from '@material-ui/icons/Done';\\nimport Autocomplete, {\\n  AutocompleteCloseReason,\\n} from '@material-ui/lab/Autocomplete';\\nimport ButtonBase from '@material-ui/core/ButtonBase';\\nimport InputBase from '@material-ui/core/InputBase';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: 221,\\n      fontSize: 13,\\n    },\\n    button: {\\n      fontSize: 13,\\n      width: '100%',\\n      textAlign: 'left',\\n      paddingBottom: 8,\\n      color: '#586069',\\n      fontWeight: 600,\\n      '&:hover,&:focus': {\\n        color: '#0366d6',\\n      },\\n      '& span': {\\n        width: '100%',\\n      },\\n      '& svg': {\\n        width: 16,\\n        height: 16,\\n      },\\n    },\\n    tag: {\\n      marginTop: 3,\\n      height: 20,\\n      padding: '.15em 4px',\\n      fontWeight: 600,\\n      lineHeight: '15px',\\n      borderRadius: 2,\\n    },\\n    popper: {\\n      border: '1px solid rgba(27,31,35,.15)',\\n      boxShadow: '0 3px 12px rgba(27,31,35,.15)',\\n      borderRadius: 3,\\n      width: 300,\\n      zIndex: 1,\\n      fontSize: 13,\\n      color: '#586069',\\n      backgroundColor: '#f6f8fa',\\n    },\\n    header: {\\n      borderBottom: '1px solid #e1e4e8',\\n      padding: '8px 10px',\\n      fontWeight: 600,\\n    },\\n    inputBase: {\\n      padding: 10,\\n      width: '100%',\\n      borderBottom: '1px solid #dfe2e5',\\n      '& input': {\\n        borderRadius: 4,\\n        backgroundColor: theme.palette.common.white,\\n        padding: 8,\\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\\n        border: '1px solid #ced4da',\\n        fontSize: 14,\\n        '&:focus': {\\n          boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\n          borderColor: theme.palette.primary.main,\\n        },\\n      },\\n    },\\n    paper: {\\n      boxShadow: 'none',\\n      margin: 0,\\n      color: '#586069',\\n      fontSize: 13,\\n    },\\n    option: {\\n      minHeight: 'auto',\\n      alignItems: 'flex-start',\\n      padding: 8,\\n      '&[aria-selected=\\\"true\\\"]': {\\n        backgroundColor: 'transparent',\\n      },\\n      '&[data-focus=\\\"true\\\"]': {\\n        backgroundColor: theme.palette.action.hover,\\n      },\\n    },\\n    popperDisablePortal: {\\n      position: 'relative',\\n    },\\n    iconSelected: {\\n      width: 17,\\n      height: 17,\\n      marginRight: 5,\\n      marginLeft: -2,\\n    },\\n    color: {\\n      width: 14,\\n      height: 14,\\n      flexShrink: 0,\\n      borderRadius: 3,\\n      marginRight: 8,\\n      marginTop: 2,\\n    },\\n    text: {\\n      flexGrow: 1,\\n    },\\n    close: {\\n      opacity: 0.6,\\n      width: 18,\\n      height: 18,\\n    },\\n  }),\\n);\\n\\nexport default function GitHubLabel() {\\n  const classes = useStyles();\\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\\n  const [value, setValue] = React.useState<LabelType[]>([\\n    labels[1],\\n    labels[11],\\n  ]);\\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\\n  const theme = useTheme();\\n\\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\\n    setPendingValue(value);\\n    setAnchorEl(event.currentTarget);\\n  };\\n\\n  const handleClose = (\\n    event: React.ChangeEvent<{}>,\\n    reason: AutocompleteCloseReason,\\n  ) => {\\n    if (reason === 'toggleInput') {\\n      return;\\n    }\\n    setValue(pendingValue);\\n    if (anchorEl) {\\n      anchorEl.focus();\\n    }\\n    setAnchorEl(null);\\n  };\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'github-label' : undefined;\\n\\n  return (\\n    <React.Fragment>\\n      <div className={classes.root}>\\n        <ButtonBase\\n          disableRipple\\n          className={classes.button}\\n          aria-describedby={id}\\n          onClick={handleClick}\\n        >\\n          <span>Labels</span>\\n          <SettingsIcon />\\n        </ButtonBase>\\n        {value.map((label) => (\\n          <div\\n            key={label.name}\\n            className={classes.tag}\\n            style={{\\n              backgroundColor: label.color,\\n              color: theme.palette.getContrastText(label.color),\\n            }}\\n          >\\n            {label.name}\\n          </div>\\n        ))}\\n      </div>\\n      <Popper\\n        id={id}\\n        open={open}\\n        anchorEl={anchorEl}\\n        placement=\\\"bottom-start\\\"\\n        className={classes.popper}\\n      >\\n        <div className={classes.header}>Apply labels to this pull request</div>\\n        <Autocomplete\\n          open\\n          onClose={handleClose}\\n          multiple\\n          classes={{\\n            paper: classes.paper,\\n            option: classes.option,\\n            popperDisablePortal: classes.popperDisablePortal,\\n          }}\\n          value={pendingValue}\\n          onChange={(event, newValue, reason) => {\\n            if (\\n              event.type === 'keydown' &&\\n              (event as React.KeyboardEvent).key === 'Backspace' &&\\n              reason === 'remove-option'\\n            ) {\\n              return;\\n            }\\n            setPendingValue(newValue);\\n          }}\\n          disableCloseOnSelect\\n          disablePortal\\n          renderTags={() => null}\\n          noOptionsText=\\\"No labels\\\"\\n          renderOption={(option, { selected }) => (\\n            <React.Fragment>\\n              <DoneIcon\\n                className={classes.iconSelected}\\n                style={{\\n                  visibility: selected ? 'visible' : 'hidden',\\n                }}\\n              />\\n              <span\\n                className={classes.color}\\n                style={{ backgroundColor: option.color }}\\n              />\\n              <div className={classes.text}>\\n                {option.name}\\n                <br />\\n                {option.description}\\n              </div>\\n              <CloseIcon\\n                className={classes.close}\\n                style={{\\n                  visibility: selected ? 'visible' : 'hidden',\\n                }}\\n              />\\n            </React.Fragment>\\n          )}\\n          options={[...labels].sort((a, b) => {\\n            // Display the selected labels first.\\n            let ai = value.indexOf(a);\\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\\n            let bi = value.indexOf(b);\\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\\n            return ai - bi;\\n          })}\\n          getOptionLabel={(option) => option.name}\\n          renderInput={(params) => (\\n            <InputBase\\n              ref={params.InputProps.ref}\\n              inputProps={params.inputProps}\\n              autoFocus\\n              className={classes.inputBase}\\n            />\\n          )}\\n        />\\n      </Popper>\\n    </React.Fragment>\\n  );\\n}\\n\\ninterface LabelType {\\n  name: string;\\n  color: string;\\n  description?: string;\\n}\\n\\n// From https://github.com/abdonrd/github-labels\\nconst labels = [\\n  {\\n    name: 'good first issue',\\n    color: '#7057ff',\\n    description: 'Good for newcomers',\\n  },\\n  {\\n    name: 'help wanted',\\n    color: '#008672',\\n    description: 'Extra attention is needed',\\n  },\\n  {\\n    name: 'priority: critical',\\n    color: '#b60205',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: high',\\n    color: '#d93f0b',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: low',\\n    color: '#0e8a16',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: medium',\\n    color: '#fbca04',\\n    description: '',\\n  },\\n  {\\n    name: \\\"status: can't reproduce\\\",\\n    color: '#fec1c1',\\n    description: '',\\n  },\\n  {\\n    name: 'status: confirmed',\\n    color: '#215cea',\\n    description: '',\\n  },\\n  {\\n    name: 'status: duplicate',\\n    color: '#cfd3d7',\\n    description: 'This issue or pull request already exists',\\n  },\\n  {\\n    name: 'status: needs information',\\n    color: '#fef2c0',\\n    description: '',\\n  },\\n  {\\n    name: 'status: wont do/fix',\\n    color: '#eeeeee',\\n    description: 'This will not be worked on',\\n  },\\n  {\\n    name: 'type: bug',\\n    color: '#d73a4a',\\n    description: \\\"Something isn't working\\\",\\n  },\\n  {\\n    name: 'type: discussion',\\n    color: '#d4c5f9',\\n    description: '',\\n  },\\n  {\\n    name: 'type: documentation',\\n    color: '#006b75',\\n    description: '',\\n  },\\n  {\\n    name: 'type: enhancement',\\n    color: '#84b6eb',\\n    description: '',\\n  },\\n  {\\n    name: 'type: epic',\\n    color: '#3e4b9e',\\n    description: 'A theme of work that contain sub-tasks',\\n  },\\n  {\\n    name: 'type: feature request',\\n    color: '#fbca04',\\n    description: 'New feature or request',\\n  },\\n  {\\n    name: 'type: question',\\n    color: '#d876e3',\\n    description: 'Further information is requested',\\n  },\\n];\\n\"},\"4VeI\":function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"mXGw\"),r=n(\"PDtE\"),l=n(\"XpU0\"),s=o.createElement,c=o.forwardRef((function(e,t){var n=e.classes,o=e.className,l=e.dividers,c=void 0!==l&&l,d=Object(i.a)(e,[\"classes\",\"className\",\"dividers\"]);return s(\"div\",Object(a.a)({className:Object(r.a)(n.root,o,c&&n.dividers),ref:t},d))}));t.a=Object(l.default)((function(e){return{root:{flex:\"1 1 auto\",WebkitOverflowScrolling:\"touch\",overflowY:\"auto\",padding:\"8px 24px\",\"&:first-child\":{paddingTop:20}},dividers:{padding:\"16px 24px\",borderTop:\"1px solid \".concat(e.palette.divider),borderBottom:\"1px solid \".concat(e.palette.divider)}}}),{name:\"MuiDialogContent\"})(c)},\"4Zwv\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return A}));var a=n(\"bZJ2\"),i=n(\"z3IF\"),o=n(\"FdmI\"),r=n.n(o),l=n(\"mXGw\"),s=n.n(l),c=n(\"nx5Z\"),d=n(\"88eg\"),p=n(\"73FU\"),u=n(\"4VeI\"),y=n(\"7VUZ\"),h=n(\"HkkT\"),m=n(\"O8uh\"),f=n(\"RHBV\"),g=n(\"UiZO\"),b=s.a.createElement,T=Object(f.a)(),S=b(p.a,{id:\"form-dialog-title\"},\"Add a new film\"),v=b(y.a,null,\"Did you miss any film in our list? Please, add it!\"),w=b(m.a,{type:\"submit\",color:\"primary\"},\"Add\");function A(){var e=s.a.useState(null),t=e[0],n=e[1],o=s.a.useState(!1),l=o[0],p=o[1],y=function(){I({title:\"\",year:\"\"}),p(!1)},f=s.a.useState({title:\"\",year:\"\"}),A=f[0],I=f[1];return b(s.a.Fragment,null,b(g.a,{value:t,onChange:function(e,t){\"string\"===typeof t?setTimeout((function(){p(!0),I({title:t,year:\"\"})})):t&&t.inputValue?(p(!0),I({title:t.inputValue,year:\"\"})):n(t)},filterOptions:function(e,t){var n=T(e,t);return\"\"!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add \"'.concat(t.inputValue,'\"')}),n},id:\"free-solo-dialog-demo\",options:O,getOptionLabel:function(e){return\"string\"===typeof e?e:e.inputValue?e.inputValue:e.title},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,renderOption:function(e){return e.title},style:{width:300},freeSolo:!0,renderInput:function(e){return b(c.a,Object(i.a)({},e,{label:\"Free solo dialog\",variant:\"outlined\"}))}}),b(d.a,{open:l,onClose:y,\"aria-labelledby\":\"form-dialog-title\"},b(\"form\",{onSubmit:function(e){e.preventDefault(),n({title:A.title,year:r()(A.year,10)}),y()}},S,b(u.a,null,v,b(c.a,{autoFocus:!0,margin:\"dense\",id:\"name\",value:A.title,onChange:function(e){return I(Object(a.a)(Object(a.a)({},A),{},{title:e.target.value}))},label:\"title\",type:\"text\"}),b(c.a,{margin:\"dense\",id:\"name\",value:A.year,onChange:function(e){return I(Object(a.a)(Object(a.a)({},A),{},{year:e.target.value}))},label:\"year\",type:\"number\"})),b(h.a,null,b(m.a,{onClick:y,color:\"primary\"},\"Cancel\"),w))))}var O=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"73FU\":function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"mXGw\"),r=n(\"PDtE\"),l=n(\"XpU0\"),s=n(\"Oy88\"),c=o.createElement,d=o.forwardRef((function(e,t){var n=e.children,o=e.classes,l=e.className,d=e.disableTypography,p=void 0!==d&&d,u=Object(i.a)(e,[\"children\",\"classes\",\"className\",\"disableTypography\"]);return c(\"div\",Object(a.a)({className:Object(r.a)(o.root,l),ref:t},u),p?n:c(s.a,{component:\"h2\",variant:\"h6\"},n))}));t.a=Object(l.default)({root:{margin:0,padding:\"16px 24px\",flex:\"0 0 auto\"}},{name:\"MuiDialogTitle\"})(d)},\"7Gqe\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: 500,\\n      '& > * + *': {\\n        marginTop: theme.spacing(3),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function Tags() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-standard\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Multiple values\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-outlined\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        filterSelectedOptions\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"filterSelectedOptions\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-filled\\\"\\n        options={top100Films.map((option) => option.title)}\\n        defaultValue={[top100Films[13].title]}\\n        freeSolo\\n        renderTags={(value: string[], getTagProps) =>\\n          value.map((option: string, index: number) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option}\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"freeSolo\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},\"7VUZ\":function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n(\"XpU0\"),r=n(\"Oy88\"),l=i.createElement,s=i.forwardRef((function(e,t){return l(r.a,Object(a.a)({component:\"p\",variant:\"body1\",color:\"textSecondary\",ref:t},e))}));t.a=Object(o.default)({root:{marginBottom:12}},{name:\"MuiDialogContentText\"})(s)},\"7rEA\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\n\\nimport React from 'react';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\\n\\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\\\"small\\\" />;\\nconst checkedIcon = <CheckBoxIcon fontSize=\\\"small\\\" />;\\n\\nexport default function CheckboxesTags() {\\n  return (\\n    <Autocomplete\\n      multiple\\n      id=\\\"checkboxes-tags-demo\\\"\\n      options={top100Films}\\n      disableCloseOnSelect\\n      getOptionLabel={(option) => option.title}\\n      renderOption={(option, { selected }) => (\\n        <React.Fragment>\\n          <Checkbox\\n            icon={icon}\\n            checkedIcon={checkedIcon}\\n            style={{ marginRight: 8 }}\\n            checked={selected}\\n          />\\n          {option.title}\\n        </React.Fragment>\\n      )}\\n      style={{ width: 500 }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          variant=\\\"outlined\\\"\\n          label=\\\"Checkboxes\\\"\\n          placeholder=\\\"Favorites\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n];\\n\"},\"88eg\":function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"2Fjn\"),r=n(\"azxR\"),l=n(\"mXGw\"),s=n(\"PDtE\"),c=n(\"XpU0\"),d=n(\"rKPb\"),p=n(\"6H0w\"),u=n(\"/6bg\"),y=n(\"LpUc\"),h=n(\"tqcJ\"),m=n(\"VPks\"),f=l.createElement,g={enter:h.b.enteringScreen,exit:h.b.leavingScreen},b=l.forwardRef((function(e,t){var n=e.BackdropProps,r=e.children,c=e.classes,h=e.className,b=e.disableBackdropClick,T=void 0!==b&&b,S=e.disableEscapeKeyDown,v=void 0!==S&&S,w=e.fullScreen,A=void 0!==w&&w,O=e.fullWidth,I=void 0!==O&&O,L=e.maxWidth,x=void 0===L?\"sm\":L,k=e.onBackdropClick,C=e.onClose,F=e.onEnter,R=e.onEntered,P=e.onEntering,D=e.onEscapeKeyDown,G=e.onExit,M=e.onExited,B=e.onExiting,E=e.open,j=e.PaperComponent,W=void 0===j?m.a:j,V=e.PaperProps,N=void 0===V?{}:V,z=e.scroll,K=void 0===z?\"paper\":z,U=e.TransitionComponent,H=void 0===U?y.a:U,J=e.transitionDuration,q=void 0===J?g:J,Z=e.TransitionProps,X=e[\"aria-describedby\"],Y=e[\"aria-labelledby\"],Q=Object(o.a)(e,[\"BackdropProps\",\"children\",\"classes\",\"className\",\"disableBackdropClick\",\"disableEscapeKeyDown\",\"fullScreen\",\"fullWidth\",\"maxWidth\",\"onBackdropClick\",\"onClose\",\"onEnter\",\"onEntered\",\"onEntering\",\"onEscapeKeyDown\",\"onExit\",\"onExited\",\"onExiting\",\"open\",\"PaperComponent\",\"PaperProps\",\"scroll\",\"TransitionComponent\",\"transitionDuration\",\"TransitionProps\",\"aria-describedby\",\"aria-labelledby\"]),$=l.useRef();return f(p.a,Object(a.a)({className:Object(s.a)(c.root,h),BackdropComponent:u.a,BackdropProps:Object(i.a)({transitionDuration:q},n),closeAfterTransition:!0,disableBackdropClick:T,disableEscapeKeyDown:v,onEscapeKeyDown:D,onClose:C,open:E,ref:t},Q),f(H,Object(a.a)({appear:!0,in:E,timeout:q,onEnter:F,onEntering:P,onEntered:R,onExit:G,onExiting:B,onExited:M,role:\"none presentation\"},Z),f(\"div\",{className:Object(s.a)(c.container,c[\"scroll\".concat(Object(d.a)(K))]),onMouseUp:function(e){e.target===e.currentTarget&&e.target===$.current&&($.current=null,k&&k(e),!T&&C&&C(e,\"backdropClick\"))},onMouseDown:function(e){$.current=e.target}},f(W,Object(a.a)({elevation:24,role:\"dialog\",\"aria-describedby\":X,\"aria-labelledby\":Y},N,{className:Object(s.a)(c.paper,c[\"paperScroll\".concat(Object(d.a)(K))],c[\"paperWidth\".concat(Object(d.a)(String(x)))],N.className,A&&c.paperFullScreen,I&&c.paperFullWidth)}),r))))}));t.a=Object(c.default)((function(e){return{root:{\"@media print\":{position:\"absolute !important\"}},scrollPaper:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},scrollBody:{overflowY:\"auto\",overflowX:\"hidden\",textAlign:\"center\",\"&:after\":{content:'\"\"',display:\"inline-block\",verticalAlign:\"middle\",height:\"100%\",width:\"0\"}},container:{height:\"100%\",\"@media print\":{height:\"auto\"},outline:0},paper:{margin:32,position:\"relative\",overflowY:\"auto\",\"@media print\":{overflowY:\"visible\",boxShadow:\"none\"}},paperScrollPaper:{display:\"flex\",flexDirection:\"column\",maxHeight:\"calc(100% - 64px)\"},paperScrollBody:{display:\"inline-block\",verticalAlign:\"middle\",textAlign:\"left\"},paperWidthFalse:{maxWidth:\"calc(100% - 64px)\"},paperWidthXs:{maxWidth:Math.max(e.breakpoints.values.xs,444),\"&$paperScrollBody\":Object(r.a)({},e.breakpoints.down(Math.max(e.breakpoints.values.xs,444)+64),{maxWidth:\"calc(100% - 64px)\"})},paperWidthSm:{maxWidth:e.breakpoints.values.sm,\"&$paperScrollBody\":Object(r.a)({},e.breakpoints.down(e.breakpoints.values.sm+64),{maxWidth:\"calc(100% - 64px)\"})},paperWidthMd:{maxWidth:e.breakpoints.values.md,\"&$paperScrollBody\":Object(r.a)({},e.breakpoints.down(e.breakpoints.values.md+64),{maxWidth:\"calc(100% - 64px)\"})},paperWidthLg:{maxWidth:e.breakpoints.values.lg,\"&$paperScrollBody\":Object(r.a)({},e.breakpoints.down(e.breakpoints.values.lg+64),{maxWidth:\"calc(100% - 64px)\"})},paperWidthXl:{maxWidth:e.breakpoints.values.xl,\"&$paperScrollBody\":Object(r.a)({},e.breakpoints.down(e.breakpoints.values.xl+64),{maxWidth:\"calc(100% - 64px)\"})},paperFullWidth:{width:\"calc(100% - 64px)\"},paperFullScreen:{margin:0,width:\"100%\",maxWidth:\"100%\",height:\"100%\",maxHeight:\"none\",borderRadius:0,\"&$paperScrollBody\":{margin:0,maxWidth:\"100%\"}}}}),{name:\"MuiDialog\"})(b)},\"8NPw\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"bZJ2\"),i=n(\"z3IF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=r.a.createElement;function d(){return c(\"div\",{style:{width:300}},c(s.a,{id:\"free-solo-demo\",freeSolo:!0,options:p.map((function(e){return e.title})),renderInput:function(e){return c(l.a,Object(i.a)({},e,{label:\"freeSolo\",margin:\"normal\",variant:\"outlined\"}))}}),c(s.a,{freeSolo:!0,id:\"free-solo-2-demo\",disableClearable:!0,options:p.map((function(e){return e.title})),renderInput:function(e){return c(l.a,Object(i.a)({},e,{label:\"Search input\",margin:\"normal\",variant:\"outlined\",InputProps:Object(a.a)(Object(a.a)({},e.InputProps),{},{type:\"search\"})}))}}))}var p=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"9VZj\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  label: {\\n    display: 'block',\\n  },\\n  input: {\\n    width: 200,\\n  },\\n  listbox: {\\n    width: 200,\\n    margin: 0,\\n    padding: 0,\\n    zIndex: 1,\\n    position: 'absolute',\\n    listStyle: 'none',\\n    backgroundColor: theme.palette.background.paper,\\n    overflow: 'auto',\\n    maxHeight: 200,\\n    border: '1px solid rgba(0,0,0,.25)',\\n    '& li[data-focus=\\\"true\\\"]': {\\n      backgroundColor: '#4a8df6',\\n      color: 'white',\\n      cursor: 'pointer',\\n    },\\n    '& li:active': {\\n      backgroundColor: '#2977f5',\\n      color: 'white',\\n    },\\n  },\\n}));\\n\\nexport default function UseAutocomplete() {\\n  const classes = useStyles();\\n  const {\\n    getRootProps,\\n    getInputLabelProps,\\n    getInputProps,\\n    getListboxProps,\\n    getOptionProps,\\n    groupedOptions,\\n  } = useAutocomplete({\\n    id: 'use-autocomplete-demo',\\n    options: top100Films,\\n    getOptionLabel: (option) => option.title,\\n  });\\n\\n  return (\\n    <div>\\n      <div {...getRootProps()}>\\n        <label className={classes.label} {...getInputLabelProps()}>\\n          useAutocomplete\\n        </label>\\n        <input className={classes.input} {...getInputProps()} />\\n      </div>\\n      {groupedOptions.length > 0 ? (\\n        <ul className={classes.listbox} {...getListboxProps()}>\\n          {groupedOptions.map((option, index) => (\\n            <li {...getOptionProps({ option, index })}>{option.title}</li>\\n          ))}\\n        </ul>\\n      ) : null}\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},\"9kGI\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return h}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"ldZT\"),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=n(\"gXWL\"),d=n(\"FhH1\"),p=o.a.createElement,u=p(c.a,{fontSize:\"small\"}),y=p(d.a,{fontSize:\"small\"});function h(){return p(s.a,{multiple:!0,id:\"checkboxes-tags-demo\",options:m,disableCloseOnSelect:!0,getOptionLabel:function(e){return e.title},renderOption:function(e,t){var n=t.selected;return p(o.a.Fragment,null,p(r.a,{icon:u,checkedIcon:y,style:{marginRight:8},checked:n}),e.title)},style:{width:500},renderInput:function(e){return p(l.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Checkboxes\",placeholder:\"Favorites\"}))}})}var m=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014}]},AFQV:function(e,t,n){var a={\"./Asynchronous.js\":\"/sXH\",\"./Asynchronous.tsx\":\"w9gn\",\"./CheckboxesTags.js\":\"7rEA\",\"./CheckboxesTags.tsx\":\"2pyj\",\"./ComboBox.js\":\"hkOL\",\"./ComboBox.tsx\":\"0EEt\",\"./ControllableStates.js\":\"obS3\",\"./ControllableStates.tsx\":\"aMRt\",\"./CountrySelect.js\":\"N8OM\",\"./CountrySelect.tsx\":\"mim5\",\"./CustomInputAutocomplete.js\":\"eofx\",\"./CustomInputAutocomplete.tsx\":\"+EqP\",\"./CustomizedHook.js\":\"faqP\",\"./CustomizedHook.tsx\":\"SvZJ\",\"./DisabledOptions.js\":\"EzFP\",\"./DisabledOptions.tsx\":\"NC+M\",\"./Filter.js\":\"OG8Y\",\"./Filter.tsx\":\"TVTY\",\"./FixedTags.js\":\"PXAA\",\"./FixedTags.tsx\":\"yn/S\",\"./FreeSolo.js\":\"xMQG\",\"./FreeSolo.tsx\":\"Lemd\",\"./FreeSoloCreateOption.js\":\"gfDo\",\"./FreeSoloCreateOption.tsx\":\"CvKJ\",\"./FreeSoloCreateOptionDialog.js\":\"lg6c\",\"./FreeSoloCreateOptionDialog.tsx\":\"BO8i\",\"./GitHubLabel.js\":\"osyJ\",\"./GitHubLabel.tsx\":\"4QBA\",\"./GoogleMaps.js\":\"lL1c\",\"./GoogleMaps.tsx\":\"e1aM\",\"./Grouped.js\":\"nIXE\",\"./Grouped.tsx\":\"ZJ30\",\"./Highlights.js\":\"t+vg\",\"./Highlights.tsx\":\"qT77\",\"./LimitTags.js\":\"Ce4t\",\"./LimitTags.tsx\":\"QzF6\",\"./Playground.js\":\"RiJl\",\"./Playground.tsx\":\"0USc\",\"./Sizes.js\":\"YTsT\",\"./Sizes.tsx\":\"cAV9\",\"./Tags.js\":\"o8lK\",\"./Tags.tsx\":\"7Gqe\",\"./UseAutocomplete.js\":\"9VZj\",\"./UseAutocomplete.tsx\":\"/lVO\",\"./Virtualize.js\":\"m4g2\",\"./Virtualize.tsx\":\"Nxct\",\"./autocomplete-aa.md\":\"plRc\",\"./autocomplete-de.md\":\"JTtv\",\"./autocomplete-es.md\":\"ui59\",\"./autocomplete-fr.md\":\"Bvxk\",\"./autocomplete-ja.md\":\"dZTp\",\"./autocomplete-pt.md\":\"WT/7\",\"./autocomplete-ru.md\":\"XBri\",\"./autocomplete-zh.md\":\"qbqB\",\"./autocomplete.md\":\"2oU4\"};function i(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error(\"Cannot find module '\"+e+\"'\");throw t.code=\"MODULE_NOT_FOUND\",t}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=o,e.exports=i,i.id=\"AFQV\"},B7BY:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement;function c(){var e={options:d,getOptionLabel:function(e){return e.title}},t={options:d.map((function(e){return e.title}))},n=o.a.useState(null),i=n[0],c=n[1];return s(\"div\",{style:{width:300}},s(l.a,Object(a.a)({},e,{id:\"debug\",debug:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"debug\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-close-on-select\",disableCloseOnSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableCloseOnSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"clear-on-escape\",clearOnEscape:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"clearOnEscape\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-clearable\",disableClearable:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableClearable\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"include-input-in-list\",includeInputInList:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"includeInputInList\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},t,{id:\"flat-demo\",renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"flat\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"controlled-demo\",value:i,onChange:function(e,t){c(t)},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"controlled\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-complete\",autoComplete:!0,includeInputInList:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoComplete\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-list-wrap\",disableListWrap:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableListWrap\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"open-on-focus\",openOnFocus:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"openOnFocus\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-highlight\",autoHighlight:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoHighlight\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-select\",autoSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disabled\",disabled:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disabled\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-portal\",disablePortal:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disablePortal\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"blur-on-select\",blurOnSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"blurOnSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"clear-on-blur\",clearOnBlur:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"clearOnBlur\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"select-on-focus\",selectOnFocus:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"selectOnFocus\",margin:\"normal\"}))}})))}var d=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"BNv+\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"UiZO\"),l=n(\"yZEQ\"),s=n(\"nx5Z\"),c=o.a.createElement,d=Object(l.a)((function(e){return{root:{width:500,\"& > * + *\":{marginTop:e.spacing(3)}}}}));function p(){var e=d();return c(\"div\",{className:e.root},c(r.a,{multiple:!0,limitTags:2,id:\"multiple-limit-tags\",options:u,getOptionLabel:function(e){return e.title},defaultValue:[u[13],u[12],u[11]],renderInput:function(e){return c(s.a,Object(a.a)({},e,{variant:\"outlined\",label:\"limitTags\",placeholder:\"Favorites\"}))}}))}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},BO8i:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport Button from '@material-ui/core/Button';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filter = createFilterOptions<FilmOptionType>();\\n\\nexport default function FreeSoloCreateOptionDialog() {\\n  const [value, setValue] = React.useState<FilmOptionType | null>(null);\\n  const [open, toggleOpen] = React.useState(false);\\n\\n  const handleClose = () => {\\n    setDialogValue({\\n      title: '',\\n      year: '',\\n    });\\n    toggleOpen(false);\\n  };\\n\\n  const [dialogValue, setDialogValue] = React.useState({\\n    title: '',\\n    year: '',\\n  });\\n\\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n    event.preventDefault();\\n    setValue({\\n      title: dialogValue.title,\\n      year: parseInt(dialogValue.year, 10),\\n    });\\n    handleClose();\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Autocomplete\\n        value={value}\\n        onChange={(event, newValue) => {\\n          if (typeof newValue === 'string') {\\n            // timeout to avoid instant validation of the dialog's form.\\n            setTimeout(() => {\\n              toggleOpen(true);\\n              setDialogValue({\\n                title: newValue,\\n                year: '',\\n              });\\n            });\\n          } else if (newValue && newValue.inputValue) {\\n            toggleOpen(true);\\n            setDialogValue({\\n              title: newValue.inputValue,\\n              year: '',\\n            });\\n          } else {\\n            setValue(newValue);\\n          }\\n        }}\\n        filterOptions={(options, params) => {\\n          const filtered = filter(options, params) as FilmOptionType[];\\n\\n          if (params.inputValue !== '') {\\n            filtered.push({\\n              inputValue: params.inputValue,\\n              title: `Add \\\"${params.inputValue}\\\"`,\\n            });\\n          }\\n\\n          return filtered;\\n        }}\\n        id=\\\"free-solo-dialog-demo\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => {\\n          // e.g value selected with enter, right from the input\\n          if (typeof option === 'string') {\\n            return option;\\n          }\\n          if (option.inputValue) {\\n            return option.inputValue;\\n          }\\n          return option.title;\\n        }}\\n        selectOnFocus\\n        clearOnBlur\\n        handleHomeEndKeys\\n        renderOption={(option) => option.title}\\n        style={{ width: 300 }}\\n        freeSolo\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"Free solo dialog\\\" variant=\\\"outlined\\\" />\\n        )}\\n      />\\n      <Dialog\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"form-dialog-title\\\"\\n      >\\n        <form onSubmit={handleSubmit}>\\n          <DialogTitle id=\\\"form-dialog-title\\\">Add a new film</DialogTitle>\\n          <DialogContent>\\n            <DialogContentText>\\n              Did you miss any film in our list? Please, add it!\\n            </DialogContentText>\\n            <TextField\\n              autoFocus\\n              margin=\\\"dense\\\"\\n              id=\\\"name\\\"\\n              value={dialogValue.title}\\n              onChange={(event) =>\\n                setDialogValue({\\n                  ...dialogValue,\\n                  title: event.target.value,\\n                })\\n              }\\n              label=\\\"title\\\"\\n              type=\\\"text\\\"\\n            />\\n            <TextField\\n              margin=\\\"dense\\\"\\n              id=\\\"name\\\"\\n              value={dialogValue.year}\\n              onChange={(event) =>\\n                setDialogValue({\\n                  ...dialogValue,\\n                  year: event.target.value,\\n                })\\n              }\\n              label=\\\"year\\\"\\n              type=\\\"number\\\"\\n            />\\n          </DialogContent>\\n          <DialogActions>\\n            <Button onClick={handleClose} color=\\\"primary\\\">\\n              Cancel\\n            </Button>\\n            <Button type=\\\"submit\\\" color=\\\"primary\\\">\\n              Add\\n            </Button>\\n          </DialogActions>\\n        </form>\\n      </Dialog>\\n    </React.Fragment>\\n  );\\n}\\n\\ninterface FilmOptionType {\\n  inputValue?: string;\\n  title: string;\\n  year?: number;\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films: FilmOptionType[] = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},Bvxk:function(e,t){e.exports='---\\ntitle: Composant React Auto-compl\\xe9tion\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocomplete (Auto-compl\\xe9tion)\\n\\n<p class=\"description\">La saisie semi-automatique est une entr\\xe9e de texte normale am\\xe9lior\\xe9e par un panneau d\\'options sugg\\xe9r\\xe9es.</p>\\n\\nLe widget est utile pour d\\xe9finir la valeur d\\'une zone de texte simple d\\'une seule ligne dans l\\'un des deux types de sc\\xe9narios suivants:\\n\\n1. The value for the textbox must be chosen from a predefined set of allowed values, e.g., a location field must contain a valid location name: [combo box](#combo-box).\\n2. The textbox may contain any arbitrary value, but it is advantageous to suggest possible values to the user, e.g., a search field may suggest similar or previous searches to save the user time: [free solo](#free-solo).\\n\\nIt\\'s meant to be an improved version of the \"react-select\" and \"downshift\" packages.\\n\\n## Combo box\\n\\nThe value must be chosen from a predefined set of allowed values.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### Playground\\n\\nEach of the following examples demonstrate one feature of the Autocomplete component.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### Country select\\n\\nChoose one of the 248 countries.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Controllable states\\n\\nThe component has two states that can be controlled:\\n\\n1. the \"value\" state with the `value`/`onChange` props combination. This state represents the value selected by the user, for instance when pressing <kbd>Enter</kbd>.\\n2. the \"input value\" state with the `inputValue`/`onInputChange` props combination. This state represents the value displayed in the textbox.\\n\\n> \\u26a0\\ufe0f These two state are isolated, they should be controlled independently.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nSet `freeSolo` to true so the textbox can contain any arbitrary value.\\n\\n### Search input\\n\\nThe prop is designed to cover the primary use case of a **search input** with suggestions, e.g. Google search or react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nIf you intend to use this mode for a [combo box](#combo-box) like experience (an enhanced version of a select element) we recommend setting:\\n\\n- `selectOnFocus` to helps the user clear the selected value.\\n- `clearOnBlur` to helps the user to enter a new value.\\n- `handleHomeEndKeys` to move focus inside the popup with the <kbd>Home</kbd> and <kbd>End</kbd> keys.\\n- A last option, for instance `Add \"YOUR SEARCH\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nYou could also display a dialog when the user wants to add a new value.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Grouped\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Disabled options\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nFor advanced customization use cases, we expose a `useAutocomplete()` hook. It accepts almost the same options as the Autocomplete component minus all the props related to the rendering of JSX. The Autocomplete component uses this hook internally.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5 kB gzipped](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Customized hook\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nHead to the [Customized Autocomplete](#customized-autocomplete) section for a customization example with the `Autocomplete` component instead of the hook.\\n\\n## Asynchronous requests\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Google Maps place\\n\\nA customized UI for Google Maps Places Autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nFor this demo, we need to load the [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial) API.\\n\\n> \\u26a0\\ufe0f Before you can start using the Google Maps JavaScript API, you must sign up and create a billing account.\\n\\n## Multiple values\\n\\nAlso known as tags, the user is allowed to enter more than one value.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Fixed options\\n\\nIn the event that you need to lock certain tag so that they can\\'t be removed in the interface, you can set the chips disabled.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Cases \\xe0 cocher\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limit tags\\n\\nYou can use the `limitTags` prop to limit the number of displayed options when not focused.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## Tailles\\n\\nFancy smaller inputs? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customizations\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nThis demo reproduces the GitHub\\'s label picker:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nHead to the [Customized hook](#customized-hook) section for a customization example with the `useAutocomplete` hook instead of the component.\\n\\n## Highlights\\n\\nThe following demo relies on [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Custom filter\\n\\nThe component exposes a factory to create a filter method that can provided to the `filterOptions` prop. You can use it to change the default option filter behavior.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### Param\\xe8tres\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): Defaults to `true`. Remove diacritics.\\n  - `config.ignoreCase` (*Boolean* [optional]): Defaults to `true`. Lowercase everything.\\n  - `config.limit` (*Number* [optional]): Default to null. Limit the number of suggested options to be shown. For example, if `config.limit` is `100`, only the first `100` matching options are shown. It can be useful if a lot of options match and virtualization wasn\\'t set up.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): Defaults to `\\'any\\'`.\\n  - `config.stringify` (*Func* [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.\\n  - `config.trim` (*Boolean* [optional]): Valeur par d\\xe9faut `false`. Remove trailing spaces.\\n\\n#### Valeur de retour\\n\\n`filterOptions`: the returned filter method can be provided directly to the `filterOptions` prop of the `Autocomplete` component, or the parameter of the same name for the hook.\\n\\nIn the following demo, the options need to start with the query prefix:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### Avanc\\xe9\\n\\nFor richer filtering mechanisms, like fuzzy matching, it\\'s recommended to look at [match-sorter](https://github.com/kentcdodds/match-sorter). Par exemple:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## Virtualization\\n\\nSearch within 10,000 randomly generated options. The list is virtualized thanks to [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## Limites\\n\\n### autocomplete/autofill\\n\\nThe browsers have heuristics to help the users fill the form inputs. However, it can harm the UX of the component.\\n\\nBy default, the component disable the **autocomplete** feature (remembering what the user has typed for a given field in a previous session) with the `autoComplete=\"off\"` attribute.\\n\\nHowever, in addition to remembering past entered values, the browser might also propose **autofill** suggestions (saved login, address, or payment details). In the event you want the avoid autofill, you can try the following:\\n\\n- Name the input without leaking any information the browser can use. e.g. `id=\"field1\"` instead of `id=\"country\"`. If you leave the id empty, the component uses a random id.\\n- Set `autoComplete=\"new-password\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver on iOS Safari doesn\\'t support the `aria-owns` attribute very well. You can work around the issue with the `disablePortal` prop.\\n\\n### ListboxComponent\\n\\nIf you provide a custom `ListboxComponent` prop, you need to make sure that the intended scroll container has the `role` attribute set to `listbox`. This ensures the correct behavior of the scroll, for example when using the keyboard to navigate.\\n\\n## Accessibilit\\xe9\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nWe encourage the usage of a label for the textbox. The component implements the WAI-ARIA authoring practices.'},Ce4t:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: 500,\\n    '& > * + *': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n}));\\n\\nexport default function LimitTags() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        multiple\\n        limitTags={2}\\n        id=\\\"multiple-limit-tags\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"limitTags\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},Cfoi:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement;function c(){var e={options:d,getOptionLabel:function(e){return e.title}},t={options:d.map((function(e){return e.title}))},n=o.a.useState(null),i=n[0],c=n[1];return s(\"div\",{style:{width:300}},s(l.a,Object(a.a)({},e,{id:\"debug\",debug:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"debug\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-close-on-select\",disableCloseOnSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableCloseOnSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"clear-on-escape\",clearOnEscape:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"clearOnEscape\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-clearable\",disableClearable:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableClearable\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"include-input-in-list\",includeInputInList:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"includeInputInList\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},t,{id:\"flat-demo\",renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"flat\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"controlled-demo\",value:i,onChange:function(e,t){c(t)},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"controlled\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-complete\",autoComplete:!0,includeInputInList:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoComplete\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-list-wrap\",disableListWrap:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disableListWrap\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"open-on-focus\",openOnFocus:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"openOnFocus\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-highlight\",autoHighlight:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoHighlight\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"auto-select\",autoSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"autoSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disabled\",disabled:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disabled\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"disable-portal\",disablePortal:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"disablePortal\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"blur-on-select\",blurOnSelect:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"blurOnSelect\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"clear-on-blur\",clearOnBlur:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"clearOnBlur\",margin:\"normal\"}))}})),s(l.a,Object(a.a)({},e,{id:\"select-on-focus\",selectOnFocus:!0,renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"selectOnFocus\",margin:\"normal\"}))}})))}var d=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},CvKJ:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filter = createFilterOptions<FilmOptionType>();\\n\\nexport default function FreeSoloCreateOption() {\\n  const [value, setValue] = React.useState<FilmOptionType | null>(null);\\n\\n  return (\\n    <Autocomplete\\n      value={value}\\n      onChange={(event, newValue) => {\\n        if (typeof newValue === 'string') {\\n          setValue({\\n            title: newValue,\\n          });\\n        } else if (newValue && newValue.inputValue) {\\n          // Create a new value from the user input\\n          setValue({\\n            title: newValue.inputValue,\\n          });\\n        } else {\\n          setValue(newValue);\\n        }\\n      }}\\n      filterOptions={(options, params) => {\\n        const filtered = filter(options, params);\\n\\n        // Suggest the creation of a new value\\n        if (params.inputValue !== '') {\\n          filtered.push({\\n            inputValue: params.inputValue,\\n            title: `Add \\\"${params.inputValue}\\\"`,\\n          });\\n        }\\n\\n        return filtered;\\n      }}\\n      selectOnFocus\\n      clearOnBlur\\n      handleHomeEndKeys\\n      id=\\\"free-solo-with-text-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => {\\n        // Value selected with enter, right from the input\\n        if (typeof option === 'string') {\\n          return option;\\n        }\\n        // Add \\\"xxx\\\" option created dynamically\\n        if (option.inputValue) {\\n          return option.inputValue;\\n        }\\n        // Regular option\\n        return option.title;\\n      }}\\n      renderOption={(option) => option.title}\\n      style={{ width: 300 }}\\n      freeSolo\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Free solo with text demo\\\"\\n          variant=\\\"outlined\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\ninterface FilmOptionType {\\n  inputValue?: string;\\n  title: string;\\n  year?: number;\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films: FilmOptionType[] = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},DSVM:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"bZJ2\"),i=n(\"z3IF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=r.a.createElement;function d(){return c(\"div\",{style:{width:300}},c(s.a,{id:\"free-solo-demo\",freeSolo:!0,options:p.map((function(e){return e.title})),renderInput:function(e){return c(l.a,Object(i.a)({},e,{label:\"freeSolo\",margin:\"normal\",variant:\"outlined\"}))}}),c(s.a,{freeSolo:!0,id:\"free-solo-2-demo\",disableClearable:!0,options:p.map((function(e){return e.title})),renderInput:function(e){return c(l.a,Object(i.a)({},e,{label:\"Search input\",margin:\"normal\",variant:\"outlined\",InputProps:Object(a.a)(Object(a.a)({},e.InputProps),{},{type:\"search\"})}))}}))}var p=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},DiDJ:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"}),\"Close\")},ELJg:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"8ET1\"),i=n.n(a),o=n(\"z3IF\"),r=n(\"mXGw\"),l=n.n(r),s=n(\"nx5Z\"),c=n(\"UiZO\"),d=l.a.createElement;function p(){return d(c.a,{id:\"disabled-options-demo\",options:u,getOptionDisabled:function(e){return e===u[0]||e===u[2]},style:{width:300},renderInput:function(e){return d(s.a,Object(o.a)({},e,{label:\"Disabled options\",variant:\"outlined\"}))}})}var u=i()(new Array(48)).map((function(e,t){return\"\".concat(t<20?\"0\":\"\").concat(Math.floor(t/2),\":\").concat(t%2===0?\"00\":\"30\")}))},EzFP:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function DisabledOptions() {\\n  return (\\n    <Autocomplete\\n      id=\\\"disabled-options-demo\\\"\\n      options={timeSlots}\\n      getOptionDisabled={(option) =>\\n        option === timeSlots[0] || option === timeSlots[2]\\n      }\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Disabled options\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// One time slot every 30 minutes.\\nconst timeSlots = Array.from(new Array(24 * 2)).map(\\n  (_, index) =>\\n    `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${\\n      index % 2 === 0 ? '00' : '30'\\n    }`,\\n);\\n\"},F7gL:function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"mXGw\"),r=n(\"PDtE\"),l=n(\"vtGe\"),s=o.createElement,c=Object(l.a)(s(\"path\",{d:\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"}),\"Cancel\"),d=n(\"XpU0\"),p=n(\"cYeA\"),u=n(\"+rSm\"),y=n(\"rKPb\"),h=n(\"7QLS\"),m=o.createElement;function f(e){return\"Backspace\"===e.key||\"Delete\"===e.key}var g=o.forwardRef((function(e,t){var n=e.avatar,l=e.classes,s=e.className,d=e.clickable,p=e.color,g=void 0===p?\"default\":p,b=e.component,T=e.deleteIcon,S=e.disabled,v=void 0!==S&&S,w=e.icon,A=e.label,O=e.onClick,I=e.onDelete,L=e.onKeyDown,x=e.onKeyUp,k=e.size,C=void 0===k?\"medium\":k,F=e.variant,R=void 0===F?\"default\":F,P=Object(i.a)(e,[\"avatar\",\"classes\",\"className\",\"clickable\",\"color\",\"component\",\"deleteIcon\",\"disabled\",\"icon\",\"label\",\"onClick\",\"onDelete\",\"onKeyDown\",\"onKeyUp\",\"size\",\"variant\"]),D=o.useRef(null),G=Object(u.a)(D,t),M=function(e){e.stopPropagation(),I&&I(e)},B=!(!1===d||!O)||d,E=\"small\"===C,j=b||(B?h.a:\"div\"),W=j===h.a?{component:\"div\"}:{},V=null;if(I){var N=Object(r.a)(\"default\"!==g&&(\"default\"===R?l[\"deleteIconColor\".concat(Object(y.a)(g))]:l[\"deleteIconOutlinedColor\".concat(Object(y.a)(g))]),E&&l.deleteIconSmall);V=T&&o.isValidElement(T)?o.cloneElement(T,{className:Object(r.a)(T.props.className,l.deleteIcon,N),onClick:M}):m(c,{className:Object(r.a)(l.deleteIcon,N),onClick:M})}var z=null;n&&o.isValidElement(n)&&(z=o.cloneElement(n,{className:Object(r.a)(l.avatar,n.props.className,E&&l.avatarSmall,\"default\"!==g&&l[\"avatarColor\".concat(Object(y.a)(g))])}));var K=null;return w&&o.isValidElement(w)&&(K=o.cloneElement(w,{className:Object(r.a)(l.icon,w.props.className,E&&l.iconSmall,\"default\"!==g&&l[\"iconColor\".concat(Object(y.a)(g))])})),m(j,Object(a.a)({role:B||I?\"button\":void 0,className:Object(r.a)(l.root,s,\"default\"!==g&&[l[\"color\".concat(Object(y.a)(g))],B&&l[\"clickableColor\".concat(Object(y.a)(g))],I&&l[\"deletableColor\".concat(Object(y.a)(g))]],\"default\"!==R&&[l.outlined,{primary:l.outlinedPrimary,secondary:l.outlinedSecondary}[g]],v&&l.disabled,E&&l.sizeSmall,B&&l.clickable,I&&l.deletable),\"aria-disabled\":!!v||void 0,tabIndex:B||I?0:void 0,onClick:O,onKeyDown:function(e){e.currentTarget===e.target&&f(e)&&e.preventDefault(),L&&L(e)},onKeyUp:function(e){e.currentTarget===e.target&&(I&&f(e)?I(e):\"Escape\"===e.key&&D.current&&D.current.blur()),x&&x(e)},ref:G},W,P),z||K,m(\"span\",{className:Object(r.a)(l.label,E&&l.labelSmall)},A),V)}));t.a=Object(d.default)((function(e){var t=\"light\"===e.palette.type?e.palette.grey[300]:e.palette.grey[700],n=Object(p.fade)(e.palette.text.primary,.26);return{root:{fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(13),display:\"inline-flex\",alignItems:\"center\",justifyContent:\"center\",height:32,color:e.palette.getContrastText(t),backgroundColor:t,borderRadius:16,whiteSpace:\"nowrap\",transition:e.transitions.create([\"background-color\",\"box-shadow\"]),cursor:\"default\",outline:0,textDecoration:\"none\",border:\"none\",padding:0,verticalAlign:\"middle\",boxSizing:\"border-box\",\"&$disabled\":{opacity:.5,pointerEvents:\"none\"},\"& $avatar\":{marginLeft:5,marginRight:-6,width:24,height:24,color:\"light\"===e.palette.type?e.palette.grey[700]:e.palette.grey[300],fontSize:e.typography.pxToRem(12)},\"& $avatarColorPrimary\":{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.dark},\"& $avatarColorSecondary\":{color:e.palette.secondary.contrastText,backgroundColor:e.palette.secondary.dark},\"& $avatarSmall\":{marginLeft:4,marginRight:-4,width:18,height:18,fontSize:e.typography.pxToRem(10)}},sizeSmall:{height:24},colorPrimary:{backgroundColor:e.palette.primary.main,color:e.palette.primary.contrastText},colorSecondary:{backgroundColor:e.palette.secondary.main,color:e.palette.secondary.contrastText},disabled:{},clickable:{userSelect:\"none\",WebkitTapHighlightColor:\"transparent\",cursor:\"pointer\",\"&:hover, &:focus\":{backgroundColor:Object(p.emphasize)(t,.08)},\"&:active\":{boxShadow:e.shadows[1]}},clickableColorPrimary:{\"&:hover, &:focus\":{backgroundColor:Object(p.emphasize)(e.palette.primary.main,.08)}},clickableColorSecondary:{\"&:hover, &:focus\":{backgroundColor:Object(p.emphasize)(e.palette.secondary.main,.08)}},deletable:{\"&:focus\":{backgroundColor:Object(p.emphasize)(t,.08)}},deletableColorPrimary:{\"&:focus\":{backgroundColor:Object(p.emphasize)(e.palette.primary.main,.2)}},deletableColorSecondary:{\"&:focus\":{backgroundColor:Object(p.emphasize)(e.palette.secondary.main,.2)}},outlined:{backgroundColor:\"transparent\",border:\"1px solid \".concat(\"light\"===e.palette.type?\"rgba(0, 0, 0, 0.23)\":\"rgba(255, 255, 255, 0.23)\"),\"$clickable&:hover, $clickable&:focus, $deletable&:focus\":{backgroundColor:Object(p.fade)(e.palette.text.primary,e.palette.action.hoverOpacity)},\"& $avatar\":{marginLeft:4},\"& $avatarSmall\":{marginLeft:2},\"& $icon\":{marginLeft:4},\"& $iconSmall\":{marginLeft:2},\"& $deleteIcon\":{marginRight:5},\"& $deleteIconSmall\":{marginRight:3}},outlinedPrimary:{color:e.palette.primary.main,border:\"1px solid \".concat(e.palette.primary.main),\"$clickable&:hover, $clickable&:focus, $deletable&:focus\":{backgroundColor:Object(p.fade)(e.palette.primary.main,e.palette.action.hoverOpacity)}},outlinedSecondary:{color:e.palette.secondary.main,border:\"1px solid \".concat(e.palette.secondary.main),\"$clickable&:hover, $clickable&:focus, $deletable&:focus\":{backgroundColor:Object(p.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity)}},avatar:{},avatarSmall:{},avatarColorPrimary:{},avatarColorSecondary:{},icon:{color:\"light\"===e.palette.type?e.palette.grey[700]:e.palette.grey[300],marginLeft:5,marginRight:-6},iconSmall:{width:18,height:18,marginLeft:4,marginRight:-4},iconColorPrimary:{color:\"inherit\"},iconColorSecondary:{color:\"inherit\"},label:{overflow:\"hidden\",textOverflow:\"ellipsis\",paddingLeft:12,paddingRight:12,whiteSpace:\"nowrap\"},labelSmall:{paddingLeft:8,paddingRight:8},deleteIcon:{WebkitTapHighlightColor:\"transparent\",color:n,height:22,width:22,cursor:\"pointer\",margin:\"0 5px 0 -6px\",\"&:hover\":{color:Object(p.fade)(n,.4)}},deleteIconSmall:{height:16,width:16,marginRight:4,marginLeft:-4},deleteIconColorPrimary:{color:Object(p.fade)(e.palette.primary.contrastText,.7),\"&:hover, &:active\":{color:e.palette.primary.contrastText}},deleteIconColorSecondary:{color:Object(p.fade)(e.palette.secondary.contrastText,.7),\"&:hover, &:active\":{color:e.palette.secondary.contrastText}},deleteIconOutlinedColorPrimary:{color:Object(p.fade)(e.palette.primary.main,.7),\"&:hover, &:active\":{color:e.palette.primary.main}},deleteIconOutlinedColorSecondary:{color:Object(p.fade)(e.palette.secondary.main,.7),\"&:hover, &:active\":{color:e.palette.secondary.main}}}}),{name:\"MuiChip\"})(g)},FhH1:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"}),\"CheckBox\")},HkkT:function(e,t,n){\"use strict\";var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"mXGw\"),r=n(\"PDtE\"),l=n(\"XpU0\"),s=o.createElement,c=o.forwardRef((function(e,t){var n=e.disableSpacing,o=void 0!==n&&n,l=e.classes,c=e.className,d=Object(i.a)(e,[\"disableSpacing\",\"classes\",\"className\"]);return s(\"div\",Object(a.a)({className:Object(r.a)(l.root,c,!o&&l.spacing),ref:t},d))}));t.a=Object(l.default)({root:{display:\"flex\",alignItems:\"center\",padding:8,justifyContent:\"flex-end\",flex:\"0 0 auto\"},spacing:{\"& > :not(:first-child)\":{marginLeft:8}}},{name:\"MuiDialogActions\"})(c)},J6vt:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"}),\"Done\")},JQxD:function(e,t,n){var a,i,o;o=function(){for(var e={map:{}},t=[{base:\" \",letters:\"\\xa0\"},{base:\"A\",letters:\"A\\u24b6\\uff21\\xc0\\xc1\\xc2\\u1ea6\\u1ea4\\u1eaa\\u1ea8\\xc3\\u0100\\u0102\\u1eb0\\u1eae\\u1eb4\\u1eb2\\u0226\\u01e0\\xc4\\u01de\\u1ea2\\xc5\\u01fa\\u01cd\\u0200\\u0202\\u1ea0\\u1eac\\u1eb6\\u1e00\\u0104\\u023a\\u2c6f\"},{base:\"AA\",letters:\"\\ua732\"},{base:\"AE\",letters:\"\\xc6\\u01fc\\u01e2\"},{base:\"AO\",letters:\"\\ua734\"},{base:\"AU\",letters:\"\\ua736\"},{base:\"AV\",letters:\"\\ua738\\ua73a\"},{base:\"AY\",letters:\"\\ua73c\"},{base:\"B\",letters:\"B\\u24b7\\uff22\\u1e02\\u1e04\\u1e06\\u0243\\u0182\\u0181\"},{base:\"C\",letters:\"C\\u24b8\\uff23\\u0106\\u0108\\u010a\\u010c\\xc7\\u1e08\\u0187\\u023b\\ua73e\"},{base:\"D\",letters:\"D\\u24b9\\uff24\\u1e0a\\u010e\\u1e0c\\u1e10\\u1e12\\u1e0e\\u0110\\u018b\\u018a\\u0189\\ua779\"},{base:\"DZ\",letters:\"\\u01f1\\u01c4\"},{base:\"Dz\",letters:\"\\u01f2\\u01c5\"},{base:\"E\",letters:\"E\\u24ba\\uff25\\xc8\\xc9\\xca\\u1ec0\\u1ebe\\u1ec4\\u1ec2\\u1ebc\\u0112\\u1e14\\u1e16\\u0114\\u0116\\xcb\\u1eba\\u011a\\u0204\\u0206\\u1eb8\\u1ec6\\u0228\\u1e1c\\u0118\\u1e18\\u1e1a\\u0190\\u018e\"},{base:\"F\",letters:\"F\\u24bb\\uff26\\u1e1e\\u0191\\ua77b\"},{base:\"G\",letters:\"G\\u24bc\\uff27\\u01f4\\u011c\\u1e20\\u011e\\u0120\\u01e6\\u0122\\u01e4\\u0193\\ua7a0\\ua77d\\ua77e\"},{base:\"H\",letters:\"H\\u24bd\\uff28\\u0124\\u1e22\\u1e26\\u021e\\u1e24\\u1e28\\u1e2a\\u0126\\u2c67\\u2c75\\ua78d\"},{base:\"I\",letters:\"I\\u24be\\uff29\\xcc\\xcd\\xce\\u0128\\u012a\\u012c\\u0130\\xcf\\u1e2e\\u1ec8\\u01cf\\u0208\\u020a\\u1eca\\u012e\\u1e2c\\u0197\"},{base:\"J\",letters:\"J\\u24bf\\uff2a\\u0134\\u0248\"},{base:\"K\",letters:\"K\\u24c0\\uff2b\\u1e30\\u01e8\\u1e32\\u0136\\u1e34\\u0198\\u2c69\\ua740\\ua742\\ua744\\ua7a2\"},{base:\"L\",letters:\"L\\u24c1\\uff2c\\u013f\\u0139\\u013d\\u1e36\\u1e38\\u013b\\u1e3c\\u1e3a\\u0141\\u023d\\u2c62\\u2c60\\ua748\\ua746\\ua780\"},{base:\"LJ\",letters:\"\\u01c7\"},{base:\"Lj\",letters:\"\\u01c8\"},{base:\"M\",letters:\"M\\u24c2\\uff2d\\u1e3e\\u1e40\\u1e42\\u2c6e\\u019c\"},{base:\"N\",letters:\"N\\u24c3\\uff2e\\u01f8\\u0143\\xd1\\u1e44\\u0147\\u1e46\\u0145\\u1e4a\\u1e48\\u0220\\u019d\\ua790\\ua7a4\"},{base:\"NJ\",letters:\"\\u01ca\"},{base:\"Nj\",letters:\"\\u01cb\"},{base:\"O\",letters:\"O\\u24c4\\uff2f\\xd2\\xd3\\xd4\\u1ed2\\u1ed0\\u1ed6\\u1ed4\\xd5\\u1e4c\\u022c\\u1e4e\\u014c\\u1e50\\u1e52\\u014e\\u022e\\u0230\\xd6\\u022a\\u1ece\\u0150\\u01d1\\u020c\\u020e\\u01a0\\u1edc\\u1eda\\u1ee0\\u1ede\\u1ee2\\u1ecc\\u1ed8\\u01ea\\u01ec\\xd8\\u01fe\\u0186\\u019f\\ua74a\\ua74c\"},{base:\"OI\",letters:\"\\u01a2\"},{base:\"OO\",letters:\"\\ua74e\"},{base:\"OU\",letters:\"\\u0222\"},{base:\"P\",letters:\"P\\u24c5\\uff30\\u1e54\\u1e56\\u01a4\\u2c63\\ua750\\ua752\\ua754\"},{base:\"Q\",letters:\"Q\\u24c6\\uff31\\ua756\\ua758\\u024a\"},{base:\"R\",letters:\"R\\u24c7\\uff32\\u0154\\u1e58\\u0158\\u0210\\u0212\\u1e5a\\u1e5c\\u0156\\u1e5e\\u024c\\u2c64\\ua75a\\ua7a6\\ua782\"},{base:\"S\",letters:\"S\\u24c8\\uff33\\u1e9e\\u015a\\u1e64\\u015c\\u1e60\\u0160\\u1e66\\u1e62\\u1e68\\u0218\\u015e\\u2c7e\\ua7a8\\ua784\"},{base:\"T\",letters:\"T\\u24c9\\uff34\\u1e6a\\u0164\\u1e6c\\u021a\\u0162\\u1e70\\u1e6e\\u0166\\u01ac\\u01ae\\u023e\\ua786\"},{base:\"Th\",letters:\"\\xde\"},{base:\"TZ\",letters:\"\\ua728\"},{base:\"U\",letters:\"U\\u24ca\\uff35\\xd9\\xda\\xdb\\u0168\\u1e78\\u016a\\u1e7a\\u016c\\xdc\\u01db\\u01d7\\u01d5\\u01d9\\u1ee6\\u016e\\u0170\\u01d3\\u0214\\u0216\\u01af\\u1eea\\u1ee8\\u1eee\\u1eec\\u1ef0\\u1ee4\\u1e72\\u0172\\u1e76\\u1e74\\u0244\"},{base:\"V\",letters:\"V\\u24cb\\uff36\\u1e7c\\u1e7e\\u01b2\\ua75e\\u0245\"},{base:\"VY\",letters:\"\\ua760\"},{base:\"W\",letters:\"W\\u24cc\\uff37\\u1e80\\u1e82\\u0174\\u1e86\\u1e84\\u1e88\\u2c72\"},{base:\"X\",letters:\"X\\u24cd\\uff38\\u1e8a\\u1e8c\"},{base:\"Y\",letters:\"Y\\u24ce\\uff39\\u1ef2\\xdd\\u0176\\u1ef8\\u0232\\u1e8e\\u0178\\u1ef6\\u1ef4\\u01b3\\u024e\\u1efe\"},{base:\"Z\",letters:\"Z\\u24cf\\uff3a\\u0179\\u1e90\\u017b\\u017d\\u1e92\\u1e94\\u01b5\\u0224\\u2c7f\\u2c6b\\ua762\"},{base:\"a\",letters:\"a\\u24d0\\uff41\\u1e9a\\xe0\\xe1\\xe2\\u1ea7\\u1ea5\\u1eab\\u1ea9\\xe3\\u0101\\u0103\\u1eb1\\u1eaf\\u1eb5\\u1eb3\\u0227\\u01e1\\xe4\\u01df\\u1ea3\\xe5\\u01fb\\u01ce\\u0201\\u0203\\u1ea1\\u1ead\\u1eb7\\u1e01\\u0105\\u2c65\\u0250\\u0251\"},{base:\"aa\",letters:\"\\ua733\"},{base:\"ae\",letters:\"\\xe6\\u01fd\\u01e3\"},{base:\"ao\",letters:\"\\ua735\"},{base:\"au\",letters:\"\\ua737\"},{base:\"av\",letters:\"\\ua739\\ua73b\"},{base:\"ay\",letters:\"\\ua73d\"},{base:\"b\",letters:\"b\\u24d1\\uff42\\u1e03\\u1e05\\u1e07\\u0180\\u0183\\u0253\"},{base:\"c\",letters:\"c\\u24d2\\uff43\\u0107\\u0109\\u010b\\u010d\\xe7\\u1e09\\u0188\\u023c\\ua73f\\u2184\"},{base:\"d\",letters:\"d\\u24d3\\uff44\\u1e0b\\u010f\\u1e0d\\u1e11\\u1e13\\u1e0f\\u0111\\u018c\\u0256\\u0257\\ua77a\"},{base:\"dz\",letters:\"\\u01f3\\u01c6\"},{base:\"e\",letters:\"e\\u24d4\\uff45\\xe8\\xe9\\xea\\u1ec1\\u1ebf\\u1ec5\\u1ec3\\u1ebd\\u0113\\u1e15\\u1e17\\u0115\\u0117\\xeb\\u1ebb\\u011b\\u0205\\u0207\\u1eb9\\u1ec7\\u0229\\u1e1d\\u0119\\u1e19\\u1e1b\\u0247\\u025b\\u01dd\"},{base:\"f\",letters:\"f\\u24d5\\uff46\\u1e1f\\u0192\\ua77c\"},{base:\"ff\",letters:\"\\ufb00\"},{base:\"fi\",letters:\"\\ufb01\"},{base:\"fl\",letters:\"\\ufb02\"},{base:\"ffi\",letters:\"\\ufb03\"},{base:\"ffl\",letters:\"\\ufb04\"},{base:\"g\",letters:\"g\\u24d6\\uff47\\u01f5\\u011d\\u1e21\\u011f\\u0121\\u01e7\\u0123\\u01e5\\u0260\\ua7a1\\u1d79\\ua77f\"},{base:\"h\",letters:\"h\\u24d7\\uff48\\u0125\\u1e23\\u1e27\\u021f\\u1e25\\u1e29\\u1e2b\\u1e96\\u0127\\u2c68\\u2c76\\u0265\"},{base:\"hv\",letters:\"\\u0195\"},{base:\"i\",letters:\"i\\u24d8\\uff49\\xec\\xed\\xee\\u0129\\u012b\\u012d\\xef\\u1e2f\\u1ec9\\u01d0\\u0209\\u020b\\u1ecb\\u012f\\u1e2d\\u0268\\u0131\"},{base:\"j\",letters:\"j\\u24d9\\uff4a\\u0135\\u01f0\\u0249\"},{base:\"k\",letters:\"k\\u24da\\uff4b\\u1e31\\u01e9\\u1e33\\u0137\\u1e35\\u0199\\u2c6a\\ua741\\ua743\\ua745\\ua7a3\"},{base:\"l\",letters:\"l\\u24db\\uff4c\\u0140\\u013a\\u013e\\u1e37\\u1e39\\u013c\\u1e3d\\u1e3b\\u017f\\u0142\\u019a\\u026b\\u2c61\\ua749\\ua781\\ua747\"},{base:\"lj\",letters:\"\\u01c9\"},{base:\"m\",letters:\"m\\u24dc\\uff4d\\u1e3f\\u1e41\\u1e43\\u0271\\u026f\"},{base:\"n\",letters:\"n\\xf1n\\u24dd\\uff4e\\u01f9\\u0144\\xf1\\u1e45\\u0148\\u1e47\\u0146\\u1e4b\\u1e49\\u019e\\u0272\\u0149\\ua791\\ua7a5\\u043b\\u0509\"},{base:\"nj\",letters:\"\\u01cc\"},{base:\"o\",letters:\"\\u07c0o\\u24de\\uff4f\\xf2\\xf3\\xf4\\u1ed3\\u1ed1\\u1ed7\\u1ed5\\xf5\\u1e4d\\u022d\\u1e4f\\u014d\\u1e51\\u1e53\\u014f\\u022f\\u0231\\xf6\\u022b\\u1ecf\\u0151\\u01d2\\u020d\\u020f\\u01a1\\u1edd\\u1edb\\u1ee1\\u1edf\\u1ee3\\u1ecd\\u1ed9\\u01eb\\u01ed\\xf8\\u01ff\\u0254\\ua74b\\ua74d\\u0275\"},{base:\"oe\",letters:\"\\u0152\\u0153\"},{base:\"oi\",letters:\"\\u01a3\"},{base:\"ou\",letters:\"\\u0223\"},{base:\"oo\",letters:\"\\ua74f\"},{base:\"p\",letters:\"p\\u24df\\uff50\\u1e55\\u1e57\\u01a5\\u1d7d\\ua751\\ua753\\ua755\"},{base:\"q\",letters:\"q\\u24e0\\uff51\\u024b\\ua757\\ua759\"},{base:\"r\",letters:\"r\\u24e1\\uff52\\u0155\\u1e59\\u0159\\u0211\\u0213\\u1e5b\\u1e5d\\u0157\\u1e5f\\u024d\\u027d\\ua75b\\ua7a7\\ua783\"},{base:\"s\",letters:\"s\\u24e2\\uff53\\xdf\\u015b\\u1e65\\u015d\\u1e61\\u0161\\u1e67\\u1e63\\u1e69\\u0219\\u015f\\u023f\\ua7a9\\ua785\\u1e9b\"},{base:\"ss\",letters:\"\\xdf\"},{base:\"t\",letters:\"t\\u24e3\\uff54\\u1e6b\\u1e97\\u0165\\u1e6d\\u021b\\u0163\\u1e71\\u1e6f\\u0167\\u01ad\\u0288\\u2c66\\ua787\"},{base:\"th\",letters:\"\\xfe\"},{base:\"tz\",letters:\"\\ua729\"},{base:\"u\",letters:\"u\\u24e4\\uff55\\xf9\\xfa\\xfb\\u0169\\u1e79\\u016b\\u1e7b\\u016d\\xfc\\u01dc\\u01d8\\u01d6\\u01da\\u1ee7\\u016f\\u0171\\u01d4\\u0215\\u0217\\u01b0\\u1eeb\\u1ee9\\u1eef\\u1eed\\u1ef1\\u1ee5\\u1e73\\u0173\\u1e77\\u1e75\\u0289\"},{base:\"v\",letters:\"v\\u24e5\\uff56\\u1e7d\\u1e7f\\u028b\\ua75f\\u028c\"},{base:\"vy\",letters:\"\\ua761\"},{base:\"w\",letters:\"w\\u24e6\\uff57\\u1e81\\u1e83\\u0175\\u1e87\\u1e85\\u1e98\\u1e89\\u2c73\"},{base:\"x\",letters:\"x\\u24e7\\uff58\\u1e8b\\u1e8d\"},{base:\"y\",letters:\"y\\u24e8\\uff59\\u1ef3\\xfd\\u0177\\u1ef9\\u0233\\u1e8f\\xff\\u1ef7\\u1e99\\u1ef5\\u01b4\\u024f\\u1eff\"},{base:\"z\",letters:\"z\\u24e9\\uff5a\\u017a\\u1e91\\u017c\\u017e\\u1e93\\u1e95\\u01b6\\u0225\\u0240\\u2c6c\\ua763\"}],n=0,a=t.length;n<a;n++)for(var i=t[n].letters.split(\"\"),o=0,r=i.length;o<r;o++)e.map[i[o]]=t[n].base;return e.clean=function(t){if(!t||!t.length||t.length<1)return\"\";for(var n,a=\"\",i=t.split(\"\"),o=0,r=i.length;o<r;o++)a+=(n=i[o])in e.map?e.map[n]:n;return a},e},e.exports?e.exports=o():void 0===(i=\"function\"===typeof(a=o)?a.call(t,n,t,e):a)||(e.exports=i)},JTtv:function(e,t){e.exports='---\\ntitle: Autocomplete React-Komponente\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autovervollst\\xe4ndigung (Autocomplete)\\n\\n<p class=\"description\">Die Autovervollst\\xe4ndigung ist eine normale Texteingabe, die durch ein Panel mit vorgeschlagenen Optionen erg\\xe4nzt wird.</p>\\n\\nDas Widget ist n\\xfctzlich, um den Wert eines einzeiligen Textfeldes in einem von zwei Arten von Szenarien zu setzen:\\n\\n1. The value for the textbox must be chosen from a predefined set of allowed values, e.g., a location field must contain a valid location name: [combo box](#combo-box).\\n2. The textbox may contain any arbitrary value, but it is advantageous to suggest possible values to the user, e.g., a search field may suggest similar or previous searches to save the user time: [free solo](#free-solo).\\n\\nIt\\'s meant to be an improved version of the \"react-select\" and \"downshift\" packages.\\n\\n## Combo box\\n\\nDer Wert muss aus einer vordefinierten Menge zul\\xe4ssiger Werte ausgew\\xe4hlt werden.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### Spielwiese\\n\\nDie folgenden Beispiele demonstrieren je eine Funktion der Autocomplete-Komponente.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### L\\xe4nderauswahl\\n\\nW\\xe4hlen Sie eines der 248 L\\xe4nder.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Controllable states\\n\\nThe component has two states that can be controlled:\\n\\n1. the \"value\" state with the `value`/`onChange` props combination. This state represents the value selected by the user, for instance when pressing <kbd>Enter</kbd>.\\n2. the \"input value\" state with the `inputValue`/`onInputChange` props combination. This state represents the value displayed in the textbox.\\n\\n> \\u26a0\\ufe0f These two state are isolated, they should be controlled independently.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nSet `freeSolo` to true so the textbox can contain any arbitrary value.\\n\\n### Search input\\n\\nThe prop is designed to cover the primary use case of a **search input** with suggestions, e.g. Google search or react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nIf you intend to use this mode for a [combo box](#combo-box) like experience (an enhanced version of a select element) we recommend setting:\\n\\n- `selectOnFocus` to helps the user clear the selected value.\\n- `clearOnBlur` to helps the user to enter a new value.\\n- `handleHomeEndKeys` to move focus inside the popup with the <kbd>Home</kbd> and <kbd>End</kbd> keys.\\n- A last option, for instance `Add \"YOUR SEARCH\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nYou could also display a dialog when the user wants to add a new value.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Grouped\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Disabled options\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nFor advanced customization use cases, we expose a `useAutocomplete()` hook. It accepts almost the same options as the Autocomplete component minus all the props related to the rendering of JSX. The Autocomplete component uses this hook internally.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5 kB gzipped](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Customized hook\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nHead to the [Customized Autocomplete](#customized-autocomplete) section for a customization example with the `Autocomplete` component instead of the hook.\\n\\n## Asynchrone Anfragen\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Google Maps Ort\\n\\nEine angepasste Oberfl\\xe4che f\\xfcr Google Maps Places Autovervollst\\xe4ndigung.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nF\\xfcr diese Demo m\\xfcssen wir die [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial) API laden.\\n\\n> \\u26a0\\ufe0f Bevor Sie die Google Maps JavaScript-API verwenden k\\xf6nnen, m\\xfcssen Sie sich anmelden und ein Abrechnungskonto erstellen.\\n\\n## Mehrere Werte\\n\\nAuch als Tags bekannt, darf der Benutzer mehr als einen Wert eingeben.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Feste Optionen\\n\\nFalls Sie bestimmte Tags sperren m\\xfcssen, damit sie nicht in der Schnittstelle entfernt werden k\\xf6nnen, k\\xf6nnen Sie die Chips deaktivieren.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Kontrollk\\xe4stchen\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limit tags\\n\\nYou can use the `limitTags` prop to limit the number of displayed options when not focused.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## Gr\\xf6\\xdfen\\n\\nFancy smaller inputs? Verwenden Sie die `size` Prop.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customizations\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nDiese Demo reproduziert die Label-Auswahl von GitHub:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nHead to the [Customized hook](#customized-hook) section for a customization example with the `useAutocomplete` hook instead of the component.\\n\\n## Highlights\\n\\nThe following demo relies on [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Benutzerderfinierter Filter\\n\\nThe component exposes a factory to create a filter method that can provided to the `filterOptions` prop. Sie k\\xf6nnen es verwenden, um das Standard-Filterverhalten der Option zu \\xe4ndern.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### Parameter\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): Defaults to `true`. Remove diacritics.\\n  - `config.ignoreCase` (*Boolean* [optional]): Defaults to `true`. Alles in Kleinbuchstaben.\\n  - `config.limit` (*Number* [optional]): Default to null. Limit the number of suggested options to be shown. For example, if `config.limit` is `100`, only the first `100` matching options are shown. It can be useful if a lot of options match and virtualization wasn\\'t set up.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): Defaults to `\\'any\\'`.\\n  - `config.stringify` (*Func* [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.\\n  - `config.trim ` (*Boolean* [optional]): Standardeinstellung ist `false`. Abschlie\\xdfende Leerzeichen entfernen.\\n\\n#### R\\xfcckgabewerte\\n\\n`filterOptions`: the returned filter method can be provided directly to the `filterOptions` prop of the `Autocomplete` component, or the parameter of the same name for the hook.\\n\\nIn der folgenden Demo m\\xfcssen die Optionen mit dem Abfragepr\\xe4fix beginnen:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### Erweitert\\n\\nFor richer filtering mechanisms, like fuzzy matching, it\\'s recommended to look at [match-sorter](https://github.com/kentcdodds/match-sorter). Zum Beispiel:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## Virtualisierung\\n\\nSuche innerhalb von 10.000 zuf\\xe4llig generierten Optionen. Die Liste ist virtualisiert dank [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## Einschr\\xe4nkungen\\n\\n### autocomplete/autofill\\n\\nDie Browser haben Heuristiken, um den Benutzern zu helfen, die Formulareingaben auszuf\\xfcllen. Es kann jedoch die UX der Komponente negativ beeinflussen.\\n\\nBy default, the component disable the **autocomplete** feature (remembering what the user has typed for a given field in a previous session) with the `autoComplete=\"off\"` attribute.\\n\\nZus\\xe4tzlich zur Speicherung der eingegebenen Werte kann der Browser aber auch **Autofill** Vorschl\\xe4ge vorschlagen (gespeichertes Login, Adresse oder Zahlungsinformationen). Falls Sie die automatische F\\xfcllung vermeiden m\\xf6chten, k\\xf6nnen Sie Folgendes versuchen:\\n\\n- Name the input without leaking any information the browser can use. e.g. `id=\"field1\"` instead of `id=\"country\"`. Wenn Sie die ID leer lassen, verwendet die Komponente eine zuf\\xe4llige ID.\\n- Setze `autoComplete=\"neues Passwort\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver auf iOS Safari unterst\\xfctzt das `aria-owns` Attribut nicht sehr gut. You can work around the issue with the `disablePortal` prop.\\n\\n### ListboxComponent\\n\\nIf you provide a custom `ListboxComponent` prop, you need to make sure that the intended scroll container has the `role` attribute set to `listbox`. This ensures the correct behavior of the scroll, for example when using the keyboard to navigate.\\n\\n## Barrierefreiheit\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nWir empfehlen die Verwendung eines Labels f\\xfcr die Textbox. Die Komponente implementiert die WAI-ARIA Autorenpraktiken.'},\"K+1R\":function(e,t){e.exports=function(e,t){var n=[];return 0===t.length?n.push({text:e,highlight:!1}):t[0][0]>0&&n.push({text:e.slice(0,t[0][0]),highlight:!1}),t.forEach((function(a,i){var o=a[0],r=a[1];n.push({text:e.slice(o,r),highlight:!0}),i===t.length-1?r<e.length&&n.push({text:e.slice(r,e.length),highlight:!1}):r<t[i+1][0]&&n.push({text:e.slice(r,t[i+1][0]),highlight:!1})})),n}},K4wR:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return L}));var a=n(\"8ET1\"),i=n.n(a),o=n(\"2Fjn\"),r=n(\"z3IF\"),l=n(\"bZJ2\"),s=n(\"mXGw\"),c=n.n(s),d=n(\"nx5Z\"),p=n(\"UiZO\"),u=n(\"LHO+\"),y=n(\"hSxP\"),h=n(\"LMpM\"),m=n(\"yZEQ\"),f=n(\"oBf6\"),g=n(\"Oy88\"),b=c.a.createElement;function T(e){var t=e.data,n=e.index,a=e.style;return c.a.cloneElement(t[n],{style:Object(l.a)(Object(l.a)({},a),{},{top:a.top+8})})}var S=c.a.createContext({}),v=c.a.forwardRef((function(e,t){var n=c.a.useContext(S);return b(\"div\",Object(r.a)({ref:t},e,n))}));var w=c.a.forwardRef((function(e,t){var n=e.children,a=Object(o.a)(e,[\"children\"]),i=c.a.Children.toArray(n),r=Object(h.a)(),l=Object(u.a)(r.breakpoints.up(\"sm\"),{noSsr:!0}),s=i.length,d=l?36:48,p=function(e){return c.a.isValidElement(e)&&e.type===y.a?48:d},m=function(e){var t=c.a.useRef(null);return c.a.useEffect((function(){null!=t.current&&t.current.resetAfterIndex(0,!0)}),[e]),t}(s);return b(\"div\",{ref:t},b(S.Provider,{value:a},b(f.b,{itemData:i,height:(s>8?8*d:i.map(p).reduce((function(e,t){return e+t}),0))+16,width:\"100%\",ref:m,outerElementType:v,innerElementType:\"ul\",itemSize:function(e){return p(i[e])},overscanCount:5,itemCount:s},T)))}));var A=Object(m.a)({listbox:{boxSizing:\"border-box\",\"& ul\":{padding:0,margin:0}}}),O=i()(new Array(1e4)).map((function(){return function(e){for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",n=\"\",a=0;a<e;a+=1)n+=t.charAt(Math.floor(Math.random()*t.length));return n}(10+Math.ceil(20*Math.random()))})).sort((function(e,t){return e.toUpperCase().localeCompare(t.toUpperCase())})),I=function(e){return[b(y.a,{key:e.key,component:\"div\"},e.group),e.children]};function L(){var e=A();return b(p.a,{id:\"virtualize-demo\",style:{width:300},disableListWrap:!0,classes:e,ListboxComponent:w,renderGroup:I,options:O,groupBy:function(e){return e[0].toUpperCase()},renderInput:function(e){return b(d.a,Object(r.a)({},e,{variant:\"outlined\",label:\"10,000 options\"}))},renderOption:function(e){return b(g.a,{noWrap:!0},e)}})}},Lemd:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function FreeSolo() {\\n  return (\\n    <div style={{ width: 300 }}>\\n      <Autocomplete\\n        id=\\\"free-solo-demo\\\"\\n        freeSolo\\n        options={top100Films.map((option) => option.title)}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            label=\\\"freeSolo\\\"\\n            margin=\\\"normal\\\"\\n            variant=\\\"outlined\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        freeSolo\\n        id=\\\"free-solo-2-demo\\\"\\n        disableClearable\\n        options={top100Films.map((option) => option.title)}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            label=\\\"Search input\\\"\\n            margin=\\\"normal\\\"\\n            variant=\\\"outlined\\\"\\n            InputProps={{\\n              ...params.InputProps,\\n              type: 'search',\\n            }}\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},N8OM:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// ISO 3166-1 alpha-2\\n// \\u26a0\\ufe0f No support for IE 11\\nfunction countryToFlag(isoCode) {\\n  return typeof String.fromCodePoint !== 'undefined'\\n    ? isoCode\\n        .toUpperCase()\\n        .replace(/./g, (char) =>\\n          String.fromCodePoint(char.charCodeAt(0) + 127397),\\n        )\\n    : isoCode;\\n}\\n\\nconst useStyles = makeStyles({\\n  option: {\\n    fontSize: 15,\\n    '& > span': {\\n      marginRight: 10,\\n      fontSize: 18,\\n    },\\n  },\\n});\\n\\nexport default function CountrySelect() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"country-select-demo\\\"\\n      style={{ width: 300 }}\\n      options={countries}\\n      classes={{\\n        option: classes.option,\\n      }}\\n      autoHighlight\\n      getOptionLabel={(option) => option.label}\\n      renderOption={(option) => (\\n        <React.Fragment>\\n          <span>{countryToFlag(option.code)}</span>\\n          {option.label} ({option.code}) +{option.phone}\\n        </React.Fragment>\\n      )}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Choose a country\\\"\\n          variant=\\\"outlined\\\"\\n          inputProps={{\\n            ...params.inputProps,\\n            autoComplete: 'new-password', // disable autocomplete and autofill\\n          }}\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\\nconst countries = [\\n  { code: 'AD', label: 'Andorra', phone: '376' },\\n  {\\n    code: 'AE',\\n    label: 'United Arab Emirates',\\n    phone: '971',\\n  },\\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\\n  {\\n    code: 'AG',\\n    label: 'Antigua and Barbuda',\\n    phone: '1-268',\\n  },\\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\\n  { code: 'AL', label: 'Albania', phone: '355' },\\n  { code: 'AM', label: 'Armenia', phone: '374' },\\n  { code: 'AO', label: 'Angola', phone: '244' },\\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\\n  { code: 'AR', label: 'Argentina', phone: '54' },\\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\\n  { code: 'AT', label: 'Austria', phone: '43' },\\n  {\\n    code: 'AU',\\n    label: 'Australia',\\n    phone: '61',\\n    suggested: true,\\n  },\\n  { code: 'AW', label: 'Aruba', phone: '297' },\\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\\n  {\\n    code: 'BA',\\n    label: 'Bosnia and Herzegovina',\\n    phone: '387',\\n  },\\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\\n  { code: 'BE', label: 'Belgium', phone: '32' },\\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\\n  { code: 'BH', label: 'Bahrain', phone: '973' },\\n  { code: 'BI', label: 'Burundi', phone: '257' },\\n  { code: 'BJ', label: 'Benin', phone: '229' },\\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\\n  { code: 'BO', label: 'Bolivia', phone: '591' },\\n  { code: 'BR', label: 'Brazil', phone: '55' },\\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\\n  { code: 'BT', label: 'Bhutan', phone: '975' },\\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\\n  { code: 'BW', label: 'Botswana', phone: '267' },\\n  { code: 'BY', label: 'Belarus', phone: '375' },\\n  { code: 'BZ', label: 'Belize', phone: '501' },\\n  {\\n    code: 'CA',\\n    label: 'Canada',\\n    phone: '1',\\n    suggested: true,\\n  },\\n  {\\n    code: 'CC',\\n    label: 'Cocos (Keeling) Islands',\\n    phone: '61',\\n  },\\n  {\\n    code: 'CD',\\n    label: 'Congo, Democratic Republic of the',\\n    phone: '243',\\n  },\\n  {\\n    code: 'CF',\\n    label: 'Central African Republic',\\n    phone: '236',\\n  },\\n  {\\n    code: 'CG',\\n    label: 'Congo, Republic of the',\\n    phone: '242',\\n  },\\n  { code: 'CH', label: 'Switzerland', phone: '41' },\\n  { code: 'CI', label: \\\"Cote d'Ivoire\\\", phone: '225' },\\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\\n  { code: 'CL', label: 'Chile', phone: '56' },\\n  { code: 'CM', label: 'Cameroon', phone: '237' },\\n  { code: 'CN', label: 'China', phone: '86' },\\n  { code: 'CO', label: 'Colombia', phone: '57' },\\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\\n  { code: 'CU', label: 'Cuba', phone: '53' },\\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\\n  { code: 'CW', label: 'Curacao', phone: '599' },\\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\\n  { code: 'CY', label: 'Cyprus', phone: '357' },\\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\\n  {\\n    code: 'DE',\\n    label: 'Germany',\\n    phone: '49',\\n    suggested: true,\\n  },\\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\\n  { code: 'DK', label: 'Denmark', phone: '45' },\\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\\n  {\\n    code: 'DO',\\n    label: 'Dominican Republic',\\n    phone: '1-809',\\n  },\\n  { code: 'DZ', label: 'Algeria', phone: '213' },\\n  { code: 'EC', label: 'Ecuador', phone: '593' },\\n  { code: 'EE', label: 'Estonia', phone: '372' },\\n  { code: 'EG', label: 'Egypt', phone: '20' },\\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\\n  { code: 'ER', label: 'Eritrea', phone: '291' },\\n  { code: 'ES', label: 'Spain', phone: '34' },\\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\\n  { code: 'FI', label: 'Finland', phone: '358' },\\n  { code: 'FJ', label: 'Fiji', phone: '679' },\\n  {\\n    code: 'FK',\\n    label: 'Falkland Islands (Malvinas)',\\n    phone: '500',\\n  },\\n  {\\n    code: 'FM',\\n    label: 'Micronesia, Federated States of',\\n    phone: '691',\\n  },\\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\\n  {\\n    code: 'FR',\\n    label: 'France',\\n    phone: '33',\\n    suggested: true,\\n  },\\n  { code: 'GA', label: 'Gabon', phone: '241' },\\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\\n  { code: 'GE', label: 'Georgia', phone: '995' },\\n  { code: 'GF', label: 'French Guiana', phone: '594' },\\n  { code: 'GG', label: 'Guernsey', phone: '44' },\\n  { code: 'GH', label: 'Ghana', phone: '233' },\\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\\n  { code: 'GL', label: 'Greenland', phone: '299' },\\n  { code: 'GM', label: 'Gambia', phone: '220' },\\n  { code: 'GN', label: 'Guinea', phone: '224' },\\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\\n  { code: 'GR', label: 'Greece', phone: '30' },\\n  {\\n    code: 'GS',\\n    label: 'South Georgia and the South Sandwich Islands',\\n    phone: '500',\\n  },\\n  { code: 'GT', label: 'Guatemala', phone: '502' },\\n  { code: 'GU', label: 'Guam', phone: '1-671' },\\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\\n  { code: 'GY', label: 'Guyana', phone: '592' },\\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\\n  {\\n    code: 'HM',\\n    label: 'Heard Island and McDonald Islands',\\n    phone: '672',\\n  },\\n  { code: 'HN', label: 'Honduras', phone: '504' },\\n  { code: 'HR', label: 'Croatia', phone: '385' },\\n  { code: 'HT', label: 'Haiti', phone: '509' },\\n  { code: 'HU', label: 'Hungary', phone: '36' },\\n  { code: 'ID', label: 'Indonesia', phone: '62' },\\n  { code: 'IE', label: 'Ireland', phone: '353' },\\n  { code: 'IL', label: 'Israel', phone: '972' },\\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\\n  { code: 'IN', label: 'India', phone: '91' },\\n  {\\n    code: 'IO',\\n    label: 'British Indian Ocean Territory',\\n    phone: '246',\\n  },\\n  { code: 'IQ', label: 'Iraq', phone: '964' },\\n  {\\n    code: 'IR',\\n    label: 'Iran, Islamic Republic of',\\n    phone: '98',\\n  },\\n  { code: 'IS', label: 'Iceland', phone: '354' },\\n  { code: 'IT', label: 'Italy', phone: '39' },\\n  { code: 'JE', label: 'Jersey', phone: '44' },\\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\\n  { code: 'JO', label: 'Jordan', phone: '962' },\\n  {\\n    code: 'JP',\\n    label: 'Japan',\\n    phone: '81',\\n    suggested: true,\\n  },\\n  { code: 'KE', label: 'Kenya', phone: '254' },\\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\\n  { code: 'KH', label: 'Cambodia', phone: '855' },\\n  { code: 'KI', label: 'Kiribati', phone: '686' },\\n  { code: 'KM', label: 'Comoros', phone: '269' },\\n  {\\n    code: 'KN',\\n    label: 'Saint Kitts and Nevis',\\n    phone: '1-869',\\n  },\\n  {\\n    code: 'KP',\\n    label: \\\"Korea, Democratic People's Republic of\\\",\\n    phone: '850',\\n  },\\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\\n  { code: 'KW', label: 'Kuwait', phone: '965' },\\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\\n  {\\n    code: 'LA',\\n    label: \\\"Lao People's Democratic Republic\\\",\\n    phone: '856',\\n  },\\n  { code: 'LB', label: 'Lebanon', phone: '961' },\\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\\n  { code: 'LR', label: 'Liberia', phone: '231' },\\n  { code: 'LS', label: 'Lesotho', phone: '266' },\\n  { code: 'LT', label: 'Lithuania', phone: '370' },\\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\\n  { code: 'LV', label: 'Latvia', phone: '371' },\\n  { code: 'LY', label: 'Libya', phone: '218' },\\n  { code: 'MA', label: 'Morocco', phone: '212' },\\n  { code: 'MC', label: 'Monaco', phone: '377' },\\n  {\\n    code: 'MD',\\n    label: 'Moldova, Republic of',\\n    phone: '373',\\n  },\\n  { code: 'ME', label: 'Montenegro', phone: '382' },\\n  {\\n    code: 'MF',\\n    label: 'Saint Martin (French part)',\\n    phone: '590',\\n  },\\n  { code: 'MG', label: 'Madagascar', phone: '261' },\\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\\n  {\\n    code: 'MK',\\n    label: 'Macedonia, the Former Yugoslav Republic of',\\n    phone: '389',\\n  },\\n  { code: 'ML', label: 'Mali', phone: '223' },\\n  { code: 'MM', label: 'Myanmar', phone: '95' },\\n  { code: 'MN', label: 'Mongolia', phone: '976' },\\n  { code: 'MO', label: 'Macao', phone: '853' },\\n  {\\n    code: 'MP',\\n    label: 'Northern Mariana Islands',\\n    phone: '1-670',\\n  },\\n  { code: 'MQ', label: 'Martinique', phone: '596' },\\n  { code: 'MR', label: 'Mauritania', phone: '222' },\\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\\n  { code: 'MT', label: 'Malta', phone: '356' },\\n  { code: 'MU', label: 'Mauritius', phone: '230' },\\n  { code: 'MV', label: 'Maldives', phone: '960' },\\n  { code: 'MW', label: 'Malawi', phone: '265' },\\n  { code: 'MX', label: 'Mexico', phone: '52' },\\n  { code: 'MY', label: 'Malaysia', phone: '60' },\\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\\n  { code: 'NA', label: 'Namibia', phone: '264' },\\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\\n  { code: 'NE', label: 'Niger', phone: '227' },\\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\\n  { code: 'NG', label: 'Nigeria', phone: '234' },\\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\\n  { code: 'NL', label: 'Netherlands', phone: '31' },\\n  { code: 'NO', label: 'Norway', phone: '47' },\\n  { code: 'NP', label: 'Nepal', phone: '977' },\\n  { code: 'NR', label: 'Nauru', phone: '674' },\\n  { code: 'NU', label: 'Niue', phone: '683' },\\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\\n  { code: 'OM', label: 'Oman', phone: '968' },\\n  { code: 'PA', label: 'Panama', phone: '507' },\\n  { code: 'PE', label: 'Peru', phone: '51' },\\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\\n  { code: 'PH', label: 'Philippines', phone: '63' },\\n  { code: 'PK', label: 'Pakistan', phone: '92' },\\n  { code: 'PL', label: 'Poland', phone: '48' },\\n  {\\n    code: 'PM',\\n    label: 'Saint Pierre and Miquelon',\\n    phone: '508',\\n  },\\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\\n  {\\n    code: 'PS',\\n    label: 'Palestine, State of',\\n    phone: '970',\\n  },\\n  { code: 'PT', label: 'Portugal', phone: '351' },\\n  { code: 'PW', label: 'Palau', phone: '680' },\\n  { code: 'PY', label: 'Paraguay', phone: '595' },\\n  { code: 'QA', label: 'Qatar', phone: '974' },\\n  { code: 'RE', label: 'Reunion', phone: '262' },\\n  { code: 'RO', label: 'Romania', phone: '40' },\\n  { code: 'RS', label: 'Serbia', phone: '381' },\\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\\n  { code: 'RW', label: 'Rwanda', phone: '250' },\\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\\n  { code: 'SC', label: 'Seychelles', phone: '248' },\\n  { code: 'SD', label: 'Sudan', phone: '249' },\\n  { code: 'SE', label: 'Sweden', phone: '46' },\\n  { code: 'SG', label: 'Singapore', phone: '65' },\\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\\n  { code: 'SI', label: 'Slovenia', phone: '386' },\\n  {\\n    code: 'SJ',\\n    label: 'Svalbard and Jan Mayen',\\n    phone: '47',\\n  },\\n  { code: 'SK', label: 'Slovakia', phone: '421' },\\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\\n  { code: 'SM', label: 'San Marino', phone: '378' },\\n  { code: 'SN', label: 'Senegal', phone: '221' },\\n  { code: 'SO', label: 'Somalia', phone: '252' },\\n  { code: 'SR', label: 'Suriname', phone: '597' },\\n  { code: 'SS', label: 'South Sudan', phone: '211' },\\n  {\\n    code: 'ST',\\n    label: 'Sao Tome and Principe',\\n    phone: '239',\\n  },\\n  { code: 'SV', label: 'El Salvador', phone: '503' },\\n  {\\n    code: 'SX',\\n    label: 'Sint Maarten (Dutch part)',\\n    phone: '1-721',\\n  },\\n  {\\n    code: 'SY',\\n    label: 'Syrian Arab Republic',\\n    phone: '963',\\n  },\\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\\n  {\\n    code: 'TC',\\n    label: 'Turks and Caicos Islands',\\n    phone: '1-649',\\n  },\\n  { code: 'TD', label: 'Chad', phone: '235' },\\n  {\\n    code: 'TF',\\n    label: 'French Southern Territories',\\n    phone: '262',\\n  },\\n  { code: 'TG', label: 'Togo', phone: '228' },\\n  { code: 'TH', label: 'Thailand', phone: '66' },\\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\\n  { code: 'TK', label: 'Tokelau', phone: '690' },\\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\\n  { code: 'TN', label: 'Tunisia', phone: '216' },\\n  { code: 'TO', label: 'Tonga', phone: '676' },\\n  { code: 'TR', label: 'Turkey', phone: '90' },\\n  {\\n    code: 'TT',\\n    label: 'Trinidad and Tobago',\\n    phone: '1-868',\\n  },\\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\\n  {\\n    code: 'TW',\\n    label: 'Taiwan, Province of China',\\n    phone: '886',\\n  },\\n  {\\n    code: 'TZ',\\n    label: 'United Republic of Tanzania',\\n    phone: '255',\\n  },\\n  { code: 'UA', label: 'Ukraine', phone: '380' },\\n  { code: 'UG', label: 'Uganda', phone: '256' },\\n  {\\n    code: 'US',\\n    label: 'United States',\\n    phone: '1',\\n    suggested: true,\\n  },\\n  { code: 'UY', label: 'Uruguay', phone: '598' },\\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\\n  {\\n    code: 'VA',\\n    label: 'Holy See (Vatican City State)',\\n    phone: '379',\\n  },\\n  {\\n    code: 'VC',\\n    label: 'Saint Vincent and the Grenadines',\\n    phone: '1-784',\\n  },\\n  { code: 'VE', label: 'Venezuela', phone: '58' },\\n  {\\n    code: 'VG',\\n    label: 'British Virgin Islands',\\n    phone: '1-284',\\n  },\\n  {\\n    code: 'VI',\\n    label: 'US Virgin Islands',\\n    phone: '1-340',\\n  },\\n  { code: 'VN', label: 'Vietnam', phone: '84' },\\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\\n  { code: 'WS', label: 'Samoa', phone: '685' },\\n  { code: 'XK', label: 'Kosovo', phone: '383' },\\n  { code: 'YE', label: 'Yemen', phone: '967' },\\n  { code: 'YT', label: 'Mayotte', phone: '262' },\\n  { code: 'ZA', label: 'South Africa', phone: '27' },\\n  { code: 'ZM', label: 'Zambia', phone: '260' },\\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\\n];\\n\"},\"NC+M\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function DisabledOptions() {\\n  return (\\n    <Autocomplete\\n      id=\\\"disabled-options-demo\\\"\\n      options={timeSlots}\\n      getOptionDisabled={(option) =>\\n        option === timeSlots[0] || option === timeSlots[2]\\n      }\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Disabled options\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// One time slot every 30 minutes.\\nconst timeSlots = Array.from(new Array(24 * 2)).map(\\n  (_, index) =>\\n    `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${\\n      index % 2 === 0 ? '00' : '30'\\n    }`,\\n);\\n\"},Nxct:function(e,t){e.exports=\"import React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete, {\\n  AutocompleteRenderGroupParams,\\n} from '@material-ui/lab/Autocomplete';\\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\\nimport { VariableSizeList, ListChildComponentProps } from 'react-window';\\nimport { Typography } from '@material-ui/core';\\n\\nconst LISTBOX_PADDING = 8; // px\\n\\nfunction renderRow(props: ListChildComponentProps) {\\n  const { data, index, style } = props;\\n  return React.cloneElement(data[index], {\\n    style: {\\n      ...style,\\n      top: (style.top as number) + LISTBOX_PADDING,\\n    },\\n  });\\n}\\n\\nconst OuterElementContext = React.createContext({});\\n\\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\\n  const outerProps = React.useContext(OuterElementContext);\\n  return <div ref={ref} {...props} {...outerProps} />;\\n});\\n\\nfunction useResetCache(data: any) {\\n  const ref = React.useRef<VariableSizeList>(null);\\n  React.useEffect(() => {\\n    if (ref.current != null) {\\n      ref.current.resetAfterIndex(0, true);\\n    }\\n  }, [data]);\\n  return ref;\\n}\\n\\n// Adapter for react-window\\nconst ListboxComponent = React.forwardRef<HTMLDivElement>(\\n  function ListboxComponent(props, ref) {\\n    const { children, ...other } = props;\\n    const itemData = React.Children.toArray(children);\\n    const theme = useTheme();\\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\\n      noSsr: true,\\n    });\\n    const itemCount = itemData.length;\\n    const itemSize = smUp ? 36 : 48;\\n\\n    const getChildSize = (child: React.ReactNode) => {\\n      if (React.isValidElement(child) && child.type === ListSubheader) {\\n        return 48;\\n      }\\n\\n      return itemSize;\\n    };\\n\\n    const getHeight = () => {\\n      if (itemCount > 8) {\\n        return 8 * itemSize;\\n      }\\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\\n    };\\n\\n    const gridRef = useResetCache(itemCount);\\n\\n    return (\\n      <div ref={ref}>\\n        <OuterElementContext.Provider value={other}>\\n          <VariableSizeList\\n            itemData={itemData}\\n            height={getHeight() + 2 * LISTBOX_PADDING}\\n            width=\\\"100%\\\"\\n            ref={gridRef}\\n            outerElementType={OuterElementType}\\n            innerElementType=\\\"ul\\\"\\n            itemSize={(index) => getChildSize(itemData[index])}\\n            overscanCount={5}\\n            itemCount={itemCount}\\n          >\\n            {renderRow}\\n          </VariableSizeList>\\n        </OuterElementContext.Provider>\\n      </div>\\n    );\\n  },\\n);\\n\\nfunction random(length: number) {\\n  const characters =\\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n  let result = '';\\n\\n  for (let i = 0; i < length; i += 1) {\\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\\n  }\\n\\n  return result;\\n}\\n\\nconst useStyles = makeStyles({\\n  listbox: {\\n    boxSizing: 'border-box',\\n    '& ul': {\\n      padding: 0,\\n      margin: 0,\\n    },\\n  },\\n});\\n\\nconst OPTIONS = Array.from(new Array(10000))\\n  .map(() => random(10 + Math.ceil(Math.random() * 20)))\\n  .sort((a: string, b: string) =>\\n    a.toUpperCase().localeCompare(b.toUpperCase()),\\n  );\\n\\nconst renderGroup = (params: AutocompleteRenderGroupParams) => [\\n  <ListSubheader key={params.key} component=\\\"div\\\">\\n    {params.group}\\n  </ListSubheader>,\\n  params.children,\\n];\\n\\nexport default function Virtualize() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"virtualize-demo\\\"\\n      style={{ width: 300 }}\\n      disableListWrap\\n      classes={classes}\\n      ListboxComponent={\\n        ListboxComponent as React.ComponentType<\\n          React.HTMLAttributes<HTMLElement>\\n        >\\n      }\\n      renderGroup={renderGroup}\\n      options={OPTIONS}\\n      groupBy={(option) => option[0].toUpperCase()}\\n      renderInput={(params) => (\\n        <TextField {...params} variant=\\\"outlined\\\" label=\\\"10,000 options\\\" />\\n      )}\\n      renderOption={(option) => <Typography noWrap>{option}</Typography>}\\n    />\\n  );\\n}\\n\"},OG8Y:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filterOptions = createFilterOptions({\\n  matchFrom: 'start',\\n  stringify: (option) => option.title,\\n});\\n\\nexport default function Filter() {\\n  return (\\n    <Autocomplete\\n      id=\\\"filter-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      filterOptions={filterOptions}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Custom filter\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},PJpw:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return y}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"F7gL\"),l=n(\"UiZO\"),s=n(\"yZEQ\"),c=n(\"WLtd\"),d=n(\"nx5Z\"),p=o.a.createElement,u=Object(s.a)((function(e){return Object(c.a)({root:{width:500,\"& > * + *\":{marginTop:e.spacing(2)}}})}));function y(){var e=u();return p(\"div\",{className:e.root},p(l.a,{id:\"size-small-standard\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:h[13],renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"standard\",label:\"Size small\",placeholder:\"Favorites\"}))}}),p(l.a,{multiple:!0,id:\"size-small-standard-multi\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:[h[13]],renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"standard\",label:\"Size small\",placeholder:\"Favorites\"}))}}),p(l.a,{id:\"size-small-outlined\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:h[13],renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Size small\",placeholder:\"Favorites\"}))}}),p(l.a,{multiple:!0,id:\"size-small-outlined-multi\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:[h[13]],renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Size small\",placeholder:\"Favorites\"}))}}),p(l.a,{id:\"size-small-filled\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:h[13],renderTags:function(e,t){return e.map((function(e,n){return p(r.a,Object(a.a)({variant:\"outlined\",label:e.title,size:\"small\"},t({index:n})))}))},renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"filled\",label:\"Size small\",placeholder:\"Favorites\"}))}}),p(l.a,{multiple:!0,id:\"size-small-filled-multi\",size:\"small\",options:h,getOptionLabel:function(e){return e.title},defaultValue:[h[13]],renderTags:function(e,t){return e.map((function(e,n){return p(r.a,Object(a.a)({variant:\"outlined\",label:e.title,size:\"small\"},t({index:n})))}))},renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"filled\",label:\"Size small\",placeholder:\"Favorites\"}))}}))}var h=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},PXAA:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function FixedTags() {\\n  const fixedOptions = [top100Films[6]];\\n  const [value, setValue] = React.useState([...fixedOptions, top100Films[13]]);\\n\\n  return (\\n    <Autocomplete\\n      multiple\\n      id=\\\"fixed-tags-demo\\\"\\n      value={value}\\n      onChange={(event, newValue) => {\\n        setValue([\\n          ...fixedOptions,\\n          ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\\n        ]);\\n      }}\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      renderTags={(tagValue, getTagProps) =>\\n        tagValue.map((option, index) => (\\n          <Chip\\n            label={option.title}\\n            {...getTagProps({ index })}\\n            disabled={fixedOptions.indexOf(option) !== -1}\\n          />\\n        ))\\n      }\\n      style={{ width: 500 }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Fixed tag\\\"\\n          variant=\\\"outlined\\\"\\n          placeholder=\\\"Favorites\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},QfbW:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return y}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=n(\"K+1R\"),c=n.n(s),d=n(\"THK9\"),p=n.n(d),u=o.a.createElement;function y(){return u(l.a,{id:\"highlights-demo\",style:{width:300},options:h,getOptionLabel:function(e){return e.title},renderInput:function(e){return u(r.a,Object(a.a)({},e,{label:\"Highlights\",variant:\"outlined\",margin:\"normal\"}))},renderOption:function(e,t){var n=t.inputValue,a=p()(e.title,n),i=c()(e.title,a);return u(\"div\",null,i.map((function(e,t){return u(\"span\",{key:t,style:{fontWeight:e.highlight?700:400}},e.text)})))}})}var h=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},QzF6:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: 500,\\n      '& > * + *': {\\n        marginTop: theme.spacing(3),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function LimitTags() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        multiple\\n        limitTags={2}\\n        id=\\\"multiple-limit-tags\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"limitTags\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},RHBV:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return m})),n.d(t,\"b\",(function(){return b}));var a=n(\"bZJ2\"),i=n(\"6mFX\"),o=n.n(i),r=n(\"s20r\"),l=n.n(r),s=n(\"hDBU\"),c=(n(\"JYC+\"),n(\"mXGw\")),d=n(\"b+iN\"),p=n(\"rbxJ\"),u=n(\"wFh9\"),y=n(\"kCiw\");function h(e){return\"undefined\"!==typeof e.normalize?e.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\"):e}function m(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.ignoreAccents,n=void 0===t||t,a=e.ignoreCase,i=void 0===a||a,o=e.limit,r=e.matchFrom,l=void 0===r?\"any\":r,s=e.stringify,c=e.trim,d=void 0!==c&&c;return function(e,t){var a=t.inputValue,r=t.getOptionLabel,c=d?a.trim():a;i&&(c=c.toLowerCase()),n&&(c=h(c));var p=e.filter((function(e){var t=(s||r)(e);return i&&(t=t.toLowerCase()),n&&(t=h(t)),\"start\"===l?0===t.indexOf(c):t.indexOf(c)>-1}));return\"number\"===typeof o?p.slice(0,o):p}}function f(e,t){for(var n=0;n<e.length;n+=1)if(t(e[n]))return n;return-1}var g=m();function b(e){var t=e.autoComplete,n=void 0!==t&&t,i=e.autoHighlight,r=void 0!==i&&i,h=e.autoSelect,m=void 0!==h&&h,b=e.blurOnSelect,T=void 0!==b&&b,S=e.clearOnBlur,v=void 0===S?!e.freeSolo:S,w=e.clearOnEscape,A=void 0!==w&&w,O=e.componentName,I=void 0===O?\"useAutocomplete\":O,L=e.debug,x=void 0!==L&&L,k=e.defaultValue,C=void 0===k?e.multiple?[]:null:k,F=e.disableClearable,R=void 0!==F&&F,P=e.disableCloseOnSelect,D=void 0!==P&&P,G=e.disabledItemsFocusable,M=void 0!==G&&G,B=e.disableListWrap,E=void 0!==B&&B,j=e.filterOptions,W=void 0===j?g:j,V=e.filterSelectedOptions,N=void 0!==V&&V,z=e.freeSolo,K=void 0!==z&&z,U=e.getOptionDisabled,H=e.getOptionLabel,J=void 0===H?function(e){return e}:H,q=e.getOptionSelected,Z=void 0===q?function(e,t){return e===t}:q,X=e.groupBy,Y=e.handleHomeEndKeys,Q=void 0===Y?!e.freeSolo:Y,$=e.id,_=e.includeInputInList,ee=void 0!==_&&_,te=e.inputValue,ne=e.multiple,ae=void 0!==ne&&ne,ie=e.onChange,oe=e.onClose,re=e.onHighlightChange,le=e.onInputChange,se=e.onOpen,ce=e.open,de=e.openOnFocus,pe=void 0!==de&&de,ue=e.options,ye=e.selectOnFocus,he=void 0===ye?!e.freeSolo:ye,me=e.value,fe=Object(d.a)($),ge=J;var be=c.useRef(!1),Te=c.useRef(!0),Se=c.useRef(null),ve=c.useRef(null),we=c.useState(null),Ae=we[0],Oe=we[1],Ie=c.useState(-1),Le=Ie[0],xe=Ie[1],ke=r?0:-1,Ce=c.useRef(ke),Fe=Object(p.a)({controlled:me,default:C,name:I}),Re=Object(s.a)(Fe,2),Pe=Re[0],De=Re[1],Ge=Object(p.a)({controlled:te,default:\"\",name:I,state:\"inputValue\"}),Me=Object(s.a)(Ge,2),Be=Me[0],Ee=Me[1],je=c.useState(!1),We=je[0],Ve=je[1],Ne=Object(u.a)((function(e,t){var n;if(ae)n=\"\";else if(null==t)n=\"\";else{var a=ge(t);n=\"string\"===typeof a?a:\"\"}Be!==n&&(Ee(n),le&&le(e,n,\"reset\"))}));c.useEffect((function(){Ne(null,Pe)}),[Pe,Ne]);var ze=Object(p.a)({controlled:ce,default:!1,name:I,state:\"open\"}),Ke=Object(s.a)(ze,2),Ue=Ke[0],He=Ke[1],Je=!ae&&null!=Pe&&Be===ge(Pe),qe=Ue,Ze=qe?W(ue.filter((function(e){return!N||!(ae?Pe:[Pe]).some((function(t){return null!==t&&Z(e,t)}))})),{inputValue:Je?\"\":Be,getOptionLabel:ge}):[],Xe=Object(u.a)((function(e){-1===e?Se.current.focus():Ae.querySelector('[data-tag-index=\"'.concat(e,'\"]')).focus()}));c.useEffect((function(){ae&&Le>Pe.length-1&&(xe(-1),Xe(-1))}),[Pe,ae,Le,Xe]);var Ye=Object(u.a)((function(e){var t=e.event,n=e.index,a=e.reason,i=void 0===a?\"auto\":a;if(Ce.current=n,-1===n?Se.current.removeAttribute(\"aria-activedescendant\"):Se.current.setAttribute(\"aria-activedescendant\",\"\".concat(fe,\"-option-\").concat(n)),re&&re(t,-1===n?null:Ze[n],i),ve.current){var o=ve.current.querySelector(\"[data-focus]\");o&&o.removeAttribute(\"data-focus\");var r=ve.current.parentElement.querySelector('[role=\"listbox\"]');if(r)if(-1!==n){var l=ve.current.querySelector('[data-option-index=\"'.concat(n,'\"]'));if(l&&(l.setAttribute(\"data-focus\",\"true\"),r.scrollHeight>r.clientHeight&&\"mouse\"!==i)){var s=l,c=r.clientHeight+r.scrollTop,d=s.offsetTop+s.offsetHeight;d>c?r.scrollTop=d-r.clientHeight:s.offsetTop-s.offsetHeight*(X?1.3:0)<r.scrollTop&&(r.scrollTop=s.offsetTop-s.offsetHeight*(X?1.3:0))}}else r.scrollTop=0}})),Qe=Object(u.a)((function(e){var t=e.event,a=e.diff,i=e.direction,o=void 0===i?\"next\":i,r=e.reason,l=void 0===r?\"auto\":r;if(qe){var s=function(e,t){if(!ve.current||-1===e)return-1;for(var n=e;;){if(\"next\"===t&&n===Ze.length||\"previous\"===t&&-1===n)return-1;var a=ve.current.querySelector('[data-option-index=\"'.concat(n,'\"]')),i=!M&&(!a||a.disabled||\"true\"===a.getAttribute(\"aria-disabled\"));if(!(a&&!a.hasAttribute(\"tabindex\")||i))return n;n+=\"next\"===t?1:-1}}(function(){var e=Ze.length-1;if(\"reset\"===a)return ke;if(\"start\"===a)return 0;if(\"end\"===a)return e;var t=Ce.current+a;return t<0?-1===t&&ee?-1:E&&-1!==Ce.current||Math.abs(a)>1?0:e:t>e?t===e+1&&ee?-1:E||Math.abs(a)>1?e:0:t}(),o);if(Ye({index:s,reason:l,event:t}),n&&\"reset\"!==a)if(-1===s)Se.current.value=Be;else{var c=ge(Ze[s]);Se.current.value=c,0===c.toLowerCase().indexOf(Be.toLowerCase())&&Be.length>0&&Se.current.setSelectionRange(Be.length,c.length)}}})),$e=c.useCallback((function(){if(qe){var e=ae?Pe[0]:Pe;if(0!==Ze.length&&null!=e){if(ve.current)if(N||null==e)Ce.current>=Ze.length-1?Ye({index:Ze.length-1}):Ye({index:Ce.current});else{var t=Ze[Ce.current];if(ae&&t&&-1!==f(Pe,(function(e){return Z(t,e)})))return;var n=f(Ze,(function(t){return Z(t,e)}));-1===n?Qe({diff:\"reset\"}):Ye({index:n})}}else Qe({diff:\"reset\"})}}),[0===Ze.length,!ae&&Pe,N,Qe,Ye,qe,Be,ae]),_e=Object(u.a)((function(e){Object(y.a)(ve,e),e&&$e()}));c.useEffect((function(){$e()}),[$e]);var et=function(e){Ue||(He(!0),se&&se(e))},tt=function(e,t){Ue&&(He(!1),oe&&oe(e,t))},nt=function(e,t,n,a){Pe!==t&&(ie&&ie(e,t,n,a),De(t))},at=c.useRef(!1),it=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"select-option\",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"options\",i=n,o=t;if(ae){var r=f(o=l()(Pe)?Pe.slice():[],(function(e){return Z(t,e)}));-1===r?o.push(t):\"freeSolo\"!==a&&(o.splice(r,1),i=\"remove-option\")}Ne(e,o),nt(e,o,i,{option:t}),D||tt(e,i),(!0===T||\"touch\"===T&&at.current||\"mouse\"===T&&!at.current)&&Se.current.blur()};var ot=function(e,t){if(ae){tt(e,\"toggleInput\");var n=Le;-1===Le?\"\"===Be&&\"previous\"===t&&(n=Pe.length-1):((n+=\"next\"===t?1:-1)<0&&(n=0),n===Pe.length&&(n=-1)),n=function(e,t){if(-1===e)return-1;for(var n=e;;){if(\"next\"===t&&n===Pe.length||\"previous\"===t&&-1===n)return-1;var a=Ae.querySelector('[data-tag-index=\"'.concat(n,'\"]'));if(a&&a.hasAttribute(\"tabindex\")&&!a.disabled&&\"true\"!==a.getAttribute(\"aria-disabled\"))return n;n+=\"next\"===t?1:-1}}(n,t),xe(n),Xe(n)}},rt=function(e){be.current=!0,Ee(\"\"),le&&le(e,\"\",\"clear\"),nt(e,ae?[]:null,\"clear\")},lt=function(e){return function(t){switch(-1!==Le&&-1===[\"ArrowLeft\",\"ArrowRight\"].indexOf(t.key)&&(xe(-1),Xe(-1)),t.key){case\"Home\":qe&&Q&&(t.preventDefault(),Qe({diff:\"start\",direction:\"next\",reason:\"keyboard\",event:t}));break;case\"End\":qe&&Q&&(t.preventDefault(),Qe({diff:\"end\",direction:\"previous\",reason:\"keyboard\",event:t}));break;case\"PageUp\":t.preventDefault(),Qe({diff:-5,direction:\"previous\",reason:\"keyboard\",event:t}),et(t);break;case\"PageDown\":t.preventDefault(),Qe({diff:5,direction:\"next\",reason:\"keyboard\",event:t}),et(t);break;case\"ArrowDown\":t.preventDefault(),Qe({diff:1,direction:\"next\",reason:\"keyboard\",event:t}),et(t);break;case\"ArrowUp\":t.preventDefault(),Qe({diff:-1,direction:\"previous\",reason:\"keyboard\",event:t}),et(t);break;case\"ArrowLeft\":ot(t,\"previous\");break;case\"ArrowRight\":ot(t,\"next\");break;case\"Enter\":if(229===t.which)break;if(-1!==Ce.current&&qe){var a=Ze[Ce.current],i=!!U&&U(a);if(t.preventDefault(),i)return;it(t,a,\"select-option\"),n&&Se.current.setSelectionRange(Se.current.value.length,Se.current.value.length)}else K&&\"\"!==Be&&!1===Je&&(ae&&t.preventDefault(),it(t,Be,\"create-option\",\"freeSolo\"));break;case\"Escape\":qe?(t.preventDefault(),t.stopPropagation(),tt(t,\"escape\")):A&&(\"\"!==Be||ae&&Pe.length>0)&&(t.preventDefault(),t.stopPropagation(),rt(t));break;case\"Backspace\":if(ae&&\"\"===Be&&Pe.length>0){var o=-1===Le?Pe.length-1:Le,r=Pe.slice();r.splice(o,1),nt(t,r,\"remove-option\",{option:Pe[o]})}}e.onKeyDown&&e.onKeyDown(t)}},st=function(e){Ve(!0),pe&&!be.current&&et(e)},ct=function(e){null===ve.current||document.activeElement!==ve.current.parentElement?(Ve(!1),Te.current=!0,be.current=!1,x&&\"\"!==Be||(m&&-1!==Ce.current&&qe?it(e,Ze[Ce.current],\"blur\"):m&&K&&\"\"!==Be?it(e,Be,\"blur\",\"freeSolo\"):v&&Ne(e,Pe),tt(e,\"blur\"))):Se.current.focus()},dt=function(e){var t=e.target.value;Be!==t&&(Ee(t),le&&le(e,t,\"input\")),\"\"===t?R||ae||nt(e,null,\"clear\"):et(e)},pt=function(e){Ye({event:e,index:Number(e.currentTarget.getAttribute(\"data-option-index\")),reason:\"mouse\"})},ut=function(){at.current=!0},yt=function(e){var t=Number(e.currentTarget.getAttribute(\"data-option-index\"));it(e,Ze[t],\"select-option\"),at.current=!1},ht=function(e){return function(t){var n=Pe.slice();n.splice(e,1),nt(t,n,\"remove-option\",{option:Pe[e]})}},mt=function(e){Ue?tt(e,\"toggleInput\"):et(e)},ft=function(e){e.target.getAttribute(\"id\")!==fe&&e.preventDefault()},gt=function(){Se.current.focus(),he&&Te.current&&Se.current.selectionEnd-Se.current.selectionStart===0&&Se.current.select(),Te.current=!1},bt=function(e){\"\"!==Be&&Ue||mt(e)},Tt=K&&Be.length>0;Tt=Tt||(ae?Pe.length>0:null!==Pe);var St=Ze;if(X){new o.a;St=Ze.reduce((function(e,t,n){var a=X(t);return e.length>0&&e[e.length-1].group===a?e[e.length-1].options.push(t):e.push({key:n,index:n,group:a,options:[t]}),e}),[])}return{getRootProps:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object(a.a)(Object(a.a)({\"aria-owns\":qe?\"\".concat(fe,\"-popup\"):null,role:\"combobox\",\"aria-expanded\":qe},e),{},{onKeyDown:lt(e),onMouseDown:ft,onClick:gt})},getInputLabelProps:function(){return{id:\"\".concat(fe,\"-label\"),htmlFor:fe}},getInputProps:function(){return{id:fe,value:Be,onBlur:ct,onFocus:st,onChange:dt,onMouseDown:bt,\"aria-activedescendant\":qe?\"\":null,\"aria-autocomplete\":n?\"both\":\"list\",\"aria-controls\":qe?\"\".concat(fe,\"-popup\"):null,autoComplete:\"off\",ref:Se,autoCapitalize:\"none\",spellCheck:\"false\"}},getClearProps:function(){return{tabIndex:-1,onClick:rt}},getPopupIndicatorProps:function(){return{tabIndex:-1,onClick:mt}},getTagProps:function(e){var t=e.index;return{key:t,\"data-tag-index\":t,tabIndex:-1,onDelete:ht(t)}},getListboxProps:function(){return{role:\"listbox\",id:\"\".concat(fe,\"-popup\"),\"aria-labelledby\":\"\".concat(fe,\"-label\"),ref:_e,onMouseDown:function(e){e.preventDefault()}}},getOptionProps:function(e){var t=e.index,n=e.option,a=(ae?Pe:[Pe]).some((function(e){return null!=e&&Z(n,e)})),i=!!U&&U(n);return{key:t,tabIndex:-1,role:\"option\",id:\"\".concat(fe,\"-option-\").concat(t),onMouseOver:pt,onClick:yt,onTouchStart:ut,\"data-option-index\":t,\"aria-disabled\":i,\"aria-selected\":a}},id:fe,inputValue:Be,value:Pe,dirty:Tt,popupOpen:qe,focused:We||-1!==Le,anchorEl:Ae,setAnchorEl:Oe,focusedTag:Le,groupedOptions:St}}},RiJl:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function Playground() {\\n  const defaultProps = {\\n    options: top100Films,\\n    getOptionLabel: (option) => option.title,\\n  };\\n\\n  const flatProps = {\\n    options: top100Films.map((option) => option.title),\\n  };\\n\\n  const [value, setValue] = React.useState(null);\\n\\n  return (\\n    <div style={{ width: 300 }}>\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"debug\\\"\\n        debug\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"debug\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-close-on-select\\\"\\n        disableCloseOnSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableCloseOnSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"clear-on-escape\\\"\\n        clearOnEscape\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"clearOnEscape\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-clearable\\\"\\n        disableClearable\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableClearable\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"include-input-in-list\\\"\\n        includeInputInList\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"includeInputInList\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...flatProps}\\n        id=\\\"flat-demo\\\"\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"flat\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"controlled-demo\\\"\\n        value={value}\\n        onChange={(event, newValue) => {\\n          setValue(newValue);\\n        }}\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"controlled\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-complete\\\"\\n        autoComplete\\n        includeInputInList\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoComplete\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-list-wrap\\\"\\n        disableListWrap\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disableListWrap\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"open-on-focus\\\"\\n        openOnFocus\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"openOnFocus\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-highlight\\\"\\n        autoHighlight\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoHighlight\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"auto-select\\\"\\n        autoSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"autoSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disabled\\\"\\n        disabled\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disabled\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"disable-portal\\\"\\n        disablePortal\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"disablePortal\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"blur-on-select\\\"\\n        blurOnSelect\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"blurOnSelect\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"clear-on-blur\\\"\\n        clearOnBlur\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"clearOnBlur\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n      <Autocomplete\\n        {...defaultProps}\\n        id=\\\"select-on-focus\\\"\\n        selectOnFocus\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"selectOnFocus\\\" margin=\\\"normal\\\" />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},SA17:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"RHBV\"),s=n(\"UiZO\"),c=o.a.createElement,d=Object(l.a)();function p(){var e=o.a.useState(null),t=e[0],n=e[1];return c(s.a,{value:t,onChange:function(e,t){\"string\"===typeof t?n({title:t}):t&&t.inputValue?n({title:t.inputValue}):n(t)},filterOptions:function(e,t){var n=d(e,t);return\"\"!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add \"'.concat(t.inputValue,'\"')}),n},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,id:\"free-solo-with-text-demo\",options:u,getOptionLabel:function(e){return\"string\"===typeof e?e:e.inputValue?e.inputValue:e.title},renderOption:function(e){return e.title},style:{width:300},freeSolo:!0,renderInput:function(e){return c(r.a,Object(a.a)({},e,{label:\"Free solo with text demo\",variant:\"outlined\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},SvZJ:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport styled from 'styled-components';\\n\\nconst Label = styled('label')`\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n`;\\n\\nconst InputWrapper = styled('div')`\\n  width: 300px;\\n  border: 1px solid #d9d9d9;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 30px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n`;\\n\\nconst Tag = styled(({ label, onDelete, ...props }) => (\\n  <div {...props}>\\n    <span>{label}</span>\\n    <CloseIcon onClick={onDelete} />\\n  </div>\\n))`\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #fafafa;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n`;\\n\\nconst Listbox = styled('ul')`\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n`;\\n\\nexport default function CustomizedHook() {\\n  const {\\n    getRootProps,\\n    getInputLabelProps,\\n    getInputProps,\\n    getTagProps,\\n    getListboxProps,\\n    getOptionProps,\\n    groupedOptions,\\n    value,\\n    focused,\\n    setAnchorEl,\\n  } = useAutocomplete({\\n    id: 'customized-hook-demo',\\n    defaultValue: [top100Films[1]],\\n    multiple: true,\\n    options: top100Films,\\n    getOptionLabel: (option) => option.title,\\n  });\\n\\n  return (\\n    <NoSsr>\\n      <div>\\n        <div {...getRootProps()}>\\n          <Label {...getInputLabelProps()}>Customized hook</Label>\\n          <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\\n            {value.map((option: FilmOptionType, index: number) => (\\n              <Tag label={option.title} {...getTagProps({ index })} />\\n            ))}\\n            <input {...getInputProps()} />\\n          </InputWrapper>\\n        </div>\\n        {groupedOptions.length > 0 ? (\\n          <Listbox {...getListboxProps()}>\\n            {groupedOptions.map((option, index) => (\\n              <li {...getOptionProps({ option, index })}>\\n                <span>{option.title}</span>\\n                <CheckIcon fontSize=\\\"small\\\" />\\n              </li>\\n            ))}\\n          </Listbox>\\n        ) : null}\\n      </div>\\n    </NoSsr>\\n  );\\n}\\n\\ninterface FilmOptionType {\\n  title: string;\\n  year: number;\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},THK9:function(e,t,n){var a=n(\"JQxD\").clean,i=/[.*+?^${}()|[\\]\\\\]/g,o=/[a-z0-9_]/i,r=/\\s+/;e.exports=function(e,t){return e=a(e),(t=a(t)).trim().split(r).filter((function(e){return e.length>0})).reduce((function(t,n){var a=n.length,r=o.test(n[0])?\"\\\\b\":\"\",l=new RegExp(r+n.replace(i,\"\\\\$&\"),\"i\"),s=e.search(l);return s>-1&&(t.push([s,s+a]),e=e.slice(0,s)+new Array(a+1).join(\" \")+e.slice(s+a)),t}),[]).sort((function(e,t){return e[0]-t[0]}))}},TVTY:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filterOptions = createFilterOptions({\\n  matchFrom: 'start',\\n  stringify: (option: FilmOptionType) => option.title,\\n});\\n\\nexport default function Filter() {\\n  return (\\n    <Autocomplete\\n      id=\\\"filter-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      filterOptions={filterOptions}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Custom filter\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\ninterface FilmOptionType {\\n  title: string;\\n  year: number;\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},Trsq:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"RHBV\"),s=n(\"UiZO\"),c=o.a.createElement,d=Object(l.a)();function p(){var e=o.a.useState(null),t=e[0],n=e[1];return c(s.a,{value:t,onChange:function(e,t){\"string\"===typeof t?n({title:t}):t&&t.inputValue?n({title:t.inputValue}):n(t)},filterOptions:function(e,t){var n=d(e,t);return\"\"!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add \"'.concat(t.inputValue,'\"')}),n},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,id:\"free-solo-with-text-demo\",options:u,getOptionLabel:function(e){return\"string\"===typeof e?e:e.inputValue?e.inputValue:e.title},renderOption:function(e){return e.title},style:{width:300},freeSolo:!0,renderInput:function(e){return c(r.a,Object(a.a)({},e,{label:\"Free solo with text demo\",variant:\"outlined\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"U+sF\":function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"}),\"LocationOn\")},UiZO:function(e,t,n){\"use strict\";var a=n(\"s20r\"),i=n.n(a),o=n(\"z3IF\"),r=n(\"2Fjn\"),l=n(\"azxR\"),s=n(\"bZJ2\"),c=n(\"mXGw\"),d=n(\"PDtE\"),p=n(\"XpU0\"),u=n(\"oRPM\"),y=n(\"hSxP\"),h=n(\"VPks\"),m=n(\"l/nz\"),f=n(\"F7gL\"),g=n(\"eV2K\"),b=n(\"vtGe\"),T=c.createElement,S=Object(b.a)(T(\"path\",{d:\"M7 10l5 5 5-5z\"}),\"ArrowDropDown\"),v=n(\"RHBV\"),w=c.createElement;function A(e){e.anchorEl,e.open;var t=Object(r.a)(e,[\"anchorEl\",\"open\"]);return w(\"div\",t)}var O=w(g.a,{fontSize:\"small\"}),I=w(S,null),L=c.forwardRef((function(e,t){e.autoComplete,e.autoHighlight,e.autoSelect,e.blurOnSelect;var n,a=e.ChipProps,l=e.classes,p=e.className,g=e.clearOnBlur,b=(void 0===g&&e.freeSolo,e.clearOnEscape,e.clearText),T=void 0===b?\"Clear\":b,S=e.closeIcon,L=void 0===S?O:S,x=e.closeText,k=void 0===x?\"Close\":x,C=(e.debug,e.defaultValue),F=(void 0===C&&e.multiple,e.disableClearable),R=void 0!==F&&F,P=(e.disableCloseOnSelect,e.disabled),D=void 0!==P&&P,G=(e.disabledItemsFocusable,e.disableListWrap,e.disablePortal),M=void 0!==G&&G,B=(e.filterOptions,e.filterSelectedOptions,e.forcePopupIcon),E=void 0===B?\"auto\":B,j=e.freeSolo,W=void 0!==j&&j,V=e.fullWidth,N=void 0!==V&&V,z=e.getLimitTagsText,K=void 0===z?function(e){return\"+\".concat(e)}:z,U=(e.getOptionDisabled,e.getOptionLabel),H=void 0===U?function(e){return e}:U,J=(e.getOptionSelected,e.groupBy),q=e.handleHomeEndKeys,Z=(void 0===q&&e.freeSolo,e.id,e.includeInputInList,e.inputValue,e.limitTags),X=void 0===Z?-1:Z,Y=e.ListboxComponent,Q=void 0===Y?\"ul\":Y,$=e.ListboxProps,_=e.loading,ee=void 0!==_&&_,te=e.loadingText,ne=void 0===te?\"Loading\\u2026\":te,ae=e.multiple,ie=void 0!==ae&&ae,oe=e.noOptionsText,re=void 0===oe?\"No options\":oe,le=(e.onChange,e.onClose,e.onHighlightChange,e.onInputChange,e.onOpen,e.open,e.openOnFocus,e.openText),se=void 0===le?\"Open\":le,ce=(e.options,e.PaperComponent),de=void 0===ce?h.a:ce,pe=e.PopperComponent,ue=void 0===pe?u.a:pe,ye=e.popupIcon,he=void 0===ye?I:ye,me=e.renderGroup,fe=e.renderInput,ge=e.renderOption,be=e.renderTags,Te=e.selectOnFocus,Se=(void 0===Te&&e.freeSolo,e.size),ve=void 0===Se?\"medium\":Se,we=(e.value,Object(r.a)(e,[\"autoComplete\",\"autoHighlight\",\"autoSelect\",\"blurOnSelect\",\"ChipProps\",\"classes\",\"className\",\"clearOnBlur\",\"clearOnEscape\",\"clearText\",\"closeIcon\",\"closeText\",\"debug\",\"defaultValue\",\"disableClearable\",\"disableCloseOnSelect\",\"disabled\",\"disabledItemsFocusable\",\"disableListWrap\",\"disablePortal\",\"filterOptions\",\"filterSelectedOptions\",\"forcePopupIcon\",\"freeSolo\",\"fullWidth\",\"getLimitTagsText\",\"getOptionDisabled\",\"getOptionLabel\",\"getOptionSelected\",\"groupBy\",\"handleHomeEndKeys\",\"id\",\"includeInputInList\",\"inputValue\",\"limitTags\",\"ListboxComponent\",\"ListboxProps\",\"loading\",\"loadingText\",\"multiple\",\"noOptionsText\",\"onChange\",\"onClose\",\"onHighlightChange\",\"onInputChange\",\"onOpen\",\"open\",\"openOnFocus\",\"openText\",\"options\",\"PaperComponent\",\"PopperComponent\",\"popupIcon\",\"renderGroup\",\"renderInput\",\"renderOption\",\"renderTags\",\"selectOnFocus\",\"size\",\"value\"])),Ae=M?A:ue,Oe=Object(v.b)(Object(s.a)(Object(s.a)({},e),{},{componentName:\"Autocomplete\"})),Ie=Oe.getRootProps,Le=Oe.getInputProps,xe=Oe.getInputLabelProps,ke=Oe.getPopupIndicatorProps,Ce=Oe.getClearProps,Fe=Oe.getTagProps,Re=Oe.getListboxProps,Pe=Oe.getOptionProps,De=Oe.value,Ge=Oe.dirty,Me=Oe.id,Be=Oe.popupOpen,Ee=Oe.focused,je=Oe.focusedTag,We=Oe.anchorEl,Ve=Oe.setAnchorEl,Ne=Oe.inputValue,ze=Oe.groupedOptions;if(ie&&De.length>0){var Ke=function(e){return Object(s.a)({className:Object(d.a)(l.tag,\"small\"===ve&&l.tagSizeSmall),disabled:D},Fe(e))};n=be?be(De,Ke):De.map((function(e,t){return w(f.a,Object(o.a)({label:H(e),size:ve},Ke({index:t}),a))}))}if(X>-1&&i()(n)){var Ue=n.length-X;!Ee&&Ue>0&&(n=n.splice(0,X)).push(w(\"span\",{className:l.tag,key:n.length},K(Ue)))}var He=me||function(e){return w(\"li\",{key:e.key},w(y.a,{className:l.groupLabel,component:\"div\"},e.group),w(\"ul\",{className:l.groupUl},e.children))},Je=ge||H,qe=function(e,t){var n=Pe({option:e,index:t});return w(\"li\",Object(o.a)({},n,{className:l.option}),Je(e,{selected:n[\"aria-selected\"],inputValue:Ne}))},Ze=!R&&!D,Xe=(!W||!0===E)&&!1!==E;return w(c.Fragment,null,w(\"div\",Object(o.a)({ref:t,className:Object(d.a)(l.root,p,Ee&&l.focused,N&&l.fullWidth,Ze&&l.hasClearIcon,Xe&&l.hasPopupIcon)},Ie(we)),fe({id:Me,disabled:D,fullWidth:!0,size:\"small\"===ve?\"small\":void 0,InputLabelProps:xe(),InputProps:{ref:Ve,className:l.inputRoot,startAdornment:n,endAdornment:w(\"div\",{className:l.endAdornment},Ze?w(m.a,Object(o.a)({},Ce(),{\"aria-label\":T,title:T,className:Object(d.a)(l.clearIndicator,Ge&&l.clearIndicatorDirty)}),L):null,Xe?w(m.a,Object(o.a)({},ke(),{disabled:D,\"aria-label\":Be?k:se,title:Be?k:se,className:Object(d.a)(l.popupIndicator,Be&&l.popupIndicatorOpen)}),he):null)},inputProps:Object(s.a)({className:Object(d.a)(l.input,-1===je&&l.inputFocused),disabled:D},Le())})),Be&&We?w(Ae,{className:Object(d.a)(l.popper,M&&l.popperDisablePortal),style:{width:We?We.clientWidth:null},role:\"presentation\",anchorEl:We,open:!0},w(de,{className:l.paper},ee&&0===ze.length?w(\"div\",{className:l.loading},ne):null,0!==ze.length||W||ee?null:w(\"div\",{className:l.noOptions},re),ze.length>0?w(Q,Object(o.a)({className:l.listbox},Re(),$),ze.map((function(e,t){return J?He({key:e.key,group:e.group,children:e.options.map((function(t,n){return qe(t,e.index+n)}))}):qe(e,t)}))):null)):null)}));t.a=Object(p.default)((function(e){var t;return{root:{\"&$focused $clearIndicatorDirty\":{visibility:\"visible\"},\"@media (pointer: fine)\":{\"&:hover $clearIndicatorDirty\":{visibility:\"visible\"}}},fullWidth:{width:\"100%\"},focused:{},tag:{margin:3,maxWidth:\"calc(100% - 6px)\"},tagSizeSmall:{margin:2,maxWidth:\"calc(100% - 4px)\"},hasPopupIcon:{},hasClearIcon:{},inputRoot:{flexWrap:\"wrap\",\"$hasPopupIcon &, $hasClearIcon &\":{paddingRight:30},\"$hasPopupIcon$hasClearIcon &\":{paddingRight:56},\"& $input\":{width:0,minWidth:30},'&[class*=\"MuiInput-root\"]':{paddingBottom:1,\"& $input\":{padding:4},\"& $input:first-child\":{padding:\"6px 0\"}},'&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]':{\"& $input\":{padding:\"4px 4px 5px\"},\"& $input:first-child\":{padding:\"3px 0 6px\"}},'&[class*=\"MuiOutlinedInput-root\"]':{padding:9,\"$hasPopupIcon &, $hasClearIcon &\":{paddingRight:39},\"$hasPopupIcon$hasClearIcon &\":{paddingRight:65},\"& $input\":{padding:\"9.5px 4px\"},\"& $input:first-child\":{paddingLeft:6},\"& $endAdornment\":{right:9}},'&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]':{padding:6,\"& $input\":{padding:\"4.5px 4px\"}},'&[class*=\"MuiFilledInput-root\"]':{paddingTop:19,paddingLeft:8,\"$hasPopupIcon &, $hasClearIcon &\":{paddingRight:39},\"$hasPopupIcon$hasClearIcon &\":{paddingRight:65},\"& $input\":{padding:\"9px 4px\"},\"& $endAdornment\":{right:9}},'&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]':{paddingBottom:1,\"& $input\":{padding:\"4.5px 4px\"}}},input:{flexGrow:1,textOverflow:\"ellipsis\",opacity:0},inputFocused:{opacity:1},endAdornment:{position:\"absolute\",right:0,top:\"calc(50% - 14px)\"},clearIndicator:{marginRight:-2,padding:4,visibility:\"hidden\"},clearIndicatorDirty:{},popupIndicator:{padding:2,marginRight:-2},popupIndicatorOpen:{transform:\"rotate(180deg)\"},popper:{zIndex:e.zIndex.modal},popperDisablePortal:{position:\"absolute\"},paper:Object(s.a)(Object(s.a)({},e.typography.body1),{},{overflow:\"hidden\",margin:\"4px 0\"}),listbox:{listStyle:\"none\",margin:0,padding:\"8px 0\",maxHeight:\"40vh\",overflow:\"auto\"},loading:{color:e.palette.text.secondary,padding:\"14px 16px\"},noOptions:{color:e.palette.text.secondary,padding:\"14px 16px\"},option:(t={minHeight:48,display:\"flex\",justifyContent:\"flex-start\",alignItems:\"center\",cursor:\"pointer\",paddingTop:6,boxSizing:\"border-box\",outline:\"0\",WebkitTapHighlightColor:\"transparent\",paddingBottom:6,paddingLeft:16,paddingRight:16},Object(l.a)(t,e.breakpoints.up(\"sm\"),{minHeight:\"auto\"}),Object(l.a)(t,'&[aria-selected=\"true\"]',{backgroundColor:e.palette.action.selected}),Object(l.a)(t,'&[data-focus=\"true\"]',{backgroundColor:e.palette.action.hover}),Object(l.a)(t,\"&:active\",{backgroundColor:e.palette.action.selected}),Object(l.a)(t,'&[aria-disabled=\"true\"]',{opacity:e.palette.action.disabledOpacity,pointerEvents:\"none\"}),t),groupLabel:{backgroundColor:e.palette.background.paper,top:-8},groupUl:{padding:0,\"& $option\":{paddingLeft:24}}}}),{name:\"MuiAutocomplete\"})(L)},V1ME:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/components/autocomplete\",function(){return n(\"2pmQ\")}])},WQxJ:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"}),\"Settings\")},\"WT/7\":function(e,t){e.exports='---\\ntitle: Componente React para Autocompletar\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocompletar\\n\\n<p class=\"description\">O autocompletar \\xe9 uma entrada de texto normal aprimorada por um painel de op\\xe7\\xf5es sugeridas.</p>\\n\\nEssa ferramenta \\xe9 \\xfatil para configurar os valores de um campo de texto quando em um dos dois cen\\xe1rios abaixo:\\n\\n1. O valor para a caixa de texto deve ser escolhido a partir de um conjunto pr\\xe9-definido de valores permitidos, por exemplo, um campo de localiza\\xe7\\xe3o deve conter um nome de localiza\\xe7\\xe3o v\\xe1lido: [combo box](#combo-box).\\n2. A caixa de texto pode conter qualquer valor arbitr\\xe1rio, mas \\xe9 vantajoso porque pode sugerir poss\\xedveis valores para o usu\\xe1rio, por exemplo, um campo de pesquisa que pode sugerir pesquisas anteriores ou semelhantes para economizar o tempo do usu\\xe1rio: [solo livre](#free-solo).\\n\\nA id\\xe9ia dessa ferramenta \\xe9 ser uma vers\\xe3o melhorada das bibliotecas \"react-select\" e \"downshift\".\\n\\n## Combo box\\n\\nO valor deve ser escolhido a partir de um conjunto predefinido de valores permitidos.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### \\xc1rea de exemplos\\n\\nCada um dos exemplos a seguir demonstra uma funcionalidade do componente Autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### Sele\\xe7\\xe3o de pa\\xedses\\n\\nEscolha um dos 248 pa\\xedses.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Estados control\\xe1veis\\n\\nO componente tem dois estados que podem ser controlados:\\n\\n1. o estado \"value\" com a combina\\xe7\\xe3o das propriedades `value`/`onChange`. Esse estado representa o valor selecionado pelo usu\\xe1rio, por exemplo, quando \\xe9 pressionado a tecla <kbd>Enter</kbd>.\\n2. o estado \"input value\" com a combina\\xe7\\xe3o das propriedades `inputValue`/`onInputChange`. Esse estado representa o valor exibido na caixa de texto.\\n\\n> \\u26a0\\ufe0f Esses dois estados est\\xe3o isolados, eles podem ser controlados de forma independente.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nColoque `freeSolo` como true para que o textbox contenha qualquer valor aleat\\xf3rio.\\n\\n### Campo search\\n\\nA propriedade foi desenvolvida para suprir a forma de uso mais comum de um **campo do tipo search** com sugest\\xf5es, por exemplo, pesquisa do Google ou react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nSe voc\\xea pretende usar este modo para uma [caixa de combo](#combo-box), por experi\\xeancia (uma vers\\xe3o aprimorada de um elemento select) recomendamos a configura\\xe7\\xe3o:\\n\\n- `selectOnFocus` para ajudar o usu\\xe1rio a limpar o valor selecionado.\\n- `clearOnBlur` para ajudar o usu\\xe1rio a digitar um novo valor.\\n- `handleHomeEndKeys` para mover o foco dentro do popup com as teclas <kbd>Home</kbd> e <kbd>End</kbd>.\\n- Adicione uma \\xfaltima op\\xe7\\xe3o para indicar a possibilidade de adi\\xe7\\xe3o, por exemplo `Adicionar \"SUA PESQUISA\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nVoc\\xea pode tamb\\xe9m exibir um di\\xe1logo quando o usu\\xe1rio quiser adicionar um novo valor.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Agrupamento\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Op\\xe7\\xf5es desabilitadas\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nPara casos de customiza\\xe7\\xe3o avan\\xe7ada n\\xf3s expomos o `useAutocomplete()` hook. Ele aceita quase as mesmas op\\xe7\\xf5es do componente Autocompletar exceto todas as props relacionadas a renderiza\\xe7\\xe3o do JSX. O componente Autocompletar usa esse hook internamente.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5 kB gzipado](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Hook customizado\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nIndo para a se\\xe7\\xe3o de [Autocompletar customizado](#customized-autocomplete) vemos um exemplo de customiza\\xe7\\xe3o com o componente `Autocompletar` ao inv\\xe9s do hook.\\n\\n## Requisi\\xe7\\xf5es ass\\xedncronas\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Lugares com a API do Google Maps\\n\\nUma customiza\\xe7\\xe3o de UI para o autocompletar de lugares do Google Maps.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nPara esse exemplo, n\\xf3s precisamos carregar a API de Javascript do [Google Maps](https://developers.google.com/maps/documentation/javascript/tutorial).\\n\\n> \\u26a0\\ufe0f Antes de voc\\xea come\\xe7ar a usar a API Javascript do Google Maps voc\\xea precisar\\xe1 estar cadastrado e ter uma conta.\\n\\n## M\\xfaltiplos valores\\n\\nTamb\\xe9m conhecidos como tags, o usu\\xe1rio pode inserir mais de um valor.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Op\\xe7\\xf5es fixas\\n\\nEm ocasi\\xf5es que voc\\xea necessite travar certa tag para que n\\xe3o possa ser removida da interface, voc\\xea pode defini-la como desabilitada.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Caixas de Sele\\xe7\\xe3o\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limitar tags\\n\\nVoc\\xea pode usar a propriedade `limitTags` para limitrar o nu\\xfamero de op\\xe7\\xf5es exibidas quando o componente n\\xe3o estiver com o foco.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## Tamanhos\\n\\nGosta mais de campos de texto menores? Use a propriedade `size`.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customiza\\xe7\\xf5es\\n\\n### Input customizado\\n\\nA propriedade `renderInput` permite que voc\\xea customize o input renderizado. O primeiro argumento desta propriedade de render, cont\\xe9m propriedades que voc\\xea precisa repassar. Preste aten\\xe7\\xe3o espec\\xedficamente nas chaves `ref` e `inputProps`.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### Seletor do GitHub\\n\\nEsta demonstra\\xe7\\xe3o reproduz o r\\xf3tulo de selec\\xe3o do GitHub\\'s:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nVa para a se\\xe7\\xe3o [Hook customizado](#customized-hook) para um exemplo com o uso do hook customizado `useAutocomplete` ao inv\\xe9s do componente.\\n\\n## Realce\\n\\nA demonstra\\xe7\\xe3o a seguir depende do [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), um utilit\\xe1rio pequeno (1 kB) para real\\xe7ar textos nos componentes autosuggest e autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Filtro customizado\\n\\nO componente exp\\xf5e uma f\\xe1brica para criar um m\\xe9todo de filtro que pode ser fornecido para a propriedade `filerOption`. Voc\\xea pode usar ela para modificar o comportamento pad\\xe3o do filtro.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### Argumentos\\n\\n1. `config` (*Object* [opcional]): \\n  - `config.ignoreAccents` (*Boolean* [opcional]): Padr\\xe3o `true`. Remover sinais diacr\\xedticos.\\n  - `config.ignoreCase` (*Boolean* [opcional]): Padr\\xe3o `true`. Min\\xfasculas em tudo.\\n  - `config.limit` (*Number* [opcional]): Padr\\xe3o null. Limitar o n\\xfamero de op\\xe7\\xf5es sugeridas a serem exibidas. Por exemplo, se `config.limit` \\xe9 `100`, somente as primeiras `100` op\\xe7\\xf5es correspondentes s\\xe3o exibidas. Isto pode ser \\xfatil se um monte corresponderem e a virtualiza\\xe7\\xe3o n\\xe3o estiver configurada.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [opcional]): Padr\\xe3o `\\'any\\'`.\\n  - `config.stringify` (*Func* [opcional]): Controla a forma como a op\\xe7\\xe3o \\xe9 convertida em texto, dessa forma pode ser comparada com qualquer fragmento de texto.\\n  - `config.trim` (*Boolean* [opcional]): Padr\\xe3o `false`. Remover espa\\xe7os ao fim.\\n\\n#### Retornos\\n\\n`filterOptions`: o m\\xe9todo de filtro retornado pode ser fornecido diretamente para a propriedade `filterOptions` do componente `Autocomplete` ou para o par\\xe2metro de mesmo nome no hook.\\n\\nNa demonstra\\xe7\\xe3o a seguir, as op\\xe7\\xf5es necessarias para o filtro ser aplicado no inicio das op\\xe7\\xf5es:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### Avan\\xe7ado\\n\\nPara mecanismos de filtragem mais ricos, como correspond\\xeancia difusa, recomenda-se explorar o [match-sorter](https://github.com/kentcdodds/match-sorter). Por exemplo:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## Virtualiza\\xe7\\xe3o\\n\\nPesquise dentro de 10.000 op\\xe7\\xf5es geradas aleatoriamente. A lista \\xe9 virtualizada gra\\xe7as a [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## Limita\\xe7\\xf5es\\n\\n### autocomplete/autofill\\n\\nOs navegadores t\\xeam heur\\xedstica para ajudar os usu\\xe1rios a preencherem os campos do formul\\xe1rio. No entanto, isso pode prejudicar a experi\\xeancia do usu\\xe1rio com o componente.\\n\\nPor padr\\xe3o, o componente desabilita o recurso de **autocomplete** (recurso que memoriza informa\\xe7\\xf5es que o usu\\xe1rio forneceu em sess\\xf5es anteriores) com o atributo `autoComplete=\"off\"`.\\n\\nNo entanto, al\\xe9m de relembrar valores fornecidos anteriormente, o navegador tamb\\xe9m pode propor sugest\\xf5es de **autofill** (preenchimento autom\\xe1tico para informa\\xe7\\xf5es de login, endere\\xe7o ou detalhes de pagamento). No caso de voc\\xea querer evitar o recurso de preenchimento autom\\xe1tico, tente o seguinte:\\n\\n- Nomeie o campo sem fornecer informa\\xe7\\xf5es para o navegador do que ele representa. ex. `id=\"field1\"` ao inv\\xe9s de `id=\"country\"`. Se voc\\xea deixar o id do vazio, o componente utiliza um id aleat\\xf3rio.\\n- Defina `autoComplete=\"new-password\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver no Safari do iOS n\\xe3o suporta o atributo `aria-owns` muito bem. Voc\\xea pode contornar o problema com a propriedade `disablePortal`.\\n\\n### ListboxComponent\\n\\nSe voc\\xea fornecer um componente customizado na propriedade `ListboxComponent`, voc\\xea precisar\\xe1 certificar-se de que o cont\\xeainer de scroll esteja com o atributo `role` definido como `listbox`. Isto garante o comportamento correto do scroll, por exemplo, quando utilizar o teclado para navegar.\\n\\n## Acessibilidade\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nIncentivamos a utiliza\\xe7\\xe3o de um r\\xf3tulo para a caixa de texto. O componente implementa as pr\\xe1ticas de autoria da WAI-ARIA.'},WV5F:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement;function c(){return s(l.a,{id:\"combo-box-demo\",options:d,getOptionLabel:function(e){return e.title},style:{width:300},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"Combo box\",variant:\"outlined\"}))}})}var d=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},XBri:function(e,t){e.exports='---\\ntitle: React-\\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u0410\\u0432\\u0442\\u043e\\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocomplete (\\u0410\\u0432\\u0442\\u043e\\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435)\\n\\n<p class=\"description\">\\u0410\\u0432\\u0442\\u043e\\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 - \\u044d\\u0442\\u043e \\u043e\\u0431\\u044b\\u0447\\u043d\\u044b\\u0439 \\u0432\\u0432\\u043e\\u0434 \\u0442\\u0435\\u043a\\u0441\\u0442\\u0430, \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043d\\u044b\\u0439 \\u043f\\u0430\\u043d\\u0435\\u043b\\u044c\\u044e \\u043f\\u0440\\u0435\\u0434\\u043b\\u0430\\u0433\\u0430\\u0435\\u043c\\u044b\\u0445 \\u043e\\u043f\\u0446\\u0438\\u0439.</p>\\n\\n\\u042d\\u0442\\u043e\\u0442 \\u0432\\u0438\\u0434\\u0436\\u0435\\u0442 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0434\\u043b\\u044f \\u0443\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u043a\\u0438 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f \\u043e\\u0434\\u043d\\u043e\\u0441\\u0442\\u0440\\u043e\\u0447\\u043d\\u043e\\u0433\\u043e \\u0442\\u0435\\u043a\\u0441\\u0442\\u043e\\u0432\\u043e\\u0433\\u043e \\u043f\\u043e\\u043b\\u044f. \\u041e\\u043d \\u043f\\u043e\\u043b\\u0435\\u0437\\u0435\\u043d \\u0432 \\u043e\\u0434\\u043d\\u043e\\u043c \\u0438\\u0437 \\u0434\\u0432\\u0443\\u0445 \\u0441\\u043b\\u0443\\u0447\\u0435\\u0432:\\n\\n1. \\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0442\\u0435\\u043a\\u0441\\u0442\\u043e\\u0432\\u043e\\u0433\\u043e \\u043f\\u043e\\u043b\\u044f \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0431\\u044b\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043e \\u0438\\u0437 \\u043f\\u0440\\u0435\\u0434\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u043d\\u0430\\u0431\\u043e\\u0440\\u0430 \\u0434\\u043e\\u043f\\u0443\\u0441\\u0442\\u0438\\u043c\\u044b\\u0445 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0439, \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u043f\\u043e\\u043b\\u0435 \\u043c\\u0435\\u0441\\u0442\\u043e\\u043f\\u043e\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0441\\u043e\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044c \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0438\\u043c\\u044f \\u043c\\u0435\\u0441\\u0442\\u043e\\u043f\\u043e\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f: [\\u043f\\u043e\\u043b\\u0435 \\u0441\\u043e \\u0441\\u043f\\u0438\\u0441\\u043a\\u043e\\u043c](#combo-box).\\n2. \\u0422\\u0435\\u043a\\u0441\\u0442\\u043e\\u0432\\u043e\\u0435 \\u043f\\u043e\\u043b\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442 \\u0441\\u043e\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044c \\u043b\\u044e\\u0431\\u043e\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435, \\u043d\\u043e \\u0446\\u0435\\u043b\\u0435\\u0441\\u043e\\u043e\\u0431\\u0440\\u0430\\u0437\\u043d\\u043e \\u043f\\u0440\\u0435\\u0434\\u043b\\u0430\\u0433\\u0430\\u0442\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044e \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u044b\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f. \\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u043f\\u043e\\u043b\\u0435 \\u043f\\u043e\\u0438\\u0441\\u043a\\u0430 \\u043c\\u043e\\u0436\\u0435\\u0442 \\u043f\\u0440\\u0435\\u0434\\u043b\\u0430\\u0433\\u0430\\u0442\\u044c \\u0430\\u043d\\u0430\\u043b\\u043e\\u0433\\u0438\\u0447\\u043d\\u044b\\u0435 \\u0438\\u043b\\u0438 \\u043f\\u0440\\u0435\\u0434\\u044b\\u0434\\u0443\\u0449\\u0438\\u0435 \\u043f\\u043e\\u0438\\u0441\\u043a\\u0438, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0441\\u044d\\u043a\\u043e\\u043d\\u043e\\u043c\\u0438\\u0442\\u044c \\u0432\\u0440\\u0435\\u043c\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f: [free solo](#free-solo).\\n\\nIt\\'s meant to be an improved version of the \"react-select\" and \"downshift\" packages.\\n\\n## \\u041a\\u043e\\u043c\\u0431\\u043e-\\u0411\\u043e\\u043a\\u0441\\n\\n\\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0431\\u044b\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043e \\u0438\\u0437 \\u043f\\u0440\\u0435\\u0434\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u043e\\u0433\\u043e \\u043d\\u0430\\u0431\\u043e\\u0440\\u0430 \\u0434\\u043e\\u043f\\u0443\\u0441\\u0442\\u0438\\u043c\\u044b\\u0445 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0439.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### \\u041f\\u0435\\u0441\\u043e\\u0447\\u043d\\u0438\\u0446\\u0430\\n\\n\\u041a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0438\\u0437 \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0438\\u0445 \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u043e\\u0432 \\u0434\\u0435\\u043c\\u043e\\u043d\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0435\\u0442 \\u043e\\u0434\\u043d\\u0443 \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u044e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430 \\u0430\\u0432\\u0442\\u043e\\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### \\u0412\\u044b\\u0431\\u043e\\u0440 \\u0441\\u0442\\u0440\\u0430\\u043d\\u044b\\n\\nChoose one of the 248 countries.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Controllable states\\n\\nThe component has two states that can be controlled:\\n\\n1. the \"value\" state with the `value`/`onChange` props combination. This state represents the value selected by the user, for instance when pressing <kbd>Enter</kbd>.\\n2. the \"input value\" state with the `inputValue`/`onInputChange` props combination. This state represents the value displayed in the textbox.\\n\\n> \\u26a0\\ufe0f These two state are isolated, they should be controlled independently.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## \\u041f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\\n\\n\\u0423\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u0438\\u0442\\u0435 \\u0434\\u043b\\u044f `freeSolo` \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 true, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0442\\u0435\\u043a\\u0441\\u0442\\u043e\\u0432\\u043e\\u0435 \\u043f\\u043e\\u043b\\u0435 \\u043c\\u043e\\u0433\\u043b\\u043e \\u0441\\u043e\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044c \\u043b\\u044e\\u0431\\u043e\\u0435 \\u043f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435.\\n\\n### Search input\\n\\nThe prop is designed to cover the primary use case of a **search input** with suggestions, e.g. Google search or react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nIf you intend to use this mode for a [combo box](#combo-box) like experience (an enhanced version of a select element) we recommend setting:\\n\\n- `selectOnFocus` to helps the user clear the selected value.\\n- `clearOnBlur` to helps the user to enter a new value.\\n- `handleHomeEndKeys` to move focus inside the popup with the <kbd>Home</kbd> and <kbd>End</kbd> keys.\\n- A last option, for instance `Add \"YOUR SEARCH\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\n\\u0412\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u0434\\u0438\\u0430\\u043b\\u043e\\u0433\\u043e\\u0432\\u043e\\u0435 \\u043e\\u043a\\u043d\\u043e, \\u0435\\u0441\\u043b\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c \\u0445\\u043e\\u0447\\u0435\\u0442 \\u0434\\u043e\\u0431\\u0430\\u0432\\u0438\\u0442\\u044c \\u043d\\u043e\\u0432\\u043e\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## \\u0421\\u0433\\u0440\\u0443\\u043f\\u043f\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## \\u041e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u043e\\u043f\\u0446\\u0438\\u0438\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\n\\u0414\\u043b\\u044f \\u043f\\u0440\\u043e\\u0434\\u0432\\u0438\\u043d\\u0443\\u0442\\u043e\\u0439 \\u043a\\u0430\\u0441\\u0442\\u043e\\u043c\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 `useAutocomplete()` \\u0445\\u0443\\u043a. It accepts almost the same options as the Autocomplete component minus all the props related to the rendering of JSX. The Autocomplete component uses this hook internally.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- 4.5 [4,5 \\u043a\\u0411 \\u0432 \\u0441\\u0436\\u0430\\u0442\\u043e\\u043c \\u0432\\u0438\\u0434\\u0435](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Customized hook\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nHead to the [Customized Autocomplete](#customized-autocomplete) section for a customization example with the `Autocomplete` component instead of the hook.\\n\\n## \\u0410\\u0441\\u0438\\u043d\\u0445\\u0440\\u043e\\u043d\\u043d\\u044b\\u0435 \\u0437\\u0430\\u043f\\u0440\\u043e\\u0441\\u044b\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### \\u041c\\u0435\\u0441\\u0442\\u0430 Google Maps\\n\\nA customized UI for Google Maps Places Autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nFor this demo, we need to load the [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial) API.\\n\\n> \\u26a0\\ufe0f Before you can start using the Google Maps JavaScript API, you must sign up and create a billing account.\\n\\n## \\u041c\\u043d\\u043e\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f\\n\\nAlso known as tags, the user is allowed to enter more than one value.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### \\u0424\\u0438\\u043a\\u0441\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u043f\\u0446\\u0438\\u0438\\n\\n\\u0412 \\u0441\\u043b\\u0443\\u0447\\u0430\\u0435, \\u0435\\u0441\\u043b\\u0438 \\u0432\\u0430\\u043c \\u043d\\u0443\\u0436\\u043d\\u043e \\u0437\\u0430\\u0444\\u0438\\u043a\\u0441\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u044b\\u0439 \\u0442\\u0435\\u0433 (\\u0442\\u0430\\u043a \\u0447\\u0442\\u043e \\u043e\\u043d \\u043d\\u0435 \\u043c\\u043e\\u0433 \\u0431\\u044b\\u0442\\u044c \\u0443\\u0434\\u0430\\u043b\\u0451\\u043d \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441), \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u0438\\u0442\\u044c chips \\u0432 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435 disabled.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### \\u0427\\u0435\\u043a\\u0431\\u043e\\u043a\\u0441\\u044b\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limit tags\\n\\nYou can use the `limitTags` prop to limit the number of displayed options when not focused.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## \\u0420\\u0430\\u0437\\u043c\\u0435\\u0440\\u044b\\n\\nFancy smaller inputs? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customizations\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nThis demo reproduces the GitHub\\'s label picker:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nHead to the [Customized hook](#customized-hook) section for a customization example with the `useAutocomplete` hook instead of the component.\\n\\n## Highlights\\n\\nThe following demo relies on [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## \\u041f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u0441\\u043a\\u0438\\u0439 \\u0444\\u0438\\u043b\\u044c\\u0442\\u0440\\n\\nThe component exposes a factory to create a filter method that can provided to the `filterOptions` prop. You can use it to change the default option filter behavior.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### \\u0410\\u0440\\u0433\\u0443\\u043c\\u0435\\u043d\\u0442\\u044b\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): Defaults to `true`. Remove diacritics.\\n  - `config.ignoreCase` (*Boolean* [optional]): Defaults to `true`. Lowercase everything.\\n  - `config.limit` (*Number* [optional]): Default to null. Limit the number of suggested options to be shown. For example, if `config.limit` is `100`, only the first `100` matching options are shown. It can be useful if a lot of options match and virtualization wasn\\'t set up.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): Defaults to `\\'any\\'`.\\n  - `config.stringify` (*Func* [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.\\n  - `config.trim` (*Boolean* [optional]): \\u041f\\u043e \\u0443\\u043c\\u043e\\u043b\\u0447\\u0430\\u043d\\u0438\\u044e - `false`. Remove trailing spaces.\\n\\n#### \\u0412\\u043e\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u0442\\n\\n`filterOptions`: the returned filter method can be provided directly to the `filterOptions` prop of the `Autocomplete` component, or the parameter of the same name for the hook.\\n\\nIn the following demo, the options need to start with the query prefix:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### \\u0414\\u043e\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0435 \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u044b\\n\\nFor richer filtering mechanisms, like fuzzy matching, it\\'s recommended to look at [match-sorter](https://github.com/kentcdodds/match-sorter). \\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## \\u0412\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u044f\\n\\n\\u041f\\u043e\\u0438\\u0441\\u043a \\u0432 10000 \\u0441\\u043b\\u0443\\u0447\\u0430\\u0439\\u043d\\u043e \\u0441\\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043e\\u043f\\u0446\\u0438\\u0439. \\u0421\\u043f\\u0438\\u0441\\u043e\\u043a \\u0432\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u0438\\u0437\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d \\u0431\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u044f [\\u0440\\u0435\\u0430\\u0433\\u0438\\u0440\\u0443\\u044e\\u0449\\u0435\\u043c\\u0443 \\u043e\\u043a\\u043d\\u0443](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## \\u041e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u0438\\u044f\\n\\n### autocomplete/autofill\\n\\nThe browsers have heuristics to help the users fill the form inputs. However, it can harm the UX of the component.\\n\\nBy default, the component disable the **autocomplete** feature (remembering what the user has typed for a given field in a previous session) with the `autoComplete=\"off\"` attribute.\\n\\nHowever, in addition to remembering past entered values, the browser might also propose **autofill** suggestions (saved login, address, or payment details). In the event you want the avoid autofill, you can try the following:\\n\\n- Name the input without leaking any information the browser can use. e.g. `id=\"field1\"` instead of `id=\"country\"`. If you leave the id empty, the component uses a random id.\\n- Set `autoComplete=\"new-password\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver on iOS Safari doesn\\'t support the `aria-owns` attribute very well. You can work around the issue with the `disablePortal` prop.\\n\\n### ListboxComponent\\n\\nIf you provide a custom `ListboxComponent` prop, you need to make sure that the intended scroll container has the `role` attribute set to `listbox`. This ensures the correct behavior of the scroll, for example when using the keyboard to navigate.\\n\\n## \\u0414\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u043e\\u0441\\u0442\\u044c\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nWe encourage the usage of a label for the textbox. The component implements the WAI-ARIA authoring practices.'},XSg6:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"}),\"Check\")},YTsT:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: 500,\\n    '& > * + *': {\\n      marginTop: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function Sizes() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        id=\\\"size-small-standard\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-standard-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        id=\\\"size-small-outlined\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-outlined-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        id=\\\"size-small-filled\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderTags={(value, getTagProps) =>\\n          value.map((option, index) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option.title}\\n              size=\\\"small\\\"\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-filled-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderTags={(value, getTagProps) =>\\n          value.map((option, index) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option.title}\\n              size=\\\"small\\\"\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},Z4yJ:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return w}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"UrUy\"),r=n.n(o),l=n(\"1qCV\"),s=n.n(l),c=n(\"R3/3\"),d=n(\"ZOIa\"),p=n.n(d),u=n(\"5f5u\"),y=n.n(u),h=n(\"mXGw\"),m=n.n(h),f=n(\"nx5Z\"),g=n(\"UiZO\"),b=n(\"IrXQ\"),T=m.a.createElement;function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return new p.a((function(t){setTimeout(t,e)}))}var v=T(b.a,{color:\"inherit\",size:20});function w(){var e=m.a.useState(!1),t=e[0],n=e[1],o=m.a.useState([]),l=o[0],d=o[1],p=t&&0===l.length;return m.a.useEffect((function(){var e=!0;if(p)return Object(c.a)(r.a.mark((function t(){var n,a;return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,y()(\"https://country.register.gov.uk/records.json?page-size=5000\");case 2:return n=t.sent,t.next=5,S(1e3);case 5:return t.next=7,n.json();case 7:a=t.sent,e&&d(s()(a).map((function(e){return a[e].item[0]})));case 9:case\"end\":return t.stop()}}),t)})))(),function(){e=!1}}),[p]),m.a.useEffect((function(){t||d([])}),[t]),T(g.a,{id:\"asynchronous-demo\",style:{width:300},open:t,onOpen:function(){n(!0)},onClose:function(){n(!1)},getOptionSelected:function(e,t){return e.name===t.name},getOptionLabel:function(e){return e.name},options:l,loading:p,renderInput:function(e){return T(f.a,Object(a.a)({},e,{label:\"Asynchronous\",variant:\"outlined\",InputProps:Object(i.a)(Object(i.a)({},e.InputProps),{},{endAdornment:T(m.a.Fragment,null,p?v:null,e.InputProps.endAdornment)})}))}})}},Z68Z:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"RHBV\"),l=n(\"yZEQ\"),s=o.a.createElement,c=Object(l.a)((function(e){return{label:{display:\"block\"},input:{width:200},listbox:{width:200,margin:0,padding:0,zIndex:1,position:\"absolute\",listStyle:\"none\",backgroundColor:e.palette.background.paper,overflow:\"auto\",maxHeight:200,border:\"1px solid rgba(0,0,0,.25)\",'& li[data-focus=\"true\"]':{backgroundColor:\"#4a8df6\",color:\"white\",cursor:\"pointer\"},\"& li:active\":{backgroundColor:\"#2977f5\",color:\"white\"}}}}));function d(){var e=c(),t=Object(r.b)({id:\"use-autocomplete-demo\",options:p,getOptionLabel:function(e){return e.title}}),n=t.getRootProps,i=t.getInputLabelProps,o=t.getInputProps,l=t.getListboxProps,d=t.getOptionProps,u=t.groupedOptions;return s(\"div\",null,s(\"div\",n(),s(\"label\",Object(a.a)({className:e.label},i()),\"useAutocomplete\"),s(\"input\",Object(a.a)({className:e.input},o()))),u.length>0?s(\"ul\",Object(a.a)({className:e.listbox},l()),u.map((function(e,t){return s(\"li\",d({option:e,index:t}),e.title)}))):null)}var p=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},ZJ30:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function Grouped() {\\n  const options = top100Films.map((option) => {\\n    const firstLetter = option.title[0].toUpperCase();\\n    return {\\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\\n      ...option,\\n    };\\n  });\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"grouped-demo\\\"\\n      options={options.sort(\\n        (a, b) => -b.firstLetter.localeCompare(a.firstLetter),\\n      )}\\n      groupBy={(option) => option.firstLetter}\\n      getOptionLabel={(option) => option.title}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"With categories\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},aMRt:function(e,t){e.exports=\"import React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nconst options = ['Option 1', 'Option 2'];\\n\\nexport default function ControllableStates() {\\n  const [value, setValue] = React.useState<string | null>(options[0]);\\n  const [inputValue, setInputValue] = React.useState('');\\n\\n  return (\\n    <div>\\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\\n      <div>{`inputValue: '${inputValue}'`}</div>\\n      <br />\\n      <Autocomplete\\n        value={value}\\n        onChange={(event: any, newValue: string | null) => {\\n          setValue(newValue);\\n        }}\\n        inputValue={inputValue}\\n        onInputChange={(event, newInputValue) => {\\n          setInputValue(newInputValue);\\n        }}\\n        id=\\\"controllable-states-demo\\\"\\n        options={options}\\n        style={{ width: 300 }}\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"Controllable\\\" variant=\\\"outlined\\\" />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\"},anJM:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return u}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"UiZO\"),l=n(\"yZEQ\"),s=n(\"WLtd\"),c=n(\"nx5Z\"),d=o.a.createElement,p=Object(l.a)((function(e){return Object(s.a)({root:{width:500,\"& > * + *\":{marginTop:e.spacing(3)}}})}));function u(){var e=p();return d(\"div\",{className:e.root},d(r.a,{multiple:!0,limitTags:2,id:\"multiple-limit-tags\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13],y[12],y[11]],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"outlined\",label:\"limitTags\",placeholder:\"Favorites\"}))}}))}var y=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},b4WH:function(e,t,n){e.exports=n(\"kIYH\")},bhOZ:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return A}));var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"kGIj\"),r=n(\"mXGw\"),l=n.n(r),s=n(\"RHBV\"),c=n(\"WKBU\"),d=n(\"XSg6\"),p=n(\"DiDJ\"),u=n(\"UutA\"),y=l.a.createElement;function h(){var e=Object(o.a)([\"\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n\"]);return h=function(){return e},e}function m(){var e=Object(o.a)([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #fafafa;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n\"]);return m=function(){return e},e}function f(){var e=Object(o.a)([\"\\n  width: 300px;\\n  border: 1px solid #d9d9d9;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 30px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n\"]);return f=function(){return e},e}function g(){var e=Object(o.a)([\"\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n\"]);return g=function(){return e},e}var b=Object(u.b)(\"label\")(g()),T=Object(u.b)(\"div\")(f()),S=Object(u.b)((function(e){var t=e.label,n=e.onDelete,a=Object(i.a)(e,[\"label\",\"onDelete\"]);return y(\"div\",a,y(\"span\",null,t),y(p.a,{onClick:n}))}))(m()),v=Object(u.b)(\"ul\")(h()),w=y(d.a,{fontSize:\"small\"});function A(){var e=Object(s.b)({id:\"customized-hook-demo\",defaultValue:[O[1]],multiple:!0,options:O,getOptionLabel:function(e){return e.title}}),t=e.getRootProps,n=e.getInputLabelProps,i=e.getInputProps,o=e.getTagProps,r=e.getListboxProps,l=e.getOptionProps,d=e.groupedOptions,p=e.value,u=e.focused,h=e.setAnchorEl;return y(c.a,null,y(\"div\",null,y(\"div\",t(),y(b,n(),\"Customized hook\"),y(T,{ref:h,className:u?\"focused\":\"\"},p.map((function(e,t){return y(S,Object(a.a)({label:e.title},o({index:t})))})),y(\"input\",i()))),d.length>0?y(v,r(),d.map((function(e,t){return y(\"li\",l({option:e,index:t}),y(\"span\",null,e.title),w)}))):null))}var O=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},cAV9:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: 500,\\n      '& > * + *': {\\n        marginTop: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function Sizes() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        id=\\\"size-small-standard\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-standard-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        id=\\\"size-small-outlined\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-outlined-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        id=\\\"size-small-filled\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={top100Films[13]}\\n        renderTags={(value, getTagProps) =>\\n          value.map((option, index) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option.title}\\n              size=\\\"small\\\"\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"size-small-filled-multi\\\"\\n        size=\\\"small\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderTags={(value, getTagProps) =>\\n          value.map((option, index) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option.title}\\n              size=\\\"small\\\"\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"Size small\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},cDaN:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return S}));var a=n(\"mXGw\"),i=n.n(a),o=n(\"yZEQ\"),r=n(\"cYeA\"),l=n(\"LMpM\"),s=n(\"oRPM\"),c=n(\"WQxJ\"),d=n(\"DiDJ\"),p=n(\"J6vt\"),u=n(\"UiZO\"),y=n(\"7QLS\"),h=n(\"c3Nm\"),m=i.a.createElement,f=Object(o.a)((function(e){return{root:{width:221,fontSize:13},button:{fontSize:13,width:\"100%\",textAlign:\"left\",paddingBottom:8,color:\"#586069\",fontWeight:600,\"&:hover,&:focus\":{color:\"#0366d6\"},\"& span\":{width:\"100%\"},\"& svg\":{width:16,height:16}},tag:{marginTop:3,height:20,padding:\".15em 4px\",fontWeight:600,lineHeight:\"15px\",borderRadius:2},popper:{border:\"1px solid rgba(27,31,35,.15)\",boxShadow:\"0 3px 12px rgba(27,31,35,.15)\",borderRadius:3,width:300,zIndex:1,fontSize:13,color:\"#586069\",backgroundColor:\"#f6f8fa\"},header:{borderBottom:\"1px solid #e1e4e8\",padding:\"8px 10px\",fontWeight:600},inputBase:{padding:10,width:\"100%\",borderBottom:\"1px solid #dfe2e5\",\"& input\":{borderRadius:4,backgroundColor:e.palette.common.white,padding:8,transition:e.transitions.create([\"border-color\",\"box-shadow\"]),border:\"1px solid #ced4da\",fontSize:14,\"&:focus\":{boxShadow:\"\".concat(Object(r.fade)(e.palette.primary.main,.25),\" 0 0 0 0.2rem\"),borderColor:e.palette.primary.main}}},paper:{boxShadow:\"none\",margin:0,color:\"#586069\",fontSize:13},option:{minHeight:\"auto\",alignItems:\"flex-start\",padding:8,'&[aria-selected=\"true\"]':{backgroundColor:\"transparent\"},'&[data-focus=\"true\"]':{backgroundColor:e.palette.action.hover}},popperDisablePortal:{position:\"relative\"},iconSelected:{width:17,height:17,marginRight:5,marginLeft:-2},color:{width:14,height:14,flexShrink:0,borderRadius:3,marginRight:8,marginTop:2},text:{flexGrow:1},close:{opacity:.6,width:18,height:18}}})),g=m(\"span\",null,\"Labels\"),b=m(c.a,null),T=m(\"br\",null);function S(){var e=f(),t=i.a.useState(null),n=t[0],a=t[1],o=i.a.useState([v[1],v[11]]),r=o[0],c=o[1],S=i.a.useState([]),w=S[0],A=S[1],O=Object(l.a)(),I=Boolean(n),L=I?\"github-label\":void 0;return m(i.a.Fragment,null,m(\"div\",{className:e.root},m(y.a,{disableRipple:!0,className:e.button,\"aria-describedby\":L,onClick:function(e){A(r),a(e.currentTarget)}},g,b),r.map((function(t){return m(\"div\",{key:t.name,className:e.tag,style:{backgroundColor:t.color,color:O.palette.getContrastText(t.color)}},t.name)}))),m(s.a,{id:L,open:I,anchorEl:n,placement:\"bottom-start\",className:e.popper},m(\"div\",{className:e.header},\"Apply labels to this pull request\"),m(u.a,{open:!0,onClose:function(e,t){\"toggleInput\"!==t&&(c(w),n&&n.focus(),a(null))},multiple:!0,classes:{paper:e.paper,option:e.option,popperDisablePortal:e.popperDisablePortal},value:w,onChange:function(e,t,n){\"keydown\"===e.type&&\"Backspace\"===e.key&&\"remove-option\"===n||A(t)},disableCloseOnSelect:!0,disablePortal:!0,renderTags:function(){return null},noOptionsText:\"No labels\",renderOption:function(t,n){var a=n.selected;return m(i.a.Fragment,null,m(p.a,{className:e.iconSelected,style:{visibility:a?\"visible\":\"hidden\"}}),m(\"span\",{className:e.color,style:{backgroundColor:t.color}}),m(\"div\",{className:e.text},t.name,T,t.description),m(d.a,{className:e.close,style:{visibility:a?\"visible\":\"hidden\"}}))},options:[].concat(v).sort((function(e,t){var n=r.indexOf(e);n=-1===n?r.length+v.indexOf(e):n;var a=r.indexOf(t);return n-(a=-1===a?r.length+v.indexOf(t):a)})),getOptionLabel:function(e){return e.name},renderInput:function(t){return m(h.a,{ref:t.InputProps.ref,inputProps:t.inputProps,autoFocus:!0,className:e.inputBase})}})))}var v=[{name:\"good first issue\",color:\"#7057ff\",description:\"Good for newcomers\"},{name:\"help wanted\",color:\"#008672\",description:\"Extra attention is needed\"},{name:\"priority: critical\",color:\"#b60205\",description:\"\"},{name:\"priority: high\",color:\"#d93f0b\",description:\"\"},{name:\"priority: low\",color:\"#0e8a16\",description:\"\"},{name:\"priority: medium\",color:\"#fbca04\",description:\"\"},{name:\"status: can't reproduce\",color:\"#fec1c1\",description:\"\"},{name:\"status: confirmed\",color:\"#215cea\",description:\"\"},{name:\"status: duplicate\",color:\"#cfd3d7\",description:\"This issue or pull request already exists\"},{name:\"status: needs information\",color:\"#fef2c0\",description:\"\"},{name:\"status: wont do/fix\",color:\"#eeeeee\",description:\"This will not be worked on\"},{name:\"type: bug\",color:\"#d73a4a\",description:\"Something isn't working\"},{name:\"type: discussion\",color:\"#d4c5f9\",description:\"\"},{name:\"type: documentation\",color:\"#006b75\",description:\"\"},{name:\"type: enhancement\",color:\"#84b6eb\",description:\"\"},{name:\"type: epic\",color:\"#3e4b9e\",description:\"A theme of work that contain sub-tasks\"},{name:\"type: feature request\",color:\"#fbca04\",description:\"New feature or request\"},{name:\"type: question\",color:\"#d876e3\",description:\"Further information is requested\"}]},cE6X:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return A}));var a=n(\"z3IF\"),i=n(\"2Fjn\"),o=n(\"kGIj\"),r=n(\"mXGw\"),l=n.n(r),s=n(\"RHBV\"),c=n(\"WKBU\"),d=n(\"XSg6\"),p=n(\"DiDJ\"),u=n(\"UutA\"),y=l.a.createElement;function h(){var e=Object(o.a)([\"\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n\"]);return h=function(){return e},e}function m(){var e=Object(o.a)([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #fafafa;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n\"]);return m=function(){return e},e}function f(){var e=Object(o.a)([\"\\n  width: 300px;\\n  border: 1px solid #d9d9d9;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 30px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n\"]);return f=function(){return e},e}function g(){var e=Object(o.a)([\"\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n\"]);return g=function(){return e},e}var b=Object(u.b)(\"label\")(g()),T=Object(u.b)(\"div\")(f()),S=Object(u.b)((function(e){var t=e.label,n=e.onDelete,a=Object(i.a)(e,[\"label\",\"onDelete\"]);return y(\"div\",a,y(\"span\",null,t),y(p.a,{onClick:n}))}))(m()),v=Object(u.b)(\"ul\")(h()),w=y(d.a,{fontSize:\"small\"});function A(){var e=Object(s.b)({id:\"customized-hook-demo\",defaultValue:[O[1]],multiple:!0,options:O,getOptionLabel:function(e){return e.title}}),t=e.getRootProps,n=e.getInputLabelProps,i=e.getInputProps,o=e.getTagProps,r=e.getListboxProps,l=e.getOptionProps,d=e.groupedOptions,p=e.value,u=e.focused,h=e.setAnchorEl;return y(c.a,null,y(\"div\",null,y(\"div\",t(),y(b,n(),\"Customized hook\"),y(T,{ref:h,className:u?\"focused\":\"\"},p.map((function(e,t){return y(S,Object(a.a)({label:e.title},o({index:t})))})),y(\"input\",i()))),d.length>0?y(v,r(),d.map((function(e,t){return y(\"li\",l({option:e,index:t}),y(\"span\",null,e.title),w)}))):null))}var O=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},dZTp:function(e,t){e.exports='---\\ntitle: \\u30aa\\u30fc\\u30c8\\u30b3\\u30f3\\u30d7\\u30ea\\u30fc\\u30c8React\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocomplete\\n\\n<p class=\"description\">\\u30aa\\u30fc\\u30c8\\u30b3\\u30f3\\u30d7\\u30ea\\u30fc\\u30c8\\u306f\\u3001\\u63a8\\u5968\\u30aa\\u30d7\\u30b7\\u30e7\\u30f3\\u306e\\u30d1\\u30cd\\u30eb\\u306b\\u3088\\u3063\\u3066\\u5f37\\u5316\\u3055\\u308c\\u305f\\u901a\\u5e38\\u306e\\u30c6\\u30ad\\u30b9\\u30c8\\u5165\\u529b\\u3067\\u3059\\u3002</p>\\n\\nThe widget is useful for setting the value of a single-line textbox in one of two types of scenarios:\\n\\n1. The value for the textbox must be chosen from a predefined set of allowed values, e.g., a location field must contain a valid location name: [combo box](#combo-box).\\n2. The textbox may contain any arbitrary value, but it is advantageous to suggest possible values to the user, e.g., a search field may suggest similar or previous searches to save the user time: [free solo](#free-solo).\\n\\nIt\\'s meant to be an improved version of the \"react-select\" and \"downshift\" packages.\\n\\n## Combo box\\n\\nThe value must be chosen from a predefined set of allowed values.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### Playground\\n\\nEach of the following examples demonstrate one feature of the Autocomplete component.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### Country select\\n\\nChoose one of the 248 countries.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Controllable states\\n\\nThe component has two states that can be controlled:\\n\\n1. the \"value\" state with the `value`/`onChange` props combination. This state represents the value selected by the user, for instance when pressing <kbd>Enter</kbd>.\\n2. the \"input value\" state with the `inputValue`/`onInputChange` props combination. This state represents the value displayed in the textbox.\\n\\n> \\u26a0\\ufe0f These two state are isolated, they should be controlled independently.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nSet `freeSolo` to true so the textbox can contain any arbitrary value.\\n\\n### Search input\\n\\nThe prop is designed to cover the primary use case of a **search input** with suggestions, e.g. Google search or react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable\\n\\nIf you intend to use this mode for a [combo box](#combo-box) like experience (an enhanced version of a select element) we recommend setting:\\n\\n- `selectOnFocus` to helps the user clear the selected value.\\n- `clearOnBlur` to helps the user to enter a new value.\\n- `handleHomeEndKeys` to move focus inside the popup with the <kbd>Home</kbd> and <kbd>End</kbd> keys.\\n- A last option, for instance `Add \"YOUR SEARCH\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nYou could also display a dialog when the user wants to add a new value.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Grouped\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Disabled options\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nFor advanced customization use cases, we expose a `useAutocomplete()` hook. It accepts almost the same options as the Autocomplete component minus all the props related to the rendering of JSX. The Autocomplete component uses this hook internally.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- [4.5 kB gzipped](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Customized hook\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nHead to the [Customized Autocomplete](#customized-autocomplete) section for a customization example with the `Autocomplete` component instead of the hook.\\n\\n## Asynchronous requests\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Google Maps place\\n\\nA customized UI for Google Maps Places Autocomplete.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nFor this demo, we need to load the [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial) API.\\n\\n> \\u26a0\\ufe0f Before you can start using the Google Maps JavaScript API, you must sign up and create a billing account.\\n\\n## Multiple values\\n\\nAlso known as tags, the user is allowed to enter more than one value.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Fixed options\\n\\nIn the event that you need to lock certain tag so that they can\\'t be removed in the interface, you can set the chips disabled.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Checkboxes\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limit tags\\n\\nYou can use the `limitTags` prop to limit the number of displayed options when not focused.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## \\u30b5\\u30a4\\u30ba\\n\\nFancy smaller inputs? `size`prop\\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customizations\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nThis demo reproduces the GitHub\\'s label picker:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nHead to the [Customized hook](#customized-hook) section for a customization example with the `useAutocomplete` hook instead of the component.\\n\\n## Highlights\\n\\nThe following demo relies on [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), a small (1 kB) utility for highlighting text in autosuggest and autocomplete components.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Custom filter\\n\\nThe component exposes a factory to create a filter method that can provided to the `filterOptions` prop. You can use it to change the default option filter behavior.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### \\u5f15\\u6570\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): Defaults to `true`. Remove diacritics.\\n  - `config.ignoreCase` (*Boolean* [optional]): Defaults to `true`. Lowercase everything.\\n  - `config.limit` (*Number* [optional]): Default to null. Limit the number of suggested options to be shown. For example, if `config.limit` is `100`, only the first `100` matching options are shown. It can be useful if a lot of options match and virtualization wasn\\'t set up.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): Defaults to `\\'any\\'`.\\n  - `config.stringify` (*Func* [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment.\\n  - `config.trim` (*Boolean* [optional]): Defaults `false`. Remove trailing spaces.\\n\\n#### \\u623b\\u308a\\u5024\\n\\n`filterOptions`: the returned filter method can be provided directly to the `filterOptions` prop of the `Autocomplete` component, or the parameter of the same name for the hook.\\n\\nIn the following demo, the options need to start with the query prefix:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### \\u9ad8\\u5ea6\\u306a\\u6a5f\\u80fd(Advanced)\\n\\nFor richer filtering mechanisms, like fuzzy matching, it\\'s recommended to look at [match-sorter](https://github.com/kentcdodds/match-sorter). \\u4f8b\\u3048\\u3070\\uff1a\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## Virtualization\\n\\nSearch within 10,000 randomly generated options. The list is virtualized thanks to [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## \\u5236\\u9650\\u4e8b\\u9805\\n\\n### autocomplete/autofill\\n\\nThe browsers have heuristics to help the users fill the form inputs. However, it can harm the UX of the component.\\n\\nBy default, the component disable the **autocomplete** feature (remembering what the user has typed for a given field in a previous session) with the `autoComplete=\"off\"` attribute.\\n\\nHowever, in addition to remembering past entered values, the browser might also propose **autofill** suggestions (saved login, address, or payment details). In the event you want the avoid autofill, you can try the following:\\n\\n- Name the input without leaking any information the browser can use. e.g. `id=\"field1\"` instead of `id=\"country\"`. If you leave the id empty, the component uses a random id.\\n- Set `autoComplete=\"new-password\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver on iOS Safari doesn\\'t support the `aria-owns` attribute very well. You can work around the issue with the `disablePortal` prop.\\n\\n### ListBox \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\n\\n`Listbox \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8` \\u306e\\u30ab\\u30b9\\u30bf\\u30e0\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u5834\\u5408\\u3001\\u610f\\u56f3\\u3059\\u308b\\u30b9\\u30af\\u30ed\\u30fc\\u30eb\\u30b3\\u30f3\\u30c6\\u30ca\\u306e `role` \\u5c5e\\u6027\\u3068\\u3057\\u3066 `listbox` \\u304c\\u8a2d\\u5b9a\\u3055\\u308c\\u3066\\u3044\\u308b\\u3053\\u3068\\u3092\\u78ba\\u8a8d\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u3053\\u308c\\u306b\\u3088\\u308a\\u3001\\u4f8b\\u3048\\u3070\\u30ad\\u30fc\\u30dc\\u30fc\\u30c9\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u79fb\\u52d5\\u3059\\u308b\\u5834\\u5408\\u306a\\u3069\\u3001\\u30b9\\u30af\\u30ed\\u30fc\\u30eb\\u306e\\u6b63\\u3057\\u3044\\u52d5\\u4f5c\\u304c\\u4fdd\\u8a3c\\u3055\\u308c\\u307e\\u3059\\u3002\\n\\n## \\u30a2\\u30af\\u30bb\\u30b7\\u30d3\\u30ea\\u30c6\\u30a3\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\n\\u30c6\\u30ad\\u30b9\\u30c8\\u30dc\\u30c3\\u30af\\u30b9\\u306b\\u5bfe\\u3057\\u3066\\u3001\\u30e9\\u30d9\\u30eb\\u306e\\u4f7f\\u7528\\u3092\\u5968\\u52b1\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f WAI-ARIA \\u30aa\\u30fc\\u30b5\\u30ea\\u30f3\\u30b0\\u3092\\u5b9f\\u88c5\\u3057\\u3066\\u3044\\u307e\\u3059\\u3002'},e1aM:function(e,t){e.exports=\"import React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\\nimport Grid from '@material-ui/core/Grid';\\nimport Typography from '@material-ui/core/Typography';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport parse from 'autosuggest-highlight/parse';\\nimport throttle from 'lodash/throttle';\\n\\nfunction loadScript(src: string, position: HTMLElement | null, id: string) {\\n  if (!position) {\\n    return;\\n  }\\n\\n  const script = document.createElement('script');\\n  script.setAttribute('async', '');\\n  script.setAttribute('id', id);\\n  script.src = src;\\n  position.appendChild(script);\\n}\\n\\nconst autocompleteService = { current: null };\\n\\nconst useStyles = makeStyles((theme) => ({\\n  icon: {\\n    color: theme.palette.text.secondary,\\n    marginRight: theme.spacing(2),\\n  },\\n}));\\n\\ninterface PlaceType {\\n  description: string;\\n  structured_formatting: {\\n    main_text: string;\\n    secondary_text: string;\\n    main_text_matched_substrings: [\\n      {\\n        offset: number;\\n        length: number;\\n      },\\n    ];\\n  };\\n}\\n\\nexport default function GoogleMaps() {\\n  const classes = useStyles();\\n  const [value, setValue] = React.useState<PlaceType | null>(null);\\n  const [inputValue, setInputValue] = React.useState('');\\n  const [options, setOptions] = React.useState<PlaceType[]>([]);\\n  const loaded = React.useRef(false);\\n\\n  if (typeof window !== 'undefined' && !loaded.current) {\\n    if (!document.querySelector('#google-maps')) {\\n      loadScript(\\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places',\\n        document.querySelector('head'),\\n        'google-maps',\\n      );\\n    }\\n\\n    loaded.current = true;\\n  }\\n\\n  const fetch = React.useMemo(\\n    () =>\\n      throttle(\\n        (\\n          request: { input: string },\\n          callback: (results?: PlaceType[]) => void,\\n        ) => {\\n          (autocompleteService.current as any).getPlacePredictions(\\n            request,\\n            callback,\\n          );\\n        },\\n        200,\\n      ),\\n    [],\\n  );\\n\\n  React.useEffect(() => {\\n    let active = true;\\n\\n    if (!autocompleteService.current && (window as any).google) {\\n      autocompleteService.current = new (window as any).google.maps.places.AutocompleteService();\\n    }\\n    if (!autocompleteService.current) {\\n      return undefined;\\n    }\\n\\n    if (inputValue === '') {\\n      setOptions(value ? [value] : []);\\n      return undefined;\\n    }\\n\\n    fetch({ input: inputValue }, (results?: PlaceType[]) => {\\n      if (active) {\\n        let newOptions = [] as PlaceType[];\\n\\n        if (value) {\\n          newOptions = [value];\\n        }\\n\\n        if (results) {\\n          newOptions = [...newOptions, ...results];\\n        }\\n\\n        setOptions(newOptions);\\n      }\\n    });\\n\\n    return () => {\\n      active = false;\\n    };\\n  }, [value, inputValue, fetch]);\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"google-map-demo\\\"\\n      style={{ width: 300 }}\\n      getOptionLabel={(option) =>\\n        typeof option === 'string' ? option : option.description\\n      }\\n      filterOptions={(x) => x}\\n      options={options}\\n      autoComplete\\n      includeInputInList\\n      filterSelectedOptions\\n      value={value}\\n      onChange={(event: any, newValue: PlaceType | null) => {\\n        setOptions(newValue ? [newValue, ...options] : options);\\n        setValue(newValue);\\n      }}\\n      onInputChange={(event, newInputValue) => {\\n        setInputValue(newInputValue);\\n      }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Add a location\\\"\\n          variant=\\\"outlined\\\"\\n          fullWidth\\n        />\\n      )}\\n      renderOption={(option) => {\\n        const matches =\\n          option.structured_formatting.main_text_matched_substrings;\\n        const parts = parse(\\n          option.structured_formatting.main_text,\\n          matches.map((match: any) => [\\n            match.offset,\\n            match.offset + match.length,\\n          ]),\\n        );\\n\\n        return (\\n          <Grid container alignItems=\\\"center\\\">\\n            <Grid item>\\n              <LocationOnIcon className={classes.icon} />\\n            </Grid>\\n            <Grid item xs>\\n              {parts.map((part, index) => (\\n                <span\\n                  key={index}\\n                  style={{\\n                    fontWeight: part.highlight ? 700 : 400,\\n                  }}\\n                >\\n                  {part.text}\\n                </span>\\n              ))}\\n              <Typography variant=\\\"body2\\\" color=\\\"textSecondary\\\">\\n                {option.structured_formatting.secondary_text}\\n              </Typography>\\n            </Grid>\\n          </Grid>\\n        );\\n      }}\\n    />\\n  );\\n}\\n\"},e42f:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return w}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"UrUy\"),r=n.n(o),l=n(\"1qCV\"),s=n.n(l),c=n(\"R3/3\"),d=n(\"ZOIa\"),p=n.n(d),u=n(\"5f5u\"),y=n.n(u),h=n(\"mXGw\"),m=n.n(h),f=n(\"nx5Z\"),g=n(\"UiZO\"),b=n(\"IrXQ\"),T=m.a.createElement;function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return new p.a((function(t){setTimeout(t,e)}))}var v=T(b.a,{color:\"inherit\",size:20});function w(){var e=m.a.useState(!1),t=e[0],n=e[1],o=m.a.useState([]),l=o[0],d=o[1],p=t&&0===l.length;return m.a.useEffect((function(){var e=!0;if(p)return Object(c.a)(r.a.mark((function t(){var n,a;return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,y()(\"https://country.register.gov.uk/records.json?page-size=5000\");case 2:return n=t.sent,t.next=5,S(1e3);case 5:return t.next=7,n.json();case 7:a=t.sent,e&&d(s()(a).map((function(e){return a[e].item[0]})));case 9:case\"end\":return t.stop()}}),t)})))(),function(){e=!1}}),[p]),m.a.useEffect((function(){t||d([])}),[t]),T(g.a,{id:\"asynchronous-demo\",style:{width:300},open:t,onOpen:function(){n(!0)},onClose:function(){n(!1)},getOptionSelected:function(e,t){return e.name===t.name},getOptionLabel:function(e){return e.name},options:l,loading:p,renderInput:function(e){return T(f.a,Object(a.a)({},e,{label:\"Asynchronous\",variant:\"outlined\",InputProps:Object(i.a)(Object(i.a)({},e.InputProps),{},{endAdornment:T(m.a.Fragment,null,p?v:null,e.InputProps.endAdornment)})}))}})}},eV2K:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"}),\"Close\")},\"eel+\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=r.a.createElement;function d(){var e=p.map((function(e){var t=e.title[0].toUpperCase();return Object(i.a)({firstLetter:/[0-9]/.test(t)?\"0-9\":t},e)}));return c(s.a,{id:\"grouped-demo\",options:e.sort((function(e,t){return-t.firstLetter.localeCompare(e.firstLetter)})),groupBy:function(e){return e.firstLetter},getOptionLabel:function(e){return e.title},style:{width:300},renderInput:function(e){return c(l.a,Object(a.a)({},e,{label:\"With categories\",variant:\"outlined\"}))}})}var p=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},emGK:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"RHBV\"),s=n(\"UiZO\"),c=o.a.createElement,d=Object(l.a)({matchFrom:\"start\",stringify:function(e){return e.title}});function p(){return c(s.a,{id:\"filter-demo\",options:u,getOptionLabel:function(e){return e.title},filterOptions:d,style:{width:300},renderInput:function(e){return c(r.a,Object(a.a)({},e,{label:\"Custom filter\",variant:\"outlined\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},eofx:function(e,t){e.exports=\"import React from 'react';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nconst options = ['Option 1', 'Option 2'];\\n\\nexport default function CustomInputAutocomplete() {\\n  return (\\n    <Autocomplete\\n      id=\\\"custom-input-demo\\\"\\n      options={options}\\n      renderInput={(params) => (\\n        <div ref={params.InputProps.ref}>\\n          <input style={{ width: 200 }} type=\\\"text\\\" {...params.inputProps} />\\n        </div>\\n      )}\\n    />\\n  );\\n}\\n\"},faqP:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport styled from 'styled-components';\\n\\nconst Label = styled('label')`\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n`;\\n\\nconst InputWrapper = styled('div')`\\n  width: 300px;\\n  border: 1px solid #d9d9d9;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 30px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n`;\\n\\nconst Tag = styled(({ label, onDelete, ...props }) => (\\n  <div {...props}>\\n    <span>{label}</span>\\n    <CloseIcon onClick={onDelete} />\\n  </div>\\n))`\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #fafafa;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n`;\\n\\nconst Listbox = styled('ul')`\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n`;\\n\\nexport default function CustomizedHook() {\\n  const {\\n    getRootProps,\\n    getInputLabelProps,\\n    getInputProps,\\n    getTagProps,\\n    getListboxProps,\\n    getOptionProps,\\n    groupedOptions,\\n    value,\\n    focused,\\n    setAnchorEl,\\n  } = useAutocomplete({\\n    id: 'customized-hook-demo',\\n    defaultValue: [top100Films[1]],\\n    multiple: true,\\n    options: top100Films,\\n    getOptionLabel: (option) => option.title,\\n  });\\n\\n  return (\\n    <NoSsr>\\n      <div>\\n        <div {...getRootProps()}>\\n          <Label {...getInputLabelProps()}>Customized hook</Label>\\n          <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\\n            {value.map((option, index) => (\\n              <Tag label={option.title} {...getTagProps({ index })} />\\n            ))}\\n\\n            <input {...getInputProps()} />\\n          </InputWrapper>\\n        </div>\\n        {groupedOptions.length > 0 ? (\\n          <Listbox {...getListboxProps()}>\\n            {groupedOptions.map((option, index) => (\\n              <li {...getOptionProps({ option, index })}>\\n                <span>{option.title}</span>\\n                <CheckIcon fontSize=\\\"small\\\" />\\n              </li>\\n            ))}\\n          </Listbox>\\n        ) : null}\\n      </div>\\n    </NoSsr>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},fr1m:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return h}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"b4WH\"),r=n.n(o),l=n(\"mXGw\"),s=n.n(l),c=n(\"nx5Z\"),d=n(\"UiZO\"),p=n(\"yZEQ\"),u=s.a.createElement;var y=Object(p.a)({option:{fontSize:15,\"& > span\":{marginRight:10,fontSize:18}}});function h(){var e=y();return u(d.a,{id:\"country-select-demo\",style:{width:300},options:m,classes:{option:e.option},autoHighlight:!0,getOptionLabel:function(e){return e.label},renderOption:function(e){return u(s.a.Fragment,null,u(\"span\",null,(t=e.code,\"undefined\"!==typeof r.a?t.toUpperCase().replace(/./g,(function(e){return r()(e.charCodeAt(0)+127397)})):t)),e.label,\" (\",e.code,\") +\",e.phone);var t},renderInput:function(e){return u(c.a,Object(a.a)({},e,{label:\"Choose a country\",variant:\"outlined\",inputProps:Object(i.a)(Object(i.a)({},e.inputProps),{},{autoComplete:\"new-password\"})}))}})}var m=[{code:\"AD\",label:\"Andorra\",phone:\"376\"},{code:\"AE\",label:\"United Arab Emirates\",phone:\"971\"},{code:\"AF\",label:\"Afghanistan\",phone:\"93\"},{code:\"AG\",label:\"Antigua and Barbuda\",phone:\"1-268\"},{code:\"AI\",label:\"Anguilla\",phone:\"1-264\"},{code:\"AL\",label:\"Albania\",phone:\"355\"},{code:\"AM\",label:\"Armenia\",phone:\"374\"},{code:\"AO\",label:\"Angola\",phone:\"244\"},{code:\"AQ\",label:\"Antarctica\",phone:\"672\"},{code:\"AR\",label:\"Argentina\",phone:\"54\"},{code:\"AS\",label:\"American Samoa\",phone:\"1-684\"},{code:\"AT\",label:\"Austria\",phone:\"43\"},{code:\"AU\",label:\"Australia\",phone:\"61\",suggested:!0},{code:\"AW\",label:\"Aruba\",phone:\"297\"},{code:\"AX\",label:\"Alland Islands\",phone:\"358\"},{code:\"AZ\",label:\"Azerbaijan\",phone:\"994\"},{code:\"BA\",label:\"Bosnia and Herzegovina\",phone:\"387\"},{code:\"BB\",label:\"Barbados\",phone:\"1-246\"},{code:\"BD\",label:\"Bangladesh\",phone:\"880\"},{code:\"BE\",label:\"Belgium\",phone:\"32\"},{code:\"BF\",label:\"Burkina Faso\",phone:\"226\"},{code:\"BG\",label:\"Bulgaria\",phone:\"359\"},{code:\"BH\",label:\"Bahrain\",phone:\"973\"},{code:\"BI\",label:\"Burundi\",phone:\"257\"},{code:\"BJ\",label:\"Benin\",phone:\"229\"},{code:\"BL\",label:\"Saint Barthelemy\",phone:\"590\"},{code:\"BM\",label:\"Bermuda\",phone:\"1-441\"},{code:\"BN\",label:\"Brunei Darussalam\",phone:\"673\"},{code:\"BO\",label:\"Bolivia\",phone:\"591\"},{code:\"BR\",label:\"Brazil\",phone:\"55\"},{code:\"BS\",label:\"Bahamas\",phone:\"1-242\"},{code:\"BT\",label:\"Bhutan\",phone:\"975\"},{code:\"BV\",label:\"Bouvet Island\",phone:\"47\"},{code:\"BW\",label:\"Botswana\",phone:\"267\"},{code:\"BY\",label:\"Belarus\",phone:\"375\"},{code:\"BZ\",label:\"Belize\",phone:\"501\"},{code:\"CA\",label:\"Canada\",phone:\"1\",suggested:!0},{code:\"CC\",label:\"Cocos (Keeling) Islands\",phone:\"61\"},{code:\"CD\",label:\"Congo, Democratic Republic of the\",phone:\"243\"},{code:\"CF\",label:\"Central African Republic\",phone:\"236\"},{code:\"CG\",label:\"Congo, Republic of the\",phone:\"242\"},{code:\"CH\",label:\"Switzerland\",phone:\"41\"},{code:\"CI\",label:\"Cote d'Ivoire\",phone:\"225\"},{code:\"CK\",label:\"Cook Islands\",phone:\"682\"},{code:\"CL\",label:\"Chile\",phone:\"56\"},{code:\"CM\",label:\"Cameroon\",phone:\"237\"},{code:\"CN\",label:\"China\",phone:\"86\"},{code:\"CO\",label:\"Colombia\",phone:\"57\"},{code:\"CR\",label:\"Costa Rica\",phone:\"506\"},{code:\"CU\",label:\"Cuba\",phone:\"53\"},{code:\"CV\",label:\"Cape Verde\",phone:\"238\"},{code:\"CW\",label:\"Curacao\",phone:\"599\"},{code:\"CX\",label:\"Christmas Island\",phone:\"61\"},{code:\"CY\",label:\"Cyprus\",phone:\"357\"},{code:\"CZ\",label:\"Czech Republic\",phone:\"420\"},{code:\"DE\",label:\"Germany\",phone:\"49\",suggested:!0},{code:\"DJ\",label:\"Djibouti\",phone:\"253\"},{code:\"DK\",label:\"Denmark\",phone:\"45\"},{code:\"DM\",label:\"Dominica\",phone:\"1-767\"},{code:\"DO\",label:\"Dominican Republic\",phone:\"1-809\"},{code:\"DZ\",label:\"Algeria\",phone:\"213\"},{code:\"EC\",label:\"Ecuador\",phone:\"593\"},{code:\"EE\",label:\"Estonia\",phone:\"372\"},{code:\"EG\",label:\"Egypt\",phone:\"20\"},{code:\"EH\",label:\"Western Sahara\",phone:\"212\"},{code:\"ER\",label:\"Eritrea\",phone:\"291\"},{code:\"ES\",label:\"Spain\",phone:\"34\"},{code:\"ET\",label:\"Ethiopia\",phone:\"251\"},{code:\"FI\",label:\"Finland\",phone:\"358\"},{code:\"FJ\",label:\"Fiji\",phone:\"679\"},{code:\"FK\",label:\"Falkland Islands (Malvinas)\",phone:\"500\"},{code:\"FM\",label:\"Micronesia, Federated States of\",phone:\"691\"},{code:\"FO\",label:\"Faroe Islands\",phone:\"298\"},{code:\"FR\",label:\"France\",phone:\"33\",suggested:!0},{code:\"GA\",label:\"Gabon\",phone:\"241\"},{code:\"GB\",label:\"United Kingdom\",phone:\"44\"},{code:\"GD\",label:\"Grenada\",phone:\"1-473\"},{code:\"GE\",label:\"Georgia\",phone:\"995\"},{code:\"GF\",label:\"French Guiana\",phone:\"594\"},{code:\"GG\",label:\"Guernsey\",phone:\"44\"},{code:\"GH\",label:\"Ghana\",phone:\"233\"},{code:\"GI\",label:\"Gibraltar\",phone:\"350\"},{code:\"GL\",label:\"Greenland\",phone:\"299\"},{code:\"GM\",label:\"Gambia\",phone:\"220\"},{code:\"GN\",label:\"Guinea\",phone:\"224\"},{code:\"GP\",label:\"Guadeloupe\",phone:\"590\"},{code:\"GQ\",label:\"Equatorial Guinea\",phone:\"240\"},{code:\"GR\",label:\"Greece\",phone:\"30\"},{code:\"GS\",label:\"South Georgia and the South Sandwich Islands\",phone:\"500\"},{code:\"GT\",label:\"Guatemala\",phone:\"502\"},{code:\"GU\",label:\"Guam\",phone:\"1-671\"},{code:\"GW\",label:\"Guinea-Bissau\",phone:\"245\"},{code:\"GY\",label:\"Guyana\",phone:\"592\"},{code:\"HK\",label:\"Hong Kong\",phone:\"852\"},{code:\"HM\",label:\"Heard Island and McDonald Islands\",phone:\"672\"},{code:\"HN\",label:\"Honduras\",phone:\"504\"},{code:\"HR\",label:\"Croatia\",phone:\"385\"},{code:\"HT\",label:\"Haiti\",phone:\"509\"},{code:\"HU\",label:\"Hungary\",phone:\"36\"},{code:\"ID\",label:\"Indonesia\",phone:\"62\"},{code:\"IE\",label:\"Ireland\",phone:\"353\"},{code:\"IL\",label:\"Israel\",phone:\"972\"},{code:\"IM\",label:\"Isle of Man\",phone:\"44\"},{code:\"IN\",label:\"India\",phone:\"91\"},{code:\"IO\",label:\"British Indian Ocean Territory\",phone:\"246\"},{code:\"IQ\",label:\"Iraq\",phone:\"964\"},{code:\"IR\",label:\"Iran, Islamic Republic of\",phone:\"98\"},{code:\"IS\",label:\"Iceland\",phone:\"354\"},{code:\"IT\",label:\"Italy\",phone:\"39\"},{code:\"JE\",label:\"Jersey\",phone:\"44\"},{code:\"JM\",label:\"Jamaica\",phone:\"1-876\"},{code:\"JO\",label:\"Jordan\",phone:\"962\"},{code:\"JP\",label:\"Japan\",phone:\"81\",suggested:!0},{code:\"KE\",label:\"Kenya\",phone:\"254\"},{code:\"KG\",label:\"Kyrgyzstan\",phone:\"996\"},{code:\"KH\",label:\"Cambodia\",phone:\"855\"},{code:\"KI\",label:\"Kiribati\",phone:\"686\"},{code:\"KM\",label:\"Comoros\",phone:\"269\"},{code:\"KN\",label:\"Saint Kitts and Nevis\",phone:\"1-869\"},{code:\"KP\",label:\"Korea, Democratic People's Republic of\",phone:\"850\"},{code:\"KR\",label:\"Korea, Republic of\",phone:\"82\"},{code:\"KW\",label:\"Kuwait\",phone:\"965\"},{code:\"KY\",label:\"Cayman Islands\",phone:\"1-345\"},{code:\"KZ\",label:\"Kazakhstan\",phone:\"7\"},{code:\"LA\",label:\"Lao People's Democratic Republic\",phone:\"856\"},{code:\"LB\",label:\"Lebanon\",phone:\"961\"},{code:\"LC\",label:\"Saint Lucia\",phone:\"1-758\"},{code:\"LI\",label:\"Liechtenstein\",phone:\"423\"},{code:\"LK\",label:\"Sri Lanka\",phone:\"94\"},{code:\"LR\",label:\"Liberia\",phone:\"231\"},{code:\"LS\",label:\"Lesotho\",phone:\"266\"},{code:\"LT\",label:\"Lithuania\",phone:\"370\"},{code:\"LU\",label:\"Luxembourg\",phone:\"352\"},{code:\"LV\",label:\"Latvia\",phone:\"371\"},{code:\"LY\",label:\"Libya\",phone:\"218\"},{code:\"MA\",label:\"Morocco\",phone:\"212\"},{code:\"MC\",label:\"Monaco\",phone:\"377\"},{code:\"MD\",label:\"Moldova, Republic of\",phone:\"373\"},{code:\"ME\",label:\"Montenegro\",phone:\"382\"},{code:\"MF\",label:\"Saint Martin (French part)\",phone:\"590\"},{code:\"MG\",label:\"Madagascar\",phone:\"261\"},{code:\"MH\",label:\"Marshall Islands\",phone:\"692\"},{code:\"MK\",label:\"Macedonia, the Former Yugoslav Republic of\",phone:\"389\"},{code:\"ML\",label:\"Mali\",phone:\"223\"},{code:\"MM\",label:\"Myanmar\",phone:\"95\"},{code:\"MN\",label:\"Mongolia\",phone:\"976\"},{code:\"MO\",label:\"Macao\",phone:\"853\"},{code:\"MP\",label:\"Northern Mariana Islands\",phone:\"1-670\"},{code:\"MQ\",label:\"Martinique\",phone:\"596\"},{code:\"MR\",label:\"Mauritania\",phone:\"222\"},{code:\"MS\",label:\"Montserrat\",phone:\"1-664\"},{code:\"MT\",label:\"Malta\",phone:\"356\"},{code:\"MU\",label:\"Mauritius\",phone:\"230\"},{code:\"MV\",label:\"Maldives\",phone:\"960\"},{code:\"MW\",label:\"Malawi\",phone:\"265\"},{code:\"MX\",label:\"Mexico\",phone:\"52\"},{code:\"MY\",label:\"Malaysia\",phone:\"60\"},{code:\"MZ\",label:\"Mozambique\",phone:\"258\"},{code:\"NA\",label:\"Namibia\",phone:\"264\"},{code:\"NC\",label:\"New Caledonia\",phone:\"687\"},{code:\"NE\",label:\"Niger\",phone:\"227\"},{code:\"NF\",label:\"Norfolk Island\",phone:\"672\"},{code:\"NG\",label:\"Nigeria\",phone:\"234\"},{code:\"NI\",label:\"Nicaragua\",phone:\"505\"},{code:\"NL\",label:\"Netherlands\",phone:\"31\"},{code:\"NO\",label:\"Norway\",phone:\"47\"},{code:\"NP\",label:\"Nepal\",phone:\"977\"},{code:\"NR\",label:\"Nauru\",phone:\"674\"},{code:\"NU\",label:\"Niue\",phone:\"683\"},{code:\"NZ\",label:\"New Zealand\",phone:\"64\"},{code:\"OM\",label:\"Oman\",phone:\"968\"},{code:\"PA\",label:\"Panama\",phone:\"507\"},{code:\"PE\",label:\"Peru\",phone:\"51\"},{code:\"PF\",label:\"French Polynesia\",phone:\"689\"},{code:\"PG\",label:\"Papua New Guinea\",phone:\"675\"},{code:\"PH\",label:\"Philippines\",phone:\"63\"},{code:\"PK\",label:\"Pakistan\",phone:\"92\"},{code:\"PL\",label:\"Poland\",phone:\"48\"},{code:\"PM\",label:\"Saint Pierre and Miquelon\",phone:\"508\"},{code:\"PN\",label:\"Pitcairn\",phone:\"870\"},{code:\"PR\",label:\"Puerto Rico\",phone:\"1\"},{code:\"PS\",label:\"Palestine, State of\",phone:\"970\"},{code:\"PT\",label:\"Portugal\",phone:\"351\"},{code:\"PW\",label:\"Palau\",phone:\"680\"},{code:\"PY\",label:\"Paraguay\",phone:\"595\"},{code:\"QA\",label:\"Qatar\",phone:\"974\"},{code:\"RE\",label:\"Reunion\",phone:\"262\"},{code:\"RO\",label:\"Romania\",phone:\"40\"},{code:\"RS\",label:\"Serbia\",phone:\"381\"},{code:\"RU\",label:\"Russian Federation\",phone:\"7\"},{code:\"RW\",label:\"Rwanda\",phone:\"250\"},{code:\"SA\",label:\"Saudi Arabia\",phone:\"966\"},{code:\"SB\",label:\"Solomon Islands\",phone:\"677\"},{code:\"SC\",label:\"Seychelles\",phone:\"248\"},{code:\"SD\",label:\"Sudan\",phone:\"249\"},{code:\"SE\",label:\"Sweden\",phone:\"46\"},{code:\"SG\",label:\"Singapore\",phone:\"65\"},{code:\"SH\",label:\"Saint Helena\",phone:\"290\"},{code:\"SI\",label:\"Slovenia\",phone:\"386\"},{code:\"SJ\",label:\"Svalbard and Jan Mayen\",phone:\"47\"},{code:\"SK\",label:\"Slovakia\",phone:\"421\"},{code:\"SL\",label:\"Sierra Leone\",phone:\"232\"},{code:\"SM\",label:\"San Marino\",phone:\"378\"},{code:\"SN\",label:\"Senegal\",phone:\"221\"},{code:\"SO\",label:\"Somalia\",phone:\"252\"},{code:\"SR\",label:\"Suriname\",phone:\"597\"},{code:\"SS\",label:\"South Sudan\",phone:\"211\"},{code:\"ST\",label:\"Sao Tome and Principe\",phone:\"239\"},{code:\"SV\",label:\"El Salvador\",phone:\"503\"},{code:\"SX\",label:\"Sint Maarten (Dutch part)\",phone:\"1-721\"},{code:\"SY\",label:\"Syrian Arab Republic\",phone:\"963\"},{code:\"SZ\",label:\"Swaziland\",phone:\"268\"},{code:\"TC\",label:\"Turks and Caicos Islands\",phone:\"1-649\"},{code:\"TD\",label:\"Chad\",phone:\"235\"},{code:\"TF\",label:\"French Southern Territories\",phone:\"262\"},{code:\"TG\",label:\"Togo\",phone:\"228\"},{code:\"TH\",label:\"Thailand\",phone:\"66\"},{code:\"TJ\",label:\"Tajikistan\",phone:\"992\"},{code:\"TK\",label:\"Tokelau\",phone:\"690\"},{code:\"TL\",label:\"Timor-Leste\",phone:\"670\"},{code:\"TM\",label:\"Turkmenistan\",phone:\"993\"},{code:\"TN\",label:\"Tunisia\",phone:\"216\"},{code:\"TO\",label:\"Tonga\",phone:\"676\"},{code:\"TR\",label:\"Turkey\",phone:\"90\"},{code:\"TT\",label:\"Trinidad and Tobago\",phone:\"1-868\"},{code:\"TV\",label:\"Tuvalu\",phone:\"688\"},{code:\"TW\",label:\"Taiwan, Province of China\",phone:\"886\"},{code:\"TZ\",label:\"United Republic of Tanzania\",phone:\"255\"},{code:\"UA\",label:\"Ukraine\",phone:\"380\"},{code:\"UG\",label:\"Uganda\",phone:\"256\"},{code:\"US\",label:\"United States\",phone:\"1\",suggested:!0},{code:\"UY\",label:\"Uruguay\",phone:\"598\"},{code:\"UZ\",label:\"Uzbekistan\",phone:\"998\"},{code:\"VA\",label:\"Holy See (Vatican City State)\",phone:\"379\"},{code:\"VC\",label:\"Saint Vincent and the Grenadines\",phone:\"1-784\"},{code:\"VE\",label:\"Venezuela\",phone:\"58\"},{code:\"VG\",label:\"British Virgin Islands\",phone:\"1-284\"},{code:\"VI\",label:\"US Virgin Islands\",phone:\"1-340\"},{code:\"VN\",label:\"Vietnam\",phone:\"84\"},{code:\"VU\",label:\"Vanuatu\",phone:\"678\"},{code:\"WF\",label:\"Wallis and Futuna\",phone:\"681\"},{code:\"WS\",label:\"Samoa\",phone:\"685\"},{code:\"XK\",label:\"Kosovo\",phone:\"383\"},{code:\"YE\",label:\"Yemen\",phone:\"967\"},{code:\"YT\",label:\"Mayotte\",phone:\"262\"},{code:\"ZA\",label:\"South Africa\",phone:\"27\"},{code:\"ZM\",label:\"Zambia\",phone:\"260\"},{code:\"ZW\",label:\"Zimbabwe\",phone:\"263\"}]},gNIM:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"UiZO\"),l=o.a.createElement,s=[\"Option 1\",\"Option 2\"];function c(){return l(r.a,{id:\"custom-input-demo\",options:s,renderInput:function(e){return l(\"div\",{ref:e.InputProps.ref},l(\"input\",Object(a.a)({style:{width:200},type:\"text\"},e.inputProps)))}})}},gXWL:function(e,t,n){\"use strict\";var a=n(\"mXGw\"),i=n(\"vtGe\"),o=a.createElement;t.a=Object(i.a)(o(\"path\",{d:\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"}),\"CheckBoxOutlineBlank\")},gfDo:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filter = createFilterOptions();\\n\\nexport default function FreeSoloCreateOption() {\\n  const [value, setValue] = React.useState(null);\\n\\n  return (\\n    <Autocomplete\\n      value={value}\\n      onChange={(event, newValue) => {\\n        if (typeof newValue === 'string') {\\n          setValue({\\n            title: newValue,\\n          });\\n        } else if (newValue && newValue.inputValue) {\\n          // Create a new value from the user input\\n          setValue({\\n            title: newValue.inputValue,\\n          });\\n        } else {\\n          setValue(newValue);\\n        }\\n      }}\\n      filterOptions={(options, params) => {\\n        const filtered = filter(options, params);\\n\\n        // Suggest the creation of a new value\\n        if (params.inputValue !== '') {\\n          filtered.push({\\n            inputValue: params.inputValue,\\n            title: `Add \\\"${params.inputValue}\\\"`,\\n          });\\n        }\\n\\n        return filtered;\\n      }}\\n      selectOnFocus\\n      clearOnBlur\\n      handleHomeEndKeys\\n      id=\\\"free-solo-with-text-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => {\\n        // Value selected with enter, right from the input\\n        if (typeof option === 'string') {\\n          return option;\\n        }\\n        // Add \\\"xxx\\\" option created dynamically\\n        if (option.inputValue) {\\n          return option.inputValue;\\n        }\\n        // Regular option\\n        return option.title;\\n      }}\\n      renderOption={(option) => option.title}\\n      style={{ width: 300 }}\\n      freeSolo\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Free solo with text demo\\\"\\n          variant=\\\"outlined\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},hkOL:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function ComboBox() {\\n  return (\\n    <Autocomplete\\n      id=\\\"combo-box-demo\\\"\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"Combo box\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},jHQw:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return h}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"b4WH\"),r=n.n(o),l=n(\"mXGw\"),s=n.n(l),c=n(\"nx5Z\"),d=n(\"UiZO\"),p=n(\"yZEQ\"),u=s.a.createElement;var y=Object(p.a)({option:{fontSize:15,\"& > span\":{marginRight:10,fontSize:18}}});function h(){var e=y();return u(d.a,{id:\"country-select-demo\",style:{width:300},options:m,classes:{option:e.option},autoHighlight:!0,getOptionLabel:function(e){return e.label},renderOption:function(e){return u(s.a.Fragment,null,u(\"span\",null,(t=e.code,\"undefined\"!==typeof r.a?t.toUpperCase().replace(/./g,(function(e){return r()(e.charCodeAt(0)+127397)})):t)),e.label,\" (\",e.code,\") +\",e.phone);var t},renderInput:function(e){return u(c.a,Object(a.a)({},e,{label:\"Choose a country\",variant:\"outlined\",inputProps:Object(i.a)(Object(i.a)({},e.inputProps),{},{autoComplete:\"new-password\"})}))}})}var m=[{code:\"AD\",label:\"Andorra\",phone:\"376\"},{code:\"AE\",label:\"United Arab Emirates\",phone:\"971\"},{code:\"AF\",label:\"Afghanistan\",phone:\"93\"},{code:\"AG\",label:\"Antigua and Barbuda\",phone:\"1-268\"},{code:\"AI\",label:\"Anguilla\",phone:\"1-264\"},{code:\"AL\",label:\"Albania\",phone:\"355\"},{code:\"AM\",label:\"Armenia\",phone:\"374\"},{code:\"AO\",label:\"Angola\",phone:\"244\"},{code:\"AQ\",label:\"Antarctica\",phone:\"672\"},{code:\"AR\",label:\"Argentina\",phone:\"54\"},{code:\"AS\",label:\"American Samoa\",phone:\"1-684\"},{code:\"AT\",label:\"Austria\",phone:\"43\"},{code:\"AU\",label:\"Australia\",phone:\"61\",suggested:!0},{code:\"AW\",label:\"Aruba\",phone:\"297\"},{code:\"AX\",label:\"Alland Islands\",phone:\"358\"},{code:\"AZ\",label:\"Azerbaijan\",phone:\"994\"},{code:\"BA\",label:\"Bosnia and Herzegovina\",phone:\"387\"},{code:\"BB\",label:\"Barbados\",phone:\"1-246\"},{code:\"BD\",label:\"Bangladesh\",phone:\"880\"},{code:\"BE\",label:\"Belgium\",phone:\"32\"},{code:\"BF\",label:\"Burkina Faso\",phone:\"226\"},{code:\"BG\",label:\"Bulgaria\",phone:\"359\"},{code:\"BH\",label:\"Bahrain\",phone:\"973\"},{code:\"BI\",label:\"Burundi\",phone:\"257\"},{code:\"BJ\",label:\"Benin\",phone:\"229\"},{code:\"BL\",label:\"Saint Barthelemy\",phone:\"590\"},{code:\"BM\",label:\"Bermuda\",phone:\"1-441\"},{code:\"BN\",label:\"Brunei Darussalam\",phone:\"673\"},{code:\"BO\",label:\"Bolivia\",phone:\"591\"},{code:\"BR\",label:\"Brazil\",phone:\"55\"},{code:\"BS\",label:\"Bahamas\",phone:\"1-242\"},{code:\"BT\",label:\"Bhutan\",phone:\"975\"},{code:\"BV\",label:\"Bouvet Island\",phone:\"47\"},{code:\"BW\",label:\"Botswana\",phone:\"267\"},{code:\"BY\",label:\"Belarus\",phone:\"375\"},{code:\"BZ\",label:\"Belize\",phone:\"501\"},{code:\"CA\",label:\"Canada\",phone:\"1\",suggested:!0},{code:\"CC\",label:\"Cocos (Keeling) Islands\",phone:\"61\"},{code:\"CD\",label:\"Congo, Democratic Republic of the\",phone:\"243\"},{code:\"CF\",label:\"Central African Republic\",phone:\"236\"},{code:\"CG\",label:\"Congo, Republic of the\",phone:\"242\"},{code:\"CH\",label:\"Switzerland\",phone:\"41\"},{code:\"CI\",label:\"Cote d'Ivoire\",phone:\"225\"},{code:\"CK\",label:\"Cook Islands\",phone:\"682\"},{code:\"CL\",label:\"Chile\",phone:\"56\"},{code:\"CM\",label:\"Cameroon\",phone:\"237\"},{code:\"CN\",label:\"China\",phone:\"86\"},{code:\"CO\",label:\"Colombia\",phone:\"57\"},{code:\"CR\",label:\"Costa Rica\",phone:\"506\"},{code:\"CU\",label:\"Cuba\",phone:\"53\"},{code:\"CV\",label:\"Cape Verde\",phone:\"238\"},{code:\"CW\",label:\"Curacao\",phone:\"599\"},{code:\"CX\",label:\"Christmas Island\",phone:\"61\"},{code:\"CY\",label:\"Cyprus\",phone:\"357\"},{code:\"CZ\",label:\"Czech Republic\",phone:\"420\"},{code:\"DE\",label:\"Germany\",phone:\"49\",suggested:!0},{code:\"DJ\",label:\"Djibouti\",phone:\"253\"},{code:\"DK\",label:\"Denmark\",phone:\"45\"},{code:\"DM\",label:\"Dominica\",phone:\"1-767\"},{code:\"DO\",label:\"Dominican Republic\",phone:\"1-809\"},{code:\"DZ\",label:\"Algeria\",phone:\"213\"},{code:\"EC\",label:\"Ecuador\",phone:\"593\"},{code:\"EE\",label:\"Estonia\",phone:\"372\"},{code:\"EG\",label:\"Egypt\",phone:\"20\"},{code:\"EH\",label:\"Western Sahara\",phone:\"212\"},{code:\"ER\",label:\"Eritrea\",phone:\"291\"},{code:\"ES\",label:\"Spain\",phone:\"34\"},{code:\"ET\",label:\"Ethiopia\",phone:\"251\"},{code:\"FI\",label:\"Finland\",phone:\"358\"},{code:\"FJ\",label:\"Fiji\",phone:\"679\"},{code:\"FK\",label:\"Falkland Islands (Malvinas)\",phone:\"500\"},{code:\"FM\",label:\"Micronesia, Federated States of\",phone:\"691\"},{code:\"FO\",label:\"Faroe Islands\",phone:\"298\"},{code:\"FR\",label:\"France\",phone:\"33\",suggested:!0},{code:\"GA\",label:\"Gabon\",phone:\"241\"},{code:\"GB\",label:\"United Kingdom\",phone:\"44\"},{code:\"GD\",label:\"Grenada\",phone:\"1-473\"},{code:\"GE\",label:\"Georgia\",phone:\"995\"},{code:\"GF\",label:\"French Guiana\",phone:\"594\"},{code:\"GG\",label:\"Guernsey\",phone:\"44\"},{code:\"GH\",label:\"Ghana\",phone:\"233\"},{code:\"GI\",label:\"Gibraltar\",phone:\"350\"},{code:\"GL\",label:\"Greenland\",phone:\"299\"},{code:\"GM\",label:\"Gambia\",phone:\"220\"},{code:\"GN\",label:\"Guinea\",phone:\"224\"},{code:\"GP\",label:\"Guadeloupe\",phone:\"590\"},{code:\"GQ\",label:\"Equatorial Guinea\",phone:\"240\"},{code:\"GR\",label:\"Greece\",phone:\"30\"},{code:\"GS\",label:\"South Georgia and the South Sandwich Islands\",phone:\"500\"},{code:\"GT\",label:\"Guatemala\",phone:\"502\"},{code:\"GU\",label:\"Guam\",phone:\"1-671\"},{code:\"GW\",label:\"Guinea-Bissau\",phone:\"245\"},{code:\"GY\",label:\"Guyana\",phone:\"592\"},{code:\"HK\",label:\"Hong Kong\",phone:\"852\"},{code:\"HM\",label:\"Heard Island and McDonald Islands\",phone:\"672\"},{code:\"HN\",label:\"Honduras\",phone:\"504\"},{code:\"HR\",label:\"Croatia\",phone:\"385\"},{code:\"HT\",label:\"Haiti\",phone:\"509\"},{code:\"HU\",label:\"Hungary\",phone:\"36\"},{code:\"ID\",label:\"Indonesia\",phone:\"62\"},{code:\"IE\",label:\"Ireland\",phone:\"353\"},{code:\"IL\",label:\"Israel\",phone:\"972\"},{code:\"IM\",label:\"Isle of Man\",phone:\"44\"},{code:\"IN\",label:\"India\",phone:\"91\"},{code:\"IO\",label:\"British Indian Ocean Territory\",phone:\"246\"},{code:\"IQ\",label:\"Iraq\",phone:\"964\"},{code:\"IR\",label:\"Iran, Islamic Republic of\",phone:\"98\"},{code:\"IS\",label:\"Iceland\",phone:\"354\"},{code:\"IT\",label:\"Italy\",phone:\"39\"},{code:\"JE\",label:\"Jersey\",phone:\"44\"},{code:\"JM\",label:\"Jamaica\",phone:\"1-876\"},{code:\"JO\",label:\"Jordan\",phone:\"962\"},{code:\"JP\",label:\"Japan\",phone:\"81\",suggested:!0},{code:\"KE\",label:\"Kenya\",phone:\"254\"},{code:\"KG\",label:\"Kyrgyzstan\",phone:\"996\"},{code:\"KH\",label:\"Cambodia\",phone:\"855\"},{code:\"KI\",label:\"Kiribati\",phone:\"686\"},{code:\"KM\",label:\"Comoros\",phone:\"269\"},{code:\"KN\",label:\"Saint Kitts and Nevis\",phone:\"1-869\"},{code:\"KP\",label:\"Korea, Democratic People's Republic of\",phone:\"850\"},{code:\"KR\",label:\"Korea, Republic of\",phone:\"82\"},{code:\"KW\",label:\"Kuwait\",phone:\"965\"},{code:\"KY\",label:\"Cayman Islands\",phone:\"1-345\"},{code:\"KZ\",label:\"Kazakhstan\",phone:\"7\"},{code:\"LA\",label:\"Lao People's Democratic Republic\",phone:\"856\"},{code:\"LB\",label:\"Lebanon\",phone:\"961\"},{code:\"LC\",label:\"Saint Lucia\",phone:\"1-758\"},{code:\"LI\",label:\"Liechtenstein\",phone:\"423\"},{code:\"LK\",label:\"Sri Lanka\",phone:\"94\"},{code:\"LR\",label:\"Liberia\",phone:\"231\"},{code:\"LS\",label:\"Lesotho\",phone:\"266\"},{code:\"LT\",label:\"Lithuania\",phone:\"370\"},{code:\"LU\",label:\"Luxembourg\",phone:\"352\"},{code:\"LV\",label:\"Latvia\",phone:\"371\"},{code:\"LY\",label:\"Libya\",phone:\"218\"},{code:\"MA\",label:\"Morocco\",phone:\"212\"},{code:\"MC\",label:\"Monaco\",phone:\"377\"},{code:\"MD\",label:\"Moldova, Republic of\",phone:\"373\"},{code:\"ME\",label:\"Montenegro\",phone:\"382\"},{code:\"MF\",label:\"Saint Martin (French part)\",phone:\"590\"},{code:\"MG\",label:\"Madagascar\",phone:\"261\"},{code:\"MH\",label:\"Marshall Islands\",phone:\"692\"},{code:\"MK\",label:\"Macedonia, the Former Yugoslav Republic of\",phone:\"389\"},{code:\"ML\",label:\"Mali\",phone:\"223\"},{code:\"MM\",label:\"Myanmar\",phone:\"95\"},{code:\"MN\",label:\"Mongolia\",phone:\"976\"},{code:\"MO\",label:\"Macao\",phone:\"853\"},{code:\"MP\",label:\"Northern Mariana Islands\",phone:\"1-670\"},{code:\"MQ\",label:\"Martinique\",phone:\"596\"},{code:\"MR\",label:\"Mauritania\",phone:\"222\"},{code:\"MS\",label:\"Montserrat\",phone:\"1-664\"},{code:\"MT\",label:\"Malta\",phone:\"356\"},{code:\"MU\",label:\"Mauritius\",phone:\"230\"},{code:\"MV\",label:\"Maldives\",phone:\"960\"},{code:\"MW\",label:\"Malawi\",phone:\"265\"},{code:\"MX\",label:\"Mexico\",phone:\"52\"},{code:\"MY\",label:\"Malaysia\",phone:\"60\"},{code:\"MZ\",label:\"Mozambique\",phone:\"258\"},{code:\"NA\",label:\"Namibia\",phone:\"264\"},{code:\"NC\",label:\"New Caledonia\",phone:\"687\"},{code:\"NE\",label:\"Niger\",phone:\"227\"},{code:\"NF\",label:\"Norfolk Island\",phone:\"672\"},{code:\"NG\",label:\"Nigeria\",phone:\"234\"},{code:\"NI\",label:\"Nicaragua\",phone:\"505\"},{code:\"NL\",label:\"Netherlands\",phone:\"31\"},{code:\"NO\",label:\"Norway\",phone:\"47\"},{code:\"NP\",label:\"Nepal\",phone:\"977\"},{code:\"NR\",label:\"Nauru\",phone:\"674\"},{code:\"NU\",label:\"Niue\",phone:\"683\"},{code:\"NZ\",label:\"New Zealand\",phone:\"64\"},{code:\"OM\",label:\"Oman\",phone:\"968\"},{code:\"PA\",label:\"Panama\",phone:\"507\"},{code:\"PE\",label:\"Peru\",phone:\"51\"},{code:\"PF\",label:\"French Polynesia\",phone:\"689\"},{code:\"PG\",label:\"Papua New Guinea\",phone:\"675\"},{code:\"PH\",label:\"Philippines\",phone:\"63\"},{code:\"PK\",label:\"Pakistan\",phone:\"92\"},{code:\"PL\",label:\"Poland\",phone:\"48\"},{code:\"PM\",label:\"Saint Pierre and Miquelon\",phone:\"508\"},{code:\"PN\",label:\"Pitcairn\",phone:\"870\"},{code:\"PR\",label:\"Puerto Rico\",phone:\"1\"},{code:\"PS\",label:\"Palestine, State of\",phone:\"970\"},{code:\"PT\",label:\"Portugal\",phone:\"351\"},{code:\"PW\",label:\"Palau\",phone:\"680\"},{code:\"PY\",label:\"Paraguay\",phone:\"595\"},{code:\"QA\",label:\"Qatar\",phone:\"974\"},{code:\"RE\",label:\"Reunion\",phone:\"262\"},{code:\"RO\",label:\"Romania\",phone:\"40\"},{code:\"RS\",label:\"Serbia\",phone:\"381\"},{code:\"RU\",label:\"Russian Federation\",phone:\"7\"},{code:\"RW\",label:\"Rwanda\",phone:\"250\"},{code:\"SA\",label:\"Saudi Arabia\",phone:\"966\"},{code:\"SB\",label:\"Solomon Islands\",phone:\"677\"},{code:\"SC\",label:\"Seychelles\",phone:\"248\"},{code:\"SD\",label:\"Sudan\",phone:\"249\"},{code:\"SE\",label:\"Sweden\",phone:\"46\"},{code:\"SG\",label:\"Singapore\",phone:\"65\"},{code:\"SH\",label:\"Saint Helena\",phone:\"290\"},{code:\"SI\",label:\"Slovenia\",phone:\"386\"},{code:\"SJ\",label:\"Svalbard and Jan Mayen\",phone:\"47\"},{code:\"SK\",label:\"Slovakia\",phone:\"421\"},{code:\"SL\",label:\"Sierra Leone\",phone:\"232\"},{code:\"SM\",label:\"San Marino\",phone:\"378\"},{code:\"SN\",label:\"Senegal\",phone:\"221\"},{code:\"SO\",label:\"Somalia\",phone:\"252\"},{code:\"SR\",label:\"Suriname\",phone:\"597\"},{code:\"SS\",label:\"South Sudan\",phone:\"211\"},{code:\"ST\",label:\"Sao Tome and Principe\",phone:\"239\"},{code:\"SV\",label:\"El Salvador\",phone:\"503\"},{code:\"SX\",label:\"Sint Maarten (Dutch part)\",phone:\"1-721\"},{code:\"SY\",label:\"Syrian Arab Republic\",phone:\"963\"},{code:\"SZ\",label:\"Swaziland\",phone:\"268\"},{code:\"TC\",label:\"Turks and Caicos Islands\",phone:\"1-649\"},{code:\"TD\",label:\"Chad\",phone:\"235\"},{code:\"TF\",label:\"French Southern Territories\",phone:\"262\"},{code:\"TG\",label:\"Togo\",phone:\"228\"},{code:\"TH\",label:\"Thailand\",phone:\"66\"},{code:\"TJ\",label:\"Tajikistan\",phone:\"992\"},{code:\"TK\",label:\"Tokelau\",phone:\"690\"},{code:\"TL\",label:\"Timor-Leste\",phone:\"670\"},{code:\"TM\",label:\"Turkmenistan\",phone:\"993\"},{code:\"TN\",label:\"Tunisia\",phone:\"216\"},{code:\"TO\",label:\"Tonga\",phone:\"676\"},{code:\"TR\",label:\"Turkey\",phone:\"90\"},{code:\"TT\",label:\"Trinidad and Tobago\",phone:\"1-868\"},{code:\"TV\",label:\"Tuvalu\",phone:\"688\"},{code:\"TW\",label:\"Taiwan, Province of China\",phone:\"886\"},{code:\"TZ\",label:\"United Republic of Tanzania\",phone:\"255\"},{code:\"UA\",label:\"Ukraine\",phone:\"380\"},{code:\"UG\",label:\"Uganda\",phone:\"256\"},{code:\"US\",label:\"United States\",phone:\"1\",suggested:!0},{code:\"UY\",label:\"Uruguay\",phone:\"598\"},{code:\"UZ\",label:\"Uzbekistan\",phone:\"998\"},{code:\"VA\",label:\"Holy See (Vatican City State)\",phone:\"379\"},{code:\"VC\",label:\"Saint Vincent and the Grenadines\",phone:\"1-784\"},{code:\"VE\",label:\"Venezuela\",phone:\"58\"},{code:\"VG\",label:\"British Virgin Islands\",phone:\"1-284\"},{code:\"VI\",label:\"US Virgin Islands\",phone:\"1-340\"},{code:\"VN\",label:\"Vietnam\",phone:\"84\"},{code:\"VU\",label:\"Vanuatu\",phone:\"678\"},{code:\"WF\",label:\"Wallis and Futuna\",phone:\"681\"},{code:\"WS\",label:\"Samoa\",phone:\"685\"},{code:\"XK\",label:\"Kosovo\",phone:\"383\"},{code:\"YE\",label:\"Yemen\",phone:\"967\"},{code:\"YT\",label:\"Mayotte\",phone:\"262\"},{code:\"ZA\",label:\"South Africa\",phone:\"27\"},{code:\"ZM\",label:\"Zambia\",phone:\"260\"},{code:\"ZW\",label:\"Zimbabwe\",phone:\"263\"}]},kIYH:function(e,t,n){n(\"vYXo\"),e.exports=n(\"TaGV\").String.fromCodePoint},\"kX+z\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return S}));var a=n(\"z3IF\"),i=n(\"0tNF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=n(\"U+sF\"),d=n(\"pQ8Y\"),p=n(\"Oy88\"),u=n(\"yZEQ\"),y=n(\"K+1R\"),h=n.n(y),m=n(\"T5cu\"),f=n.n(m),g=r.a.createElement;var b={current:null},T=Object(u.a)((function(e){return{icon:{color:e.palette.text.secondary,marginRight:e.spacing(2)}}}));function S(){var e=T(),t=r.a.useState(null),n=t[0],o=t[1],u=r.a.useState(\"\"),y=u[0],m=u[1],S=r.a.useState([]),v=S[0],w=S[1],A=r.a.useRef(!1);A.current||(document.querySelector(\"#google-maps\")||function(e,t,n){if(t){var a=document.createElement(\"script\");a.setAttribute(\"async\",\"\"),a.setAttribute(\"id\",n),a.src=e,t.appendChild(a)}}(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places\",document.querySelector(\"head\"),\"google-maps\"),A.current=!0);var O=r.a.useMemo((function(){return f()((function(e,t){b.current.getPlacePredictions(e,t)}),200)}),[]);return r.a.useEffect((function(){var e=!0;if(!b.current&&window.google&&(b.current=new window.google.maps.places.AutocompleteService),b.current){if(\"\"!==y)return O({input:y},(function(t){if(e){var a=[];n&&(a=[n]),t&&(a=[].concat(Object(i.a)(a),Object(i.a)(t))),w(a)}})),function(){e=!1};w(n?[n]:[])}}),[n,y,O]),g(s.a,{id:\"google-map-demo\",style:{width:300},getOptionLabel:function(e){return\"string\"===typeof e?e:e.description},filterOptions:function(e){return e},options:v,autoComplete:!0,includeInputInList:!0,filterSelectedOptions:!0,value:n,onChange:function(e,t){w(t?[t].concat(Object(i.a)(v)):v),o(t)},onInputChange:function(e,t){m(t)},renderInput:function(e){return g(l.a,Object(a.a)({},e,{label:\"Add a location\",variant:\"outlined\",fullWidth:!0}))},renderOption:function(t){var n=t.structured_formatting.main_text_matched_substrings,a=h()(t.structured_formatting.main_text,n.map((function(e){return[e.offset,e.offset+e.length]})));return g(d.a,{container:!0,alignItems:\"center\"},g(d.a,{item:!0},g(c.a,{className:e.icon})),g(d.a,{item:!0,xs:!0},a.map((function(e,t){return g(\"span\",{key:t,style:{fontWeight:e.highlight?700:400}},e.text)})),g(p.a,{variant:\"body2\",color:\"textSecondary\"},t.structured_formatting.secondary_text)))}})}},lL1c:function(e,t){e.exports=\"import React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\\nimport Grid from '@material-ui/core/Grid';\\nimport Typography from '@material-ui/core/Typography';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport parse from 'autosuggest-highlight/parse';\\nimport throttle from 'lodash/throttle';\\n\\nfunction loadScript(src, position, id) {\\n  if (!position) {\\n    return;\\n  }\\n\\n  const script = document.createElement('script');\\n  script.setAttribute('async', '');\\n  script.setAttribute('id', id);\\n  script.src = src;\\n  position.appendChild(script);\\n}\\n\\nconst autocompleteService = { current: null };\\n\\nconst useStyles = makeStyles((theme) => ({\\n  icon: {\\n    color: theme.palette.text.secondary,\\n    marginRight: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function GoogleMaps() {\\n  const classes = useStyles();\\n  const [value, setValue] = React.useState(null);\\n  const [inputValue, setInputValue] = React.useState('');\\n  const [options, setOptions] = React.useState([]);\\n  const loaded = React.useRef(false);\\n\\n  if (typeof window !== 'undefined' && !loaded.current) {\\n    if (!document.querySelector('#google-maps')) {\\n      loadScript(\\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places',\\n        document.querySelector('head'),\\n        'google-maps',\\n      );\\n    }\\n\\n    loaded.current = true;\\n  }\\n\\n  const fetch = React.useMemo(\\n    () =>\\n      throttle((request, callback) => {\\n        autocompleteService.current.getPlacePredictions(request, callback);\\n      }, 200),\\n    [],\\n  );\\n\\n  React.useEffect(() => {\\n    let active = true;\\n\\n    if (!autocompleteService.current && window.google) {\\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\\n    }\\n    if (!autocompleteService.current) {\\n      return undefined;\\n    }\\n\\n    if (inputValue === '') {\\n      setOptions(value ? [value] : []);\\n      return undefined;\\n    }\\n\\n    fetch({ input: inputValue }, (results) => {\\n      if (active) {\\n        let newOptions = [];\\n\\n        if (value) {\\n          newOptions = [value];\\n        }\\n\\n        if (results) {\\n          newOptions = [...newOptions, ...results];\\n        }\\n\\n        setOptions(newOptions);\\n      }\\n    });\\n\\n    return () => {\\n      active = false;\\n    };\\n  }, [value, inputValue, fetch]);\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"google-map-demo\\\"\\n      style={{ width: 300 }}\\n      getOptionLabel={(option) =>\\n        typeof option === 'string' ? option : option.description\\n      }\\n      filterOptions={(x) => x}\\n      options={options}\\n      autoComplete\\n      includeInputInList\\n      filterSelectedOptions\\n      value={value}\\n      onChange={(event, newValue) => {\\n        setOptions(newValue ? [newValue, ...options] : options);\\n        setValue(newValue);\\n      }}\\n      onInputChange={(event, newInputValue) => {\\n        setInputValue(newInputValue);\\n      }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Add a location\\\"\\n          variant=\\\"outlined\\\"\\n          fullWidth\\n        />\\n      )}\\n      renderOption={(option) => {\\n        const matches =\\n          option.structured_formatting.main_text_matched_substrings;\\n        const parts = parse(\\n          option.structured_formatting.main_text,\\n          matches.map((match) => [match.offset, match.offset + match.length]),\\n        );\\n\\n        return (\\n          <Grid container alignItems=\\\"center\\\">\\n            <Grid item>\\n              <LocationOnIcon className={classes.icon} />\\n            </Grid>\\n            <Grid item xs>\\n              {parts.map((part, index) => (\\n                <span\\n                  key={index}\\n                  style={{\\n                    fontWeight: part.highlight ? 700 : 400,\\n                  }}\\n                >\\n                  {part.text}\\n                </span>\\n              ))}\\n\\n              <Typography variant=\\\"body2\\\" color=\\\"textSecondary\\\">\\n                {option.structured_formatting.secondary_text}\\n              </Typography>\\n            </Grid>\\n          </Grid>\\n        );\\n      }}\\n    />\\n  );\\n}\\n\"},lg6c:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport Button from '@material-ui/core/Button';\\nimport Autocomplete, {\\n  createFilterOptions,\\n} from '@material-ui/lab/Autocomplete';\\n\\nconst filter = createFilterOptions();\\n\\nexport default function FreeSoloCreateOptionDialog() {\\n  const [value, setValue] = React.useState(null);\\n  const [open, toggleOpen] = React.useState(false);\\n\\n  const handleClose = () => {\\n    setDialogValue({\\n      title: '',\\n      year: '',\\n    });\\n\\n    toggleOpen(false);\\n  };\\n\\n  const [dialogValue, setDialogValue] = React.useState({\\n    title: '',\\n    year: '',\\n  });\\n\\n  const handleSubmit = (event) => {\\n    event.preventDefault();\\n    setValue({\\n      title: dialogValue.title,\\n      year: parseInt(dialogValue.year, 10),\\n    });\\n\\n    handleClose();\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Autocomplete\\n        value={value}\\n        onChange={(event, newValue) => {\\n          if (typeof newValue === 'string') {\\n            // timeout to avoid instant validation of the dialog's form.\\n            setTimeout(() => {\\n              toggleOpen(true);\\n              setDialogValue({\\n                title: newValue,\\n                year: '',\\n              });\\n            });\\n          } else if (newValue && newValue.inputValue) {\\n            toggleOpen(true);\\n            setDialogValue({\\n              title: newValue.inputValue,\\n              year: '',\\n            });\\n          } else {\\n            setValue(newValue);\\n          }\\n        }}\\n        filterOptions={(options, params) => {\\n          const filtered = filter(options, params);\\n\\n          if (params.inputValue !== '') {\\n            filtered.push({\\n              inputValue: params.inputValue,\\n              title: `Add \\\"${params.inputValue}\\\"`,\\n            });\\n          }\\n\\n          return filtered;\\n        }}\\n        id=\\\"free-solo-dialog-demo\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => {\\n          // e.g value selected with enter, right from the input\\n          if (typeof option === 'string') {\\n            return option;\\n          }\\n          if (option.inputValue) {\\n            return option.inputValue;\\n          }\\n          return option.title;\\n        }}\\n        selectOnFocus\\n        clearOnBlur\\n        handleHomeEndKeys\\n        renderOption={(option) => option.title}\\n        style={{ width: 300 }}\\n        freeSolo\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"Free solo dialog\\\" variant=\\\"outlined\\\" />\\n        )}\\n      />\\n      <Dialog\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"form-dialog-title\\\"\\n      >\\n        <form onSubmit={handleSubmit}>\\n          <DialogTitle id=\\\"form-dialog-title\\\">Add a new film</DialogTitle>\\n          <DialogContent>\\n            <DialogContentText>\\n              Did you miss any film in our list? Please, add it!\\n            </DialogContentText>\\n            <TextField\\n              autoFocus\\n              margin=\\\"dense\\\"\\n              id=\\\"name\\\"\\n              value={dialogValue.title}\\n              onChange={(event) =>\\n                setDialogValue({\\n                  ...dialogValue,\\n                  title: event.target.value,\\n                })\\n              }\\n              label=\\\"title\\\"\\n              type=\\\"text\\\"\\n            />\\n            <TextField\\n              margin=\\\"dense\\\"\\n              id=\\\"name\\\"\\n              value={dialogValue.year}\\n              onChange={(event) =>\\n                setDialogValue({\\n                  ...dialogValue,\\n                  year: event.target.value,\\n                })\\n              }\\n              label=\\\"year\\\"\\n              type=\\\"number\\\"\\n            />\\n          </DialogContent>\\n          <DialogActions>\\n            <Button onClick={handleClose} color=\\\"primary\\\">\\n              Cancel\\n            </Button>\\n            <Button type=\\\"submit\\\" color=\\\"primary\\\">\\n              Add\\n            </Button>\\n          </DialogActions>\\n        </form>\\n      </Dialog>\\n    </React.Fragment>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},m4g2:function(e,t){e.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\\nimport { VariableSizeList } from 'react-window';\\nimport { Typography } from '@material-ui/core';\\n\\nconst LISTBOX_PADDING = 8; // px\\n\\nfunction renderRow(props) {\\n  const { data, index, style } = props;\\n  return React.cloneElement(data[index], {\\n    style: {\\n      ...style,\\n      top: style.top + LISTBOX_PADDING,\\n    },\\n  });\\n}\\n\\nconst OuterElementContext = React.createContext({});\\n\\nconst OuterElementType = React.forwardRef((props, ref) => {\\n  const outerProps = React.useContext(OuterElementContext);\\n  return <div ref={ref} {...props} {...outerProps} />;\\n});\\n\\nfunction useResetCache(data) {\\n  const ref = React.useRef(null);\\n  React.useEffect(() => {\\n    if (ref.current != null) {\\n      ref.current.resetAfterIndex(0, true);\\n    }\\n  }, [data]);\\n  return ref;\\n}\\n\\n// Adapter for react-window\\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\\n  props,\\n  ref,\\n) {\\n  const { children, ...other } = props;\\n  const itemData = React.Children.toArray(children);\\n  const theme = useTheme();\\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\\n    noSsr: true,\\n  });\\n\\n  const itemCount = itemData.length;\\n  const itemSize = smUp ? 36 : 48;\\n\\n  const getChildSize = (child) => {\\n    if (React.isValidElement(child) && child.type === ListSubheader) {\\n      return 48;\\n    }\\n\\n    return itemSize;\\n  };\\n\\n  const getHeight = () => {\\n    if (itemCount > 8) {\\n      return 8 * itemSize;\\n    }\\n    return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\\n  };\\n\\n  const gridRef = useResetCache(itemCount);\\n\\n  return (\\n    <div ref={ref}>\\n      <OuterElementContext.Provider value={other}>\\n        <VariableSizeList\\n          itemData={itemData}\\n          height={getHeight() + 2 * LISTBOX_PADDING}\\n          width=\\\"100%\\\"\\n          ref={gridRef}\\n          outerElementType={OuterElementType}\\n          innerElementType=\\\"ul\\\"\\n          itemSize={(index) => getChildSize(itemData[index])}\\n          overscanCount={5}\\n          itemCount={itemCount}\\n        >\\n          {renderRow}\\n        </VariableSizeList>\\n      </OuterElementContext.Provider>\\n    </div>\\n  );\\n});\\n\\nListboxComponent.propTypes = {\\n  children: PropTypes.node,\\n};\\n\\nfunction random(length) {\\n  const characters =\\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n  let result = '';\\n\\n  for (let i = 0; i < length; i += 1) {\\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\\n  }\\n\\n  return result;\\n}\\n\\nconst useStyles = makeStyles({\\n  listbox: {\\n    boxSizing: 'border-box',\\n    '& ul': {\\n      padding: 0,\\n      margin: 0,\\n    },\\n  },\\n});\\n\\nconst OPTIONS = Array.from(new Array(10000))\\n  .map(() => random(10 + Math.ceil(Math.random() * 20)))\\n  .sort((a, b) => a.toUpperCase().localeCompare(b.toUpperCase()));\\n\\nconst renderGroup = (params) => [\\n  <ListSubheader key={params.key} component=\\\"div\\\">\\n    {params.group}\\n  </ListSubheader>,\\n  params.children,\\n];\\n\\nexport default function Virtualize() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"virtualize-demo\\\"\\n      style={{ width: 300 }}\\n      disableListWrap\\n      classes={classes}\\n      ListboxComponent={ListboxComponent}\\n      renderGroup={renderGroup}\\n      options={OPTIONS}\\n      groupBy={(option) => option[0].toUpperCase()}\\n      renderInput={(params) => (\\n        <TextField {...params} variant=\\\"outlined\\\" label=\\\"10,000 options\\\" />\\n      )}\\n      renderOption={(option) => <Typography noWrap>{option}</Typography>}\\n    />\\n  );\\n}\\n\"},mim5:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\n// ISO 3166-1 alpha-2\\n// \\u26a0\\ufe0f No support for IE 11\\nfunction countryToFlag(isoCode: string) {\\n  return typeof String.fromCodePoint !== 'undefined'\\n    ? isoCode\\n        .toUpperCase()\\n        .replace(/./g, (char) =>\\n          String.fromCodePoint(char.charCodeAt(0) + 127397),\\n        )\\n    : isoCode;\\n}\\n\\nconst useStyles = makeStyles({\\n  option: {\\n    fontSize: 15,\\n    '& > span': {\\n      marginRight: 10,\\n      fontSize: 18,\\n    },\\n  },\\n});\\n\\nexport default function CountrySelect() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"country-select-demo\\\"\\n      style={{ width: 300 }}\\n      options={countries as CountryType[]}\\n      classes={{\\n        option: classes.option,\\n      }}\\n      autoHighlight\\n      getOptionLabel={(option) => option.label}\\n      renderOption={(option) => (\\n        <React.Fragment>\\n          <span>{countryToFlag(option.code)}</span>\\n          {option.label} ({option.code}) +{option.phone}\\n        </React.Fragment>\\n      )}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Choose a country\\\"\\n          variant=\\\"outlined\\\"\\n          inputProps={{\\n            ...params.inputProps,\\n            autoComplete: 'new-password', // disable autocomplete and autofill\\n          }}\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\ninterface CountryType {\\n  code: string;\\n  label: string;\\n  phone: string;\\n}\\n\\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\\nconst countries = [\\n  { code: 'AD', label: 'Andorra', phone: '376' },\\n  {\\n    code: 'AE',\\n    label: 'United Arab Emirates',\\n    phone: '971',\\n  },\\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\\n  {\\n    code: 'AG',\\n    label: 'Antigua and Barbuda',\\n    phone: '1-268',\\n  },\\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\\n  { code: 'AL', label: 'Albania', phone: '355' },\\n  { code: 'AM', label: 'Armenia', phone: '374' },\\n  { code: 'AO', label: 'Angola', phone: '244' },\\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\\n  { code: 'AR', label: 'Argentina', phone: '54' },\\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\\n  { code: 'AT', label: 'Austria', phone: '43' },\\n  {\\n    code: 'AU',\\n    label: 'Australia',\\n    phone: '61',\\n    suggested: true,\\n  },\\n  { code: 'AW', label: 'Aruba', phone: '297' },\\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\\n  {\\n    code: 'BA',\\n    label: 'Bosnia and Herzegovina',\\n    phone: '387',\\n  },\\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\\n  { code: 'BE', label: 'Belgium', phone: '32' },\\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\\n  { code: 'BH', label: 'Bahrain', phone: '973' },\\n  { code: 'BI', label: 'Burundi', phone: '257' },\\n  { code: 'BJ', label: 'Benin', phone: '229' },\\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\\n  { code: 'BO', label: 'Bolivia', phone: '591' },\\n  { code: 'BR', label: 'Brazil', phone: '55' },\\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\\n  { code: 'BT', label: 'Bhutan', phone: '975' },\\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\\n  { code: 'BW', label: 'Botswana', phone: '267' },\\n  { code: 'BY', label: 'Belarus', phone: '375' },\\n  { code: 'BZ', label: 'Belize', phone: '501' },\\n  {\\n    code: 'CA',\\n    label: 'Canada',\\n    phone: '1',\\n    suggested: true,\\n  },\\n  {\\n    code: 'CC',\\n    label: 'Cocos (Keeling) Islands',\\n    phone: '61',\\n  },\\n  {\\n    code: 'CD',\\n    label: 'Congo, Democratic Republic of the',\\n    phone: '243',\\n  },\\n  {\\n    code: 'CF',\\n    label: 'Central African Republic',\\n    phone: '236',\\n  },\\n  {\\n    code: 'CG',\\n    label: 'Congo, Republic of the',\\n    phone: '242',\\n  },\\n  { code: 'CH', label: 'Switzerland', phone: '41' },\\n  { code: 'CI', label: \\\"Cote d'Ivoire\\\", phone: '225' },\\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\\n  { code: 'CL', label: 'Chile', phone: '56' },\\n  { code: 'CM', label: 'Cameroon', phone: '237' },\\n  { code: 'CN', label: 'China', phone: '86' },\\n  { code: 'CO', label: 'Colombia', phone: '57' },\\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\\n  { code: 'CU', label: 'Cuba', phone: '53' },\\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\\n  { code: 'CW', label: 'Curacao', phone: '599' },\\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\\n  { code: 'CY', label: 'Cyprus', phone: '357' },\\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\\n  {\\n    code: 'DE',\\n    label: 'Germany',\\n    phone: '49',\\n    suggested: true,\\n  },\\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\\n  { code: 'DK', label: 'Denmark', phone: '45' },\\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\\n  {\\n    code: 'DO',\\n    label: 'Dominican Republic',\\n    phone: '1-809',\\n  },\\n  { code: 'DZ', label: 'Algeria', phone: '213' },\\n  { code: 'EC', label: 'Ecuador', phone: '593' },\\n  { code: 'EE', label: 'Estonia', phone: '372' },\\n  { code: 'EG', label: 'Egypt', phone: '20' },\\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\\n  { code: 'ER', label: 'Eritrea', phone: '291' },\\n  { code: 'ES', label: 'Spain', phone: '34' },\\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\\n  { code: 'FI', label: 'Finland', phone: '358' },\\n  { code: 'FJ', label: 'Fiji', phone: '679' },\\n  {\\n    code: 'FK',\\n    label: 'Falkland Islands (Malvinas)',\\n    phone: '500',\\n  },\\n  {\\n    code: 'FM',\\n    label: 'Micronesia, Federated States of',\\n    phone: '691',\\n  },\\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\\n  {\\n    code: 'FR',\\n    label: 'France',\\n    phone: '33',\\n    suggested: true,\\n  },\\n  { code: 'GA', label: 'Gabon', phone: '241' },\\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\\n  { code: 'GE', label: 'Georgia', phone: '995' },\\n  { code: 'GF', label: 'French Guiana', phone: '594' },\\n  { code: 'GG', label: 'Guernsey', phone: '44' },\\n  { code: 'GH', label: 'Ghana', phone: '233' },\\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\\n  { code: 'GL', label: 'Greenland', phone: '299' },\\n  { code: 'GM', label: 'Gambia', phone: '220' },\\n  { code: 'GN', label: 'Guinea', phone: '224' },\\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\\n  { code: 'GR', label: 'Greece', phone: '30' },\\n  {\\n    code: 'GS',\\n    label: 'South Georgia and the South Sandwich Islands',\\n    phone: '500',\\n  },\\n  { code: 'GT', label: 'Guatemala', phone: '502' },\\n  { code: 'GU', label: 'Guam', phone: '1-671' },\\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\\n  { code: 'GY', label: 'Guyana', phone: '592' },\\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\\n  {\\n    code: 'HM',\\n    label: 'Heard Island and McDonald Islands',\\n    phone: '672',\\n  },\\n  { code: 'HN', label: 'Honduras', phone: '504' },\\n  { code: 'HR', label: 'Croatia', phone: '385' },\\n  { code: 'HT', label: 'Haiti', phone: '509' },\\n  { code: 'HU', label: 'Hungary', phone: '36' },\\n  { code: 'ID', label: 'Indonesia', phone: '62' },\\n  { code: 'IE', label: 'Ireland', phone: '353' },\\n  { code: 'IL', label: 'Israel', phone: '972' },\\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\\n  { code: 'IN', label: 'India', phone: '91' },\\n  {\\n    code: 'IO',\\n    label: 'British Indian Ocean Territory',\\n    phone: '246',\\n  },\\n  { code: 'IQ', label: 'Iraq', phone: '964' },\\n  {\\n    code: 'IR',\\n    label: 'Iran, Islamic Republic of',\\n    phone: '98',\\n  },\\n  { code: 'IS', label: 'Iceland', phone: '354' },\\n  { code: 'IT', label: 'Italy', phone: '39' },\\n  { code: 'JE', label: 'Jersey', phone: '44' },\\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\\n  { code: 'JO', label: 'Jordan', phone: '962' },\\n  {\\n    code: 'JP',\\n    label: 'Japan',\\n    phone: '81',\\n    suggested: true,\\n  },\\n  { code: 'KE', label: 'Kenya', phone: '254' },\\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\\n  { code: 'KH', label: 'Cambodia', phone: '855' },\\n  { code: 'KI', label: 'Kiribati', phone: '686' },\\n  { code: 'KM', label: 'Comoros', phone: '269' },\\n  {\\n    code: 'KN',\\n    label: 'Saint Kitts and Nevis',\\n    phone: '1-869',\\n  },\\n  {\\n    code: 'KP',\\n    label: \\\"Korea, Democratic People's Republic of\\\",\\n    phone: '850',\\n  },\\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\\n  { code: 'KW', label: 'Kuwait', phone: '965' },\\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\\n  {\\n    code: 'LA',\\n    label: \\\"Lao People's Democratic Republic\\\",\\n    phone: '856',\\n  },\\n  { code: 'LB', label: 'Lebanon', phone: '961' },\\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\\n  { code: 'LR', label: 'Liberia', phone: '231' },\\n  { code: 'LS', label: 'Lesotho', phone: '266' },\\n  { code: 'LT', label: 'Lithuania', phone: '370' },\\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\\n  { code: 'LV', label: 'Latvia', phone: '371' },\\n  { code: 'LY', label: 'Libya', phone: '218' },\\n  { code: 'MA', label: 'Morocco', phone: '212' },\\n  { code: 'MC', label: 'Monaco', phone: '377' },\\n  {\\n    code: 'MD',\\n    label: 'Moldova, Republic of',\\n    phone: '373',\\n  },\\n  { code: 'ME', label: 'Montenegro', phone: '382' },\\n  {\\n    code: 'MF',\\n    label: 'Saint Martin (French part)',\\n    phone: '590',\\n  },\\n  { code: 'MG', label: 'Madagascar', phone: '261' },\\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\\n  {\\n    code: 'MK',\\n    label: 'Macedonia, the Former Yugoslav Republic of',\\n    phone: '389',\\n  },\\n  { code: 'ML', label: 'Mali', phone: '223' },\\n  { code: 'MM', label: 'Myanmar', phone: '95' },\\n  { code: 'MN', label: 'Mongolia', phone: '976' },\\n  { code: 'MO', label: 'Macao', phone: '853' },\\n  {\\n    code: 'MP',\\n    label: 'Northern Mariana Islands',\\n    phone: '1-670',\\n  },\\n  { code: 'MQ', label: 'Martinique', phone: '596' },\\n  { code: 'MR', label: 'Mauritania', phone: '222' },\\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\\n  { code: 'MT', label: 'Malta', phone: '356' },\\n  { code: 'MU', label: 'Mauritius', phone: '230' },\\n  { code: 'MV', label: 'Maldives', phone: '960' },\\n  { code: 'MW', label: 'Malawi', phone: '265' },\\n  { code: 'MX', label: 'Mexico', phone: '52' },\\n  { code: 'MY', label: 'Malaysia', phone: '60' },\\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\\n  { code: 'NA', label: 'Namibia', phone: '264' },\\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\\n  { code: 'NE', label: 'Niger', phone: '227' },\\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\\n  { code: 'NG', label: 'Nigeria', phone: '234' },\\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\\n  { code: 'NL', label: 'Netherlands', phone: '31' },\\n  { code: 'NO', label: 'Norway', phone: '47' },\\n  { code: 'NP', label: 'Nepal', phone: '977' },\\n  { code: 'NR', label: 'Nauru', phone: '674' },\\n  { code: 'NU', label: 'Niue', phone: '683' },\\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\\n  { code: 'OM', label: 'Oman', phone: '968' },\\n  { code: 'PA', label: 'Panama', phone: '507' },\\n  { code: 'PE', label: 'Peru', phone: '51' },\\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\\n  { code: 'PH', label: 'Philippines', phone: '63' },\\n  { code: 'PK', label: 'Pakistan', phone: '92' },\\n  { code: 'PL', label: 'Poland', phone: '48' },\\n  {\\n    code: 'PM',\\n    label: 'Saint Pierre and Miquelon',\\n    phone: '508',\\n  },\\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\\n  {\\n    code: 'PS',\\n    label: 'Palestine, State of',\\n    phone: '970',\\n  },\\n  { code: 'PT', label: 'Portugal', phone: '351' },\\n  { code: 'PW', label: 'Palau', phone: '680' },\\n  { code: 'PY', label: 'Paraguay', phone: '595' },\\n  { code: 'QA', label: 'Qatar', phone: '974' },\\n  { code: 'RE', label: 'Reunion', phone: '262' },\\n  { code: 'RO', label: 'Romania', phone: '40' },\\n  { code: 'RS', label: 'Serbia', phone: '381' },\\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\\n  { code: 'RW', label: 'Rwanda', phone: '250' },\\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\\n  { code: 'SC', label: 'Seychelles', phone: '248' },\\n  { code: 'SD', label: 'Sudan', phone: '249' },\\n  { code: 'SE', label: 'Sweden', phone: '46' },\\n  { code: 'SG', label: 'Singapore', phone: '65' },\\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\\n  { code: 'SI', label: 'Slovenia', phone: '386' },\\n  {\\n    code: 'SJ',\\n    label: 'Svalbard and Jan Mayen',\\n    phone: '47',\\n  },\\n  { code: 'SK', label: 'Slovakia', phone: '421' },\\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\\n  { code: 'SM', label: 'San Marino', phone: '378' },\\n  { code: 'SN', label: 'Senegal', phone: '221' },\\n  { code: 'SO', label: 'Somalia', phone: '252' },\\n  { code: 'SR', label: 'Suriname', phone: '597' },\\n  { code: 'SS', label: 'South Sudan', phone: '211' },\\n  {\\n    code: 'ST',\\n    label: 'Sao Tome and Principe',\\n    phone: '239',\\n  },\\n  { code: 'SV', label: 'El Salvador', phone: '503' },\\n  {\\n    code: 'SX',\\n    label: 'Sint Maarten (Dutch part)',\\n    phone: '1-721',\\n  },\\n  {\\n    code: 'SY',\\n    label: 'Syrian Arab Republic',\\n    phone: '963',\\n  },\\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\\n  {\\n    code: 'TC',\\n    label: 'Turks and Caicos Islands',\\n    phone: '1-649',\\n  },\\n  { code: 'TD', label: 'Chad', phone: '235' },\\n  {\\n    code: 'TF',\\n    label: 'French Southern Territories',\\n    phone: '262',\\n  },\\n  { code: 'TG', label: 'Togo', phone: '228' },\\n  { code: 'TH', label: 'Thailand', phone: '66' },\\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\\n  { code: 'TK', label: 'Tokelau', phone: '690' },\\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\\n  { code: 'TN', label: 'Tunisia', phone: '216' },\\n  { code: 'TO', label: 'Tonga', phone: '676' },\\n  { code: 'TR', label: 'Turkey', phone: '90' },\\n  {\\n    code: 'TT',\\n    label: 'Trinidad and Tobago',\\n    phone: '1-868',\\n  },\\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\\n  {\\n    code: 'TW',\\n    label: 'Taiwan, Province of China',\\n    phone: '886',\\n  },\\n  {\\n    code: 'TZ',\\n    label: 'United Republic of Tanzania',\\n    phone: '255',\\n  },\\n  { code: 'UA', label: 'Ukraine', phone: '380' },\\n  { code: 'UG', label: 'Uganda', phone: '256' },\\n  {\\n    code: 'US',\\n    label: 'United States',\\n    phone: '1',\\n    suggested: true,\\n  },\\n  { code: 'UY', label: 'Uruguay', phone: '598' },\\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\\n  {\\n    code: 'VA',\\n    label: 'Holy See (Vatican City State)',\\n    phone: '379',\\n  },\\n  {\\n    code: 'VC',\\n    label: 'Saint Vincent and the Grenadines',\\n    phone: '1-784',\\n  },\\n  { code: 'VE', label: 'Venezuela', phone: '58' },\\n  {\\n    code: 'VG',\\n    label: 'British Virgin Islands',\\n    phone: '1-284',\\n  },\\n  {\\n    code: 'VI',\\n    label: 'US Virgin Islands',\\n    phone: '1-340',\\n  },\\n  { code: 'VN', label: 'Vietnam', phone: '84' },\\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\\n  { code: 'WS', label: 'Samoa', phone: '685' },\\n  { code: 'XK', label: 'Kosovo', phone: '383' },\\n  { code: 'YE', label: 'Yemen', phone: '967' },\\n  { code: 'YT', label: 'Mayotte', phone: '262' },\\n  { code: 'ZA', label: 'South Africa', phone: '27' },\\n  { code: 'ZM', label: 'Zambia', phone: '260' },\\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\\n];\\n\"},n0iX:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return u}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"F7gL\"),l=n(\"UiZO\"),s=n(\"yZEQ\"),c=n(\"nx5Z\"),d=o.a.createElement,p=Object(s.a)((function(e){return{root:{width:500,\"& > * + *\":{marginTop:e.spacing(2)}}}}));function u(){var e=p();return d(\"div\",{className:e.root},d(l.a,{id:\"size-small-standard\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:y[13],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"standard\",label:\"Size small\",placeholder:\"Favorites\"}))}}),d(l.a,{multiple:!0,id:\"size-small-standard-multi\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13]],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"standard\",label:\"Size small\",placeholder:\"Favorites\"}))}}),d(l.a,{id:\"size-small-outlined\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:y[13],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Size small\",placeholder:\"Favorites\"}))}}),d(l.a,{multiple:!0,id:\"size-small-outlined-multi\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13]],renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Size small\",placeholder:\"Favorites\"}))}}),d(l.a,{id:\"size-small-filled\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:y[13],renderTags:function(e,t){return e.map((function(e,n){return d(r.a,Object(a.a)({variant:\"outlined\",label:e.title,size:\"small\"},t({index:n})))}))},renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"filled\",label:\"Size small\",placeholder:\"Favorites\"}))}}),d(l.a,{multiple:!0,id:\"size-small-filled-multi\",size:\"small\",options:y,getOptionLabel:function(e){return e.title},defaultValue:[y[13]],renderTags:function(e,t){return e.map((function(e,n){return d(r.a,Object(a.a)({variant:\"outlined\",label:e.title,size:\"small\"},t({index:n})))}))},renderInput:function(e){return d(c.a,Object(a.a)({},e,{variant:\"filled\",label:\"Size small\",placeholder:\"Favorites\"}))}}))}var y=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},nIXE:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function Grouped() {\\n  const options = top100Films.map((option) => {\\n    const firstLetter = option.title[0].toUpperCase();\\n    return {\\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\\n      ...option,\\n    };\\n  });\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"grouped-demo\\\"\\n      options={options.sort(\\n        (a, b) => -b.firstLetter.localeCompare(a.firstLetter),\\n      )}\\n      groupBy={(option) => option.firstLetter}\\n      getOptionLabel={(option) => option.title}\\n      style={{ width: 300 }}\\n      renderInput={(params) => (\\n        <TextField {...params} label=\\\"With categories\\\" variant=\\\"outlined\\\" />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},ndfI:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return d}));var a=n(\"z3IF\"),i=n(\"bZJ2\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=r.a.createElement;function d(){var e=p.map((function(e){var t=e.title[0].toUpperCase();return Object(i.a)({firstLetter:/[0-9]/.test(t)?\"0-9\":t},e)}));return c(s.a,{id:\"grouped-demo\",options:e.sort((function(e,t){return-t.firstLetter.localeCompare(e.firstLetter)})),groupBy:function(e){return e.firstLetter},getOptionLabel:function(e){return e.title},style:{width:300},renderInput:function(e){return c(l.a,Object(a.a)({},e,{label:\"With categories\",variant:\"outlined\"}))}})}var p=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},niZb:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement;function c(){return s(l.a,{id:\"combo-box-demo\",options:d,getOptionLabel:function(e){return e.title},style:{width:300},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"Combo box\",variant:\"outlined\"}))}})}var d=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},o8lK:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: 500,\\n    '& > * + *': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n}));\\n\\nexport default function Tags() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-standard\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"standard\\\"\\n            label=\\\"Multiple values\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-outlined\\\"\\n        options={top100Films}\\n        getOptionLabel={(option) => option.title}\\n        defaultValue={[top100Films[13]]}\\n        filterSelectedOptions\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"outlined\\\"\\n            label=\\\"filterSelectedOptions\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        multiple\\n        id=\\\"tags-filled\\\"\\n        options={top100Films.map((option) => option.title)}\\n        defaultValue={[top100Films[13].title]}\\n        freeSolo\\n        renderTags={(value, getTagProps) =>\\n          value.map((option, index) => (\\n            <Chip\\n              variant=\\\"outlined\\\"\\n              label={option}\\n              {...getTagProps({ index })}\\n            />\\n          ))\\n        }\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            variant=\\\"filled\\\"\\n            label=\\\"freeSolo\\\"\\n            placeholder=\\\"Favorites\\\"\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},obS3:function(e,t){e.exports=\"import React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nconst options = ['Option 1', 'Option 2'];\\n\\nexport default function ControllableStates() {\\n  const [value, setValue] = React.useState(options[0]);\\n  const [inputValue, setInputValue] = React.useState('');\\n\\n  return (\\n    <div>\\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\\n      <div>{`inputValue: '${inputValue}'`}</div>\\n      <br />\\n      <Autocomplete\\n        value={value}\\n        onChange={(event, newValue) => {\\n          setValue(newValue);\\n        }}\\n        inputValue={inputValue}\\n        onInputChange={(event, newInputValue) => {\\n          setInputValue(newInputValue);\\n        }}\\n        id=\\\"controllable-states-demo\\\"\\n        options={options}\\n        style={{ width: 300 }}\\n        renderInput={(params) => (\\n          <TextField {...params} label=\\\"Controllable\\\" variant=\\\"outlined\\\" />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\"},opvs:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return A}));var a=n(\"bZJ2\"),i=n(\"z3IF\"),o=n(\"FdmI\"),r=n.n(o),l=n(\"mXGw\"),s=n.n(l),c=n(\"nx5Z\"),d=n(\"88eg\"),p=n(\"73FU\"),u=n(\"4VeI\"),y=n(\"7VUZ\"),h=n(\"HkkT\"),m=n(\"O8uh\"),f=n(\"RHBV\"),g=n(\"UiZO\"),b=s.a.createElement,T=Object(f.a)(),S=b(p.a,{id:\"form-dialog-title\"},\"Add a new film\"),v=b(y.a,null,\"Did you miss any film in our list? Please, add it!\"),w=b(m.a,{type:\"submit\",color:\"primary\"},\"Add\");function A(){var e=s.a.useState(null),t=e[0],n=e[1],o=s.a.useState(!1),l=o[0],p=o[1],y=function(){I({title:\"\",year:\"\"}),p(!1)},f=s.a.useState({title:\"\",year:\"\"}),A=f[0],I=f[1];return b(s.a.Fragment,null,b(g.a,{value:t,onChange:function(e,t){\"string\"===typeof t?setTimeout((function(){p(!0),I({title:t,year:\"\"})})):t&&t.inputValue?(p(!0),I({title:t.inputValue,year:\"\"})):n(t)},filterOptions:function(e,t){var n=T(e,t);return\"\"!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add \"'.concat(t.inputValue,'\"')}),n},id:\"free-solo-dialog-demo\",options:O,getOptionLabel:function(e){return\"string\"===typeof e?e:e.inputValue?e.inputValue:e.title},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,renderOption:function(e){return e.title},style:{width:300},freeSolo:!0,renderInput:function(e){return b(c.a,Object(i.a)({},e,{label:\"Free solo dialog\",variant:\"outlined\"}))}}),b(d.a,{open:l,onClose:y,\"aria-labelledby\":\"form-dialog-title\"},b(\"form\",{onSubmit:function(e){e.preventDefault(),n({title:A.title,year:r()(A.year,10)}),y()}},S,b(u.a,null,v,b(c.a,{autoFocus:!0,margin:\"dense\",id:\"name\",value:A.title,onChange:function(e){return I(Object(a.a)(Object(a.a)({},A),{},{title:e.target.value}))},label:\"title\",type:\"text\"}),b(c.a,{margin:\"dense\",id:\"name\",value:A.year,onChange:function(e){return I(Object(a.a)(Object(a.a)({},A),{},{year:e.target.value}))},label:\"year\",type:\"number\"})),b(h.a,null,b(m.a,{onClick:y,color:\"primary\"},\"Cancel\"),w))))}var O=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},osyJ:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport { useTheme, fade, makeStyles } from '@material-ui/core/styles';\\nimport Popper from '@material-ui/core/Popper';\\nimport SettingsIcon from '@material-ui/icons/Settings';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport DoneIcon from '@material-ui/icons/Done';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport ButtonBase from '@material-ui/core/ButtonBase';\\nimport InputBase from '@material-ui/core/InputBase';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  root: {\\n    width: 221,\\n    fontSize: 13,\\n  },\\n  button: {\\n    fontSize: 13,\\n    width: '100%',\\n    textAlign: 'left',\\n    paddingBottom: 8,\\n    color: '#586069',\\n    fontWeight: 600,\\n    '&:hover,&:focus': {\\n      color: '#0366d6',\\n    },\\n    '& span': {\\n      width: '100%',\\n    },\\n    '& svg': {\\n      width: 16,\\n      height: 16,\\n    },\\n  },\\n  tag: {\\n    marginTop: 3,\\n    height: 20,\\n    padding: '.15em 4px',\\n    fontWeight: 600,\\n    lineHeight: '15px',\\n    borderRadius: 2,\\n  },\\n  popper: {\\n    border: '1px solid rgba(27,31,35,.15)',\\n    boxShadow: '0 3px 12px rgba(27,31,35,.15)',\\n    borderRadius: 3,\\n    width: 300,\\n    zIndex: 1,\\n    fontSize: 13,\\n    color: '#586069',\\n    backgroundColor: '#f6f8fa',\\n  },\\n  header: {\\n    borderBottom: '1px solid #e1e4e8',\\n    padding: '8px 10px',\\n    fontWeight: 600,\\n  },\\n  inputBase: {\\n    padding: 10,\\n    width: '100%',\\n    borderBottom: '1px solid #dfe2e5',\\n    '& input': {\\n      borderRadius: 4,\\n      backgroundColor: theme.palette.common.white,\\n      padding: 8,\\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\\n      border: '1px solid #ced4da',\\n      fontSize: 14,\\n      '&:focus': {\\n        boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\n        borderColor: theme.palette.primary.main,\\n      },\\n    },\\n  },\\n  paper: {\\n    boxShadow: 'none',\\n    margin: 0,\\n    color: '#586069',\\n    fontSize: 13,\\n  },\\n  option: {\\n    minHeight: 'auto',\\n    alignItems: 'flex-start',\\n    padding: 8,\\n    '&[aria-selected=\\\"true\\\"]': {\\n      backgroundColor: 'transparent',\\n    },\\n    '&[data-focus=\\\"true\\\"]': {\\n      backgroundColor: theme.palette.action.hover,\\n    },\\n  },\\n  popperDisablePortal: {\\n    position: 'relative',\\n  },\\n  iconSelected: {\\n    width: 17,\\n    height: 17,\\n    marginRight: 5,\\n    marginLeft: -2,\\n  },\\n  color: {\\n    width: 14,\\n    height: 14,\\n    flexShrink: 0,\\n    borderRadius: 3,\\n    marginRight: 8,\\n    marginTop: 2,\\n  },\\n  text: {\\n    flexGrow: 1,\\n  },\\n  close: {\\n    opacity: 0.6,\\n    width: 18,\\n    height: 18,\\n  },\\n}));\\n\\nexport default function GitHubLabel() {\\n  const classes = useStyles();\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\\n\\n  const [pendingValue, setPendingValue] = React.useState([]);\\n  const theme = useTheme();\\n\\n  const handleClick = (event) => {\\n    setPendingValue(value);\\n    setAnchorEl(event.currentTarget);\\n  };\\n\\n  const handleClose = (event, reason) => {\\n    if (reason === 'toggleInput') {\\n      return;\\n    }\\n    setValue(pendingValue);\\n    if (anchorEl) {\\n      anchorEl.focus();\\n    }\\n    setAnchorEl(null);\\n  };\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'github-label' : undefined;\\n\\n  return (\\n    <React.Fragment>\\n      <div className={classes.root}>\\n        <ButtonBase\\n          disableRipple\\n          className={classes.button}\\n          aria-describedby={id}\\n          onClick={handleClick}\\n        >\\n          <span>Labels</span>\\n          <SettingsIcon />\\n        </ButtonBase>\\n        {value.map((label) => (\\n          <div\\n            key={label.name}\\n            className={classes.tag}\\n            style={{\\n              backgroundColor: label.color,\\n              color: theme.palette.getContrastText(label.color),\\n            }}\\n          >\\n            {label.name}\\n          </div>\\n        ))}\\n      </div>\\n      <Popper\\n        id={id}\\n        open={open}\\n        anchorEl={anchorEl}\\n        placement=\\\"bottom-start\\\"\\n        className={classes.popper}\\n      >\\n        <div className={classes.header}>Apply labels to this pull request</div>\\n        <Autocomplete\\n          open\\n          onClose={handleClose}\\n          multiple\\n          classes={{\\n            paper: classes.paper,\\n            option: classes.option,\\n            popperDisablePortal: classes.popperDisablePortal,\\n          }}\\n          value={pendingValue}\\n          onChange={(event, newValue, reason) => {\\n            if (\\n              event.type === 'keydown' &&\\n              event.key === 'Backspace' &&\\n              reason === 'remove-option'\\n            ) {\\n              return;\\n            }\\n            setPendingValue(newValue);\\n          }}\\n          disableCloseOnSelect\\n          disablePortal\\n          renderTags={() => null}\\n          noOptionsText=\\\"No labels\\\"\\n          renderOption={(option, { selected }) => (\\n            <React.Fragment>\\n              <DoneIcon\\n                className={classes.iconSelected}\\n                style={{\\n                  visibility: selected ? 'visible' : 'hidden',\\n                }}\\n              />\\n              <span\\n                className={classes.color}\\n                style={{ backgroundColor: option.color }}\\n              />\\n              <div className={classes.text}>\\n                {option.name}\\n                <br />\\n                {option.description}\\n              </div>\\n              <CloseIcon\\n                className={classes.close}\\n                style={{\\n                  visibility: selected ? 'visible' : 'hidden',\\n                }}\\n              />\\n            </React.Fragment>\\n          )}\\n          options={[...labels].sort((a, b) => {\\n            // Display the selected labels first.\\n            let ai = value.indexOf(a);\\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\\n            let bi = value.indexOf(b);\\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\\n            return ai - bi;\\n          })}\\n          getOptionLabel={(option) => option.name}\\n          renderInput={(params) => (\\n            <InputBase\\n              ref={params.InputProps.ref}\\n              inputProps={params.inputProps}\\n              autoFocus\\n              className={classes.inputBase}\\n            />\\n          )}\\n        />\\n      </Popper>\\n    </React.Fragment>\\n  );\\n}\\n\\n// From https://github.com/abdonrd/github-labels\\nconst labels = [\\n  {\\n    name: 'good first issue',\\n    color: '#7057ff',\\n    description: 'Good for newcomers',\\n  },\\n  {\\n    name: 'help wanted',\\n    color: '#008672',\\n    description: 'Extra attention is needed',\\n  },\\n  {\\n    name: 'priority: critical',\\n    color: '#b60205',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: high',\\n    color: '#d93f0b',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: low',\\n    color: '#0e8a16',\\n    description: '',\\n  },\\n  {\\n    name: 'priority: medium',\\n    color: '#fbca04',\\n    description: '',\\n  },\\n  {\\n    name: \\\"status: can't reproduce\\\",\\n    color: '#fec1c1',\\n    description: '',\\n  },\\n  {\\n    name: 'status: confirmed',\\n    color: '#215cea',\\n    description: '',\\n  },\\n  {\\n    name: 'status: duplicate',\\n    color: '#cfd3d7',\\n    description: 'This issue or pull request already exists',\\n  },\\n  {\\n    name: 'status: needs information',\\n    color: '#fef2c0',\\n    description: '',\\n  },\\n  {\\n    name: 'status: wont do/fix',\\n    color: '#eeeeee',\\n    description: 'This will not be worked on',\\n  },\\n  {\\n    name: 'type: bug',\\n    color: '#d73a4a',\\n    description: \\\"Something isn't working\\\",\\n  },\\n  {\\n    name: 'type: discussion',\\n    color: '#d4c5f9',\\n    description: '',\\n  },\\n  {\\n    name: 'type: documentation',\\n    color: '#006b75',\\n    description: '',\\n  },\\n  {\\n    name: 'type: enhancement',\\n    color: '#84b6eb',\\n    description: '',\\n  },\\n  {\\n    name: 'type: epic',\\n    color: '#3e4b9e',\\n    description: 'A theme of work that contain sub-tasks',\\n  },\\n  {\\n    name: 'type: feature request',\\n    color: '#fbca04',\\n    description: 'New feature or request',\\n  },\\n  {\\n    name: 'type: question',\\n    color: '#d876e3',\\n    description: 'Further information is requested',\\n  },\\n];\\n\"},p2Bs:function(e,t,n){var a={\"./Asynchronous.js\":\"e42f\",\"./Asynchronous.tsx\":\"Z4yJ\",\"./CheckboxesTags.js\":\"ssjU\",\"./CheckboxesTags.tsx\":\"9kGI\",\"./ComboBox.js\":\"niZb\",\"./ComboBox.tsx\":\"WV5F\",\"./ControllableStates.js\":\"qCYG\",\"./ControllableStates.tsx\":\"xH1d\",\"./CountrySelect.js\":\"jHQw\",\"./CountrySelect.tsx\":\"fr1m\",\"./CustomInputAutocomplete.js\":\"sgkY\",\"./CustomInputAutocomplete.tsx\":\"gNIM\",\"./CustomizedHook.js\":\"bhOZ\",\"./CustomizedHook.tsx\":\"cE6X\",\"./DisabledOptions.js\":\"3JPx\",\"./DisabledOptions.tsx\":\"ELJg\",\"./Filter.js\":\"emGK\",\"./Filter.tsx\":\"sMM/\",\"./FixedTags.js\":\"xVsK\",\"./FixedTags.tsx\":\"/ZHH\",\"./FreeSolo.js\":\"DSVM\",\"./FreeSolo.tsx\":\"8NPw\",\"./FreeSoloCreateOption.js\":\"SA17\",\"./FreeSoloCreateOption.tsx\":\"Trsq\",\"./FreeSoloCreateOptionDialog.js\":\"opvs\",\"./FreeSoloCreateOptionDialog.tsx\":\"4Zwv\",\"./GitHubLabel.js\":\"cDaN\",\"./GitHubLabel.tsx\":\"3M1A\",\"./GoogleMaps.js\":\"wz7E\",\"./GoogleMaps.tsx\":\"kX+z\",\"./Grouped.js\":\"eel+\",\"./Grouped.tsx\":\"ndfI\",\"./Highlights.js\":\"t5VN\",\"./Highlights.tsx\":\"QfbW\",\"./LimitTags.js\":\"BNv+\",\"./LimitTags.tsx\":\"anJM\",\"./Playground.js\":\"Cfoi\",\"./Playground.tsx\":\"B7BY\",\"./Sizes.js\":\"n0iX\",\"./Sizes.tsx\":\"PJpw\",\"./Tags.js\":\"/Y1t\",\"./Tags.tsx\":\"sk5A\",\"./UseAutocomplete.js\":\"Z68Z\",\"./UseAutocomplete.tsx\":\"qWY0\",\"./Virtualize.js\":\"rSMX\",\"./Virtualize.tsx\":\"K4wR\"};function i(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error(\"Cannot find module '\"+e+\"'\");throw t.code=\"MODULE_NOT_FOUND\",t}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=o,e.exports=i,i.id=\"p2Bs\"},plRc:function(e,t){e.exports=\"---\\ntitle: crwdns89226:0crwdne89226:0\\ncomponents: crwdns104482:0crwdne104482:0\\n---\\n\\n# crwdns89230:0crwdne89230:0\\n\\n<p class=\\\"description\\\">crwdns89232:0crwdne89232:0</p>\\n\\ncrwdns104484:0crwdne104484:0\\n\\n1. crwdns105106:0crwdne105106:0\\n2. crwdns104488:0crwdne104488:0\\n\\ncrwdns130710:0crwdne130710:0\\n\\n## crwdns104490:0crwdne104490:0\\n\\ncrwdns130712:0crwdne130712:0\\n\\ncrwdns130714:0crwdne130714:0\\n\\n### crwdns104496:0crwdne104496:0\\n\\ncrwdns130716:0crwdne130716:0\\n\\ncrwdns130718:0crwdne130718:0\\n\\n### crwdns104502:0crwdne104502:0\\n\\ncrwdns130720:0crwdne130720:0\\n\\ncrwdns130722:0crwdne130722:0\\n\\n### crwdns131302:0crwdne131302:0\\n\\ncrwdns131304:0crwdne131304:0\\n\\n1. crwdns131692:0crwdne131692:0 crwdns131694:0crwdne131694:0\\n2. crwdns131696:0crwdne131696:0 crwdns131698:0crwdne131698:0\\n\\n> crwdns131310:0crwdne131310:0\\n\\ncrwdns131700:0crwdne131700:0\\n\\n## crwdns104508:0crwdne104508:0\\n\\ncrwdns131846:0crwdne131846:0\\n\\n### crwdns131848:0crwdne131848:0\\n\\ncrwdns131850:0crwdne131850:0\\n\\ncrwdns131852:0crwdne131852:0\\n\\n### crwdns131854:0crwdne131854:0\\n\\ncrwdns131856:0crwdne131856:0\\n\\n- crwdns131710:0crwdne131710:0\\n- crwdns131712:0crwdne131712:0\\n- crwdns132112:0crwdne132112:0\\n- crwdns132114:0crwdne132114:0\\n\\ncrwdns131858:0crwdne131858:0\\n\\ncrwdns131860:0crwdne131860:0\\n\\ncrwdns131862:0crwdne131862:0\\n\\n## crwdns104514:0crwdne104514:0\\n\\ncrwdns131864:0crwdne131864:0\\n\\n## crwdns104518:0crwdne104518:0\\n\\ncrwdns131866:0crwdne131866:0\\n\\n## `crwdns104522:0crwdne104522:0`\\n\\ncrwdns131868:0crwdne131868:0 crwdns131870:0crwdne131870:0 crwdns131872:0crwdne131872:0\\n\\n```jsx\\ncrwdns104530:0crwdne104530:0\\n```\\n\\n- crwdns131716:0crwdne131716:0\\n\\ncrwdns131874:0crwdne131874:0\\n\\n### crwdns131876:0crwdne131876:0\\n\\ncrwdns131878:0crwdne131878:0\\n\\ncrwdns131880:0crwdne131880:0\\n\\n## crwdns104542:0crwdne104542:0\\n\\ncrwdns131882:0crwdne131882:0\\n\\n### crwdns131884:0crwdne131884:0\\n\\ncrwdns131886:0crwdne131886:0\\n\\ncrwdns131888:0crwdne131888:0\\n\\ncrwdns131890:0crwdne131890:0\\n\\n> crwdns131360:0crwdne131360:0\\n\\n## crwdns104554:0crwdne104554:0\\n\\ncrwdns131892:0crwdne131892:0\\n\\ncrwdns131894:0crwdne131894:0\\n\\n### crwdns131896:0crwdne131896:0\\n\\ncrwdns131898:0crwdne131898:0\\n\\ncrwdns131900:0crwdne131900:0\\n\\n### crwdns131902:0crwdne131902:0\\n\\ncrwdns131904:0crwdne131904:0\\n\\n### crwdns131906:0crwdne131906:0\\n\\ncrwdns131908:0crwdne131908:0\\n\\ncrwdns131910:0crwdne131910:0\\n\\n## crwdns106429:0crwdne106429:0\\n\\ncrwdns131912:0crwdne131912:0 crwdns131914:0crwdne131914:0\\n\\ncrwdns131916:0crwdne131916:0\\n\\n## crwdns133018:0crwdne133018:0\\n\\n### crwdns133020:0crwdne133020:0\\n\\ncrwdns133022:0crwdne133022:0 crwdns133024:0crwdne133024:0 crwdns133026:0crwdne133026:0\\n\\ncrwdns133028:0crwdne133028:0\\n\\n### crwdns133030:0crwdne133030:0\\n\\ncrwdns133032:0crwdne133032:0\\n\\ncrwdns133034:0crwdne133034:0\\n\\ncrwdns133036:0crwdne133036:0\\n\\n## crwdns106445:0crwdne106445:0\\n\\ncrwdns133038:0crwdne133038:0\\n\\ncrwdns133040:0crwdne133040:0\\n\\n## crwdns106451:0crwdne106451:0\\n\\ncrwdns133042:0crwdne133042:0 crwdns133044:0crwdne133044:0\\n\\n```js\\ncrwdns104588:0{ createFilterOptions }crwdne104588:0\\n```\\n\\n### `crwdns133046:0crwdne133046:0`\\n\\n#### crwdns130368:0crwdne130368:0\\n\\n1. crwdns131404:0[optional]crwdne131404:0 \\n  - crwdns131406:0[optional]crwdne131406:0 crwdns131408:0crwdne131408:0\\n  - crwdns131410:0[optional]crwdne131410:0 crwdns131412:0crwdne131412:0\\n  - crwdns131414:0[optional]crwdne131414:0 crwdns131416:0crwdne131416:0 crwdns131418:0crwdne131418:0 crwdns131420:0crwdne131420:0\\n  - crwdns131422:0[optional]crwdne131422:0\\n  - crwdns131718:0[optional]crwdne131718:0\\n  - crwdns131720:0[optional]crwdne131720:0 crwdns131722:0crwdne131722:0\\n\\n#### crwdns130372:0crwdne130372:0\\n\\ncrwdns133048:0crwdne133048:0\\n\\ncrwdns133050:0crwdne133050:0\\n\\n```js\\ncrwdns104612:0{filterOptions}crwdne104612:0\\n```\\n\\ncrwdns133052:0crwdne133052:0\\n\\n### crwdns133054:0crwdne133054:0\\n\\ncrwdns133056:0crwdne133056:0 crwdns133058:0crwdne133058:0\\n\\n```jsx\\ncrwdns104620:0{ inputValue }crwdnd104620:0{filterOptions}crwdne104620:0\\n```\\n\\n## crwdns106467:0crwdne106467:0\\n\\ncrwdns133060:0crwdne133060:0 crwdns133062:0crwdne133062:0\\n\\ncrwdns133064:0crwdne133064:0\\n\\n## crwdns106475:0crwdne106475:0\\n\\n### crwdns133066:0crwdne133066:0\\n\\ncrwdns133068:0crwdne133068:0 crwdns133070:0crwdne133070:0\\n\\ncrwdns133072:0crwdne133072:0\\n\\ncrwdns133074:0crwdne133074:0 crwdns133076:0crwdne133076:0\\n\\n- crwdns131724:0crwdne131724:0 crwdns131726:0crwdne131726:0 crwdns131728:0crwdne131728:0\\n- crwdns131730:0crwdne131730:0 \\n        crwdns131732:0{...params}crwdnd131732:0{{\\n          ...params.inputProps,\\n          autoComplete: 'new-password',\\n        }}crwdne131732:0\\n\\n### crwdns133078:0crwdne133078:0\\n\\ncrwdns133080:0crwdne133080:0 crwdns133082:0crwdne133082:0\\n\\n### crwdns133084:0crwdne133084:0\\n\\ncrwdns133086:0crwdne133086:0 crwdns133088:0crwdne133088:0\\n\\n## crwdns106481:0crwdne106481:0\\n\\ncrwdns133090:0crwdne133090:0\\n\\ncrwdns133092:0crwdne133092:0 crwdns133094:0crwdne133094:0\"},qCYG:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement,c=[\"Option 1\",\"Option 2\"],d=s(\"br\",null);function p(){var e=o.a.useState(c[0]),t=e[0],n=e[1],i=o.a.useState(\"\"),p=i[0],u=i[1];return s(\"div\",null,s(\"div\",null,\"value: \".concat(null!==t?\"'\".concat(t,\"'\"):\"null\")),s(\"div\",null,\"inputValue: '\".concat(p,\"'\")),d,s(l.a,{value:t,onChange:function(e,t){n(t)},inputValue:p,onInputChange:function(e,t){u(t)},id:\"controllable-states-demo\",options:c,style:{width:300},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"Controllable\",variant:\"outlined\"}))}}))}},qT77:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport parse from 'autosuggest-highlight/parse';\\nimport match from 'autosuggest-highlight/match';\\n\\nexport default function Highlights() {\\n  return (\\n    <Autocomplete\\n      id=\\\"highlights-demo\\\"\\n      style={{ width: 300 }}\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Highlights\\\"\\n          variant=\\\"outlined\\\"\\n          margin=\\\"normal\\\"\\n        />\\n      )}\\n      renderOption={(option, { inputValue }) => {\\n        const matches = match(option.title, inputValue);\\n        const parts = parse(option.title, matches);\\n\\n        return (\\n          <div>\\n            {parts.map((part, index) => (\\n              <span\\n                key={index}\\n                style={{\\n                  fontWeight: part.highlight ? 700 : 400,\\n                }}\\n              >\\n                {part.text}\\n              </span>\\n            ))}\\n          </div>\\n        );\\n      }}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},qWY0:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"RHBV\"),l=n(\"yZEQ\"),s=n(\"WLtd\"),c=o.a.createElement,d=Object(l.a)((function(e){return Object(s.a)({label:{display:\"block\"},input:{width:200},listbox:{width:200,margin:0,padding:0,zIndex:1,position:\"absolute\",listStyle:\"none\",backgroundColor:e.palette.background.paper,overflow:\"auto\",maxHeight:200,border:\"1px solid rgba(0,0,0,.25)\",'& li[data-focus=\"true\"]':{backgroundColor:\"#4a8df6\",color:\"white\",cursor:\"pointer\"},\"& li:active\":{backgroundColor:\"#2977f5\",color:\"white\"}}})}));function p(){var e=d(),t=Object(r.b)({id:\"use-autocomplete-demo\",options:u,getOptionLabel:function(e){return e.title}}),n=t.getRootProps,i=t.getInputLabelProps,o=t.getInputProps,l=t.getListboxProps,s=t.getOptionProps,p=t.groupedOptions;return c(\"div\",null,c(\"div\",n(),c(\"label\",Object(a.a)({className:e.label},i()),\"useAutocomplete\"),c(\"input\",Object(a.a)({className:e.input},o()))),p.length>0?c(\"ul\",Object(a.a)({className:e.listbox},l()),p.map((function(e,t){return c(\"li\",s({option:e,index:t}),e.title)}))):null)}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},qbqB:function(e,t){e.exports='---\\ntitle: React Autocomplete \\u81ea\\u52a8\\u8865\\u5168\\u7ec4\\u4ef6\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocomplete \\u81ea\\u52a8\\u8865\\u5168\\u7ec4\\u4ef6\\n\\n<p class=\"description\">\\u81ea\\u52a8\\u8865\\u5168\\u662f\\u4e00\\u4e2a\\u666e\\u901a\\u6587\\u672c\\u8f93\\u5165\\u6846\\uff0c\\u5b83\\u901a\\u8fc7\\u4e00\\u7ec4\\u5efa\\u8bae\\u7684\\u9009\\u9879\\u6765\\u5e2e\\u52a9\\u7528\\u6237\\u8f93\\u5165\\u3002</p>\\n\\n\\u8be5\\u7ec4\\u4ef6\\u5e38\\u7528\\u4e8e\\u4ee5\\u4e0b\\u4e24\\u4e2a\\u573a\\u666f\\u4e2d\\u7684\\u5355\\u884c\\u6587\\u672c\\u6846\\u8d4b\\u503c\\uff1a\\n\\n1. \\u6587\\u672c\\u6846\\u5fc5\\u987b\\u53d6\\u503c\\u4e8e\\u67d0\\u4e2a\\u9884\\u8bbe\\u597d\\u7684\\uff0c\\u4f8b\\u5982\\uff1a\\u4e00\\u4e2a\\u4f4d\\u7f6e\\u57df\\u5fc5\\u987b\\u5305\\u542b\\u4e00\\u4e2a\\u6709\\u6548\\u7684\\u4f4d\\u7f6e\\u540d\\u79f0\\uff1a [\\u7ec4\\u5408\\u6846](#combo-box)\\u3002\\n2. \\u6587\\u672c\\u6846\\u4e5f\\u53ef\\u4ee5\\u662f\\u4efb\\u4f55\\u503c\\uff0c\\u4f46\\u6700\\u597d\\u80fd\\u591f\\u4e3a\\u7528\\u6237\\u63d0\\u4f9b\\u53ef\\u80fd\\u7684\\u9009\\u9879\\uff0c\\u8b6c\\u5982\\u641c\\u7d22\\u6846\\u53ef\\u4ee5\\u63d0\\u4f9b\\u8fd1\\u4f3c\\u7684\\u6216\\u8005\\u66fe\\u641c\\u7d22\\u8fc7\\u7684\\u9009\\u9879\\u4ee5\\u8282\\u7701\\u7528\\u6237\\u65f6\\u95f4\\uff1a[\\u7075\\u6d3b\\u7684\\u5355\\u6587\\u672c\\u6846](#free-solo)\\u3002\\n\\n\\u6b64\\u7ec4\\u4ef6\\u65e8\\u5728\\u6539\\u8fdb \\u201creact-select\\u201d \\u548c \\u201cdownshift\\u201d \\u8fd9\\u4e24\\u4e2a\\u5305\\u3002\\n\\n## Combo box \\u7ec4\\u5408\\u6846\\n\\n\\u5fc5\\u987b\\u53d6\\u503c\\u4e8e\\u4e00\\u4e2a\\u9884\\u8bbe\\u7684\\u53ef\\u9009\\u6570\\u636e\\u6e90\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### \\u7ec3\\u4e60\\n\\n\\u4ee5\\u4e0b\\u6bcf\\u4e2a\\u793a\\u4f8b\\u6f14\\u793a\\u4e86\\u81ea\\u52a8\\u8865\\u5168\\u7ec4\\u4ef6\\u7684\\u5355\\u9879\\u529f\\u80fd\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### \\u9009\\u62e9\\u4e00\\u4e2a\\u56fd\\u5bb6\\n\\n\\u4ece248\\u4e2a\\u56fd\\u5bb6\\u4e2d\\u9009\\u62e9\\u4e00\\u4e2a\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### \\u53ef\\u63a7\\u7684\\u72b6\\u6001\\n\\n\\u6b64\\u7ec4\\u4ef6\\u6709\\u4e24\\u79cd\\u53ef\\u63a7\\u7684\\u72b6\\u6001\\uff1a\\n\\n1. \\u201cvalue\\u201d \\u72b6\\u6001\\uff0c\\u4f7f\\u7528 `value`/`onChange` \\u5c5e\\u6027\\u7ec4\\u5408\\u3002 \\u8fd9\\u4e2a\\u72b6\\u6001\\u8868\\u793a\\u7528\\u6237\\u9009\\u62e9\\u7684\\u503c\\uff0c\\u4f8b\\u5982\\uff0c\\u5f53\\u6309 <kbd>Enter</kbd> \\u952e\\u65f6.\\n2. \\u201cinput value\\u201d \\u72b6\\u6001\\uff0c\\u4f7f\\u7528 `inputValue`/`onInputChange` \\u5c5e\\u6027\\u7ec4\\u5408\\u3002 \\u8fd9\\u4e2a\\u72b6\\u6001\\u8868\\u793a\\u5c55\\u793a\\u5728\\u6587\\u672c\\u6846\\u4e2d\\u7684\\u503c\\u3002\\n\\n> \\u26a0\\ufe0f \\u4ee5\\u4e0a\\u4e24\\u79cd\\u72b6\\u6001\\u4e92\\u4e0d\\u5e72\\u6d89\\uff0c\\u5b83\\u4eec\\u5e94\\u8be5\\u88ab\\u5355\\u72ec\\u63a7\\u5236\\u7740\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## \\u514d\\u8d39\\u5de5\\u5177\\n\\n\\u5c06 `freeSolo` \\u8bbe\\u7f6e\\u4e3atrue\\uff0c\\u4ee5\\u4fbf\\u5728\\u6587\\u672c\\u6846\\u4e2d\\u8f93\\u5165\\u4efb\\u610f\\u503c\\u3002\\n\\n### \\u641c\\u7d22\\u8f93\\u5165\\u680f\\n\\n\\u8be5\\u5c5e\\u6027\\u7684\\u4e3b\\u8981\\u4f7f\\u7528\\u65b9\\u5f0f\\u662f\\u521b\\u5efa\\u4e00\\u4e2a\\u5e26\\u6709\\u641c\\u7d22\\u5efa\\u8bae\\u7684 **\\u8f93\\u5165\\u680f**\\uff0c\\u4f8b\\u5982 Google \\u641c\\u7d22 \\u6216 react-autowhatever\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creatable \\uff08\\u53ef\\u521b\\u9020\\u6027\\uff09\\n\\n\\u5982\\u679c\\u60a8\\u6253\\u7b97\\u5c06\\u6b64\\u6a21\\u5757\\u7528\\u4e8e\\u7c7b\\u4f3c [\\u7ec4\\u5408\\u6846](#combo-box) \\u7684\\u4f53\\u9a8c\\uff08\\u9009\\u62e9\\u63a7\\u4ef6\\u5143\\u7d20\\u7684\\u589e\\u5f3a\\u7248\\uff09\\uff0c\\u6211\\u4eec\\u5efa\\u8bae\\u8bbe\\u7f6e\\uff1a\\n\\n- `selectOnFocus` \\u5e2e\\u52a9\\u7528\\u6237\\u6e05\\u9664\\u6240\\u9009\\u503c\\u3002\\n- `clearOnBlur` \\u5e2e\\u52a9\\u7528\\u6237\\u8f93\\u5165\\u4e00\\u4e2a\\u65b0\\u7684\\u503c\\u3002\\n- `handleHomeEndKeys` \\u4f7f\\u7528<kbd>Home</kbd> \\u548c <kbd>End</kbd> \\u952e\\u5728\\u5f39\\u51fa\\u7a97\\u53e3\\u5185\\u79fb\\u52a8\\u7126\\u70b9\\u3002\\n- \\u6700\\u540e\\u4e00\\u4e2a\\u9009\\u9879\\uff0c\\u4f8b\\u5982 `Add \"YOUR SEARCH\"`\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\n\\u60a8\\u4e5f\\u53ef\\u4ee5\\u5728\\u7528\\u6237\\u60f3\\u8981\\u6dfb\\u52a0\\u4e00\\u4e2a\\u65b0\\u7684\\u503c\\u65f6\\u663e\\u793a\\u4e00\\u4e2a\\u5bf9\\u8bdd\\u6846\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## \\u5206\\u7ec4\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## \\u5931\\u6548\\u7684\\u9009\\u9879\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\n\\u4f5c\\u4e3a\\u4e00\\u79cd\\u9ad8\\u7ea7\\u5b9a\\u5236\\u65b9\\u5f0f\\uff0c\\u6211\\u4eec\\u516c\\u5f00\\u4e86\\u4e00\\u4e2a `useAutocomplete()` \\u94a9\\u5b50\\u65b9\\u6cd5\\u3002 \\u5b83\\u63a5\\u53d7\\u51e0\\u4e4e\\u4e0eAutocomplete\\u7ec4\\u4ef6\\u76f8\\u540c\\u7684\\u53c2\\u6570\\uff0c\\u8f85\\u4ee5\\u4e0eJSX\\u6e32\\u67d3\\u6709\\u5173\\u7684\\u6240\\u6709\\u53c2\\u6570\\u3002 Autocomplete\\u7ec4\\u4ef6\\u5185\\u90e8\\u4e5f\\u662f\\u4f7f\\u7528\\u7684\\u6b64\\u94a9\\u5b50\\u65b9\\u6cd5\\u3002\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5kB \\u7684\\u538b\\u7f29\\u5305](/size-snapshot)\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### \\u81ea\\u5b9a\\u4e49\\u94a9\\u5b50\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\n\\u8f6c\\u5230[\\u81ea\\u5b9a\\u4e49\\u81ea\\u52a8\\u5b8c\\u6210](#customized-autocomplete)\\u90e8\\u5206\\uff0c\\u67e5\\u770b\\u4f7f\\u7528 `Autocomplete` \\u7ec4\\u4ef6\\uff08\\u800c\\u4e0d\\u662f\\u94a9\\u5b50\\uff09\\u7684\\u4f8b\\u5b50\\u3002\\n\\n## \\u5f02\\u6b65\\u8bf7\\u6c42\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### \\u8c37\\u6b4c\\u5730\\u56fe\\u4f4d\\u7f6e\\n\\n\\u4e00\\u4e2a\\u4e3a\\u8c37\\u6b4c\\u5730\\u56fe\\u4f4d\\u7f6e\\u81ea\\u52a8\\u8865\\u5168\\u529f\\u80fd\\u8bbe\\u8ba1\\u7684 UI\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\n\\u5bf9\\u4e8e\\u8fd9\\u4e2a\\u6f14\\u793a\\uff0c\\u6211\\u4eec\\u9700\\u8981\\u52a0\\u8f7d [\\u8c37\\u6b4c\\u5730\\u56feJavaScript](https://developers. google. com/maps/documentation/javascript/tutorial) API\\u3002\\n\\n> \\u26a0\\ufe0f\\u5728\\u4f60\\u5f00\\u59cb\\u4f7f\\u7528 Google Maps JavaScript API \\u4e4b\\u524d\\uff0c\\u4f60\\u5fc5\\u987b\\u6ce8\\u518c\\u5e76\\u4e14\\u521b\\u5efa\\u4e00\\u4e2a\\u53ef\\u652f\\u4ed8\\u7684\\u8d26\\u6237\\u3002\\n\\n## \\u591a\\u4e2a\\u503c\\n\\n\\u8fd9\\u4e5f\\u79f0\\u4e3a\\u6807\\u7b7e\\uff0c\\u5141\\u8bb8\\u7528\\u6237\\u8f93\\u5165\\u591a\\u4e2a\\u503c\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### \\u56fa\\u5b9a\\u9009\\u9879\\n\\n\\u6709\\u65f6\\u5019\\u4f60\\u9700\\u8981\\u9501\\u5b9a\\u67d0\\u4e2a\\u6807\\u7b7e\\uff0c\\u8fd9\\u6837\\u4ed6\\u4eec\\u4e0d\\u4f1a\\u88ab\\u4ece\\u754c\\u9762\\u4e2d\\u79fb\\u9664\\uff0c\\u8fd9\\u65f6\\u4f60\\u53ef\\u4ee5\\u5c06 chips \\u8bbe\\u7f6e\\u4e3a\\u7981\\u7528\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### \\u590d\\u9009\\u6846\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### \\u9650\\u5236\\u6807\\u7b7e\\u6570\\u91cf\\n\\n\\u5f53\\u6ca1\\u6709\\u805a\\u7126\\u65f6\\uff0c\\u4f60\\u53ef\\u4ee5\\u4f7f\\u7528 `limitTags` \\u5c5e\\u6027\\u6765\\u9650\\u5236\\u663e\\u793a\\u9009\\u9879\\u7684\\u6570\\u91cf\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## \\u5c3a\\u5bf8\\n\\n\\u60f3\\u8981\\u4f7f\\u7528\\u5916\\u89c2\\u770b\\u8d77\\u6765\\u6bd4\\u8f83\\u5c0f\\u7684\\u8f93\\u5165\\u6846\\u5417\\uff1f \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 `size` \\u5c5e\\u6027\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## \\u81ea\\u5b9a\\u4e49\\u8bbe\\u7f6e\\n\\n### \\u81ea\\u5b9a\\u4e49\\u8f93\\u5165\\n\\n`renderInput` \\u5c5e\\u6027\\u5141\\u8bb8\\u4f60\\u5bf9\\u8f93\\u5165\\u5185\\u5bb9\\u8fdb\\u884c\\u81ea\\u5b9a\\u4e49\\u6e32\\u67d3 The first argument of this render prop contains props that you need to forward. \\u8bf7\\u7279\\u522b\\u6ce8\\u610f `ref` \\u548c `inputProps` \\u952e(key)\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub \\u6807\\u7b7e\\u9009\\u62e9\\u5668 \\n\\n\\u8be5\\u6f14\\u793a\\u518d\\u73b0\\u4e86GitHub\\u7684\\u6807\\u7b7e\\u9009\\u62e9\\u5668\\uff1a\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\n\\u4f60\\u4e5f\\u53ef\\u4ee5\\u8f6c\\u5230[\\u81ea\\u5b9a\\u4e49 hook](#customized-hook) \\u7ae0\\u8282\\uff0c\\u67e5\\u770b\\u4e00\\u4e0b\\u4f7f\\u7528 `useAutocomplete` hook \\u7684\\u81ea\\u5b9a\\u4e49\\u4f8b\\u5b50\\uff0c\\u800c\\u4e0d\\u662f\\u4f7f\\u7528\\u81ea\\u52a8\\u8865\\u5168\\u7ec4\\u4ef6\\uff08Autocomplete\\uff09\\u3002\\n\\n## \\u9ad8\\u4eae\\u663e\\u793a\\n\\n\\u4ee5\\u4e0b\\u7684\\u4f8b\\u5b50\\u901a\\u8fc7 [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight) \\u8fd9\\u4e2a\\u5c0f\\u578b\\uff081 kB\\uff09\\u7684\\u63d2\\u4ef6\\u6765\\u5b9e\\u73b0\\u81ea\\u52a8\\u63a8\\u8350\\u548c\\u81ea\\u52a8\\u8865\\u5168\\u7ec4\\u4ef6\\u4e2d\\u7684\\u9ad8\\u4eae\\u6587\\u5b57\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## \\u81ea\\u5b9a\\u4e49\\u7b5b\\u9009\\n\\n\\u6b64\\u7ec4\\u4ef6\\u63d0\\u4f9b\\u4e86\\u4e00\\u4e2a\\u5de5\\u5382\\u6765\\u6784\\u5efa\\u4e00\\u4e2a\\u7b5b\\u9009\\u7684\\u65b9\\u6cd5\\uff0c\\u4f9b\\u7ed9 `filterOptions` \\u5c5e\\u6027\\u4f7f\\u7528\\u3002 \\u7528\\u6b64\\u4f60\\u53ef\\u4ee5\\u66f4\\u6539\\u9ed8\\u8ba4\\u7684\\u7b5b\\u9009\\u884c\\u4e3a\\u3002\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### \\u53c2\\u6570\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): \\u9ed8\\u8ba4\\u503c\\u4e3a` true `\\u3002 \\u79fb\\u9664\\u5b57\\u6bcd\\u7684\\u53d8\\u97f3\\u7b26\\u53f7\\u3002\\n  - `config.ignoreCase` (*Boolean* [optional]): \\u9ed8\\u8ba4\\u503c\\u4e3a` true `\\u3002 \\u6240\\u6709\\u5b57\\u6bcd\\u90fd\\u5c0f\\u5199\\u3002\\n  - `config.limit` (*Number* [optional]): \\u9ed8\\u8ba4\\u503c\\u4e3a null\\u3002 \\u663e\\u793a\\u9650\\u5b9a\\u6570\\u91cf\\u7684\\u5efa\\u8bae\\u9009\\u9879\\u3002 \\u8b6c\\u5982\\uff0c\\u5982\\u679c `config.limit` \\u4e3a `100`\\uff0c\\u90a3\\u4e48\\u53ea\\u663e\\u793a\\u524d`100` \\u4e2a\\u5339\\u914d\\u7684\\u9009\\u9879\\u3002 \\u5982\\u679c\\u5b58\\u5728\\u5f88\\u591a\\u9009\\u9879\\u5339\\u914d\\uff0c\\u5e76\\u4e14\\u865a\\u62df\\u5316\\u8bbe\\u7f6e\\u8fd8\\u6ca1\\u5efa\\u7acb\\u6210\\u65f6\\uff0c\\u8fd9\\u6837\\u7684\\u9650\\u5236\\u662f\\u975e\\u5e38\\u6709\\u6548\\u7684\\u3002\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): \\u9ed8\\u8ba4\\u503c\\u4e3a `\\'any\\'`\\u3002\\n  - `config.stringify` (*Func* [optional]): \\u63a7\\u5236\\u5982\\u4f55\\u5c06\\u4e00\\u4e2a\\u9009\\u9879\\u8f6c\\u6362\\u6210\\u4e00\\u4e2a\\u5b57\\u7b26\\u4e32\\uff0c\\u8fd9\\u6837\\uff0c\\u9009\\u9879\\u5c31\\u80fd\\u591f\\u548c\\u8f93\\u5165\\u6587\\u672c\\u7684\\u7247\\u6bb5\\u76f8\\u5339\\u914d\\u3002\\n  - `config.trim` (*Boolean* [optional]): \\u9ed8\\u8ba4\\u503c\\u4e3a`false`\\u3002 \\u5220\\u9664\\u5c3e\\u968f\\u7a7a\\u683c\\u3002\\n\\n#### \\u8fd4\\u56de\\u7ed3\\u679c\\n\\n`\\u8fc7\\u6ee4\\u9009\\u9879`: \\u8fd4\\u56de\\u7684\\u8fc7\\u6ee4\\u5668\\u65b9\\u6cd5\\u53ef\\u4ee5\\u76f4\\u63a5\\u63d0\\u4f9b\\u7ed9`\\u81ea\\u52a8\\u8865\\u5168` \\u7ec4\\u4ef6\\u7684 ` filterOptions ` \\u5c5e\\u6027\\uff0c \\u6216\\u8005\\u53ef\\u4ee5\\u4f20\\u7ed9 hook \\u7684\\u540c\\u540d\\u53c2\\u6570\\u3002\\n\\n\\u4ee5\\u4e0b\\u7684\\u4f8b\\u5b50\\u4e2d\\uff0c\\u9009\\u9879\\u5fc5\\u987b\\u6709\\u4e00\\u4e2a\\u67e5\\u8be2\\u7684\\u524d\\u7f00\\uff1a\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### \\u9ad8\\u7ea7\\n\\n\\u5bf9\\u4e8e\\u66f4\\u590d\\u6742\\u7684\\u8fc7\\u6ee4\\u673a\\u5236\\uff0c\\u8b6c\\u5982\\u6a21\\u7cca\\u5339\\u914d\\uff08fuzzy matching\\uff09\\uff0c\\u6211\\u4eec\\u63a8\\u8350\\u60a8\\u770b\\u4e00\\u4e0b [match-sorter](https://github.com/kentcdodds/match-sorter)\\u3002 \\u5c31\\u50cf\\u8fd9\\u6837\\uff1a\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## \\u53ef\\u89c6\\u5316\\n\\n\\u5728 10000\\u4e2a\\u968f\\u673a\\u751f\\u6210\\u7684\\u9009\\u9879\\u4e2d\\u641c\\u7d22\\u3002 \\u591a\\u4e8f\\u4e86[react-window](https://github.com/bvaughn/react-window)\\uff0c\\u8fd9\\u4e2a\\u5217\\u8868\\u5f97\\u4ee5\\u53ef\\u89c6\\u5316\\u3002\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## \\u5c40\\u9650\\u6027\\n\\n### autocomplete/autofill\\n\\n\\u6d4f\\u89c8\\u5668\\u4f1a\\u6709\\u542f\\u53d1\\u6027\\u7684\\u5e2e\\u52a9\\u7528\\u6237\\u586b\\u5199\\u8868\\u683c\\u3002 \\u7136\\u800c\\uff0c\\u8fd9\\u6837\\u7684\\u529f\\u80fd\\u4f1a\\u524a\\u5f31\\u7684\\u7ec4\\u4ef6\\u7528\\u6237\\u4f53\\u9a8c\\u3002\\n\\n\\u9ed8\\u8ba4\\u60c5\\u51b5\\u4e0b\\uff0c\\u7ec4\\u4ef6\\u901a\\u8fc7 `autoComplete=\"off\"` \\u8fd9\\u4e2a\\u5c5e\\u6027\\uff0c\\u7981\\u7528\\u4e86 **autocomplete** \\u529f\\u80fd\\uff08\\u8bf7\\u6ce8\\u610f\\u7528\\u6237\\u53ef\\u80fd\\u5728\\u4e4b\\u524d\\u5df2\\u7ecf\\u5728\\u7ed9\\u5b9a\\u57df\\u8f93\\u5165\\u5185\\u5bb9\\uff09\\u3002\\n\\n\\u7136\\u800c\\uff0c\\u9664\\u4e86\\u8bb0\\u4f4f\\u8fc7\\u53bb\\u5df2\\u7ecf\\u8f93\\u5165\\u7684\\u503c\\uff0c\\u6d4f\\u89c8\\u5668\\u53ef\\u80fd\\u4e5f\\u4f1a\\u7ed9\\u51fa **\\u81ea\\u52a8\\u586b\\u5145\\uff08autofill\\uff09** \\u7684\\u5efa\\u8bae\\uff08\\u8b6c\\u5982\\u6709\\u4fdd\\u5b58\\u7684\\u767b\\u5f55\\u4fe1\\u606f\\uff0c\\u5730\\u5740\\uff0c\\u6216\\u8005\\u652f\\u4ed8\\u65b9\\u5f0f\\u7b49\\uff09\\u3002 \\u82e5\\u60a8\\u4e0d\\u9700\\u8981\\u81ea\\u52a8\\u586b\\u5145\\uff0c\\u60a8\\u53ef\\u4ee5\\u5c1d\\u8bd5\\u4ee5\\u4e0b\\u7684\\u65b9\\u5f0f\\uff1a\\n\\n- \\u7ed9\\u8f93\\u5165\\u6846\\u4e00\\u4e2a\\u4e0d\\u540c\\u7684\\u540d\\u5b57\\uff0c\\u8fd9\\u6837\\u4e0d\\u4f1a\\u6cc4\\u9732\\u4efb\\u4f55\\u4fe1\\u606f\\u7ed9\\u6d4f\\u89c8\\u5668\\u4f7f\\u7528\\u3002 \\u4f8b\\u5982\\uff1a`id=\"field1\"` \\u800c\\u4e0d\\u662f `id=\"country\"`\\u3002 \\u82e5\\u4f60\\u4e0d\\u586b\\u5199 id\\uff0c\\u8be5\\u7ec4\\u4ef6\\u5219\\u4f1a\\u4f7f\\u7528\\u4e00\\u4e2a\\u968f\\u673a\\u7684 id\\u3002\\n- \\u8bbe\\u7f6e\\u4e3a `autoComplete=\"new-password\"`\\uff1a \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\niOS Safari \\u4e2d\\u7684 VoiceOver \\u5bf9 `aria-owns` \\u5c5e\\u6027\\u7684\\u652f\\u6301\\u5e76\\u4e0d\\u662f\\u5f88\\u5230\\u4f4d\\u3002 \\u4f60\\u53ef\\u4ee5\\u7528 `disablePortal` \\u5c5e\\u6027\\u6765\\u89e3\\u51b3\\u8fd9\\u4e2a\\u95ee\\u9898\\u3002\\n\\n### ListboxComponent\\n\\n\\u82e5\\u4f60\\u63d0\\u4f9b\\u4e00\\u5171\\u81ea\\u5b9a\\u4e49\\u7684 `ListboxComponent` \\u5c5e\\u6027\\uff0c\\u8bf7\\u4fdd\\u8bc1\\u9700\\u8981\\u6eda\\u52a8\\u529f\\u80fd\\u7684\\u5bb9\\u5668\\u5c06 `role` \\u5c5e\\u6027\\u8bbe\\u7f6e\\u4e3a `listbox`\\u3002 \\u8fd9\\u80fd\\u4fdd\\u8bc1\\u6eda\\u52a8\\u529f\\u80fd\\u5728\\u4e00\\u4e9b\\u60c5\\u51b5\\u4e0b\\uff0c\\u4f8b\\u5982\\u5f53\\u7528\\u952e\\u76d8\\u5207\\u6362\\u7684\\u65f6\\u5019\\uff0c\\u4ecd\\u7136\\u80fd\\u591f\\u6b63\\u5e38\\u663e\\u793a\\u3002\\n\\n## \\u65e0\\u969c\\u788d\\u8bbe\\u8ba1\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\n\\u6211\\u4eec\\u9f13\\u52b1\\u7528\\u6237\\u5728 textbox \\u4e2d\\u4f7f\\u7528\\u6807\\u7b7e\\u3002 \\u7ec4\\u4ef6\\u5e26\\u5165\\u4e86 WAI-ARIA \\u6388\\u6743\\u7684\\u4e00\\u4e9b\\u6807\\u51c6\\u3002'},rSMX:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return L}));var a=n(\"8ET1\"),i=n.n(a),o=n(\"2Fjn\"),r=n(\"z3IF\"),l=n(\"bZJ2\"),s=n(\"mXGw\"),c=n.n(s),d=n(\"nx5Z\"),p=n(\"UiZO\"),u=n(\"LHO+\"),y=n(\"hSxP\"),h=n(\"LMpM\"),m=n(\"yZEQ\"),f=n(\"oBf6\"),g=n(\"Oy88\"),b=c.a.createElement;function T(e){var t=e.data,n=e.index,a=e.style;return c.a.cloneElement(t[n],{style:Object(l.a)(Object(l.a)({},a),{},{top:a.top+8})})}var S=c.a.createContext({}),v=c.a.forwardRef((function(e,t){var n=c.a.useContext(S);return b(\"div\",Object(r.a)({ref:t},e,n))}));var w=c.a.forwardRef((function(e,t){var n=e.children,a=Object(o.a)(e,[\"children\"]),i=c.a.Children.toArray(n),r=Object(h.a)(),l=Object(u.a)(r.breakpoints.up(\"sm\"),{noSsr:!0}),s=i.length,d=l?36:48,p=function(e){return c.a.isValidElement(e)&&e.type===y.a?48:d},m=function(e){var t=c.a.useRef(null);return c.a.useEffect((function(){null!=t.current&&t.current.resetAfterIndex(0,!0)}),[e]),t}(s);return b(\"div\",{ref:t},b(S.Provider,{value:a},b(f.b,{itemData:i,height:(s>8?8*d:i.map(p).reduce((function(e,t){return e+t}),0))+16,width:\"100%\",ref:m,outerElementType:v,innerElementType:\"ul\",itemSize:function(e){return p(i[e])},overscanCount:5,itemCount:s},T)))}));var A=Object(m.a)({listbox:{boxSizing:\"border-box\",\"& ul\":{padding:0,margin:0}}}),O=i()(new Array(1e4)).map((function(){return function(e){for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",n=\"\",a=0;a<e;a+=1)n+=t.charAt(Math.floor(Math.random()*t.length));return n}(10+Math.ceil(20*Math.random()))})).sort((function(e,t){return e.toUpperCase().localeCompare(t.toUpperCase())})),I=function(e){return[b(y.a,{key:e.key,component:\"div\"},e.group),e.children]};function L(){var e=A();return b(p.a,{id:\"virtualize-demo\",style:{width:300},disableListWrap:!0,classes:e,ListboxComponent:w,renderGroup:I,options:O,groupBy:function(e){return e[0].toUpperCase()},renderInput:function(e){return b(d.a,Object(r.a)({},e,{variant:\"outlined\",label:\"10,000 options\"}))},renderOption:function(e){return b(g.a,{noWrap:!0},e)}})}},\"sMM/\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"RHBV\"),s=n(\"UiZO\"),c=o.a.createElement,d=Object(l.a)({matchFrom:\"start\",stringify:function(e){return e.title}});function p(){return c(s.a,{id:\"filter-demo\",options:u,getOptionLabel:function(e){return e.title},filterOptions:d,style:{width:300},renderInput:function(e){return c(r.a,Object(a.a)({},e,{label:\"Custom filter\",variant:\"outlined\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},sgkY:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return c}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"UiZO\"),l=o.a.createElement,s=[\"Option 1\",\"Option 2\"];function c(){return l(r.a,{id:\"custom-input-demo\",options:s,renderInput:function(e){return l(\"div\",{ref:e.InputProps.ref},l(\"input\",Object(a.a)({style:{width:200},type:\"text\"},e.inputProps)))}})}},sk5A:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return y}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"F7gL\"),l=n(\"UiZO\"),s=n(\"yZEQ\"),c=n(\"WLtd\"),d=n(\"nx5Z\"),p=o.a.createElement,u=Object(s.a)((function(e){return Object(c.a)({root:{width:500,\"& > * + *\":{marginTop:e.spacing(3)}}})}));function y(){var e=u();return p(\"div\",{className:e.root},p(l.a,{multiple:!0,id:\"tags-standard\",options:h,getOptionLabel:function(e){return e.title},defaultValue:[h[13]],renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"standard\",label:\"Multiple values\",placeholder:\"Favorites\"}))}}),p(l.a,{multiple:!0,id:\"tags-outlined\",options:h,getOptionLabel:function(e){return e.title},defaultValue:[h[13]],filterSelectedOptions:!0,renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"outlined\",label:\"filterSelectedOptions\",placeholder:\"Favorites\"}))}}),p(l.a,{multiple:!0,id:\"tags-filled\",options:h.map((function(e){return e.title})),defaultValue:[h[13].title],freeSolo:!0,renderTags:function(e,t){return e.map((function(e,n){return p(r.a,Object(a.a)({variant:\"outlined\",label:e},t({index:n})))}))},renderInput:function(e){return p(d.a,Object(a.a)({},e,{variant:\"filled\",label:\"freeSolo\",placeholder:\"Favorites\"}))}}))}var h=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},ssjU:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return h}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"ldZT\"),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=n(\"gXWL\"),d=n(\"FhH1\"),p=o.a.createElement,u=p(c.a,{fontSize:\"small\"}),y=p(d.a,{fontSize:\"small\"});function h(){return p(s.a,{multiple:!0,id:\"checkboxes-tags-demo\",options:m,disableCloseOnSelect:!0,getOptionLabel:function(e){return e.title},renderOption:function(e,t){var n=t.selected;return p(o.a.Fragment,null,p(r.a,{icon:u,checkedIcon:y,style:{marginRight:8},checked:n}),e.title)},style:{width:500},renderInput:function(e){return p(l.a,Object(a.a)({},e,{variant:\"outlined\",label:\"Checkboxes\",placeholder:\"Favorites\"}))}})}var m=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014}]},\"t+vg\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport parse from 'autosuggest-highlight/parse';\\nimport match from 'autosuggest-highlight/match';\\n\\nexport default function Highlights() {\\n  return (\\n    <Autocomplete\\n      id=\\\"highlights-demo\\\"\\n      style={{ width: 300 }}\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Highlights\\\"\\n          variant=\\\"outlined\\\"\\n          margin=\\\"normal\\\"\\n        />\\n      )}\\n      renderOption={(option, { inputValue }) => {\\n        const matches = match(option.title, inputValue);\\n        const parts = parse(option.title, matches);\\n\\n        return (\\n          <div>\\n            {parts.map((part, index) => (\\n              <span\\n                key={index}\\n                style={{\\n                  fontWeight: part.highlight ? 700 : 400,\\n                }}\\n              >\\n                {part.text}\\n              </span>\\n            ))}\\n          </div>\\n        );\\n      }}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},t5VN:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return y}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=n(\"K+1R\"),c=n.n(s),d=n(\"THK9\"),p=n.n(d),u=o.a.createElement;function y(){return u(l.a,{id:\"highlights-demo\",style:{width:300},options:h,getOptionLabel:function(e){return e.title},renderInput:function(e){return u(r.a,Object(a.a)({},e,{label:\"Highlights\",variant:\"outlined\",margin:\"normal\"}))},renderOption:function(e,t){var n=t.inputValue,a=p()(e.title,n),i=c()(e.title,a);return u(\"div\",null,i.map((function(e,t){return u(\"span\",{key:t,style:{fontWeight:e.highlight?700:400}},e.text)})))}})}var h=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},ui59:function(e,t){e.exports='---\\ntitle: Componente de Autocompletado de React\\ncomponents: TextField, Popper, Autocomplete\\n---\\n\\n# Autocompletado\\n\\n<p class=\"description\">El autocompletado es una caja de texto normal mejorada por un panel de opciones sugeridas.</p>\\n\\nEl widget es \\xfatil para establecer el valor de un cuadro de texto de una sola l\\xednea en uno de los dos tipos de escenarios:\\n\\n1. El valor para el cuadro de texto debe elegirse de un conjunto predefinido de valores permitidos, por ejemplo, un campo de ubicaci\\xf3n debe contener un nombre de ubicaci\\xf3n v\\xe1lido: [cuadro combinado](#combo-box).\\n2. El cuadro de texto puede contener cualquier valor arbitrario, pero es ventajoso sugerir posibles valores al usuario, por ejemplo, un campo de b\\xfasqueda puede sugerir b\\xfasquedas similares o anteriores para ahorrarle tiempo al usuario: [gratis solo](#free-solo).\\n\\nEsto pretende ser una versi\\xf3n mejorada de los paquetes \"react-select\" y \"downshift\".\\n\\n## Combo box\\n\\nEl valor debe elegirse de un conjunto predefinido de valores permitidos.\\n\\n{{\"demo\": \"pages/components/autocomplete/ComboBox.js\"}}\\n\\n### Campo de pruebas\\n\\nCada uno de los siguientes ejemplos demuestran una caracter\\xedstica del componente Autocompletado.\\n\\n{{\"demo\": \"pages/components/autocomplete/Playground.js\"}}\\n\\n### Selecci\\xf3n de Pa\\xeds\\n\\nSelecciona uno de los 248 pa\\xedses.\\n\\n{{\"demo\": \"pages/components/autocomplete/CountrySelect.js\"}}\\n\\n### Estados controlables\\n\\nEl componente tiene dos estados que pueden ser controlados:\\n\\n1. el \"valor\" del estado con la combinaci\\xf3n de props `value`/`onChange`. Este estado representa el valor seleccionado por el usuario, por ejemplo al pulsar <kbd>Enter</kbd>.\\n2. el estado \"valor de entrada\" con la combinaci\\xf3n de props `inputValue`/`onInputChange`. Este estado representa el valor mostrado en el campo de texto.\\n\\n> \\u26a0\\ufe0f Estos dos estados son aislados, deben ser controlados de forma independiente.\\n\\n{{\"demo\": \"pages/components/autocomplete/ControllableStates.js\"}}\\n\\n## Free solo\\n\\nSetear `freeSolo` a true, para que el cuadro de texto pueda contener cualquier valor arbitrario.\\n\\n### Campo de b\\xfasqueda\\n\\nLa propiedad est\\xe1 dise\\xf1ada para cubrir el principal caso de uso de una **caja de b\\xfasqueda** con sugerencias, ej: Google Search o react-autowhatever.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSolo.js\"}}\\n\\n### Creable\\n\\nSi pretendes usar este modo para una experiencia similar a un [combo box](#combo-box) (una versi\\xf3n mejora de un selector de elementos) te recomendamos configurar:\\n\\n- `selectOnFocus` que ayuda al usuario a borrar el valor seleccionado.\\n- `clearOnBlur` que ayuda a que el usuario introduzca un nuevo valor.\\n- `handleHomeEndKeys` para mover el foco dentro de la ventana emergente con las claves <kbd>Home</kbd> y <kbd>End</kbd>.\\n- Una \\xfaltima opci\\xf3n, por ejemplo `Agregar \"SU B\\xdaSQUEDA\"`.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOption.js\"}}\\n\\nTambi\\xe9n puedes mostrar un di\\xe1logo cuando el usuario quiere a\\xf1adir un nuevo valor.\\n\\n{{\"demo\": \"pages/components/autocomplete/FreeSoloCreateOptionDialog.js\"}}\\n\\n## Agrupado\\n\\n{{\"demo\": \"pages/components/autocomplete/Grouped.js\"}}\\n\\n## Deshabilitar opciones\\n\\n{{\"demo\": \"pages/components/autocomplete/DisabledOptions.js\"}}\\n\\n## `useAutocomplete`\\n\\nPara la personalizaci\\xf3n avanzada de casos de uso, exponemos un hook `useAutocomplete()`. Acepta casi las mismas opciones que el componente Autocompletar menus las propiedades relacionadas al renderizado de JSX. El componente Autocompletar usa este hook internamente.\\n\\n```jsx\\nimport useAutocomplete from \\'@material-ui/lab/useAutocomplete\\';\\n```\\n\\n- \\ud83d\\udce6 [4.5 kB comprimido](/size-snapshot).\\n\\n{{\"demo\": \"pages/components/autocomplete/UseAutocomplete.js\", \"defaultCodeOpen\": false}}\\n\\n### Hook personalizado\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomizedHook.js\"}}\\n\\nDir\\xedgete a la secci\\xf3n [Autocompletar Personalizado](#customized-autocomplete) para un ejemplo de personalizaci\\xf3n con el componente `Autcompletar` en vez del hook.\\n\\n## Peticiones as\\xedncronas\\n\\n{{\"demo\": \"pages/components/autocomplete/Asynchronous.js\"}}\\n\\n### Lugar de Google Maps\\n\\nUna interfaz de usuario personalizado para el autocompletar de Google Maps Places.\\n\\n{{\"demo\": \"pages/components/autocomplete/GoogleMaps.js\"}}\\n\\nPara esta demostraci\\xf3n, tenemos que cargar la API de [Google Maps JavaScript](https://developers.google.com/maps/documentation/javascript/tutorial).\\n\\n> \\u26a0\\ufe0f Antes de empezar a usar la API de Google Maps JavaScript, debes registrarte y crear una cuenta de facturaci\\xf3n.\\n\\n## Valores m\\xfaltiples\\n\\nTambi\\xe9n conocidos como etiquetas, el usuario puede introducir m\\xe1s de un valor.\\n\\n{{\"demo\": \"pages/components/autocomplete/Tags.js\"}}\\n\\n### Opciones fijas\\n\\nEn caso de que necesites bloquear ciertas etiquetas de modo que no puedan ser removidas en la interfaz, se puede deshabilitar los chips.\\n\\n{{\"demo\": \"pages/components/autocomplete/FixedTags.js\"}}\\n\\n### Casillas de Verificaci\\xf3n\\n\\n{{\"demo\": \"pages/components/autocomplete/CheckboxesTags.js\"}}\\n\\n### Limitar las etiquetas\\n\\nPuedes utilizar la propiedad `limitTags` para limitar el n\\xfamero de opciones que aparecen cuando no se selecciona.\\n\\n{{\"demo\": \"pages/components/autocomplete/LimitTags.js\"}}\\n\\n## Tama\\xf1os\\n\\nFancy smaller inputs? Use the `size` prop.\\n\\n{{\"demo\": \"pages/components/autocomplete/Sizes.js\"}}\\n\\n## Customizations\\n\\n### Custom input\\n\\nThe `renderInput` prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the `ref` and `inputProps` keys.\\n\\n{{\"demo\": \"pages/components/autocomplete/CustomInputAutocomplete.js\"}}\\n\\n### GitHub\\'s picker\\n\\nEsta demo reproduce el selector de etiquetas de GitHub:\\n\\n{{\"demo\": \"pages/components/autocomplete/GitHubLabel.js\"}}\\n\\nDir\\xedgete a la secci\\xf3n de [Hook personalizado](#customized-hook) para un ejemplo de personalizaci\\xf3n con el hook `useAutocomplete` en lugar del componente.\\n\\n## Destacados\\n\\nLa siguiente demostraci\\xf3n se basa en [autosuggest-highlight](https://github.com/moroshko/autosuggest-highlight), una peque\\xf1a utilidad (1 kB) para resaltar texto en componentes de autosuggest y autocompletar.\\n\\n{{\"demo\": \"pages/components/autocomplete/Highlights.js\"}}\\n\\n## Filtro personalizado\\n\\nEl componente expone una factor\\xeda para crear un m\\xe9todo de filtrado para proveer a la propiedad `filterOptions`. Puede usarse para cambiar el comportamiento de filtrado por defecto.\\n\\n```js\\nimport { createFilterOptions } from \\'@material-ui/lab/Autocomplete\\';\\n```\\n\\n### `createFilterOptions(config) => filterOptions`\\n\\n#### Argumentos\\n\\n1. `config` (*Object* [optional]): \\n  - `config.ignoreAccents` (*Boolean* [optional]): Por defecto a `true`. Elimina los acentos.\\n  - `config.ignoreCase` (*Boolean* [optional]): Por defecto a `true`. En min\\xfasculas todo.\\n  - `config.limit` (*Number* [optional]): Por defecto a null. Limita el n\\xfamero de opciones sugeridas para ser mostrado. Por ejemplo, si `config.limit` es `100`, s\\xf3lo las primeras `100` coincidencias se muestran. Esto puede ser \\xfatil si existe muchas coincidencias y la virtualizaci\\xf3n no estaba establecida.\\n  - `config.matchFrom` (*\\'any\\' | \\'start\\'* [optional]): Por defecto a `\\'any\\'`.\\n  - `config.stringify` (*Func* [optional]): Controla c\\xf3mo una opci\\xf3n se convierte en una cadena, de manera que se pueden combinar en contra de la entrada de texto del fragmento.\\n  - `config.trim` (*Boolean* [optional]): Por defecto a `false`. Eliminar espacios en blanco.\\n\\n#### Regresa\\n\\n`filterOptions`: m\\xe9todo de filtro devuelto puede ser provisto directamente a la propiedad `filterOptions` del componente `Autocompletar`, o el par\\xe1metro del mismo nombre para el hook.\\n\\nEn la siguiente demostraci\\xf3n, las opciones que se necesitan para iniciar con la consulta prefijo:\\n\\n```js\\nconst filterOptions = createFilterOptions({\\n  matchFrom: \\'start\\',\\n  stringify: option => option.title,\\n});\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n{{\"demo\": \"pages/components/autocomplete/Filter.js\", \"defaultCodeOpen\": false}}\\n\\n### Avanzado\\n\\nPara mecanismos de filtrado m\\xe1s completos, como la coincidencia aproximada, se recomienda buscar en [match-sorter de](https://github.com/kentcdodds/match-sorter). Por ejemplo:\\n\\n```jsx\\nimport matchSorter from \\'match-sorter\\';\\n\\nconst filterOptions = (options, { inputValue }) =>\\n  matchSorter(options, inputValue);\\n\\n<Autocomplete filterOptions={filterOptions} />\\n```\\n\\n## Virtualizaci\\xf3n\\n\\nBuscar entre 10.000 opciones generadas al azar. La lista est\\xe1 virtualizada gracias a [react-window](https://github.com/bvaughn/react-window).\\n\\n{{\"demo\": \"pages/components/autocomplete/Virtualize.js\"}}\\n\\n## Limitaciones\\n\\n### autocompletar/autorellenar\\n\\nLos navegadores tienen heur\\xedsticos para ayudar a los usuarios a rellenar el formulario. Sin embargo, puede da\\xf1ar la experiencia de usuario del componente.\\n\\nPor defecto, el componente deshabilita la caracter\\xedstica de **autocompletar** (recordando lo que el usuario ha escrito para un campo dado, en una sesi\\xf3n anterior) con el atributo `autoComplete=\"off\"`.\\n\\nSin embargo, adem\\xe1s de recordar el valor introducido anteriormente, el navegador tambi\\xe9n puede proponer sugerencias **autorellenadas** (inicio de sesi\\xf3n guardado, la direcci\\xf3n o detalles de pago). En el caso de que desees evitar el autorellenar, puedes intentar lo siguiente:\\n\\n- Nombra la entrada sin filtrar ninguna informaci\\xf3n que el navegador pueda utilizar. p.e. `id=\"field1\"` en vez de `id=\"country\"`. Si dejas el id de vac\\xedo, el componente utiliza un identificador aleatorio.\\n- Establecer `autoComplete=\"new-password\"`: \\n        jsx\\n        <TextField\\n        {...params}\\n        inputProps={{\\n          ...params.inputProps,\\n          autoComplete: \\'new-password\\',\\n        }}\\n        />\\n\\n### iOS VoiceOver\\n\\nVoiceOver en iOS Safari no soporta el atributo `aria-owns` especialmente bien. Puedes solucionar el problema con la propiedad `disablePortal`.\\n\\n### ListboxComponent\\n\\nIf you provide a custom `ListboxComponent` prop, you need to make sure that the intended scroll container has the `role` attribute set to `listbox`. This ensures the correct behavior of the scroll, for example when using the keyboard to navigate.\\n\\n## Accesibilidad\\n\\n(WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#combobox)\\n\\nWe encourage the usage of a label for the textbox. The component implements the WAI-ARIA authoring practices.'},vYXo:function(e,t,n){var a=n(\"/6KZ\"),i=n(\"+eav\"),o=String.fromCharCode,r=String.fromCodePoint;a(a.S+a.F*(!!r&&1!=r.length),\"String\",{fromCodePoint:function(e){for(var t,n=[],a=arguments.length,r=0;a>r;){if(t=+arguments[r++],i(t,1114111)!==t)throw RangeError(t+\" is not a valid code point\");n.push(t<65536?o(t):o(55296+((t-=65536)>>10),t%1024+56320))}return n.join(\"\")}})},w9gn:function(e,t){e.exports=\"// *https://www.registers.service.gov.uk/registers/country/use-the-api*\\nimport fetch from 'cross-fetch';\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\ninterface CountryType {\\n  name: string;\\n}\\n\\nfunction sleep(delay = 0) {\\n  return new Promise((resolve) => {\\n    setTimeout(resolve, delay);\\n  });\\n}\\n\\nexport default function Asynchronous() {\\n  const [open, setOpen] = React.useState(false);\\n  const [options, setOptions] = React.useState<CountryType[]>([]);\\n  const loading = open && options.length === 0;\\n\\n  React.useEffect(() => {\\n    let active = true;\\n\\n    if (!loading) {\\n      return undefined;\\n    }\\n\\n    (async () => {\\n      const response = await fetch(\\n        'https://country.register.gov.uk/records.json?page-size=5000',\\n      );\\n      await sleep(1e3); // For demo purposes.\\n      const countries = await response.json();\\n\\n      if (active) {\\n        setOptions(\\n          Object.keys(countries).map(\\n            (key) => countries[key].item[0],\\n          ) as CountryType[],\\n        );\\n      }\\n    })();\\n\\n    return () => {\\n      active = false;\\n    };\\n  }, [loading]);\\n\\n  React.useEffect(() => {\\n    if (!open) {\\n      setOptions([]);\\n    }\\n  }, [open]);\\n\\n  return (\\n    <Autocomplete\\n      id=\\\"asynchronous-demo\\\"\\n      style={{ width: 300 }}\\n      open={open}\\n      onOpen={() => {\\n        setOpen(true);\\n      }}\\n      onClose={() => {\\n        setOpen(false);\\n      }}\\n      getOptionSelected={(option, value) => option.name === value.name}\\n      getOptionLabel={(option) => option.name}\\n      options={options}\\n      loading={loading}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Asynchronous\\\"\\n          variant=\\\"outlined\\\"\\n          InputProps={{\\n            ...params.InputProps,\\n            endAdornment: (\\n              <React.Fragment>\\n                {loading ? (\\n                  <CircularProgress color=\\\"inherit\\\" size={20} />\\n                ) : null}\\n                {params.InputProps.endAdornment}\\n              </React.Fragment>\\n            ),\\n          }}\\n        />\\n      )}\\n    />\\n  );\\n}\\n\"},wz7E:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return S}));var a=n(\"z3IF\"),i=n(\"0tNF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"nx5Z\"),s=n(\"UiZO\"),c=n(\"U+sF\"),d=n(\"pQ8Y\"),p=n(\"Oy88\"),u=n(\"yZEQ\"),y=n(\"K+1R\"),h=n.n(y),m=n(\"T5cu\"),f=n.n(m),g=r.a.createElement;var b={current:null},T=Object(u.a)((function(e){return{icon:{color:e.palette.text.secondary,marginRight:e.spacing(2)}}}));function S(){var e=T(),t=r.a.useState(null),n=t[0],o=t[1],u=r.a.useState(\"\"),y=u[0],m=u[1],S=r.a.useState([]),v=S[0],w=S[1],A=r.a.useRef(!1);A.current||(document.querySelector(\"#google-maps\")||function(e,t,n){if(t){var a=document.createElement(\"script\");a.setAttribute(\"async\",\"\"),a.setAttribute(\"id\",n),a.src=e,t.appendChild(a)}}(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places\",document.querySelector(\"head\"),\"google-maps\"),A.current=!0);var O=r.a.useMemo((function(){return f()((function(e,t){b.current.getPlacePredictions(e,t)}),200)}),[]);return r.a.useEffect((function(){var e=!0;if(!b.current&&window.google&&(b.current=new window.google.maps.places.AutocompleteService),b.current){if(\"\"!==y)return O({input:y},(function(t){if(e){var a=[];n&&(a=[n]),t&&(a=[].concat(Object(i.a)(a),Object(i.a)(t))),w(a)}})),function(){e=!1};w(n?[n]:[])}}),[n,y,O]),g(s.a,{id:\"google-map-demo\",style:{width:300},getOptionLabel:function(e){return\"string\"===typeof e?e:e.description},filterOptions:function(e){return e},options:v,autoComplete:!0,includeInputInList:!0,filterSelectedOptions:!0,value:n,onChange:function(e,t){w(t?[t].concat(Object(i.a)(v)):v),o(t)},onInputChange:function(e,t){m(t)},renderInput:function(e){return g(l.a,Object(a.a)({},e,{label:\"Add a location\",variant:\"outlined\",fullWidth:!0}))},renderOption:function(t){var n=t.structured_formatting.main_text_matched_substrings,a=h()(t.structured_formatting.main_text,n.map((function(e){return[e.offset,e.offset+e.length]})));return g(d.a,{container:!0,alignItems:\"center\"},g(d.a,{item:!0},g(c.a,{className:e.icon})),g(d.a,{item:!0,xs:!0},a.map((function(e,t){return g(\"span\",{key:t,style:{fontWeight:e.highlight?700:400}},e.text)})),g(p.a,{variant:\"body2\",color:\"textSecondary\"},t.structured_formatting.secondary_text)))}})}},xH1d:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"mXGw\"),o=n.n(i),r=n(\"nx5Z\"),l=n(\"UiZO\"),s=o.a.createElement,c=[\"Option 1\",\"Option 2\"],d=s(\"br\",null);function p(){var e=o.a.useState(c[0]),t=e[0],n=e[1],i=o.a.useState(\"\"),p=i[0],u=i[1];return s(\"div\",null,s(\"div\",null,\"value: \".concat(null!==t?\"'\".concat(t,\"'\"):\"null\")),s(\"div\",null,\"inputValue: '\".concat(p,\"'\")),d,s(l.a,{value:t,onChange:function(e,t){n(t)},inputValue:p,onInputChange:function(e,t){u(t)},id:\"controllable-states-demo\",options:c,style:{width:300},renderInput:function(e){return s(r.a,Object(a.a)({},e,{label:\"Controllable\",variant:\"outlined\"}))}}))}},xMQG:function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function FreeSolo() {\\n  return (\\n    <div style={{ width: 300 }}>\\n      <Autocomplete\\n        id=\\\"free-solo-demo\\\"\\n        freeSolo\\n        options={top100Films.map((option) => option.title)}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            label=\\\"freeSolo\\\"\\n            margin=\\\"normal\\\"\\n            variant=\\\"outlined\\\"\\n          />\\n        )}\\n      />\\n      <Autocomplete\\n        freeSolo\\n        id=\\\"free-solo-2-demo\\\"\\n        disableClearable\\n        options={top100Films.map((option) => option.title)}\\n        renderInput={(params) => (\\n          <TextField\\n            {...params}\\n            label=\\\"Search input\\\"\\n            margin=\\\"normal\\\"\\n            variant=\\\"outlined\\\"\\n            InputProps={{\\n              ...params.InputProps,\\n              type: 'search',\\n            }}\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"},xVsK:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return p}));var a=n(\"z3IF\"),i=n(\"0tNF\"),o=n(\"mXGw\"),r=n.n(o),l=n(\"F7gL\"),s=n(\"nx5Z\"),c=n(\"UiZO\"),d=r.a.createElement;function p(){var e=[u[6]],t=r.a.useState([].concat(e,[u[13]])),n=t[0],o=t[1];return d(c.a,{multiple:!0,id:\"fixed-tags-demo\",value:n,onChange:function(t,n){o([].concat(e,Object(i.a)(n.filter((function(t){return-1===e.indexOf(t)})))))},options:u,getOptionLabel:function(e){return e.title},renderTags:function(t,n){return t.map((function(t,i){return d(l.a,Object(a.a)({label:t.title},n({index:i}),{disabled:-1!==e.indexOf(t)}))}))},style:{width:500},renderInput:function(e){return d(s.a,Object(a.a)({},e,{label:\"Fixed tag\",variant:\"outlined\",placeholder:\"Favorites\"}))}})}var u=[{title:\"The Shawshank Redemption\",year:1994},{title:\"The Godfather\",year:1972},{title:\"The Godfather: Part II\",year:1974},{title:\"The Dark Knight\",year:2008},{title:\"12 Angry Men\",year:1957},{title:\"Schindler's List\",year:1993},{title:\"Pulp Fiction\",year:1994},{title:\"The Lord of the Rings: The Return of the King\",year:2003},{title:\"The Good, the Bad and the Ugly\",year:1966},{title:\"Fight Club\",year:1999},{title:\"The Lord of the Rings: The Fellowship of the Ring\",year:2001},{title:\"Star Wars: Episode V - The Empire Strikes Back\",year:1980},{title:\"Forrest Gump\",year:1994},{title:\"Inception\",year:2010},{title:\"The Lord of the Rings: The Two Towers\",year:2002},{title:\"One Flew Over the Cuckoo's Nest\",year:1975},{title:\"Goodfellas\",year:1990},{title:\"The Matrix\",year:1999},{title:\"Seven Samurai\",year:1954},{title:\"Star Wars: Episode IV - A New Hope\",year:1977},{title:\"City of God\",year:2002},{title:\"Se7en\",year:1995},{title:\"The Silence of the Lambs\",year:1991},{title:\"It's a Wonderful Life\",year:1946},{title:\"Life Is Beautiful\",year:1997},{title:\"The Usual Suspects\",year:1995},{title:\"L\\xe9on: The Professional\",year:1994},{title:\"Spirited Away\",year:2001},{title:\"Saving Private Ryan\",year:1998},{title:\"Once Upon a Time in the West\",year:1968},{title:\"American History X\",year:1998},{title:\"Interstellar\",year:2014},{title:\"Casablanca\",year:1942},{title:\"City Lights\",year:1931},{title:\"Psycho\",year:1960},{title:\"The Green Mile\",year:1999},{title:\"The Intouchables\",year:2011},{title:\"Modern Times\",year:1936},{title:\"Raiders of the Lost Ark\",year:1981},{title:\"Rear Window\",year:1954},{title:\"The Pianist\",year:2002},{title:\"The Departed\",year:2006},{title:\"Terminator 2: Judgment Day\",year:1991},{title:\"Back to the Future\",year:1985},{title:\"Whiplash\",year:2014},{title:\"Gladiator\",year:2e3},{title:\"Memento\",year:2e3},{title:\"The Prestige\",year:2006},{title:\"The Lion King\",year:1994},{title:\"Apocalypse Now\",year:1979},{title:\"Alien\",year:1979},{title:\"Sunset Boulevard\",year:1950},{title:\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",year:1964},{title:\"The Great Dictator\",year:1940},{title:\"Cinema Paradiso\",year:1988},{title:\"The Lives of Others\",year:2006},{title:\"Grave of the Fireflies\",year:1988},{title:\"Paths of Glory\",year:1957},{title:\"Django Unchained\",year:2012},{title:\"The Shining\",year:1980},{title:\"WALL\\xb7E\",year:2008},{title:\"American Beauty\",year:1999},{title:\"The Dark Knight Rises\",year:2012},{title:\"Princess Mononoke\",year:1997},{title:\"Aliens\",year:1986},{title:\"Oldboy\",year:2003},{title:\"Once Upon a Time in America\",year:1984},{title:\"Witness for the Prosecution\",year:1957},{title:\"Das Boot\",year:1981},{title:\"Citizen Kane\",year:1941},{title:\"North by Northwest\",year:1959},{title:\"Vertigo\",year:1958},{title:\"Star Wars: Episode VI - Return of the Jedi\",year:1983},{title:\"Reservoir Dogs\",year:1992},{title:\"Braveheart\",year:1995},{title:\"M\",year:1931},{title:\"Requiem for a Dream\",year:2e3},{title:\"Am\\xe9lie\",year:2001},{title:\"A Clockwork Orange\",year:1971},{title:\"Like Stars on Earth\",year:2007},{title:\"Taxi Driver\",year:1976},{title:\"Lawrence of Arabia\",year:1962},{title:\"Double Indemnity\",year:1944},{title:\"Eternal Sunshine of the Spotless Mind\",year:2004},{title:\"Amadeus\",year:1984},{title:\"To Kill a Mockingbird\",year:1962},{title:\"Toy Story 3\",year:2010},{title:\"Logan\",year:2017},{title:\"Full Metal Jacket\",year:1987},{title:\"Dangal\",year:2016},{title:\"The Sting\",year:1973},{title:\"2001: A Space Odyssey\",year:1968},{title:\"Singin' in the Rain\",year:1952},{title:\"Toy Story\",year:1995},{title:\"Bicycle Thieves\",year:1948},{title:\"The Kid\",year:1921},{title:\"Inglourious Basterds\",year:2009},{title:\"Snatch\",year:2e3},{title:\"3 Idiots\",year:2009},{title:\"Monty Python and the Holy Grail\",year:1975}]},\"yn/S\":function(e,t){e.exports=\"/* eslint-disable no-use-before-define */\\nimport React from 'react';\\nimport Chip from '@material-ui/core/Chip';\\nimport TextField from '@material-ui/core/TextField';\\nimport Autocomplete from '@material-ui/lab/Autocomplete';\\n\\nexport default function FixedTags() {\\n  const fixedOptions = [top100Films[6]];\\n  const [value, setValue] = React.useState([...fixedOptions, top100Films[13]]);\\n\\n  return (\\n    <Autocomplete\\n      multiple\\n      id=\\\"fixed-tags-demo\\\"\\n      value={value}\\n      onChange={(event, newValue) => {\\n        setValue([\\n          ...fixedOptions,\\n          ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\\n        ]);\\n      }}\\n      options={top100Films}\\n      getOptionLabel={(option) => option.title}\\n      renderTags={(tagValue, getTagProps) =>\\n        tagValue.map((option, index) => (\\n          <Chip\\n            label={option.title}\\n            {...getTagProps({ index })}\\n            disabled={fixedOptions.indexOf(option) !== -1}\\n          />\\n        ))\\n      }\\n      style={{ width: 500 }}\\n      renderInput={(params) => (\\n        <TextField\\n          {...params}\\n          label=\\\"Fixed tag\\\"\\n          variant=\\\"outlined\\\"\\n          placeholder=\\\"Favorites\\\"\\n        />\\n      )}\\n    />\\n  );\\n}\\n\\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\\nconst top100Films = [\\n  { title: 'The Shawshank Redemption', year: 1994 },\\n  { title: 'The Godfather', year: 1972 },\\n  { title: 'The Godfather: Part II', year: 1974 },\\n  { title: 'The Dark Knight', year: 2008 },\\n  { title: '12 Angry Men', year: 1957 },\\n  { title: \\\"Schindler's List\\\", year: 1993 },\\n  { title: 'Pulp Fiction', year: 1994 },\\n  {\\n    title: 'The Lord of the Rings: The Return of the King',\\n    year: 2003,\\n  },\\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\\n  { title: 'Fight Club', year: 1999 },\\n  {\\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\\n    year: 2001,\\n  },\\n  {\\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\\n    year: 1980,\\n  },\\n  { title: 'Forrest Gump', year: 1994 },\\n  { title: 'Inception', year: 2010 },\\n  {\\n    title: 'The Lord of the Rings: The Two Towers',\\n    year: 2002,\\n  },\\n  { title: \\\"One Flew Over the Cuckoo's Nest\\\", year: 1975 },\\n  { title: 'Goodfellas', year: 1990 },\\n  { title: 'The Matrix', year: 1999 },\\n  { title: 'Seven Samurai', year: 1954 },\\n  {\\n    title: 'Star Wars: Episode IV - A New Hope',\\n    year: 1977,\\n  },\\n  { title: 'City of God', year: 2002 },\\n  { title: 'Se7en', year: 1995 },\\n  { title: 'The Silence of the Lambs', year: 1991 },\\n  { title: \\\"It's a Wonderful Life\\\", year: 1946 },\\n  { title: 'Life Is Beautiful', year: 1997 },\\n  { title: 'The Usual Suspects', year: 1995 },\\n  { title: 'L\\xe9on: The Professional', year: 1994 },\\n  { title: 'Spirited Away', year: 2001 },\\n  { title: 'Saving Private Ryan', year: 1998 },\\n  { title: 'Once Upon a Time in the West', year: 1968 },\\n  { title: 'American History X', year: 1998 },\\n  { title: 'Interstellar', year: 2014 },\\n  { title: 'Casablanca', year: 1942 },\\n  { title: 'City Lights', year: 1931 },\\n  { title: 'Psycho', year: 1960 },\\n  { title: 'The Green Mile', year: 1999 },\\n  { title: 'The Intouchables', year: 2011 },\\n  { title: 'Modern Times', year: 1936 },\\n  { title: 'Raiders of the Lost Ark', year: 1981 },\\n  { title: 'Rear Window', year: 1954 },\\n  { title: 'The Pianist', year: 2002 },\\n  { title: 'The Departed', year: 2006 },\\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\\n  { title: 'Back to the Future', year: 1985 },\\n  { title: 'Whiplash', year: 2014 },\\n  { title: 'Gladiator', year: 2000 },\\n  { title: 'Memento', year: 2000 },\\n  { title: 'The Prestige', year: 2006 },\\n  { title: 'The Lion King', year: 1994 },\\n  { title: 'Apocalypse Now', year: 1979 },\\n  { title: 'Alien', year: 1979 },\\n  { title: 'Sunset Boulevard', year: 1950 },\\n  {\\n    title:\\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\\n    year: 1964,\\n  },\\n  { title: 'The Great Dictator', year: 1940 },\\n  { title: 'Cinema Paradiso', year: 1988 },\\n  { title: 'The Lives of Others', year: 2006 },\\n  { title: 'Grave of the Fireflies', year: 1988 },\\n  { title: 'Paths of Glory', year: 1957 },\\n  { title: 'Django Unchained', year: 2012 },\\n  { title: 'The Shining', year: 1980 },\\n  { title: 'WALL\\xb7E', year: 2008 },\\n  { title: 'American Beauty', year: 1999 },\\n  { title: 'The Dark Knight Rises', year: 2012 },\\n  { title: 'Princess Mononoke', year: 1997 },\\n  { title: 'Aliens', year: 1986 },\\n  { title: 'Oldboy', year: 2003 },\\n  { title: 'Once Upon a Time in America', year: 1984 },\\n  { title: 'Witness for the Prosecution', year: 1957 },\\n  { title: 'Das Boot', year: 1981 },\\n  { title: 'Citizen Kane', year: 1941 },\\n  { title: 'North by Northwest', year: 1959 },\\n  { title: 'Vertigo', year: 1958 },\\n  {\\n    title: 'Star Wars: Episode VI - Return of the Jedi',\\n    year: 1983,\\n  },\\n  { title: 'Reservoir Dogs', year: 1992 },\\n  { title: 'Braveheart', year: 1995 },\\n  { title: 'M', year: 1931 },\\n  { title: 'Requiem for a Dream', year: 2000 },\\n  { title: 'Am\\xe9lie', year: 2001 },\\n  { title: 'A Clockwork Orange', year: 1971 },\\n  { title: 'Like Stars on Earth', year: 2007 },\\n  { title: 'Taxi Driver', year: 1976 },\\n  { title: 'Lawrence of Arabia', year: 1962 },\\n  { title: 'Double Indemnity', year: 1944 },\\n  {\\n    title: 'Eternal Sunshine of the Spotless Mind',\\n    year: 2004,\\n  },\\n  { title: 'Amadeus', year: 1984 },\\n  { title: 'To Kill a Mockingbird', year: 1962 },\\n  { title: 'Toy Story 3', year: 2010 },\\n  { title: 'Logan', year: 2017 },\\n  { title: 'Full Metal Jacket', year: 1987 },\\n  { title: 'Dangal', year: 2016 },\\n  { title: 'The Sting', year: 1973 },\\n  { title: '2001: A Space Odyssey', year: 1968 },\\n  { title: \\\"Singin' in the Rain\\\", year: 1952 },\\n  { title: 'Toy Story', year: 1995 },\\n  { title: 'Bicycle Thieves', year: 1948 },\\n  { title: 'The Kid', year: 1921 },\\n  { title: 'Inglourious Basterds', year: 2009 },\\n  { title: 'Snatch', year: 2000 },\\n  { title: '3 Idiots', year: 2009 },\\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\\n];\\n\"}},[[\"V1ME\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18,19,20,22,23,27,36]]]);"}