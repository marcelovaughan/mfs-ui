{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[275],{\"/RBe\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"h7Hf\"),r=t(\"Oy88\"),h=t(\"O8uh\"),p=a.a.createElement,m=Object(i.a)({typography:{subtitle1:{fontSize:12},body1:{fontWeight:500},button:{fontStyle:\"italic\"}}}),c=p(\"div\",null,p(s.a,{theme:m},p(r.a,{variant:\"subtitle1\"},\"subtitle\"),p(r.a,null,\"body1\"),p(h.a,null,\"Button\")));function l(){return c}},\"19KO\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"h7Hf\"),r=t(\"Oy88\"),h=a.a.createElement,p=Object(i.a)({typography:{htmlFontSize:10}}),m=h(s.a,{theme:p},h(r.a,null,\"body1\"));function c(){return m}},\"3+XN\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"h7Hf\"),r=t(\"Oy88\"),h=t(\"O8uh\"),p=a.a.createElement,m=Object(i.a)({typography:{subtitle1:{fontSize:12},body1:{fontWeight:500},button:{fontStyle:\"italic\"}}}),c=p(\"div\",null,p(s.a,{theme:m},p(r.a,{variant:\"subtitle1\"},\"subtitle\"),p(r.a,null,\"body1\"),p(h.a,null,\"Button\")));function l(){return c}},\"3BTO\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return c}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"h7Hf\"),r=t(\"Oy88\"),h=a.a.createElement,p=Object(i.a)({typography:{htmlFontSize:10}}),m=h(s.a,{theme:p},h(r.a,null,\"body1\"));function c(){return m}},\"3GWY\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"azxR\"),a=t(\"mXGw\"),i=t.n(a),s=t(\"mKyP\"),r=t(\"h7Hf\"),h=t(\"Oy88\"),p=i.a.createElement,m=Object(s.a)();m.typography.h3=Object(o.a)({fontSize:\"1.2rem\",\"@media (min-width:600px)\":{fontSize:\"1.5rem\"}},m.breakpoints.up(\"md\"),{fontSize:\"2rem\"});var c=p(r.a,{theme:m},p(h.a,{variant:\"h3\"},\"Responsive h3\"));function l(){return c}},\"3r7U\":function(e,n){e.exports=\"# Typography\\n\\n<p class=\\\"description\\\">The theme provides a set of type sizes that work well together, and also with the layout grid.</p>\\n\\n## Font family\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\nTo self-host fonts, download the font files in `ttf`, `woff`, and/or `woff2` formats and import them into your code.\\n\\n\\u26a0\\ufe0f This requires that you have a plugin or loader in your build process that can handle loading `ttf`, `woff`, and\\n`woff2` files. Fonts will _not_ be embedded within your bundle. They will be loaded from your webserver instead of a\\nCDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font.\\nIn order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Font size\\n\\nMaterial-UI uses `rem` units for the font size.\\nThe browser `<html>` element default font size is `16px`, but browsers have an option to change this value,\\nso `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support.\\nUsers change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings\\nfor devices that can be vastly different in size and viewing distance.\\n\\nTo change the font-size of Material-UI you can provide a `fontSize` property.\\nThe default value is `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nThe computed font size by the browser follows this mathematical equation:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Responsive font sizes\\n\\nThe typography variants properties map directly to the generated CSS.\\nYou can use [media queries](/customization/breakpoints/#api) inside them:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nTo automate this setup, you can use the [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) helper to make Typography font sizes in the theme responsive.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nYou can see this in action in the example below. Adjust your browser's window size, and notice how the font size changes as the width crosses the different [breakpoints](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Fluid font sizes\\n\\nTo be done: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML font size\\n\\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case,\\nwhich tells Material-UI what the font-size on the `<html>` element is.\\nThis is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what's the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n_You need to apply the above CSS on the html element of this page to see the below demo rendered correctly_\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Variants\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Default values\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\\n\"},\"580m\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"FRHM\"),r=t(\"h7Hf\"),h=t(\"Oy88\"),p=a.a.createElement,m=Object(i.a)();m=Object(s.a)(m);var c=p(\"div\",null,p(r.a,{theme:m},p(h.a,{variant:\"h3\"},\"Responsive h3\"),p(h.a,{variant:\"h4\"},\"Responsive h4\"),p(h.a,{variant:\"h5\"},\"Responsive h5\")));function l(){return c}},\"5vzb\":function(e,n){e.exports=\"# \\u30bf\\u30a4\\u30dd\\u30b0\\u30e9\\u30d5\\u30a3\\n\\n<p class=\\\"description\\\">\\u3053\\u306e\\u30c6\\u30fc\\u30de\\u306b\\u306f\\u3001\\u4e00\\u7dd2\\u306b\\u4f7f\\u7528\\u3067\\u304d\\u308b\\u30bf\\u30a4\\u30d7\\u30b5\\u30a4\\u30ba\\u306e\\u30bb\\u30c3\\u30c8\\u3068\\u3001\\u30ec\\u30a4\\u30a2\\u30a6\\u30c8\\u30b0\\u30ea\\u30c3\\u30c9\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002</p>\\n\\n## \\u30d5\\u30a9\\u30f3\\u30c8\\u30d5\\u30a1\\u30df\\u30ea\\u30fc\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\n\\u30bb\\u30eb\\u30d5\\u30db\\u30b9\\u30c8\\u30d5\\u30a9\\u30f3\\u30c8\\u3092\\u4f5c\\u6210\\u3059\\u308b\\u306b\\u306f\\u3001`ttf`\\u3001`woff`\\u3001\\u307e\\u305f\\u306f`woff2`\\u5f62\\u5f0f\\u306e\\u30d5\\u30a9\\u30f3\\u30c8\\u30d5\\u30a1\\u30a4\\u30eb\\u3092\\u30c0\\u30a6\\u30f3\\u30ed\\u30fc\\u30c9\\u3057\\u3001\\u30b3\\u30fc\\u30c9\\u306b\\u8aad\\u307f\\u8fbc\\u307f\\u307e\\u3059\\u3002\\n\\n\\u26a0\\ufe0f\\u3053\\u308c\\u306b\\u306f\\u3001\\u30d3\\u30eb\\u30c9\\u30d7\\u30ed\\u30bb\\u30b9\\u306b`ttf`\\u3001` woff ` \\u3001\\u304a\\u3088\\u3073 ` woff2 `\\u306e\\u8aad\\u307f\\u8fbc\\u307f\\u3092\\u51e6\\u7406\\u3067\\u304d\\u308b\\u30d7\\u30e9\\u30b0\\u30a4\\u30f3\\u307e\\u305f\\u306f\\u30ed\\u30fc\\u30c0\\u30fc\\u304c\\u5fc5\\u8981\\u3067\\u3059\\u3002 \\u30d5\\u30a9\\u30f3\\u30c8\\u306f\\u30d0\\u30f3\\u30c9\\u30eb\\u306b*\\u57cb\\u3081\\u8fbc\\u307e\\u308c\\u307e\\u305b\\u3093*\\u3002 \\u305d\\u308c\\u3089\\u306f\\u3001 CDN\\u306e\\u4ee3\\u308f\\u308a\\u306bWeb\\u30b5\\u30fc\\u30d0\\u30fc\\u304b\\u3089\\u30ed\\u30fc\\u30c9\\u3055\\u308c\\u307e\\u3059\\u3002\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font. In order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## \\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\n\\nMaterial-UI\\u3067\\u306f\\u3001\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u306b`rem`\\u5358\\u4f4d\\u3092\\u4f7f\\u7528\\u3057\\u307e\\u3059\\u3002 The browser `<html>` element default font size is `16px`, but browsers have an option to change this value, so `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support. \\u30e6\\u30fc\\u30b6\\u30fc\\u306f\\u3001\\u8996\\u529b\\u306e\\u4f4e\\u4e0b\\u304b\\u3089\\u6700\\u9069\\u306a\\u8a2d\\u5b9a\\u306e\\u9078\\u629e\\u307e\\u3067\\u3001\\u3055\\u307e\\u3056\\u307e\\u306a\\u7406\\u7531\\u3067\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u306e\\u8a2d\\u5b9a\\u3092\\u5909\\u66f4\\u3067\\u304d\\u307e\\u3059\\u3002\\u30b5\\u30a4\\u30ba\\u3084\\u8868\\u793a\\u8ddd\\u96e2\\u304c\\u5927\\u5e45\\u306b\\u7570\\u306a\\u308b\\u30c7\\u30d0\\u30a4\\u30b9\\u306b\\u3082\\u5bfe\\u5fdc\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\nMaterial-UI\\u306e\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u3092\\u5909\\u66f4\\u3059\\u308b\\u306b\\u306f\\u3001` fontSize `\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u3002 \\u30c7\\u30d5\\u30a9\\u30eb\\u30c8\\u5024\\u306f` 14px\\u3067\\u3059` \\u3002\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\n\\u30d6\\u30e9\\u30a6\\u30b6\\u3067\\u8a08\\u7b97\\u3055\\u308c\\u308b\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u306f\\u3001\\u6b21\\u306e\\u6570\\u5f0f\\u306b\\u5f93\\u3044\\u307e\\u3059\\u3002\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### \\u30ec\\u30b9\\u30dd\\u30f3\\u30b7\\u30d6\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\n\\nTypography\\u30d0\\u30ea\\u30a2\\u30f3\\u30c8\\u578b\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u306f\\u3001\\u751f\\u6210\\u3055\\u308c\\u305fCSS\\u306b\\u76f4\\u63a5\\u30de\\u30c3\\u30d7\\u3055\\u308c\\u307e\\u3059\\u3002 [media queries](/customization/breakpoints/#api) \\u3092\\u4f7f\\u7528\\u3067\\u304d\\u307e\\u3059\\uff1a\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\n\\u3053\\u306e\\u8a2d\\u5b9a\\u3092\\u81ea\\u52d5\\u5316\\u3059\\u308b\\u306b\\u306f\\u3001[`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme)\\u30d8\\u30eb\\u30d1\\u30fc\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3001\\u30c6\\u30fc\\u30de\\u306e\\u30bf\\u30a4\\u30dd\\u30b0\\u30e9\\u30d5\\u30a3\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u3092\\u5fdc\\u7b54\\u53ef\\u80fd\\u306b\\u3057\\u307e\\u3059\\u3002\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\n\\u4ee5\\u4e0b\\u306e\\u4f8b\\u3067\\u5b9f\\u969b\\u306b\\u3053\\u308c\\u3092\\u898b\\u308b\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u3059\\u3002 \\u30d6\\u30e9\\u30a6\\u30b6\\u306e\\u30a6\\u30a3\\u30f3\\u30c9\\u30a6\\u30b5\\u30a4\\u30ba\\u3092\\u8abf\\u6574\\u3057\\u3001\\u5e45\\u304c\\u7570\\u306a\\u308b[\\u30d6\\u30ec\\u30fc\\u30af\\u30dd\\u30a4\\u30f3\\u30c8](/customization/breakpoints/)\\u3092\\u6a2a\\u5207\\u308b\\u3068\\u304d\\u306b\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u304c\\u3069\\u306e\\u3088\\u3046\\u306b\\u5909\\u5316\\u3059\\u308b\\u304b\\u3092\\u78ba\\u8a8d\\u3057\\u307e\\u3059\\u3002\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### \\u6ed1\\u3089\\u304b\\u306a\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\n\\n\\u5b8c\\u4e86\\u4e88\\u5b9a\\uff1a[\\uff0315251 ](https://github.com/mui-org/material-ui/issues/15251) \\u3002\\n\\n### HTML\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\n\\n`<html>`\\u8981\\u7d20\\u306e\\u30c7\\u30d5\\u30a9\\u30eb\\u30c8\\u306e\\u30d5\\u30a9\\u30f3\\u30c8\\u30b5\\u30a4\\u30ba\\u3092\\u5909\\u66f4\\u3059\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u307e\\u3059\\u3002 \\u305f\\u3068\\u3048\\u3070\\u3001[ 10px\\u306e\\u5358\\u7d14\\u5316\\u3092\\u4f7f\\u7528\\u3059\\u308b\\u5834\\u5408](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/) \\u3002\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what's the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*\\u4ee5\\u4e0b\\u306e\\u30c7\\u30e2\\u3092\\u6b63\\u3057\\u304f\\u8868\\u793a\\u3059\\u308b\\u306b\\u306f\\u3001\\u3053\\u306e\\u30da\\u30fc\\u30b8\\u306ehtml\\u8981\\u7d20\\u306b\\u4e0a\\u8a18\\u306eCSS\\u3092\\u9069\\u7528\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## \\u30d0\\u30ea\\u30a2\\u30f3\\u30c8\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- \\u30b5\\u30d6\\u30bf\\u30a4\\u30c8\\u30eb2\\n- body1\\n- body2\\n- \\u30dc\\u30bf\\u30f3\\n- \\u30ad\\u30e3\\u30d7\\u30b7\\u30e7\\u30f3\\n- \\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30f3\\n\\n\\u3053\\u308c\\u3089\\u306e\\u30d0\\u30ea\\u30a2\\u30f3\\u30c8\\u306f\\u5404\\u3005\\u500b\\u5225\\u306b\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u53ef\\u80fd\\u3067\\u3059\\u3002\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## \\u30c7\\u30d5\\u30a9\\u30eb\\u30c8\\u5024\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},\"7zex\":function(e,n){e.exports=\"# Tipografia\\n\\n<p class=\\\"description\\\">O tema fornece um conjunto de tamanhos de tipos que funcionam bem juntos e tamb\\xe9m com a grade de leiaute.</p>\\n\\n## Fam\\xedlia da fonte\\n\\nVoc\\xea pode alterar a fam\\xedlia de fontes com a propriedade `theme.typography.fontFamily`.\\n\\nPor exemplo, esta demonstra\\xe7\\xe3o usa a fonte do sistema em vez da fonte padr\\xe3o Roboto:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Fontes auto-hospedadas\\n\\nPara fontes auto-hospedadas, baixe os arquivos de fonte em formatos `ttf`, `woff`, e/ou `woff2` e importe-os em seu c\\xf3digo.\\n\\n\\u26a0\\ufe0f Isso requer que voc\\xea tenha um plugin ou loader em seu processo de compila\\xe7\\xe3o que possa manipular o carregamento de arquivos `ttf`, `woff` e `woff2`. Fontes *n\\xe3o* ser\\xe3o embutidas dentro do seu pacote. Elas ser\\xe3o carregadas de seu servidor da Web em vez de uma CDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nEm seguida, voc\\xea precisa alterar o tema para usar essa nova fonte. Para definir globalmente o Raleway como uma fonte, o componente [`CssBaseline`](/components/css-baseline/) pode ser usado (ou qualquer outra solu\\xe7\\xe3o CSS de sua escolha).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Tamanho da fonte\\n\\nMaterial-UI usa a unidade `rem` para o tamanho da fonte. O tamanho da fonte padr\\xe3o do elemento `<html>` do navegador \\xe9 `16px`, mas os navegadores t\\xeam a op\\xe7\\xe3o de alterar esse valor, a unidade `rem` nos permite acomodar as configura\\xe7\\xf5es do usu\\xe1rio, resultando em um melhor suporte de acessibilidade. Os usu\\xe1rios alteram as configura\\xe7\\xf5es de tamanho da fonte por v\\xe1rios motivos, desde problemas de vis\\xe3o, at\\xe9 a escolha de configura\\xe7\\xf5es ideais para dispositivos que podem ser muito diferentes em tamanho e dist\\xe2ncia de visualiza\\xe7\\xe3o.\\n\\nPara alterar o tamanho da fonte do Material-UI, voc\\xea pode definir a propriedade `fontSize`. O valor padr\\xe3o \\xe9 `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Em chin\\xeas e japon\\xeas os caracteres s\\xe3o geralmente maiores,\\n    // ent\\xe3o um tamanho de letra menor pode ser apropriado.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nO tamanho da fonte computada pelo navegador segue esta equa\\xe7\\xe3o matem\\xe1tica:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Tamanhos da fonte responsivo\\n\\nAs propriedades de varia\\xe7\\xf5es de tipografia s\\xe3o mapeadas diretamente para o CSS gerado. Voc\\xea pode usar [consultas de m\\xeddia](/customization/breakpoints/#api) dentro delas:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nPara automatizar estas configura\\xe7\\xf5es, voc\\xea pode usar a fun\\xe7\\xe3o auxiliar [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme), para fazer a tipografia responsiva em rela\\xe7\\xe3o aos tamanhos da fonte no tema.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nVoc\\xea pode ver isso em a\\xe7\\xe3o no exemplo abaixo. Ajuste o tamanho da janela do navegador e observe como o tamanho da fonte muda \\xe0 medida que a largura cruza os diferentes [pontos de quebra](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Tamanhos da fonte fluido\\n\\nPara ser feito: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### Tamanho da fonte no HTML\\n\\nVoc\\xea pode querer alterar o tamanho da fonte padr\\xe3o do elemento `<html>`. Por exemplo, quando usando a [simplifica\\xe7\\xe3o de 10px](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Alterar o tamanho da fonte pode prejudicar a acessibilidade \\u267f\\ufe0f. A maioria dos navegadores concordou com o tamanho padr\\xe3o de 16 pixels, mas o usu\\xe1rio pode alter\\xe1-lo. Por exemplo, algu\\xe9m com necessidades especiais na vis\\xe3o poderia ter definido o tamanho padr\\xe3o da fonte do seu navegador para algo maior.\\n\\nUma propriedade de tema `htmlFontSize` \\xe9 fornecida para este caso de uso, que informa ao Material-UI qual \\xe9 o tamanho da fonte no elemento `<html>`. Isso \\xe9 usado para ajustar o valor `rem`, para que o tamanho da fonte calculado sempre corresponda \\xe0 especifica\\xe7\\xe3o.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Diz ao Material-UI qual \\xe9 o font-size no elemento html.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*Voc\\xea precisa aplicar o CSS acima no elemento html desta p\\xe1gina para ver a demonstra\\xe7\\xe3o abaixo renderizada corretamente*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Variantes\\n\\nO objeto de tipografia vem com [13 variantes](/components/typography/#component) por padr\\xe3o:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nCada uma dessas variantes pode ser customizada individualmente:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Valores padr\\xe3o\\n\\nVoc\\xea pode explorar os valores padr\\xe3o da tipografia usando [o explorador de tema](/customization/default-theme/?expand-path=$.typography) ou abrindo o console das ferramentas de desenvolvimento nesta p\\xe1gina (`window.theme.typography`).\"},\"9kL1\":function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n\\nexport default function TypographyVariants() {\\n  return (\\n    <div>\\n      <ThemeProvider theme={theme}>\\n        <Typography variant=\\\"subtitle1\\\">subtitle</Typography>\\n        <Typography>body1</Typography>\\n        <Button>Button</Button>\\n      </ThemeProvider>\\n    </div>\\n  );\\n}\\n\"},\"9z/P\":function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"mKyP\"),s=t(\"FRHM\"),r=t(\"h7Hf\"),h=t(\"Oy88\"),p=a.a.createElement,m=Object(i.a)();m=Object(s.a)(m);var c=p(\"div\",null,p(r.a,{theme:m},p(h.a,{variant:\"h3\"},\"Responsive h3\"),p(h.a,{variant:\"h4\"},\"Responsive h4\"),p(h.a,{variant:\"h5\"},\"Responsive h5\")));function l(){return c}},ANo8:function(e,n){e.exports=\"# Typography\\n\\n<p class=\\\"description\\\">The theme provides a set of type sizes that work well together, and also with the layout grid.</p>\\n\\n## Font family\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\nTo self-host fonts, download the font files in `ttf`, `woff`, and/or `woff2` formats and import them into your code.\\n\\n\\u26a0\\ufe0f This requires that you have a plugin or loader in your build process that can handle loading `ttf`, `woff`, and `woff2` files. Fonts will *not* be embedded within your bundle. They will be loaded from your webserver instead of a CDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font. In order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Font size\\n\\nMaterial-UI uses `rem` units for the font size. The browser `<html>` element default font size is `16px`, but browsers have an option to change this value, so `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support. Users change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings for devices that can be vastly different in size and viewing distance.\\n\\nTo change the font-size of Material-UI you can provide a `fontSize` property. The default value is `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nThe computed font size by the browser follows this mathematical equation:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Responsive font sizes\\n\\nThe typography variants properties map directly to the generated CSS. You can use [media queries](/customization/breakpoints/#api) inside them:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nTo automate this setup, you can use the [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) helper to make Typography font sizes in the theme responsive.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nYou can see this in action in the example below. adjust your browser's window size, and notice how the font size changes as the width crosses the different [breakpoints](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Fluid font sizes\\n\\nTo be done: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML font size\\n\\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what's the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Variants\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Default values\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},C2ZM:function(e,n,t){var o={\"./CustomResponsiveFontSizes.js\":\"aZdq\",\"./CustomResponsiveFontSizes.tsx\":\"TJpR\",\"./FontSizeTheme.js\":\"DVKJ\",\"./FontSizeTheme.tsx\":\"HjmD\",\"./ResponsiveFontSizes.js\":\"E3xJ\",\"./ResponsiveFontSizes.tsx\":\"iZHT\",\"./ResponsiveFontSizesChart.js\":\"SAlp\",\"./TypographyVariants.js\":\"9kL1\",\"./TypographyVariants.tsx\":\"qqkd\",\"./typography-aa.md\":\"sPh/\",\"./typography-de.md\":\"lupQ\",\"./typography-es.md\":\"QA95\",\"./typography-fr.md\":\"ANo8\",\"./typography-ja.md\":\"5vzb\",\"./typography-pt.md\":\"7zex\",\"./typography-ru.md\":\"Mdm1\",\"./typography-zh.md\":\"a49E\",\"./typography.md\":\"3r7U\"};function a(e){var n=i(e);return t(n)}function i(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=\"C2ZM\"},DVKJ:function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n\\nexport default function FontSizeTheme() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Typography>body1</Typography>\\n    </ThemeProvider>\\n  );\\n}\\n\"},E3xJ:function(e,n){e.exports=\"import React from 'react';\\nimport {\\n  createMuiTheme,\\n  responsiveFontSizes,\\n  ThemeProvider,\\n} from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n\\nexport default function ResponsiveFontSizes() {\\n  return (\\n    <div>\\n      <ThemeProvider theme={theme}>\\n        <Typography variant=\\\"h3\\\">Responsive h3</Typography>\\n        <Typography variant=\\\"h4\\\">Responsive h4</Typography>\\n        <Typography variant=\\\"h5\\\">Responsive h5</Typography>\\n      </ThemeProvider>\\n    </div>\\n  );\\n}\\n\"},FRHM:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return h}));var o=t(\"yLsn\"),a=t.n(o),i=t(\"bZJ2\"),s=t(\"/zA2\"),r=t(\"li2L\");function h(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.breakpoints,o=void 0===t?[\"sm\",\"md\",\"lg\"]:t,h=n.disableAlign,p=void 0!==h&&h,m=n.factor,c=void 0===m?2:m,l=n.variants,d=void 0===l?[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"button\",\"overline\"]:l,u=Object(i.a)({},e);u.typography=Object(i.a)({},u.typography);var f=u.typography,y=Object(r.b)(f.htmlFontSize),g=o.map((function(e){return u.breakpoints.values[e]}));return d.forEach((function(e){var n=f[e],t=a()(y(n.fontSize,\"rem\"));if(!(t<=1)){var o=t,h=1+(o-1)/c,m=n.lineHeight;if(!Object(r.d)(m)&&!p)throw new Error(Object(s.a)(6));Object(r.d)(m)||(m=a()(y(m,\"rem\"))/a()(t));var l=null;p||(l=function(e){return Object(r.a)({size:e,grid:Object(r.c)({pixels:4,lineHeight:m,htmlFontSize:f.htmlFontSize})})}),f[e]=Object(i.a)(Object(i.a)({},n),Object(r.e)({cssProperty:\"fontSize\",min:h,max:o,unit:\"rem\",breakpoints:g,transform:l}))}})),u}},HjmD:function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n\\nexport default function FontSizeTheme() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Typography>body1</Typography>\\n    </ThemeProvider>\\n  );\\n}\\n\"},\"JP+9\":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/customization/typography\",function(){return t(\"MjSB\")}])},Mdm1:function(e,n){e.exports=\"# \\u041e\\u0444\\u043e\\u0440\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043a\\u0441\\u0442\\u0430\\n\\n<p class=\\\"description\\\">The theme provides a set of type sizes that work well together, and also with the layout grid.</p>\\n\\n## \\u0428\\u0440\\u0438\\u0444\\u0442\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\nTo self-host fonts, download the font files in `ttf`, `woff`, and/or `woff2` formats and import them into your code.\\n\\n\\u26a0\\ufe0f This requires that you have a plugin or loader in your build process that can handle loading `ttf`, `woff`, and `woff2` files. Fonts will *not* be embedded within your bundle. They will be loaded from your webserver instead of a CDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font. In order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Font size\\n\\nMaterial-UI uses `rem` units for the font size. The browser `<html>` element default font size is `16px`, but browsers have an option to change this value, so `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support. Users change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings for devices that can be vastly different in size and viewing distance.\\n\\nTo change the font-size of Material-UI you can provide a `fontSize` property. The default value is `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nThe computed font size by the browser follows this mathematical equation:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Responsive font sizes\\n\\nThe typography variants properties map directly to the generated CSS. You can use [media queries](/customization/breakpoints/#api) inside them:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nTo automate this setup, you can use the [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) helper to make Typography font sizes in the theme responsive.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nYou can see this in action in the example below. adjust your browser's window size, and notice how the font size changes as the width crosses the different [breakpoints](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Fluid font sizes\\n\\nTo be done: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML font size\\n\\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what's the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Variants\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Default values\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},MjSB:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return m}));var o=t(\"mXGw\"),a=t.n(o),i=t(\"e+1t\"),s=t(\"kVtE\"),r=a.a.createElement,h=t(\"l1R+\"),p=t(\"C2ZM\");function m(e){var n=e.demos,t=e.docs;return r(i.a,{demos:n,docs:t,requireDemo:h})}m.getInitialProps=function(){var e=Object(s.a)({pageFilename:\"customization/typography\",requireRaw:p});return{demos:e.demos,docs:e.docs}}},QA95:function(e,n){e.exports=\"# Tipograf\\xeda\\n\\n<p class=\\\"description\\\">El tema provee un conjunto de tipados que funcionan bien juntos y tambien con la capa de grid.</p>\\n\\n## Familia de fuente\\n\\nPuedes Cambiar la familia de fuente con la propiedad `theme.typography.fontFamily`.\\n\\nPara instanciar, este demo usa el sistema de fuente en vez de la fuente por defecto Roboto:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Fuentes auto hospedadas en local\\n\\nPara fuentes auto-hospedadas, descargue los archivos de fuente en `ttf`, `woff`, and/or `woff2` a\\xf1ada el formato e importelo dentro de su c\\xf3digo.\\n\\n\\u26a0\\ufe0f This requires that you have a plugin or loader in your build process that can handle loading `ttf`, `woff`, and `woff2` files. Las fuentes no podran ser empotradas dentro de su bundle. Estas se podr\\xe1n cargar desde su servidor en vez de servirlas desde un CDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nLuego, usted podr\\xe1 lo necesario en el cambiar el tema para usar la nueva fuente. En aras de definir de forma global como una cara de fuente, el componente [`CssBaseline`](/components/css-baseline/) podra ser usado (o cualquier otra solucion CSS de su eleccion).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Font size\\n\\nMaterial-UI usa unidades `rem` para el tama\\xf1o de fuente. El navegador `<html>` element default font size is `16px`, pero navegadores tienen la opcion de cambiar este valor, asi que las unidades `rem` nos permitiran acomodar la configuracion del usuario, esto resultara en un mejor soporte de accesibilidad. Los Usuarios cambian el tama\\xf1o de fuente por diversas razones, desde la vista hasta elegir el tama\\xf1o optimo para dispositivos que pueden tener muchas diferencias entre la distancia de visi\\xf3n y el tama\\xf1o.\\n\\nPara cambiar el tama\\xf1o de fuente de Material-UI Puedes proveer una propiedad llamada `fontSize` . The default value is `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nThe computed font size by the browser follows this mathematical equation:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Tama\\xf1os de fuente responsivos\\n\\nLas propeidades tipograficas variantes mapean dierctamente hacia el CSS generado. puedes usar [media queries](/customization/breakpoints/#api) dentro de ellos:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nPara automatizar el setup, puedes usar el ayudante [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) para convertir los tama\\xf1os de fuentes Tipogr\\xe1ficas responsivas en el tema.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nPuedes ver esto en acci\\xf3n en ejemplo debajo. adjust your browser's window size, and notice how the font size changes as the width crosses the different [breakpoints](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Fluid font sizes\\n\\nTo be done: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML font size\\n\\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Tell Material-UI what's the font-size on the html element is.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Variants\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Default values\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},SAlp:function(e,n){e.exports=\"import React from 'react';\\n// import of a small, pure module in a private demo\\n// bundle size and module duplication is negligible\\n/* eslint-disable-next-line no-restricted-imports */\\nimport { convertLength } from '@material-ui/core/styles/cssUtils';\\nimport {\\n  makeStyles,\\n  createMuiTheme,\\n  responsiveFontSizes,\\n} from '@material-ui/core/styles';\\nimport {\\n  Legend,\\n  Tooltip,\\n  LineChart,\\n  Line,\\n  XAxis,\\n  YAxis,\\n  Label,\\n  ResponsiveContainer,\\n} from 'recharts';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n\\nconst colors = [\\n  '#443dc2',\\n  '#2060df',\\n  '#277e91',\\n  '#378153',\\n  '#4d811d',\\n  '#63780d',\\n  '#996600',\\n];\\nconst variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1'];\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    height: 380,\\n    width: '100%',\\n    color: 'black',\\n  },\\n});\\n\\nexport default function ResponsiveFontSizes() {\\n  const classes = useStyles();\\n  const convert = convertLength(theme.typography.htmlFontSize);\\n  const toPx = (rem) => parseFloat(convert(rem, 'px'));\\n\\n  const series = variants.map((variantName) => {\\n    const variant = theme.typography[variantName];\\n    const data = [];\\n\\n    data.push({\\n      viewport: 0,\\n      fontSize: toPx(variant.fontSize),\\n    });\\n\\n    theme.breakpoints.keys.forEach((key) => {\\n      const viewport = theme.breakpoints.values[key];\\n      const value = theme.breakpoints.up(key);\\n\\n      if (variant[value]) {\\n        data.push({\\n          viewport: viewport - 1,\\n          fontSize: data[data.length - 1].fontSize,\\n        });\\n        data.push({\\n          viewport,\\n          fontSize: toPx(variant[value].fontSize),\\n        });\\n      } else if (key === 'xl') {\\n        data.push({\\n          viewport,\\n          fontSize: data[data.length - 1].fontSize,\\n        });\\n      }\\n    });\\n\\n    return {\\n      name: variantName,\\n      data,\\n    };\\n  });\\n\\n  return (\\n    <div className={classes.root}>\\n      <ResponsiveContainer>\\n        <LineChart\\n          margin={{\\n            top: 50,\\n            right: 140,\\n            bottom: 0,\\n            left: 30,\\n          }}\\n        >\\n          <XAxis dataKey=\\\"viewport\\\" type=\\\"number\\\">\\n            <Label position=\\\"right\\\" offset={30}>\\n              viewport (px)\\n            </Label>\\n          </XAxis>\\n          <YAxis dataKey=\\\"fontSize\\\" type=\\\"number\\\">\\n            <Label position=\\\"top\\\" offset={20}>\\n              font-size (rem)\\n            </Label>\\n          </YAxis>\\n          <Tooltip />\\n          <Legend />\\n          {series.map((serie, index) => (\\n            <Line\\n              dataKey=\\\"fontSize\\\"\\n              stroke={colors[index % colors.length]}\\n              data={serie.data}\\n              name={serie.name}\\n              key={serie.name}\\n            />\\n          ))}\\n        </LineChart>\\n      </ResponsiveContainer>\\n    </div>\\n  );\\n}\\n\"},TJpR:function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2rem',\\n  },\\n};\\n\\nexport default function CustomResponsiveFontSizes() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Typography variant=\\\"h3\\\">Responsive h3</Typography>\\n    </ThemeProvider>\\n  );\\n}\\n\"},a49E:function(e,n){e.exports=\"# \\u6392\\u7248\\n\\n<p class=\\\"description\\\">The theme provides a set of type sizes that work well together, and also with the layout grid.</p>\\n\\n## \\u5b57\\u4f53\\u7cfb\\u5217\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\nTo self-host fonts, download the font files in `ttf`, `woff`, and/or `woff2` formats and import them into your code.\\n\\n\\u26a0\\ufe0f This requires that you have a plugin or loader in your build process that can handle loading `ttf`, `woff`, and `woff2` files. Fonts will *not* be embedded within your bundle. They will be loaded from your webserver instead of a CDN.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font. In order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## \\u5b57\\u4f53\\u5927\\u5c0f \\n\\nMaterial-UI uses `rem` units for the font size. The browser `<html>` element default font size is `16px`, but browsers have an option to change this value, so `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support. Users change font size settings for all kinds of reasons, from poor eyesight to choosing optimum settings for devices that can be vastly different in size and viewing distance.\\n\\nTo change the font-size of Material-UI you can provide a `fontSize` property. The default value is `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinese and Japanese the characters are usually larger,\\n    // so a smaller fontsize may be appropriate.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nThe computed font size by the browser follows this mathematical equation:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### \\u54cd\\u5e94\\u7684\\u5b57\\u4f53\\u5927\\u5c0f\\n\\nThe typography variants properties map directly to the generated CSS. You can use [media queries](/customization/breakpoints/#api) inside them:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nTo automate this setup, you can use the [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) helper to make Typography font sizes in the theme responsive.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nYou can see this in action in the example below. adjust your browser's window size, and notice how the font size changes as the width crosses the different [breakpoints](/customization/breakpoints/):\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Fluid font sizes\\n\\nTo be done: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML\\u5b57\\u4f53\\u5927\\u5c0f\\n\\nYou might want to change the `<html>` element default font size. For instance, when using the [10px simplification](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // \\u544a\\u8bc9Material-UI html\\u5143\\u7d20\\u7684\\u5b57\\u4f53\\u5927\\u5c0f\\u662f\\u4ec0\\u4e48\\u3002\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*You need to apply the above CSS on the html element of this page to see the below demo rendered correctly*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## \\u53d8\\u79cd\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## \\u9ed8\\u8ba4\\u503c\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},aZdq:function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2rem',\\n  },\\n};\\n\\nexport default function CustomResponsiveFontSizes() {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Typography variant=\\\"h3\\\">Responsive h3</Typography>\\n    </ThemeProvider>\\n  );\\n}\\n\"},iZHT:function(e,n){e.exports=\"import React from 'react';\\nimport {\\n  createMuiTheme,\\n  responsiveFontSizes,\\n  ThemeProvider,\\n} from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n\\nexport default function ResponsiveFontSizes() {\\n  return (\\n    <div>\\n      <ThemeProvider theme={theme}>\\n        <Typography variant=\\\"h3\\\">Responsive h3</Typography>\\n        <Typography variant=\\\"h4\\\">Responsive h4</Typography>\\n        <Typography variant=\\\"h5\\\">Responsive h5</Typography>\\n      </ThemeProvider>\\n    </div>\\n  );\\n}\\n\"},\"l1R+\":function(e,n,t){var o={\"./CustomResponsiveFontSizes.js\":\"3GWY\",\"./CustomResponsiveFontSizes.tsx\":\"xkKq\",\"./FontSizeTheme.js\":\"3BTO\",\"./FontSizeTheme.tsx\":\"19KO\",\"./ResponsiveFontSizes.js\":\"580m\",\"./ResponsiveFontSizes.tsx\":\"9z/P\",\"./ResponsiveFontSizesChart.js\":\"zj23\",\"./TypographyVariants.js\":\"/RBe\",\"./TypographyVariants.tsx\":\"3+XN\"};function a(e){var n=i(e);return t(n)}function i(e){if(!t.o(o,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=\"l1R+\"},li2L:function(e,n,t){\"use strict\";t.d(n,\"d\",(function(){return s})),t.d(n,\"b\",(function(){return h})),t.d(n,\"a\",(function(){return p})),t.d(n,\"c\",(function(){return m})),t.d(n,\"e\",(function(){return c}));var o=t(\"azxR\"),a=t(\"yLsn\"),i=t.n(a);function s(e){return String(i()(e)).length===String(e).length}function r(e){return i()(e)}function h(e){return function(n,t){var o=String(n).match(/[\\d.\\-+]*\\s*(.*)/)[1]||\"\";if(o===t)return n;var a=r(n);if(\"px\"!==o)if(\"em\"===o)a=r(n)*r(e);else if(\"rem\"===o)return a=r(n)*r(e),n;var s=a;if(\"px\"!==t)if(\"em\"===t)s=a/r(e);else{if(\"rem\"!==t)return n;s=a/r(e)}return i()(s.toFixed(5))+t}}function p(e){var n=e.size,t=e.grid,o=n-n%t,a=o+t;return n-o<a-n?o:a}function m(e){var n=e.lineHeight;return e.pixels/(n*e.htmlFontSize)}function c(e){var n=e.cssProperty,t=e.min,a=e.max,i=e.unit,s=void 0===i?\"rem\":i,r=e.breakpoints,h=void 0===r?[600,960,1280]:r,p=e.transform,m=void 0===p?null:p,c=Object(o.a)({},n,\"\".concat(t).concat(s)),l=(a-t)/h[h.length-1];return h.forEach((function(e){var a=t+l*e;null!==m&&(a=m(a)),c[\"@media (min-width:\".concat(e,\"px)\")]=Object(o.a)({},n,\"\".concat(Math.round(1e4*a)/1e4).concat(s))})),c}},lupQ:function(e,n){e.exports=\"# Typografie\\n\\n<p class=\\\"description\\\">Das Theme bietet eine Anzahl von Schriftgr\\xf6\\xdfen, die gut zusammen mit dem Layoutraster funktionieren.</p>\\n\\n## Schriftfamilie\\n\\nYou can change the font family with the `theme.typography.fontFamily` property.\\n\\nFor instance, this demo uses the system font instead of the default Roboto font:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n  },\\n});\\n```\\n\\n### Self-hosted fonts\\n\\nUm Schriftarten selbst zu hosten, laden Sie diese als ` ttf`, ` woff ` und/oder ` woff2 ` herunter und importieren Sie diese in Ihren Code.\\n\\n\\u26a0\\ufe0f Voraussetzung daf\\xfcr ist, dass Sie in Ihrem Build-Prozess ein Plugin oder Loader haben, dass das Laden von `ttf`, `woff` und `woff2` Datein erm\\xf6glicht. Schriftarten werden *nicht * in deinen Bundle eingebettet sein. Sie werden von Ihrem Webserver anstelle von CDN geladen.\\n\\n```js\\nimport RalewayWoff2 from './fonts/Raleway-Regular.woff2';\\n\\nconst raleway = {\\n  fontFamily: 'Raleway',\\n  fontStyle: 'normal',\\n  fontDisplay: 'swap',\\n  fontWeight: 400,\\n  src: `\\n    local('Raleway'),\\n    local('Raleway-Regular'),\\n    url(${RalewayWoff2}) format('woff2')\\n  `,\\n  unicodeRange:\\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\\n};\\n```\\n\\nNext, you need to change the theme to use this new font. In order to globally define Raleway as a font face, the [`CssBaseline`](/components/css-baseline/) component can be used (or any other CSS solution of your choice).\\n\\n```jsx\\nconst theme = createMuiTheme({\\n  typography: {\\n    fontFamily: 'Raleway, Arial',\\n  },\\n  overrides: {\\n    MuiCssBaseline: {\\n      '@global': {\\n        '@font-face': [raleway],\\n      },\\n    },\\n  },\\n});\\n\\n// ...\\nreturn (\\n  <ThemeProvider theme={theme}>\\n    <CssBaseline />\\n    {children}\\n  </ThemeProvider>\\n);\\n```\\n\\n## Schriftgr\\xf6\\xdfe\\n\\nMaterial-UI verwendet `rem` Einheiten f\\xfcr die Schriftgr\\xf6\\xdfe. The browser `<html>` element default font size is `16px`, but browsers have an option to change this value, so `rem` units allow us to accommodate the user's settings, resulting in a better accessibility support. Benutzer \\xe4ndern Schriftgr\\xf6\\xdfe aus alle Arten von Gr\\xfcnden, von Sehschw\\xe4che bis zu optimalen Einstellungen f\\xfcr Ger\\xe4te, die sehr unterschiedlich in Gr\\xf6\\xdfe und Betrachtungsabstand sein k\\xf6nnen.\\n\\nUm die Schriftgr\\xf6\\xdfe der Material-UI zu \\xe4ndern, k\\xf6nnen Sie eine `fontSize` Eigenschaft angeben. Der Standardwert ist `14px`.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // In Chinesisch und Japanisch sind die Zeichen normalerweise gr\\xf6\\xdfer,\\n    // daher kann eine kleinere Schriftgr\\xf6\\xdfe angemessen sein.\\n    fontSize: 12,\\n  },\\n});\\n```\\n\\nDie vom Browser berechnete Schriftgr\\xf6\\xdfe folgt dieser mathematischen Gleichung:\\n\\n![font-size](/static/images/font-size.gif)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### Responsive Schriftgr\\xf6\\xdfen\\n\\nDie Eigenschaften der Typografievarianten werden direkt dem generierten CSS zugeordnet. Sie k\\xf6nnen in ihnen [Medienabfragen](/customization/breakpoints/#api) verwenden:\\n\\n```js\\nconst theme = createMuiTheme();\\n\\ntheme.typography.h3 = {\\n  fontSize: '1.2rem',\\n  '@media (min-width:600px)': {\\n    fontSize: '1.5rem',\\n  },\\n  [theme.breakpoints.up('md')]: {\\n    fontSize: '2.4rem',\\n  },\\n};\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/CustomResponsiveFontSizes.js\\\"}}\\n\\nUm dieses Setup zu automatisieren, k\\xf6nnen Sie die Funktion [`responsiveFontSizes()`](/customization/theming/#responsivefontsizes-theme-options-theme) Helfer verwenden, um die Schriftgr\\xf6\\xdfen der Typografie im Design ansprechend zu gestalten.\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizesChart.js\\\", \\\"hideToolbar\\\": true}}\\n\\nSie k\\xf6nnen dies in dem folgenden Beispiel in Aktion sehen. Passen Sie die Fenstergr\\xf6\\xdfe Ihres Browsers an und beachten Sie, wie sich die Schriftgr\\xf6\\xdfe \\xe4ndert, wenn die Breite die unterschiedlichen [Haltepunkte](/customization/breakpoints/) \\xfcberschreitet:\\n\\n```js\\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\\n\\nlet theme = createMuiTheme();\\ntheme = responsiveFontSizes(theme);\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/ResponsiveFontSizes.js\\\"}}\\n\\n### Flie\\xdfende Schriftgr\\xf6\\xdfen\\n\\nNoch zu tun: [#15251](https://github.com/mui-org/material-ui/issues/15251).\\n\\n### HTML-Schriftgr\\xf6\\xdfe\\n\\nM\\xf6glicherweise m\\xf6chten Sie die Standardschriftgr\\xf6\\xdfe des `<html>` Elements \\xe4ndern. Zum Beispiel bei der Verwendung der [10px-Vereinfachung](https://www.sitepoint.com/understanding-and-using-rem-units-in-css/).\\n\\n> \\u26a0\\ufe0f Changing the font size can harm accessibility \\u267f\\ufe0f. Most browsers agreed on the default size of 16 pixels, but the user can change it. For instance, someone with an impaired vision could have set their browser\\u2019s default font size to something larger.\\n\\nAn `htmlFontSize` theme property is provided for this use case, which tells Material-UI what the font-size on the `<html>` element is. This is used to adjust the `rem` value so the calculated font-size always match the specification.\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    // Informiere die Material-UI \\xfcber die Schriftgr\\xf6\\xdfe des HTML-Elements.\\n    htmlFontSize: 10,\\n  },\\n});\\n```\\n\\n```css\\nhtml {\\n  font-size: 62.5%; /* 62.5% of 16px = 10px */\\n}\\n```\\n\\n*Sie m\\xfcssen das obige CSS auf das HTML-Element dieser Seite anwenden, um die unten stehende Demo korrekt anzuzeigen*\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/FontSizeTheme.js\\\"}}\\n\\n## Varianten\\n\\nThe typography object comes with [13 variants](/components/typography/#component) by default:\\n\\n- h1\\n- h2\\n- h3\\n- h4\\n- h5\\n- h6\\n- subtitle1\\n- subtitle2\\n- body1\\n- body2\\n- button\\n- caption\\n- overline\\n\\nEach of these variants can be customized individually:\\n\\n```js\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n```\\n\\n{{\\\"demo\\\": \\\"pages/customization/typography/TypographyVariants.js\\\"}}\\n\\n## Default values\\n\\nYou can explore the default values of the typography using [the theme explorer](/customization/default-theme/?expand-path=$.typography) or by opening the dev tools console on this page (`window.theme.typography`).\"},qqkd:function(e,n){e.exports=\"import React from 'react';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\n\\nconst theme = createMuiTheme({\\n  typography: {\\n    subtitle1: {\\n      fontSize: 12,\\n    },\\n    body1: {\\n      fontWeight: 500,\\n    },\\n    button: {\\n      fontStyle: 'italic',\\n    },\\n  },\\n});\\n\\nexport default function TypographyVariants() {\\n  return (\\n    <div>\\n      <ThemeProvider theme={theme}>\\n        <Typography variant=\\\"subtitle1\\\">subtitle</Typography>\\n        <Typography>body1</Typography>\\n        <Button>Button</Button>\\n      </ThemeProvider>\\n    </div>\\n  );\\n}\\n\"},\"sPh/\":function(e,n){e.exports=\"# crwdns94010:0crwdne94010:0\\n\\n<p class=\\\"description\\\">crwdns94012:0crwdne94012:0</p>\\n\\n## crwdns94020:0crwdne94020:0\\n\\ncrwdns100978:0crwdne100978:0\\n\\ncrwdns103432:0crwdne103432:0\\n\\n```js\\ncrwdns94024:0crwdne94024:0\\n```\\n\\n### crwdns100982:0crwdne100982:0\\n\\ncrwdns100984:0crwdne100984:0\\n\\ncrwdns100986:0crwdne100986:0 crwdns100988:0crwdne100988:0 crwdns100990:0crwdne100990:0\\n\\n```js\\ncrwdns107933:0${RalewayWoff2}crwdne107933:0\\n```\\n\\ncrwdns100992:0crwdne100992:0 crwdns100994:0crwdne100994:0\\n\\n```jsx\\ncrwdns107935:0{\\n    fontFamily: 'Raleway, Arial',\\n  }crwdnd107935:0[raleway]crwdne107935:0\\ncrwdns108769:0{theme}crwdnd108769:0{children}crwdne108769:0\\n```\\n\\n## crwdns100998:0crwdne100998:0\\n\\ncrwdns101000:0crwdne101000:0 crwdns101002:0crwdne101002:0 crwdns101004:0crwdne101004:0\\n\\ncrwdns101006:0crwdne101006:0 crwdns101008:0crwdne101008:0\\n\\n```js\\ncrwdns94056:0crwdne94056:0\\n    crwdns94058:0crwdne94058:0\\n```\\n\\ncrwdns101010:0crwdne101010:0\\n\\n![crwdns101014:0crwdne101014:0](crwdns101012:0crwdne101012:0)\\n\\n\\x3c!-- https://latex.codecogs.com/gif.latex?computed&space;=&space;specification&space;\\\\frac{typography.fontSize}{14}&space;\\\\frac{html&space;font&space;size}{typography.htmlFontSize} --\\x3e\\n\\n### crwdns131990:0crwdne131990:0\\n\\ncrwdns131992:0crwdne131992:0 crwdns131994:0crwdne131994:0\\n\\n```js\\ncrwdns131996:0{\\n    fontSize: '1.5rem',\\n  }crwdnd131996:0{\\n    fontSize: '2.4rem',\\n  }crwdne131996:0\\n```\\n\\ncrwdns131998:0crwdne131998:0\\n\\ncrwdns132000:0crwdne132000:0\\n\\ncrwdns132002:0crwdne132002:0\\n\\ncrwdns132004:0crwdne132004:0 crwdns132006:0crwdne132006:0\\n\\n```js\\ncrwdns132008:0{ createMuiTheme, responsiveFontSizes }crwdne132008:0\\n```\\n\\ncrwdns132010:0crwdne132010:0\\n\\n### crwdns132012:0crwdne132012:0\\n\\ncrwdns132014:0crwdne132014:0\\n\\n### crwdns132016:0crwdne132016:0\\n\\ncrwdns132018:0crwdne132018:0 crwdns132020:0crwdne132020:0\\n\\n> crwdns132022:0crwdne132022:0 crwdns132024:0crwdne132024:0 crwdns132026:0crwdne132026:0\\n\\ncrwdns132028:0crwdne132028:0 crwdns132030:0crwdne132030:0\\n\\n```js\\ncrwdns132032:0crwdne132032:0\\n    crwdns132034:0crwdne132034:0\\n```\\n\\n```css\\ncrwdns132036:0crwdne132036:0\\n```\\n\\n*crwdns132038:0crwdne132038:0*\\n\\ncrwdns132040:0crwdne132040:0\\n\\n## crwdns101054:0crwdne101054:0\\n\\ncrwdns132042:0crwdne132042:0\\n\\n- crwdns101058:0crwdne101058:0\\n- crwdns101060:0crwdne101060:0\\n- crwdns101062:0crwdne101062:0\\n- crwdns101064:0crwdne101064:0\\n- crwdns101066:0crwdne101066:0\\n- crwdns101068:0crwdne101068:0\\n- crwdns101070:0crwdne101070:0\\n- crwdns101072:0crwdne101072:0\\n- crwdns101074:0crwdne101074:0\\n- crwdns101076:0crwdne101076:0\\n- crwdns101078:0crwdne101078:0\\n- crwdns101080:0crwdne101080:0\\n- crwdns101082:0crwdne101082:0\\n\\ncrwdns132044:0crwdne132044:0\\n\\n```js\\ncrwdns101086:0{\\n      fontSize: 12,\\n    }crwdnd101086:0{\\n      fontWeight: 500,\\n    }crwdnd101086:0{\\n      fontStyle: 'italic',\\n    }crwdne101086:0\\n```\\n\\ncrwdns132046:0crwdne132046:0\\n\\n## crwdns101090:0crwdne101090:0\\n\\ncrwdns132048:0crwdne132048:0\"},xkKq:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return l}));var o=t(\"azxR\"),a=t(\"mXGw\"),i=t.n(a),s=t(\"mKyP\"),r=t(\"h7Hf\"),h=t(\"Oy88\"),p=i.a.createElement,m=Object(s.a)();m.typography.h3=Object(o.a)({fontSize:\"1.2rem\",\"@media (min-width:600px)\":{fontSize:\"1.5rem\"}},m.breakpoints.up(\"md\"),{fontSize:\"2rem\"});var c=p(r.a,{theme:m},p(h.a,{variant:\"h3\"},\"Responsive h3\"));function l(){return c}},zj23:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"default\",(function(){return b}));var o=t(\"yLsn\"),a=t.n(o),i=t(\"mXGw\"),s=t.n(i),r=t(\"li2L\"),h=t(\"mKyP\"),p=t(\"FRHM\"),m=t(\"yZEQ\"),c=t(\"wIDB\"),l=s.a.createElement,d=Object(h.a)();d=Object(p.a)(d);var u=[\"#443dc2\",\"#2060df\",\"#277e91\",\"#378153\",\"#4d811d\",\"#63780d\",\"#996600\"],f=[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\"],y=Object(m.a)({root:{height:380,width:\"100%\",color:\"black\"}}),g=l(c.g,{dataKey:\"viewport\",type:\"number\"},l(c.a,{position:\"right\",offset:30},\"viewport (px)\")),w=l(c.h,{dataKey:\"fontSize\",type:\"number\"},l(c.a,{position:\"top\",offset:20},\"font-size (rem)\")),z=l(c.f,null),v=l(c.b,null);function b(){var e=y(),n=Object(r.b)(d.typography.htmlFontSize),t=function(e){return a()(n(e,\"px\"))},o=f.map((function(e){var n=d.typography[e],o=[];return o.push({viewport:0,fontSize:t(n.fontSize)}),d.breakpoints.keys.forEach((function(e){var a=d.breakpoints.values[e],i=d.breakpoints.up(e);n[i]?(o.push({viewport:a-1,fontSize:o[o.length-1].fontSize}),o.push({viewport:a,fontSize:t(n[i].fontSize)})):\"xl\"===e&&o.push({viewport:a,fontSize:o[o.length-1].fontSize})})),{name:e,data:o}}));return l(\"div\",{className:e.root},l(c.e,null,l(c.d,{margin:{top:50,right:140,bottom:0,left:30}},g,w,z,v,o.map((function(e,n){return l(c.c,{dataKey:\"fontSize\",stroke:u[n%u.length],data:e.data,name:e.name,key:e.name})})))))}}},[[\"JP+9\",0,2,1,3,5,4,6,7,8,9,10,11,12,15,13,14,16,17,18,26,35]]]);"}